{"id":"7ab8facc331e0eb75c9c6fd4574268cd","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {IERC165, ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"},"@openzeppelin/contracts/access/IAccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (access/IAccessControl.sol)\n\npragma solidity >=0.8.4;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted to signal this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"},"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/draft-IERC6093.sol)\npragma solidity >=0.8.4;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/interfaces/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC165.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"},"@openzeppelin/contracts/interfaces/IERC4906.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC4906.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC165} from \"./IERC165.sol\";\nimport {IERC721} from \"./IERC721.sol\";\n\n/// @title ERC-721 Metadata Update Extension\ninterface IERC4906 is IERC165, IERC721 {\n    /// @dev This event emits when the metadata of a token is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFT.\n    event MetadataUpdate(uint256 _tokenId);\n\n    /// @dev This event emits when the metadata of a range of tokens is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFTs.\n    event BatchMetadataUpdate(uint256 _fromTokenId, uint256 _toTokenId);\n}\n"},"@openzeppelin/contracts/interfaces/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC721.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC721} from \"../token/ERC721/IERC721.sol\";\n"},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {ERC721Utils} from \"./utils/ERC721Utils.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /// @inheritdoc IERC721\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /// @inheritdoc IERC721\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /// @inheritdoc IERC721Metadata\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /// @inheritdoc IERC721Metadata\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /// @inheritdoc IERC721Metadata\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /// @inheritdoc IERC721\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /// @inheritdoc IERC721\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /// @inheritdoc IERC721\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /// @inheritdoc IERC721\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /// @inheritdoc IERC721\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /// @inheritdoc IERC721\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /// @inheritdoc IERC721\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC-721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if:\n     * - `spender` does not have approval from `owner` for `tokenId`.\n     * - `spender` does not have approval to manage all of `owner`'s assets.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC-721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/extensions/ERC721URIStorage.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC721} from \"../ERC721.sol\";\nimport {IERC721Metadata} from \"./IERC721Metadata.sol\";\nimport {Strings} from \"../../../utils/Strings.sol\";\nimport {IERC4906} from \"../../../interfaces/IERC4906.sol\";\nimport {IERC165} from \"../../../interfaces/IERC165.sol\";\n\n/**\n * @dev ERC-721 token with storage based token URI management.\n */\nabstract contract ERC721URIStorage is IERC4906, ERC721 {\n    using Strings for uint256;\n\n    // Interface ID as defined in ERC-4906. This does not correspond to a traditional interface ID as ERC-4906 only\n    // defines events and does not include any external function.\n    bytes4 private constant ERC4906_INTERFACE_ID = bytes4(0x49064906);\n\n    // Optional mapping for token URIs\n    mapping(uint256 tokenId => string) private _tokenURIs;\n\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {\n        return interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId);\n    }\n\n    /// @inheritdoc IERC721Metadata\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory _tokenURI = _tokenURIs[tokenId];\n        string memory base = _baseURI();\n\n        // If there is no base URI, return the token URI.\n        if (bytes(base).length == 0) {\n            return _tokenURI;\n        }\n        // If both are set, concatenate the baseURI and tokenURI (via string.concat).\n        if (bytes(_tokenURI).length > 0) {\n            return string.concat(base, _tokenURI);\n        }\n\n        return super.tokenURI(tokenId);\n    }\n\n    /**\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n     *\n     * Emits {IERC4906-MetadataUpdate}.\n     */\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\n        _tokenURIs[tokenId] = _tokenURI;\n        emit MetadataUpdate(tokenId);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/IERC721.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity >=0.5.0;\n\n/**\n * @title ERC-721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC-721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/utils/ERC721Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721Receiver} from \"../IERC721Receiver.sol\";\nimport {IERC721Errors} from \"../../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Library that provide common ERC-721 utility functions.\n *\n * See https://eips.ethereum.org/EIPS/eip-721[ERC-721].\n *\n * _Available since v5.1._\n */\nlibrary ERC721Utils {\n    /**\n     * @dev Performs an acceptance check for the provided `operator` by calling {IERC721Receiver-onERC721Received}\n     * on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n     *\n     * The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n     * Otherwise, the recipient must implement {IERC721Receiver-onERC721Received} and return the acceptance magic value to accept\n     * the transfer.\n     */\n    function checkOnERC721Received(\n        address operator,\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(operator, from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    // Token rejected\n                    revert IERC721Errors.ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-IERC721Receiver implementer\n                    revert IERC721Errors.ERC721InvalidReceiver(to);\n                } else {\n                    assembly (\"memory-safe\") {\n                        revert(add(reason, 0x20), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Return the 512-bit addition of two uint256.\n     *\n     * The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low.\n     */\n    function add512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        assembly (\"memory-safe\") {\n            low := add(a, b)\n            high := lt(low, a)\n        }\n    }\n\n    /**\n     * @dev Return the 512-bit multiplication of two uint256.\n     *\n     * The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low.\n     */\n    function mul512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        // 512-bit multiply [high low] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n        // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n        // variables such that product = high * 2²⁵⁶ + low.\n        assembly (\"memory-safe\") {\n            let mm := mulmod(a, b, not(0))\n            low := mul(a, b)\n            high := sub(sub(mm, low), lt(mm, low))\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            success = c >= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a - b;\n            success = c <= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a * b;\n            assembly (\"memory-safe\") {\n                // Only true when the multiplication doesn't overflow\n                // (c / a == b) || (a == 0)\n                success := or(eq(div(c, a), b), iszero(a))\n            }\n            // equivalent to: success ? c : 0\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `DIV` opcode returns zero when the denominator is 0.\n                result := div(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `MOD` opcode returns zero when the denominator is 0.\n                result := mod(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingAdd(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryAdd(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Unsigned saturating subtraction, bounds to zero instead of overflowing.\n     */\n    function saturatingSub(uint256 a, uint256 b) internal pure returns (uint256) {\n        (, uint256 result) = trySub(a, b);\n        return result;\n    }\n\n    /**\n     * @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingMul(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryMul(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (high == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return low / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= high) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [high low].\n            uint256 remainder;\n            assembly (\"memory-safe\") {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                high := sub(high, gt(remainder, low))\n                low := sub(low, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly (\"memory-safe\") {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [high low] by twos.\n                low := div(low, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from high into low.\n            low |= high * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and high\n            // is no longer required.\n            result = low * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n            if (high >= 1 << n) {\n                Panic.panic(Panic.UNDER_OVERFLOW);\n            }\n            return (high << (256 - n)) | (low >> n);\n        }\n    }\n\n    /**\n     * @dev Calculates x * y >> n with full precision, following the selected rounding direction.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n, Rounding rounding) internal pure returns (uint256) {\n        return mulShr(x, y, n) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, 1 << n) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // If upper 8 bits of 16-bit half set, add 8 to result\n        r |= SafeCast.toUint((x >> r) > 0xff) << 3;\n        // If upper 4 bits of 8-bit half set, add 4 to result\n        r |= SafeCast.toUint((x >> r) > 0xf) << 2;\n\n        // Shifts value right by the current result and use it as an index into this lookup table:\n        //\n        // | x (4 bits) |  index  | table[index] = MSB position |\n        // |------------|---------|-----------------------------|\n        // |    0000    |    0    |        table[0] = 0         |\n        // |    0001    |    1    |        table[1] = 0         |\n        // |    0010    |    2    |        table[2] = 1         |\n        // |    0011    |    3    |        table[3] = 1         |\n        // |    0100    |    4    |        table[4] = 2         |\n        // |    0101    |    5    |        table[5] = 2         |\n        // |    0110    |    6    |        table[6] = 2         |\n        // |    0111    |    7    |        table[7] = 2         |\n        // |    1000    |    8    |        table[8] = 3         |\n        // |    1001    |    9    |        table[9] = 3         |\n        // |    1010    |   10    |        table[10] = 3        |\n        // |    1011    |   11    |        table[11] = 3        |\n        // |    1100    |   12    |        table[12] = 3        |\n        // |    1101    |   13    |        table[13] = 3        |\n        // |    1110    |   14    |        table[14] = 3        |\n        // |    1111    |   15    |        table[15] = 3        |\n        //\n        // The lookup table is represented as a 32-byte value with the MSB positions for 0-15 in the last 16 bytes.\n        assembly (\"memory-safe\") {\n            r := or(r, byte(shr(r, x), 0x0000010102020202030303030303030300000000000000000000000000000000))\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // Add 1 if upper 8 bits of 16-bit half set, and divide accumulated result by 8\n        return (r >> 3) | SafeCast.toUint((x >> r) > 0xff);\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SafeCast} from \"./math/SafeCast.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    using SafeCast for *;\n\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n    uint256 private constant SPECIAL_CHARS_LOOKUP =\n        (1 << 0x08) | // backspace\n            (1 << 0x09) | // tab\n            (1 << 0x0a) | // newline\n            (1 << 0x0c) | // form feed\n            (1 << 0x0d) | // carriage return\n            (1 << 0x22) | // double quote\n            (1 << 0x5c); // backslash\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev The string being parsed contains characters that are not in scope of the given base.\n     */\n    error StringsInvalidChar();\n\n    /**\n     * @dev The string being parsed is not a properly formatted address.\n     */\n    error StringsInvalidAddressFormat();\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(add(buffer, 0x20), length)\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input) internal pure returns (uint256) {\n        return parseUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        uint256 result = 0;\n        for (uint256 i = begin; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 9) return (false, 0);\n            result *= 10;\n            result += chr;\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `int256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input) internal pure returns (int256) {\n        return parseInt(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input, uint256 begin, uint256 end) internal pure returns (int256) {\n        (bool success, int256 value) = tryParseInt(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n     * the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(string memory input) internal pure returns (bool success, int256 value) {\n        return _tryParseIntUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    uint256 private constant ABS_MIN_INT256 = 2 ** 255;\n\n    /**\n     * @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character or if the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, int256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseIntUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseIntUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, int256 value) {\n        bytes memory buffer = bytes(input);\n\n        // Check presence of a negative sign.\n        bytes1 sign = begin == end ? bytes1(0) : bytes1(_unsafeReadBytesOffset(buffer, begin)); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        bool positiveSign = sign == bytes1(\"+\");\n        bool negativeSign = sign == bytes1(\"-\");\n        uint256 offset = (positiveSign || negativeSign).toUint();\n\n        (bool absSuccess, uint256 absValue) = tryParseUint(input, begin + offset, end);\n\n        if (absSuccess && absValue < ABS_MIN_INT256) {\n            return (true, negativeSign ? -int256(absValue) : int256(absValue));\n        } else if (absSuccess && negativeSign && absValue == ABS_MIN_INT256) {\n            return (true, type(int256).min);\n        } else return (false, 0);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input) internal pure returns (uint256) {\n        return parseHexUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseHexUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseHexUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n     * invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseHexUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseHexUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        // skip 0x prefix if present\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(buffer, begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 offset = hasPrefix.toUint() * 2;\n\n        uint256 result = 0;\n        for (uint256 i = begin + offset; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 15) return (false, 0);\n            result *= 16;\n            unchecked {\n                // Multiplying by 16 is equivalent to a shift of 4 bits (with additional overflow check).\n                // This guarantees that adding a value < 16 will not cause an overflow, hence the unchecked.\n                result += chr;\n            }\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input) internal pure returns (address) {\n        return parseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input, uint256 begin, uint256 end) internal pure returns (address) {\n        (bool success, address value) = tryParseAddress(input, begin, end);\n        if (!success) revert StringsInvalidAddressFormat();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n     * formatted address. See {parseAddress-string} requirements.\n     */\n    function tryParseAddress(string memory input) internal pure returns (bool success, address value) {\n        return tryParseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n     * formatted address. See {parseAddress-string-uint256-uint256} requirements.\n     */\n    function tryParseAddress(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, address value) {\n        if (end > bytes(input).length || begin > end) return (false, address(0));\n\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(bytes(input), begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 expectedLength = 40 + hasPrefix.toUint() * 2;\n\n        // check that input is the correct length\n        if (end - begin == expectedLength) {\n            // length guarantees that this does not overflow, and value is at most type(uint160).max\n            (bool s, uint256 v) = _tryParseHexUintUncheckedBounds(input, begin, end);\n            return (s, address(uint160(v)));\n        } else {\n            return (false, address(0));\n        }\n    }\n\n    function _tryParseChr(bytes1 chr) private pure returns (uint8) {\n        uint8 value = uint8(chr);\n\n        // Try to parse `chr`:\n        // - Case 1: [0-9]\n        // - Case 2: [a-f]\n        // - Case 3: [A-F]\n        // - otherwise not supported\n        unchecked {\n            if (value > 47 && value < 58) value -= 48;\n            else if (value > 96 && value < 103) value -= 87;\n            else if (value > 64 && value < 71) value -= 55;\n            else return type(uint8).max;\n        }\n\n        return value;\n    }\n\n    /**\n     * @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n     *\n     * WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n     *\n     * NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n     * RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n     * characters that are not in this range, but other tooling may provide different results.\n     */\n    function escapeJSON(string memory input) internal pure returns (string memory) {\n        bytes memory buffer = bytes(input);\n        bytes memory output = new bytes(2 * buffer.length); // worst case scenario\n        uint256 outputLength = 0;\n\n        for (uint256 i; i < buffer.length; ++i) {\n            bytes1 char = bytes1(_unsafeReadBytesOffset(buffer, i));\n            if (((SPECIAL_CHARS_LOOKUP & (1 << uint8(char))) != 0)) {\n                output[outputLength++] = \"\\\\\";\n                if (char == 0x08) output[outputLength++] = \"b\";\n                else if (char == 0x09) output[outputLength++] = \"t\";\n                else if (char == 0x0a) output[outputLength++] = \"n\";\n                else if (char == 0x0c) output[outputLength++] = \"f\";\n                else if (char == 0x0d) output[outputLength++] = \"r\";\n                else if (char == 0x5c) output[outputLength++] = \"\\\\\";\n                else if (char == 0x22) {\n                    // solhint-disable-next-line quotes\n                    output[outputLength++] = '\"';\n                }\n            } else {\n                output[outputLength++] = char;\n            }\n        }\n        // write the actual length and deallocate unused memory\n        assembly (\"memory-safe\") {\n            mstore(output, outputLength)\n            mstore(0x40, add(output, shl(5, shr(5, add(outputLength, 63)))))\n        }\n\n        return string(output);\n    }\n\n    /**\n     * @dev Reads a bytes32 from a bytes array without bounds checking.\n     *\n     * NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n     * assembly block as such would prevent some optimizations.\n     */\n    function _unsafeReadBytesOffset(bytes memory buffer, uint256 offset) private pure returns (bytes32 value) {\n        // This is not memory safe in the general case, but all calls to this private function are within bounds.\n        assembly (\"memory-safe\") {\n            value := mload(add(add(buffer, 0x20), offset))\n        }\n    }\n}\n"},"contracts/AutismMedicalSystemSimple.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\";\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\n\n/**\n * @title AutismMedicalSystemSimple\n * @dev Simplified autism evaluation management system for testing\n * Core functionality: Upload evaluations, track diagnosis, manage access\n */\ncontract AutismMedicalSystemSimple is ERC721, ERC721URIStorage, AccessControl, ReentrancyGuard {\n    bytes32 public constant INSURANCE_ROLE = keccak256(\"INSURANCE_ROLE\");\n    bytes32 public constant HOSPITAL_ROLE = keccak256(\"HOSPITAL_ROLE\");\n    bytes32 public constant EVALUATOR_ROLE = keccak256(\"EVALUATOR_ROLE\");\n\n    uint256 private _tokenIdCounter;\n\n    // Evaluation types for autism spectrum\n    enum EvaluationType {\n        ADOS,           // Autism Diagnostic Observation Schedule\n        ADIR,           // Autism Diagnostic Interview-Revised\n        CARS,           // Childhood Autism Rating Scale\n        MCHAT,          // Modified Checklist for Autism in Toddlers\n        GARS,           // Gilliam Autism Rating Scale\n        SRS,            // Social Responsiveness Scale\n        ABC,            // Autism Behavior Checklist\n        ASRS            // Autism Spectrum Rating Scales\n    }\n\n    // Diagnosis severity levels (DSM-5)\n    enum SeverityLevel {\n        None,\n        Level1_RequiringSupport,\n        Level2_RequiringSubstantialSupport,\n        Level3_RequiringVerySubstantialSupport\n    }\n\n    struct InsuranceInfo {\n        string insuranceProvider;      // Insurance company name\n        string policyNumber;           // Patient's policy number\n        string memberID;               // Member ID\n        string insuranceXRPL;          // Insurance company XRPL wallet\n        uint256 coveragePercentage;    // Coverage percentage (0-100)\n        bool isVerified;               // Insurance verification status\n    }\n\n    struct AutismEvaluation {\n        uint256 tokenId;\n        address patient;\n        address evaluator;              // Professional who conducted evaluation\n        bytes32 fileHash;               // Encrypted file hash\n        string fileLocation;            // S3/IPFS location\n        bytes32 encryptedKey;           // Encrypted access key\n        EvaluationType evaluationType;\n        uint256 evaluationDate;\n        uint256 uploadDate;\n        bool isPaidByInsurance;\n        string insurancePaymentTx;      // XRPL transaction hash\n        uint256 evaluationCostUSD;\n        InsuranceInfo insurance;\n    }\n\n    struct DiagnosisRecord {\n        SeverityLevel currentLevel;\n        uint256 firstDiagnosisDate;\n        uint256 lastUpdateDate;\n        string primaryDiagnosis;        // e.g., \"299.00 Autistic Disorder\"\n        uint256 totalEvaluations;\n    }\n\n    struct AccessRecord {\n        address accessor;               // Hospital/Insurance who accessed\n        uint256 accessTime;\n        string purpose;                 // Reason for access\n        bool isPaid;                    // Whether they paid for access\n    }\n\n    struct Bill {\n        bytes32 billId;\n        uint256 evaluationTokenId;\n        address hospital;\n        address patient;\n        uint256 amountUSD;\n        uint256 insurancePortion;       // Amount insurance will pay\n        uint256 patientPortion;         // Patient responsibility\n        bool isPaid;\n        uint256 createdAt;\n    }\n\n    // State mappings\n    mapping(uint256 => AutismEvaluation) public evaluations;\n    mapping(address => DiagnosisRecord) public patientDiagnosis;\n    mapping(uint256 => AccessRecord[]) public accessHistory;\n    mapping(uint256 => mapping(address => bool)) public hasPaidAccess;\n    mapping(bytes32 => Bill) public medicalBills;\n    mapping(address => bytes32[]) public patientBills;\n    mapping(string => bool) public verifiedInsuranceProviders;\n\n    // Statistics\n    uint256 public totalEvaluations;\n    uint256 public totalInsurancePayments;\n    uint256 public totalDiagnosedPatients;\n\n    // Events\n    event EvaluationUploaded(\n        uint256 indexed tokenId,\n        address indexed patient,\n        EvaluationType evaluationType,\n        bool paidByInsurance\n    );\n\n    event InsurancePaymentProcessed(\n        uint256 indexed tokenId,\n        string insuranceProvider,\n        string xrplTxHash,\n        uint256 amountUSD\n    );\n\n    event FileAccessGranted(\n        uint256 indexed tokenId,\n        address indexed accessor,\n        string purpose,\n        bool requiresPayment\n    );\n\n    event BillCreated(\n        bytes32 indexed billId,\n        uint256 indexed tokenId,\n        address indexed patient,\n        uint256 totalAmount,\n        uint256 insurancePortion\n    );\n\n    event DiagnosisUpdated(\n        address indexed patient,\n        SeverityLevel newLevel,\n        uint256 evaluationTokenId\n    );\n\n    constructor() ERC721(\"Autism Evaluation NFT\", \"AEN\") {\n        _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\n\n        // Add some default verified insurance providers\n        verifiedInsuranceProviders[\"Blue Cross Blue Shield\"] = true;\n        verifiedInsuranceProviders[\"Aetna\"] = true;\n        verifiedInsuranceProviders[\"UnitedHealthcare\"] = true;\n        verifiedInsuranceProviders[\"Test Insurance Co\"] = true;\n    }\n\n    /**\n     * @dev FLOW 1: Upload evaluation with insurance payment\n     */\n    function uploadEvaluationWithInsurance(\n        InsuranceInfo memory insurance,\n        bytes32 fileHash,\n        string memory fileLocation,\n        bytes32 encryptedKey,\n        EvaluationType evaluationType,\n        uint256 evaluationCostUSD,\n        string memory insurancePaymentTxHash\n    ) external nonReentrant returns (uint256 tokenId) {\n        // Verify insurance information\n        require(bytes(insurance.insuranceProvider).length > 0, \"Invalid insurance\");\n        require(verifiedInsuranceProviders[insurance.insuranceProvider], \"Insurance not verified\");\n\n        // For demo purposes, we'll accept the payment hash without full verification\n        require(bytes(insurancePaymentTxHash).length > 0, \"Insurance payment hash required\");\n\n        // Mint NFT\n        tokenId = _tokenIdCounter++;\n        _safeMint(msg.sender, tokenId);\n\n        // Store evaluation data\n        AutismEvaluation storage eval = evaluations[tokenId];\n        eval.tokenId = tokenId;\n        eval.patient = msg.sender;\n        eval.fileHash = fileHash;\n        eval.fileLocation = fileLocation;\n        eval.encryptedKey = encryptedKey;\n        eval.evaluationType = evaluationType;\n        eval.evaluationDate = block.timestamp;\n        eval.uploadDate = block.timestamp;\n        eval.isPaidByInsurance = true;\n        eval.insurancePaymentTx = insurancePaymentTxHash;\n        eval.evaluationCostUSD = evaluationCostUSD;\n        eval.insurance = insurance;\n\n        // Mark as paid by insurance\n        hasPaidAccess[tokenId][address(this)] = true;\n\n        // Update patient diagnosis record\n        _updatePatientDiagnosis(msg.sender, tokenId);\n\n        totalEvaluations++;\n        totalInsurancePayments++;\n\n        emit EvaluationUploaded(tokenId, msg.sender, evaluationType, true);\n        emit InsurancePaymentProcessed(\n            tokenId,\n            insurance.insuranceProvider,\n            insurancePaymentTxHash,\n            evaluationCostUSD\n        );\n\n        return tokenId;\n    }\n\n    /**\n     * @dev FLOW 2: Hospital/Insurance can check and download file\n     */\n    function accessEvaluationFile(\n        uint256 tokenId,\n        string memory purpose\n    ) external nonReentrant returns (\n        string memory fileLocation,\n        bytes32 encryptedKey,\n        bool requiresPayment\n    ) {\n        require(_ownerOf(tokenId) != address(0), \"Token does not exist\");\n        require(\n            hasRole(HOSPITAL_ROLE, msg.sender) ||\n            hasRole(INSURANCE_ROLE, msg.sender),\n            \"Not authorized\"\n        );\n\n        AutismEvaluation storage eval = evaluations[tokenId];\n\n        // Check if already paid (by insurance or previous access)\n        bool alreadyPaid = eval.isPaidByInsurance || hasPaidAccess[tokenId][msg.sender];\n\n        if (!alreadyPaid) {\n            requiresPayment = true;\n            return (\"\", 0, true);\n        }\n\n        // Grant access\n        hasPaidAccess[tokenId][msg.sender] = true;\n\n        // Log access\n        AccessRecord memory record = AccessRecord({\n            accessor: msg.sender,\n            accessTime: block.timestamp,\n            purpose: purpose,\n            isPaid: true\n        });\n\n        accessHistory[tokenId].push(record);\n\n        emit FileAccessGranted(tokenId, msg.sender, purpose, false);\n\n        return (eval.fileLocation, eval.encryptedKey, false);\n    }\n\n    /**\n     * @dev FLOW 3: Hospital can bill patient through insurance\n     */\n    function billPatientThroughInsurance(\n        uint256 evaluationTokenId,\n        uint256 serviceAmountUSD,\n        string memory serviceDescription\n    ) external nonReentrant returns (bytes32 billId) {\n        require(hasRole(HOSPITAL_ROLE, msg.sender), \"Not a hospital\");\n        require(_ownerOf(evaluationTokenId) != address(0), \"Invalid evaluation\");\n\n        AutismEvaluation storage eval = evaluations[evaluationTokenId];\n\n        // Calculate insurance coverage (simplified)\n        uint256 coverageAmount = (serviceAmountUSD * eval.insurance.coveragePercentage) / 100;\n        uint256 insurancePays = coverageAmount;\n        uint256 patientPays = serviceAmountUSD - coverageAmount;\n\n        // Create bill\n        billId = keccak256(abi.encodePacked(\n            evaluationTokenId,\n            msg.sender,\n            serviceAmountUSD,\n            block.timestamp\n        ));\n\n        Bill storage bill = medicalBills[billId];\n        bill.billId = billId;\n        bill.evaluationTokenId = evaluationTokenId;\n        bill.hospital = msg.sender;\n        bill.patient = eval.patient;\n        bill.amountUSD = serviceAmountUSD;\n        bill.insurancePortion = insurancePays;\n        bill.patientPortion = patientPays;\n        bill.createdAt = block.timestamp;\n\n        patientBills[eval.patient].push(billId);\n\n        emit BillCreated(\n            billId,\n            evaluationTokenId,\n            eval.patient,\n            serviceAmountUSD,\n            insurancePays\n        );\n\n        return billId;\n    }\n\n    /**\n     * @dev FLOW 4: Track diagnosis history for patient\n     */\n    function updateDiagnosis(\n        address patient,\n        uint256 evaluationTokenId,\n        SeverityLevel newLevel,\n        string memory primaryDiagnosis\n    ) external {\n        require(hasRole(EVALUATOR_ROLE, msg.sender), \"Not authorized evaluator\");\n        require(_ownerOf(evaluationTokenId) != address(0), \"Invalid evaluation\");\n\n        DiagnosisRecord storage diagnosis = patientDiagnosis[patient];\n\n        // First diagnosis\n        if (diagnosis.firstDiagnosisDate == 0) {\n            diagnosis.firstDiagnosisDate = block.timestamp;\n            totalDiagnosedPatients++;\n        }\n\n        // Update current state\n        diagnosis.currentLevel = newLevel;\n        diagnosis.lastUpdateDate = block.timestamp;\n        diagnosis.primaryDiagnosis = primaryDiagnosis;\n        diagnosis.totalEvaluations++;\n\n        emit DiagnosisUpdated(patient, newLevel, evaluationTokenId);\n    }\n\n    /**\n     * @dev Get patient diagnosis record\n     */\n    function getPatientDiagnosis(address patient) external view returns (\n        SeverityLevel currentLevel,\n        uint256 firstDiagnosisDate,\n        uint256 lastUpdateDate,\n        string memory primaryDiagnosis,\n        uint256 totalEvals\n    ) {\n        DiagnosisRecord storage diagnosis = patientDiagnosis[patient];\n        return (\n            diagnosis.currentLevel,\n            diagnosis.firstDiagnosisDate,\n            diagnosis.lastUpdateDate,\n            diagnosis.primaryDiagnosis,\n            diagnosis.totalEvaluations\n        );\n    }\n\n    /**\n     * @dev Get evaluation details\n     */\n    function getEvaluation(uint256 tokenId) external view returns (\n        address patient,\n        EvaluationType evaluationType,\n        uint256 evaluationDate,\n        bool isPaidByInsurance,\n        string memory insuranceProvider\n    ) {\n        require(_ownerOf(tokenId) != address(0), \"Token does not exist\");\n        AutismEvaluation storage eval = evaluations[tokenId];\n\n        return (\n            eval.patient,\n            eval.evaluationType,\n            eval.evaluationDate,\n            eval.isPaidByInsurance,\n            eval.insurance.insuranceProvider\n        );\n    }\n\n    /**\n     * @dev Get access history for an evaluation\n     */\n    function getAccessHistory(uint256 tokenId) external view returns (AccessRecord[] memory) {\n        return accessHistory[tokenId];\n    }\n\n    /**\n     * @dev Get patient's medical bills\n     */\n    function getPatientBills(address patient) external view returns (bytes32[] memory) {\n        return patientBills[patient];\n    }\n\n    /**\n     * @dev Pay medical bill (simplified)\n     */\n    function payBill(bytes32 billId, string memory xrplPaymentTx) external {\n        Bill storage bill = medicalBills[billId];\n        require(!bill.isPaid, \"Bill already paid\");\n        require(bill.patient == msg.sender, \"Not bill owner\");\n        require(bytes(xrplPaymentTx).length > 0, \"Payment transaction required\");\n\n        bill.isPaid = true;\n    }\n\n    // Internal functions\n\n    function _updatePatientDiagnosis(address patient, uint256 tokenId) internal {\n        DiagnosisRecord storage diagnosis = patientDiagnosis[patient];\n\n        if (diagnosis.firstDiagnosisDate == 0) {\n            diagnosis.firstDiagnosisDate = block.timestamp;\n        }\n\n        diagnosis.lastUpdateDate = block.timestamp;\n        diagnosis.totalEvaluations++;\n    }\n\n    function _ownerOf(uint256 tokenId) internal view override returns (address) {\n        return evaluations[tokenId].patient;\n    }\n\n    // Admin functions\n\n    function addVerifiedInsurance(string memory provider) external onlyRole(DEFAULT_ADMIN_ROLE) {\n        verifiedInsuranceProviders[provider] = true;\n    }\n\n    function grantRole(bytes32 role, address account) public override onlyRole(DEFAULT_ADMIN_ROLE) {\n        _grantRole(role, account);\n    }\n\n    // Get available evaluation types\n    function getEvaluationTypes() external pure returns (string[] memory) {\n        string[] memory types = new string[](8);\n        types[0] = \"ADOS\";\n        types[1] = \"ADIR\";\n        types[2] = \"CARS\";\n        types[3] = \"MCHAT\";\n        types[4] = \"GARS\";\n        types[5] = \"SRS\";\n        types[6] = \"ABC\";\n        types[7] = \"ASRS\";\n        return types;\n    }\n\n    // Get severity levels\n    function getSeverityLevels() external pure returns (string[] memory) {\n        string[] memory levels = new string[](4);\n        levels[0] = \"None\";\n        levels[1] = \"Level1_RequiringSupport\";\n        levels[2] = \"Level2_RequiringSubstantialSupport\";\n        levels[3] = \"Level3_RequiringVerySubstantialSupport\";\n        return levels;\n    }\n\n    // Override functions\n    function tokenURI(uint256 tokenId) public view override(ERC721, ERC721URIStorage) returns (string memory) {\n        return super.tokenURI(tokenId);\n    }\n\n    function supportsInterface(bytes4 interfaceId) public view override(ERC721, AccessControl, ERC721URIStorage) returns (bool) {\n        return super.supportsInterface(interfaceId);\n    }\n}"},"contracts/interfaces/IFlareContracts.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\n/**\n * @title IFlareContracts\n * @dev Interface definitions for Flare system contracts\n */\n\n// Flare FTSO (Flare Time Series Oracle) interface\ninterface IFtsoRegistry {\n    function getCurrentPriceWithDecimals(string memory _symbol)\n        external view returns (uint256 _price, uint256 _timestamp, uint256 _decimals);\n\n    function getCurrentPrice(string memory _symbol)\n        external view returns (uint256 _price, uint256 _timestamp);\n}\n\n// Flare State Connector interface\ninterface IStateConnector {\n    function requestAttestation(bytes calldata data) external returns (bytes32);\n    function getAttestation(bytes32 id) external view returns (bytes memory);\n\n    function verifyAttestation(\n        bytes32 attestationType,\n        bytes32 sourceId,\n        bytes calldata requestBody,\n        bytes calldata responseBody\n    ) external view returns (bool);\n}\n\n// LayerCake interface for cross-chain messaging\ninterface ILayerCake {\n    function sendXRPLTransaction(bytes calldata transaction) external returns (bytes32);\n    function getXRPLAccountInfo(string calldata xrplAddress) external view returns (bytes memory);\n}\n\n// Flare Price Submitter interface\ninterface IPriceSubmitter {\n    function submitHash(uint256 _epochId, bytes32 _hash) external;\n    function revealPrice(uint256 _epochId, uint256 _price, uint256 _random) external;\n}\n\n// Flare Validator Registry interface\ninterface IFlareContractRegistry {\n    function getContractAddressByName(string calldata _name) external view returns (address);\n    function getContractAddressByHash(bytes32 _nameHash) external view returns (address);\n}"},"contracts/MedicalRecordToken.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n/**\n * @title MedicalRecordToken\n * @dev ERC-721 token for medical record ownership and access control on Flare Costen2\n * Each token represents a medical evaluation with metadata stored on IPFS\n */\ncontract MedicalRecordToken is ERC721, ERC721URIStorage, Ownable {\n    uint256 private _tokenIdCounter;\n\n    struct MedicalRecord {\n        bytes32 fileHash;           // SHA-256 hash of the medical file\n        address patientAddress;     // Patient's wallet address\n        uint256 createdAt;          // Timestamp of record creation\n        string evaluationType;      // Type of evaluation (ADOS, ADI-R, etc.)\n        bool isActive;              // Whether the record is still valid\n        mapping(address => AccessPermission) accessPermissions; // Hospital access permissions\n    }\n\n    struct AccessPermission {\n        bool hasAccess;             // Whether hospital has access\n        uint256 grantedAt;          // When access was granted\n        uint256 expiresAt;          // When access expires\n        uint256 paymentAmount;      // Amount paid for access (in wei)\n        bytes32 xrplTransactionHash; // XRPL payment transaction hash\n    }\n\n    mapping(uint256 => MedicalRecord) public medicalRecords;\n    mapping(bytes32 => uint256) public fileHashToTokenId; // Quick lookup by file hash\n    mapping(address => uint256[]) public patientTokens; // Patient's token IDs\n\n    // Access costs (in wei equivalent)\n    uint256 public constant ACCESS_COST = 15 ether; // $15 equivalent\n\n    // Events\n    event MedicalRecordMinted(\n        uint256 indexed tokenId,\n        address indexed patient,\n        bytes32 fileHash,\n        string evaluationType\n    );\n\n    event AccessGranted(\n        uint256 indexed tokenId,\n        address indexed hospital,\n        uint256 expiresAt,\n        bytes32 xrplTransactionHash\n    );\n\n    event AccessRevoked(\n        uint256 indexed tokenId,\n        address indexed hospital\n    );\n\n    constructor(address initialOwner) ERC721(\"Medical Record Token\", \"MRT\") Ownable(initialOwner) {}\n\n    /**\n     * @dev Mint a new medical record token\n     * @param patient The patient's address\n     * @param fileHash SHA-256 hash of the medical file\n     * @param uri IPFS URI containing metadata\n     * @param evaluationType Type of medical evaluation\n     */\n    function mintMedicalRecord(\n        address patient,\n        bytes32 fileHash,\n        string memory uri,\n        string memory evaluationType\n    ) public onlyOwner returns (uint256) {\n        require(fileHashToTokenId[fileHash] == 0, \"Medical record already exists\");\n        require(patient != address(0), \"Invalid patient address\");\n\n        uint256 tokenId = _tokenIdCounter;\n        _tokenIdCounter++;\n\n        _safeMint(patient, tokenId);\n        _setTokenURI(tokenId, uri);\n\n        MedicalRecord storage record = medicalRecords[tokenId];\n        record.fileHash = fileHash;\n        record.patientAddress = patient;\n        record.createdAt = block.timestamp;\n        record.evaluationType = evaluationType;\n        record.isActive = true;\n\n        fileHashToTokenId[fileHash] = tokenId;\n        patientTokens[patient].push(tokenId);\n\n        emit MedicalRecordMinted(tokenId, patient, fileHash, evaluationType);\n\n        return tokenId;\n    }\n\n    /**\n     * @dev Grant access to a hospital after payment verification\n     * @param tokenId Medical record token ID\n     * @param hospital Hospital's address\n     * @param xrplTransactionHash XRPL payment transaction hash\n     * @param accessDuration Duration of access in seconds\n     */\n    function grantAccess(\n        uint256 tokenId,\n        address hospital,\n        bytes32 xrplTransactionHash,\n        uint256 accessDuration\n    ) public onlyOwner {\n        require(_ownerOf(tokenId) != address(0), \"Token does not exist\");\n        require(hospital != address(0), \"Invalid hospital address\");\n        require(medicalRecords[tokenId].isActive, \"Medical record is inactive\");\n\n        MedicalRecord storage record = medicalRecords[tokenId];\n        AccessPermission storage permission = record.accessPermissions[hospital];\n\n        permission.hasAccess = true;\n        permission.grantedAt = block.timestamp;\n        permission.expiresAt = block.timestamp + accessDuration;\n        permission.paymentAmount = ACCESS_COST;\n        permission.xrplTransactionHash = xrplTransactionHash;\n\n        emit AccessGranted(tokenId, hospital, permission.expiresAt, xrplTransactionHash);\n    }\n\n    /**\n     * @dev Check if a hospital has valid access to a medical record\n     * @param tokenId Medical record token ID\n     * @param hospital Hospital's address\n     */\n    function hasValidAccess(uint256 tokenId, address hospital) public view returns (bool) {\n        if (_ownerOf(tokenId) == address(0) || !medicalRecords[tokenId].isActive) {\n            return false;\n        }\n\n        AccessPermission storage permission = medicalRecords[tokenId].accessPermissions[hospital];\n        return permission.hasAccess && block.timestamp < permission.expiresAt;\n    }\n\n    /**\n     * @dev Get medical record details\n     * @param tokenId Medical record token ID\n     */\n    function getMedicalRecord(uint256 tokenId) public view returns (\n        bytes32 fileHash,\n        address patientAddress,\n        uint256 createdAt,\n        string memory evaluationType,\n        bool isActive\n    ) {\n        require(_ownerOf(tokenId) != address(0), \"Token does not exist\");\n\n        MedicalRecord storage record = medicalRecords[tokenId];\n        return (\n            record.fileHash,\n            record.patientAddress,\n            record.createdAt,\n            record.evaluationType,\n            record.isActive\n        );\n    }\n\n    /**\n     * @dev Get access permission details for a hospital\n     * @param tokenId Medical record token ID\n     * @param hospital Hospital's address\n     */\n    function getAccessPermission(uint256 tokenId, address hospital) public view returns (\n        bool hasAccess,\n        uint256 grantedAt,\n        uint256 expiresAt,\n        uint256 paymentAmount,\n        bytes32 xrplTransactionHash\n    ) {\n        require(_ownerOf(tokenId) != address(0), \"Token does not exist\");\n\n        AccessPermission storage permission = medicalRecords[tokenId].accessPermissions[hospital];\n        return (\n            permission.hasAccess,\n            permission.grantedAt,\n            permission.expiresAt,\n            permission.paymentAmount,\n            permission.xrplTransactionHash\n        );\n    }\n\n    /**\n     * @dev Get all token IDs owned by a patient\n     * @param patient Patient's address\n     */\n    function getPatientTokens(address patient) public view returns (uint256[] memory) {\n        return patientTokens[patient];\n    }\n\n    /**\n     * @dev Revoke access for a hospital\n     * @param tokenId Medical record token ID\n     * @param hospital Hospital's address\n     */\n    function revokeAccess(uint256 tokenId, address hospital) public {\n        require(_ownerOf(tokenId) != address(0), \"Token does not exist\");\n        require(\n            msg.sender == owner() || msg.sender == medicalRecords[tokenId].patientAddress,\n            \"Not authorized\"\n        );\n\n        medicalRecords[tokenId].accessPermissions[hospital].hasAccess = false;\n        medicalRecords[tokenId].accessPermissions[hospital].expiresAt = block.timestamp;\n\n        emit AccessRevoked(tokenId, hospital);\n    }\n\n    /**\n     * @dev Deactivate a medical record\n     * @param tokenId Medical record token ID\n     */\n    function deactivateRecord(uint256 tokenId) public {\n        require(_ownerOf(tokenId) != address(0), \"Token does not exist\");\n        require(\n            msg.sender == owner() || msg.sender == medicalRecords[tokenId].patientAddress,\n            \"Not authorized\"\n        );\n\n        medicalRecords[tokenId].isActive = false;\n    }\n\n    // Override required by Solidity\n    function tokenURI(uint256 tokenId) public view override(ERC721, ERC721URIStorage) returns (string memory) {\n        return super.tokenURI(tokenId);\n    }\n\n    function supportsInterface(bytes4 interfaceId) public view override(ERC721, ERC721URIStorage) returns (bool) {\n        return super.supportsInterface(interfaceId);\n    }\n}"}},"settings":{"optimizer":{"enabled":true,"runs":200},"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"errors":[{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/AutismMedicalSystemSimple.sol:263:9:\n    |\n263 |         string memory serviceDescription\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":9040,"file":"contracts/AutismMedicalSystemSimple.sol","start":9008},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/AutismMedicalSystemSimple.sol:405:55:\n    |\n405 |     function _updatePatientDiagnosis(address patient, uint256 tokenId) internal {\n    |                                                       ^^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":13541,"file":"contracts/AutismMedicalSystemSimple.sol","start":13526},"type":"Warning"}],"sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","exportedSymbols":{"AccessControl":[296],"Context":[2051],"ERC165":[3598],"IAccessControl":[379],"IERC165":[3610]},"id":297,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:0"},{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","file":"./IAccessControl.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":297,"sourceUnit":380,"src":"134:52:0","symbolAliases":[{"foreign":{"id":2,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"142:14:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":297,"sourceUnit":2052,"src":"187:45:0","symbolAliases":[{"foreign":{"id":4,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"195:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../utils/introspection/ERC165.sol","id":8,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":297,"sourceUnit":3599,"src":"233:66:0","symbolAliases":[{"foreign":{"id":6,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3610,"src":"241:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":7,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3598,"src":"250:6:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":10,"name":"Context","nameLocations":["1997:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":2051,"src":"1997:7:0"},"id":11,"nodeType":"InheritanceSpecifier","src":"1997:7:0"},{"baseName":{"id":12,"name":"IAccessControl","nameLocations":["2006:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":379,"src":"2006:14:0"},"id":13,"nodeType":"InheritanceSpecifier","src":"2006:14:0"},{"baseName":{"id":14,"name":"ERC165","nameLocations":["2022:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":3598,"src":"2022:6:0"},"id":15,"nodeType":"InheritanceSpecifier","src":"2022:6:0"}],"canonicalName":"AccessControl","contractDependencies":[],"contractKind":"contract","documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"301:1660:0","text":" @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."},"fullyImplemented":true,"id":296,"linearizedBaseContracts":[296,3598,3610,379,2051],"name":"AccessControl","nameLocation":"1980:13:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"AccessControl.RoleData","id":22,"members":[{"constant":false,"id":19,"mutability":"mutable","name":"hasRole","nameLocation":"2094:7:0","nodeType":"VariableDeclaration","scope":22,"src":"2061:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":18,"keyName":"account","keyNameLocation":"2077:7:0","keyType":{"id":16,"name":"address","nodeType":"ElementaryTypeName","src":"2069:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2061:32:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":17,"name":"bool","nodeType":"ElementaryTypeName","src":"2088:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":21,"mutability":"mutable","name":"adminRole","nameLocation":"2119:9:0","nodeType":"VariableDeclaration","scope":22,"src":"2111:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":20,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2111:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"RoleData","nameLocation":"2042:8:0","nodeType":"StructDefinition","scope":296,"src":"2035:100:0","visibility":"public"},{"constant":false,"id":27,"mutability":"mutable","name":"_roles","nameLocation":"2183:6:0","nodeType":"VariableDeclaration","scope":296,"src":"2141:48:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"typeName":{"id":26,"keyName":"role","keyNameLocation":"2157:4:0","keyType":{"id":23,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2149:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2141:33:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":25,"nodeType":"UserDefinedTypeName","pathNode":{"id":24,"name":"RoleData","nameLocations":["2165:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":22,"src":"2165:8:0"},"referencedDeclaration":22,"src":"2165:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$22_storage_ptr","typeString":"struct AccessControl.RoleData"}}},"visibility":"private"},{"constant":true,"functionSelector":"a217fddf","id":30,"mutability":"constant","name":"DEFAULT_ADMIN_ROLE","nameLocation":"2220:18:0","nodeType":"VariableDeclaration","scope":296,"src":"2196:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":28,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2196:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"30783030","id":29,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2241:4:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"public"},{"body":{"id":40,"nodeType":"Block","src":"2463:44:0","statements":[{"expression":{"arguments":[{"id":36,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":33,"src":"2484:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":35,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[94,115],"referencedDeclaration":94,"src":"2473:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$__$","typeString":"function (bytes32) view"}},"id":37,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2473:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":38,"nodeType":"ExpressionStatement","src":"2473:16:0"},{"id":39,"nodeType":"PlaceholderStatement","src":"2499:1:0"}]},"documentation":{"id":31,"nodeType":"StructuredDocumentation","src":"2252:174:0","text":" @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."},"id":41,"name":"onlyRole","nameLocation":"2440:8:0","nodeType":"ModifierDefinition","parameters":{"id":34,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33,"mutability":"mutable","name":"role","nameLocation":"2457:4:0","nodeType":"VariableDeclaration","scope":41,"src":"2449:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":32,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2449:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2448:14:0"},"src":"2431:76:0","virtual":false,"visibility":"internal"},{"baseFunctions":[3597],"body":{"id":62,"nodeType":"Block","src":"2632:111:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":60,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":55,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":50,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44,"src":"2649:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":52,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"2669:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$379_$","typeString":"type(contract IAccessControl)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$379_$","typeString":"type(contract IAccessControl)"}],"id":51,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2664:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":53,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2664:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControl_$379","typeString":"type(contract IAccessControl)"}},"id":54,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2685:11:0","memberName":"interfaceId","nodeType":"MemberAccess","src":"2664:32:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2649:47:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":58,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44,"src":"2724:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":56,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2700:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControl_$296_$","typeString":"type(contract super AccessControl)"}},"id":57,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2706:17:0","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":3597,"src":"2700:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":59,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2700:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2649:87:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":49,"id":61,"nodeType":"Return","src":"2642:94:0"}]},"documentation":{"id":42,"nodeType":"StructuredDocumentation","src":"2513:23:0","text":"@inheritdoc IERC165"},"functionSelector":"01ffc9a7","id":63,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"2550:17:0","nodeType":"FunctionDefinition","overrides":{"id":46,"nodeType":"OverrideSpecifier","overrides":[],"src":"2608:8:0"},"parameters":{"id":45,"nodeType":"ParameterList","parameters":[{"constant":false,"id":44,"mutability":"mutable","name":"interfaceId","nameLocation":"2575:11:0","nodeType":"VariableDeclaration","scope":63,"src":"2568:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":43,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2568:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2567:20:0"},"returnParameters":{"id":49,"nodeType":"ParameterList","parameters":[{"constant":false,"id":48,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":63,"src":"2626:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":47,"name":"bool","nodeType":"ElementaryTypeName","src":"2626:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2625:6:0"},"scope":296,"src":"2541:202:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[346],"body":{"id":80,"nodeType":"Block","src":"2913:53:0","statements":[{"expression":{"baseExpression":{"expression":{"baseExpression":{"id":73,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"2930:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":75,"indexExpression":{"id":74,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":66,"src":"2937:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2930:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$22_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":76,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2943:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":19,"src":"2930:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":78,"indexExpression":{"id":77,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":68,"src":"2951:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2930:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":72,"id":79,"nodeType":"Return","src":"2923:36:0"}]},"documentation":{"id":64,"nodeType":"StructuredDocumentation","src":"2749:76:0","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":81,"implemented":true,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"2839:7:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[{"constant":false,"id":66,"mutability":"mutable","name":"role","nameLocation":"2855:4:0","nodeType":"VariableDeclaration","scope":81,"src":"2847:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":65,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2847:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":68,"mutability":"mutable","name":"account","nameLocation":"2869:7:0","nodeType":"VariableDeclaration","scope":81,"src":"2861:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":67,"name":"address","nodeType":"ElementaryTypeName","src":"2861:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2846:31:0"},"returnParameters":{"id":72,"nodeType":"ParameterList","parameters":[{"constant":false,"id":71,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":81,"src":"2907:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":70,"name":"bool","nodeType":"ElementaryTypeName","src":"2907:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2906:6:0"},"scope":296,"src":"2830:136:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":93,"nodeType":"Block","src":"3231:47:0","statements":[{"expression":{"arguments":[{"id":88,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"3252:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":89,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2033,"src":"3258:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":90,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3258:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":87,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[94,115],"referencedDeclaration":115,"src":"3241:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) view"}},"id":91,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3241:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":92,"nodeType":"ExpressionStatement","src":"3241:30:0"}]},"documentation":{"id":82,"nodeType":"StructuredDocumentation","src":"2972:198:0","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."},"id":94,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3184:10:0","nodeType":"FunctionDefinition","parameters":{"id":85,"nodeType":"ParameterList","parameters":[{"constant":false,"id":84,"mutability":"mutable","name":"role","nameLocation":"3203:4:0","nodeType":"VariableDeclaration","scope":94,"src":"3195:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":83,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3195:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3194:14:0"},"returnParameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"3231:0:0"},"scope":296,"src":"3175:103:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":114,"nodeType":"Block","src":"3481:124:0","statements":[{"condition":{"id":106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3495:23:0","subExpression":{"arguments":[{"id":103,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"3504:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":104,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":99,"src":"3510:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":102,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"3496:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3496:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":113,"nodeType":"IfStatement","src":"3491:108:0","trueBody":{"id":112,"nodeType":"Block","src":"3520:79:0","statements":[{"errorCall":{"arguments":[{"id":108,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":99,"src":"3574:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":109,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"3583:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":107,"name":"AccessControlUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":306,"src":"3541:32:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_bytes32_$returns$__$","typeString":"function (address,bytes32) pure"}},"id":110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3541:47:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":111,"nodeType":"RevertStatement","src":"3534:54:0"}]}}]},"documentation":{"id":95,"nodeType":"StructuredDocumentation","src":"3284:119:0","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."},"id":115,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3417:10:0","nodeType":"FunctionDefinition","parameters":{"id":100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":97,"mutability":"mutable","name":"role","nameLocation":"3436:4:0","nodeType":"VariableDeclaration","scope":115,"src":"3428:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":96,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3428:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":99,"mutability":"mutable","name":"account","nameLocation":"3450:7:0","nodeType":"VariableDeclaration","scope":115,"src":"3442:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":98,"name":"address","nodeType":"ElementaryTypeName","src":"3442:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3427:31:0"},"returnParameters":{"id":101,"nodeType":"ParameterList","parameters":[],"src":"3481:0:0"},"scope":296,"src":"3408:197:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[354],"body":{"id":128,"nodeType":"Block","src":"3860:46:0","statements":[{"expression":{"expression":{"baseExpression":{"id":123,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"3877:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":125,"indexExpression":{"id":124,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":118,"src":"3884:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3877:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$22_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":126,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3890:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":21,"src":"3877:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":122,"id":127,"nodeType":"Return","src":"3870:29:0"}]},"documentation":{"id":116,"nodeType":"StructuredDocumentation","src":"3611:170:0","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."},"functionSelector":"248a9ca3","id":129,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"3795:12:0","nodeType":"FunctionDefinition","parameters":{"id":119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":118,"mutability":"mutable","name":"role","nameLocation":"3816:4:0","nodeType":"VariableDeclaration","scope":129,"src":"3808:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":117,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3808:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3807:14:0"},"returnParameters":{"id":122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":121,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":129,"src":"3851:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":120,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3851:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3850:9:0"},"scope":296,"src":"3786:120:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[362],"body":{"id":147,"nodeType":"Block","src":"4296:42:0","statements":[{"expression":{"arguments":[{"id":143,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"4317:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":144,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":134,"src":"4323:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":142,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"4306:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4306:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":146,"nodeType":"ExpressionStatement","src":"4306:25:0"}]},"documentation":{"id":130,"nodeType":"StructuredDocumentation","src":"3912:285:0","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."},"functionSelector":"2f2ff15d","id":148,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":138,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"4289:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":137,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"4276:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4276:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":140,"kind":"modifierInvocation","modifierName":{"id":136,"name":"onlyRole","nameLocations":["4267:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":41,"src":"4267:8:0"},"nodeType":"ModifierInvocation","src":"4267:28:0"}],"name":"grantRole","nameLocation":"4211:9:0","nodeType":"FunctionDefinition","parameters":{"id":135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":132,"mutability":"mutable","name":"role","nameLocation":"4229:4:0","nodeType":"VariableDeclaration","scope":148,"src":"4221:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":131,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4221:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":134,"mutability":"mutable","name":"account","nameLocation":"4243:7:0","nodeType":"VariableDeclaration","scope":148,"src":"4235:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":133,"name":"address","nodeType":"ElementaryTypeName","src":"4235:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4220:31:0"},"returnParameters":{"id":141,"nodeType":"ParameterList","parameters":[],"src":"4296:0:0"},"scope":296,"src":"4202:136:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[370],"body":{"id":166,"nodeType":"Block","src":"4713:43:0","statements":[{"expression":{"arguments":[{"id":162,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":151,"src":"4735:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":163,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"4741:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":161,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"4723:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4723:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":165,"nodeType":"ExpressionStatement","src":"4723:26:0"}]},"documentation":{"id":149,"nodeType":"StructuredDocumentation","src":"4344:269:0","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."},"functionSelector":"d547741f","id":167,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":157,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":151,"src":"4706:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":156,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"4693:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4693:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":159,"kind":"modifierInvocation","modifierName":{"id":155,"name":"onlyRole","nameLocations":["4684:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":41,"src":"4684:8:0"},"nodeType":"ModifierInvocation","src":"4684:28:0"}],"name":"revokeRole","nameLocation":"4627:10:0","nodeType":"FunctionDefinition","parameters":{"id":154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":151,"mutability":"mutable","name":"role","nameLocation":"4646:4:0","nodeType":"VariableDeclaration","scope":167,"src":"4638:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":150,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4638:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":153,"mutability":"mutable","name":"account","nameLocation":"4660:7:0","nodeType":"VariableDeclaration","scope":167,"src":"4652:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":152,"name":"address","nodeType":"ElementaryTypeName","src":"4652:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4637:31:0"},"returnParameters":{"id":160,"nodeType":"ParameterList","parameters":[],"src":"4713:0:0"},"scope":296,"src":"4618:138:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[378],"body":{"id":189,"nodeType":"Block","src":"5383:166:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":175,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"5397:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":176,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2033,"src":"5419:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5419:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5397:34:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":183,"nodeType":"IfStatement","src":"5393:102:0","trueBody":{"id":182,"nodeType":"Block","src":"5433:62:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":179,"name":"AccessControlBadConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"5454:28:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5454:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":181,"nodeType":"RevertStatement","src":"5447:37:0"}]}},{"expression":{"arguments":[{"id":185,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":170,"src":"5517:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":186,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"5523:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":184,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"5505:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5505:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":188,"nodeType":"ExpressionStatement","src":"5505:37:0"}]},"documentation":{"id":168,"nodeType":"StructuredDocumentation","src":"4762:537:0","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."},"functionSelector":"36568abe","id":190,"implemented":true,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"5313:12:0","nodeType":"FunctionDefinition","parameters":{"id":173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":170,"mutability":"mutable","name":"role","nameLocation":"5334:4:0","nodeType":"VariableDeclaration","scope":190,"src":"5326:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":169,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5326:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":172,"mutability":"mutable","name":"callerConfirmation","nameLocation":"5348:18:0","nodeType":"VariableDeclaration","scope":190,"src":"5340:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":171,"name":"address","nodeType":"ElementaryTypeName","src":"5340:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5325:42:0"},"returnParameters":{"id":174,"nodeType":"ParameterList","parameters":[],"src":"5383:0:0"},"scope":296,"src":"5304:245:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":217,"nodeType":"Block","src":"5747:174:0","statements":[{"assignments":[199],"declarations":[{"constant":false,"id":199,"mutability":"mutable","name":"previousAdminRole","nameLocation":"5765:17:0","nodeType":"VariableDeclaration","scope":217,"src":"5757:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":198,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5757:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":203,"initialValue":{"arguments":[{"id":201,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"5798:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":200,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"5785:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5785:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"5757:46:0"},{"expression":{"id":209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":204,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"5813:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":206,"indexExpression":{"id":205,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"5820:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5813:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$22_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":207,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5826:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":21,"src":"5813:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":208,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"5838:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5813:34:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":210,"nodeType":"ExpressionStatement","src":"5813:34:0"},{"eventCall":{"arguments":[{"id":212,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"5879:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":213,"name":"previousAdminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":199,"src":"5885:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":214,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"5904:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":211,"name":"RoleAdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"5862:16:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32,bytes32)"}},"id":215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5862:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":216,"nodeType":"EmitStatement","src":"5857:57:0"}]},"documentation":{"id":191,"nodeType":"StructuredDocumentation","src":"5555:114:0","text":" @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."},"id":218,"implemented":true,"kind":"function","modifiers":[],"name":"_setRoleAdmin","nameLocation":"5683:13:0","nodeType":"FunctionDefinition","parameters":{"id":196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":193,"mutability":"mutable","name":"role","nameLocation":"5705:4:0","nodeType":"VariableDeclaration","scope":218,"src":"5697:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":192,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5697:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":195,"mutability":"mutable","name":"adminRole","nameLocation":"5719:9:0","nodeType":"VariableDeclaration","scope":218,"src":"5711:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":194,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5711:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5696:33:0"},"returnParameters":{"id":197,"nodeType":"ParameterList","parameters":[],"src":"5747:0:0"},"scope":296,"src":"5674:247:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":256,"nodeType":"Block","src":"6238:233:0","statements":[{"condition":{"id":232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6252:23:0","subExpression":{"arguments":[{"id":229,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":221,"src":"6261:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":230,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"6267:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":228,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"6253:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6253:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":254,"nodeType":"Block","src":"6428:37:0","statements":[{"expression":{"hexValue":"66616c7365","id":252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6449:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":227,"id":253,"nodeType":"Return","src":"6442:12:0"}]},"id":255,"nodeType":"IfStatement","src":"6248:217:0","trueBody":{"id":251,"nodeType":"Block","src":"6277:145:0","statements":[{"expression":{"id":240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":233,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"6291:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":235,"indexExpression":{"id":234,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":221,"src":"6298:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6291:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$22_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":236,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6304:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":19,"src":"6291:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":238,"indexExpression":{"id":237,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"6312:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6291:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6323:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6291:36:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":241,"nodeType":"ExpressionStatement","src":"6291:36:0"},{"eventCall":{"arguments":[{"id":243,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":221,"src":"6358:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":244,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"6364:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":245,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2033,"src":"6373:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6373:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":242,"name":"RoleGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"6346:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6346:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":248,"nodeType":"EmitStatement","src":"6341:45:0"},{"expression":{"hexValue":"74727565","id":249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6407:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":227,"id":250,"nodeType":"Return","src":"6400:11:0"}]}}]},"documentation":{"id":219,"nodeType":"StructuredDocumentation","src":"5927:223:0","text":" @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."},"id":257,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"6164:10:0","nodeType":"FunctionDefinition","parameters":{"id":224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":221,"mutability":"mutable","name":"role","nameLocation":"6183:4:0","nodeType":"VariableDeclaration","scope":257,"src":"6175:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":220,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6175:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":223,"mutability":"mutable","name":"account","nameLocation":"6197:7:0","nodeType":"VariableDeclaration","scope":257,"src":"6189:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":222,"name":"address","nodeType":"ElementaryTypeName","src":"6189:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6174:31:0"},"returnParameters":{"id":227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":226,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":257,"src":"6232:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":225,"name":"bool","nodeType":"ElementaryTypeName","src":"6232:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6231:6:0"},"scope":296,"src":"6155:316:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":294,"nodeType":"Block","src":"6792:233:0","statements":[{"condition":{"arguments":[{"id":268,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":260,"src":"6814:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":269,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":262,"src":"6820:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":267,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"6806:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6806:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":292,"nodeType":"Block","src":"6982:37:0","statements":[{"expression":{"hexValue":"66616c7365","id":290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7003:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":266,"id":291,"nodeType":"Return","src":"6996:12:0"}]},"id":293,"nodeType":"IfStatement","src":"6802:217:0","trueBody":{"id":289,"nodeType":"Block","src":"6830:146:0","statements":[{"expression":{"id":278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":271,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"6844:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":273,"indexExpression":{"id":272,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":260,"src":"6851:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6844:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$22_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":274,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6857:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":19,"src":"6844:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":276,"indexExpression":{"id":275,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":262,"src":"6865:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6844:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6876:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6844:37:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":279,"nodeType":"ExpressionStatement","src":"6844:37:0"},{"eventCall":{"arguments":[{"id":281,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":260,"src":"6912:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":282,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":262,"src":"6918:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":283,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2033,"src":"6927:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6927:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":280,"name":"RoleRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":336,"src":"6900:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6900:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":286,"nodeType":"EmitStatement","src":"6895:45:0"},{"expression":{"hexValue":"74727565","id":287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6961:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":266,"id":288,"nodeType":"Return","src":"6954:11:0"}]}}]},"documentation":{"id":258,"nodeType":"StructuredDocumentation","src":"6477:226:0","text":" @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."},"id":295,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"6717:11:0","nodeType":"FunctionDefinition","parameters":{"id":263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":260,"mutability":"mutable","name":"role","nameLocation":"6737:4:0","nodeType":"VariableDeclaration","scope":295,"src":"6729:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":259,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6729:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":262,"mutability":"mutable","name":"account","nameLocation":"6751:7:0","nodeType":"VariableDeclaration","scope":295,"src":"6743:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":261,"name":"address","nodeType":"ElementaryTypeName","src":"6743:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6728:31:0"},"returnParameters":{"id":266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":265,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":295,"src":"6786:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":264,"name":"bool","nodeType":"ElementaryTypeName","src":"6786:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6785:6:0"},"scope":296,"src":"6708:317:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":297,"src":"1962:5065:0","usedErrors":[306,309],"usedEvents":[318,327,336]}],"src":"108:6920:0"},"id":0},"@openzeppelin/contracts/access/IAccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","exportedSymbols":{"IAccessControl":[379]},"id":380,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":298,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"109:24:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IAccessControl","contractDependencies":[],"contractKind":"interface","documentation":{"id":299,"nodeType":"StructuredDocumentation","src":"135:90:1","text":" @dev External interface of AccessControl declared to support ERC-165 detection."},"fullyImplemented":false,"id":379,"linearizedBaseContracts":[379],"name":"IAccessControl","nameLocation":"236:14:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":300,"nodeType":"StructuredDocumentation","src":"257:56:1","text":" @dev The `account` is missing a role."},"errorSelector":"e2517d3f","id":306,"name":"AccessControlUnauthorizedAccount","nameLocation":"324:32:1","nodeType":"ErrorDefinition","parameters":{"id":305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":302,"mutability":"mutable","name":"account","nameLocation":"365:7:1","nodeType":"VariableDeclaration","scope":306,"src":"357:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":301,"name":"address","nodeType":"ElementaryTypeName","src":"357:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":304,"mutability":"mutable","name":"neededRole","nameLocation":"382:10:1","nodeType":"VariableDeclaration","scope":306,"src":"374:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":303,"name":"bytes32","nodeType":"ElementaryTypeName","src":"374:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"356:37:1"},"src":"318:76:1"},{"documentation":{"id":307,"nodeType":"StructuredDocumentation","src":"400:148:1","text":" @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."},"errorSelector":"6697b232","id":309,"name":"AccessControlBadConfirmation","nameLocation":"559:28:1","nodeType":"ErrorDefinition","parameters":{"id":308,"nodeType":"ParameterList","parameters":[],"src":"587:2:1"},"src":"553:37:1"},{"anonymous":false,"documentation":{"id":310,"nodeType":"StructuredDocumentation","src":"596:254:1","text":" @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted to signal this."},"eventSelector":"bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff","id":318,"name":"RoleAdminChanged","nameLocation":"861:16:1","nodeType":"EventDefinition","parameters":{"id":317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":312,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"894:4:1","nodeType":"VariableDeclaration","scope":318,"src":"878:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":311,"name":"bytes32","nodeType":"ElementaryTypeName","src":"878:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":314,"indexed":true,"mutability":"mutable","name":"previousAdminRole","nameLocation":"916:17:1","nodeType":"VariableDeclaration","scope":318,"src":"900:33:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":313,"name":"bytes32","nodeType":"ElementaryTypeName","src":"900:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":316,"indexed":true,"mutability":"mutable","name":"newAdminRole","nameLocation":"951:12:1","nodeType":"VariableDeclaration","scope":318,"src":"935:28:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":315,"name":"bytes32","nodeType":"ElementaryTypeName","src":"935:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"877:87:1"},"src":"855:110:1"},{"anonymous":false,"documentation":{"id":319,"nodeType":"StructuredDocumentation","src":"971:295:1","text":" @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."},"eventSelector":"2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d","id":327,"name":"RoleGranted","nameLocation":"1277:11:1","nodeType":"EventDefinition","parameters":{"id":326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":321,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1305:4:1","nodeType":"VariableDeclaration","scope":327,"src":"1289:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":320,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1289:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":323,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1327:7:1","nodeType":"VariableDeclaration","scope":327,"src":"1311:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":322,"name":"address","nodeType":"ElementaryTypeName","src":"1311:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":325,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1352:6:1","nodeType":"VariableDeclaration","scope":327,"src":"1336:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":324,"name":"address","nodeType":"ElementaryTypeName","src":"1336:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1288:71:1"},"src":"1271:89:1"},{"anonymous":false,"documentation":{"id":328,"nodeType":"StructuredDocumentation","src":"1366:275:1","text":" @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"},"eventSelector":"f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b","id":336,"name":"RoleRevoked","nameLocation":"1652:11:1","nodeType":"EventDefinition","parameters":{"id":335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":330,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1680:4:1","nodeType":"VariableDeclaration","scope":336,"src":"1664:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":329,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1664:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":332,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1702:7:1","nodeType":"VariableDeclaration","scope":336,"src":"1686:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":331,"name":"address","nodeType":"ElementaryTypeName","src":"1686:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":334,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1727:6:1","nodeType":"VariableDeclaration","scope":336,"src":"1711:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":333,"name":"address","nodeType":"ElementaryTypeName","src":"1711:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1663:71:1"},"src":"1646:89:1"},{"documentation":{"id":337,"nodeType":"StructuredDocumentation","src":"1741:76:1","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":346,"implemented":false,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"1831:7:1","nodeType":"FunctionDefinition","parameters":{"id":342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":339,"mutability":"mutable","name":"role","nameLocation":"1847:4:1","nodeType":"VariableDeclaration","scope":346,"src":"1839:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":338,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1839:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":341,"mutability":"mutable","name":"account","nameLocation":"1861:7:1","nodeType":"VariableDeclaration","scope":346,"src":"1853:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":340,"name":"address","nodeType":"ElementaryTypeName","src":"1853:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1838:31:1"},"returnParameters":{"id":345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":344,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":346,"src":"1893:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":343,"name":"bool","nodeType":"ElementaryTypeName","src":"1893:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1892:6:1"},"scope":379,"src":"1822:77:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":347,"nodeType":"StructuredDocumentation","src":"1905:184:1","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."},"functionSelector":"248a9ca3","id":354,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"2103:12:1","nodeType":"FunctionDefinition","parameters":{"id":350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":349,"mutability":"mutable","name":"role","nameLocation":"2124:4:1","nodeType":"VariableDeclaration","scope":354,"src":"2116:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":348,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2116:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2115:14:1"},"returnParameters":{"id":353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":352,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":354,"src":"2153:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":351,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2153:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2152:9:1"},"scope":379,"src":"2094:68:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":355,"nodeType":"StructuredDocumentation","src":"2168:239:1","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"2f2ff15d","id":362,"implemented":false,"kind":"function","modifiers":[],"name":"grantRole","nameLocation":"2421:9:1","nodeType":"FunctionDefinition","parameters":{"id":360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":357,"mutability":"mutable","name":"role","nameLocation":"2439:4:1","nodeType":"VariableDeclaration","scope":362,"src":"2431:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":356,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2431:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":359,"mutability":"mutable","name":"account","nameLocation":"2453:7:1","nodeType":"VariableDeclaration","scope":362,"src":"2445:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":358,"name":"address","nodeType":"ElementaryTypeName","src":"2445:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2430:31:1"},"returnParameters":{"id":361,"nodeType":"ParameterList","parameters":[],"src":"2470:0:1"},"scope":379,"src":"2412:59:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":363,"nodeType":"StructuredDocumentation","src":"2477:223:1","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"d547741f","id":370,"implemented":false,"kind":"function","modifiers":[],"name":"revokeRole","nameLocation":"2714:10:1","nodeType":"FunctionDefinition","parameters":{"id":368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":365,"mutability":"mutable","name":"role","nameLocation":"2733:4:1","nodeType":"VariableDeclaration","scope":370,"src":"2725:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":364,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2725:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":367,"mutability":"mutable","name":"account","nameLocation":"2747:7:1","nodeType":"VariableDeclaration","scope":370,"src":"2739:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":366,"name":"address","nodeType":"ElementaryTypeName","src":"2739:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2724:31:1"},"returnParameters":{"id":369,"nodeType":"ParameterList","parameters":[],"src":"2764:0:1"},"scope":379,"src":"2705:60:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":371,"nodeType":"StructuredDocumentation","src":"2771:491:1","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."},"functionSelector":"36568abe","id":378,"implemented":false,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"3276:12:1","nodeType":"FunctionDefinition","parameters":{"id":376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":373,"mutability":"mutable","name":"role","nameLocation":"3297:4:1","nodeType":"VariableDeclaration","scope":378,"src":"3289:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":372,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3289:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":375,"mutability":"mutable","name":"callerConfirmation","nameLocation":"3311:18:1","nodeType":"VariableDeclaration","scope":378,"src":"3303:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":374,"name":"address","nodeType":"ElementaryTypeName","src":"3303:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3288:42:1"},"returnParameters":{"id":377,"nodeType":"ParameterList","parameters":[],"src":"3339:0:1"},"scope":379,"src":"3267:73:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":380,"src":"226:3116:1","usedErrors":[306,309],"usedEvents":[318,327,336]}],"src":"109:3234:1"},"id":1},"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[2051],"Ownable":[527]},"id":528,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":381,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:2"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":383,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":528,"sourceUnit":2052,"src":"128:45:2","symbolAliases":[{"foreign":{"id":382,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"136:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":385,"name":"Context","nameLocations":["692:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":2051,"src":"692:7:2"},"id":386,"nodeType":"InheritanceSpecifier","src":"692:7:2"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":384,"nodeType":"StructuredDocumentation","src":"175:487:2","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":527,"linearizedBaseContracts":[527,2051],"name":"Ownable","nameLocation":"681:7:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":388,"mutability":"mutable","name":"_owner","nameLocation":"722:6:2","nodeType":"VariableDeclaration","scope":527,"src":"706:22:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":387,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":389,"nodeType":"StructuredDocumentation","src":"735:85:2","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":393,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:2","nodeType":"ErrorDefinition","parameters":{"id":392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":391,"mutability":"mutable","name":"account","nameLocation":"866:7:2","nodeType":"VariableDeclaration","scope":393,"src":"858:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":390,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:2"},"src":"825:50:2"},{"documentation":{"id":394,"nodeType":"StructuredDocumentation","src":"881:82:2","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":398,"name":"OwnableInvalidOwner","nameLocation":"974:19:2","nodeType":"ErrorDefinition","parameters":{"id":397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":396,"mutability":"mutable","name":"owner","nameLocation":"1002:5:2","nodeType":"VariableDeclaration","scope":398,"src":"994:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":395,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:2"},"src":"968:41:2"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":404,"name":"OwnershipTransferred","nameLocation":"1021:20:2","nodeType":"EventDefinition","parameters":{"id":403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":400,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:2","nodeType":"VariableDeclaration","scope":404,"src":"1042:29:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":399,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":402,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:2","nodeType":"VariableDeclaration","scope":404,"src":"1073:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":401,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:2"},"src":"1015:84:2"},{"body":{"id":429,"nodeType":"Block","src":"1259:153:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":410,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":407,"src":"1273:12:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":412,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":411,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:2","typeDescriptions":{}}},"id":414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":424,"nodeType":"IfStatement","src":"1269:95:2","trueBody":{"id":423,"nodeType":"Block","src":"1301:63:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":418,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":417,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:2","typeDescriptions":{}}},"id":420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":416,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":398,"src":"1322:19:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":422,"nodeType":"RevertStatement","src":"1315:38:2"}]}},{"expression":{"arguments":[{"id":426,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":407,"src":"1392:12:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":425,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":526,"src":"1373:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":428,"nodeType":"ExpressionStatement","src":"1373:32:2"}]},"documentation":{"id":405,"nodeType":"StructuredDocumentation","src":"1105:115:2","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":430,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":407,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:2","nodeType":"VariableDeclaration","scope":430,"src":"1237:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":406,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:2"},"returnParameters":{"id":409,"nodeType":"ParameterList","parameters":[],"src":"1259:0:2"},"scope":527,"src":"1225:187:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":437,"nodeType":"Block","src":"1521:41:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":433,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":464,"src":"1531:11:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":435,"nodeType":"ExpressionStatement","src":"1531:13:2"},{"id":436,"nodeType":"PlaceholderStatement","src":"1554:1:2"}]},"documentation":{"id":431,"nodeType":"StructuredDocumentation","src":"1418:77:2","text":" @dev Throws if called by any account other than the owner."},"id":438,"name":"onlyOwner","nameLocation":"1509:9:2","nodeType":"ModifierDefinition","parameters":{"id":432,"nodeType":"ParameterList","parameters":[],"src":"1518:2:2"},"src":"1500:62:2","virtual":false,"visibility":"internal"},{"body":{"id":446,"nodeType":"Block","src":"1693:30:2","statements":[{"expression":{"id":444,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"1710:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":443,"id":445,"nodeType":"Return","src":"1703:13:2"}]},"documentation":{"id":439,"nodeType":"StructuredDocumentation","src":"1568:65:2","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":447,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:2","nodeType":"FunctionDefinition","parameters":{"id":440,"nodeType":"ParameterList","parameters":[],"src":"1652:2:2"},"returnParameters":{"id":443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":442,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":447,"src":"1684:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":441,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:2"},"scope":527,"src":"1638:85:2","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":463,"nodeType":"Block","src":"1841:117:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":451,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"1855:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":453,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2033,"src":"1866:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":462,"nodeType":"IfStatement","src":"1851:101:2","trueBody":{"id":461,"nodeType":"Block","src":"1880:72:2","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":457,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2033,"src":"1928:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":456,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":393,"src":"1901:26:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":460,"nodeType":"RevertStatement","src":"1894:47:2"}]}}]},"documentation":{"id":448,"nodeType":"StructuredDocumentation","src":"1729:62:2","text":" @dev Throws if the sender is not the owner."},"id":464,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:2","nodeType":"FunctionDefinition","parameters":{"id":449,"nodeType":"ParameterList","parameters":[],"src":"1816:2:2"},"returnParameters":{"id":450,"nodeType":"ParameterList","parameters":[],"src":"1841:0:2"},"scope":527,"src":"1796:162:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":477,"nodeType":"Block","src":"2347:47:2","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":472,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":471,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:2","typeDescriptions":{}}},"id":474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":470,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":526,"src":"2357:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":476,"nodeType":"ExpressionStatement","src":"2357:30:2"}]},"documentation":{"id":465,"nodeType":"StructuredDocumentation","src":"1964:324:2","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":478,"implemented":true,"kind":"function","modifiers":[{"id":468,"kind":"modifierInvocation","modifierName":{"id":467,"name":"onlyOwner","nameLocations":["2337:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":438,"src":"2337:9:2"},"nodeType":"ModifierInvocation","src":"2337:9:2"}],"name":"renounceOwnership","nameLocation":"2302:17:2","nodeType":"FunctionDefinition","parameters":{"id":466,"nodeType":"ParameterList","parameters":[],"src":"2319:2:2"},"returnParameters":{"id":469,"nodeType":"ParameterList","parameters":[],"src":"2347:0:2"},"scope":527,"src":"2293:101:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":505,"nodeType":"Block","src":"2613:145:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":486,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":481,"src":"2627:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":488,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":487,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:2","typeDescriptions":{}}},"id":490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":500,"nodeType":"IfStatement","src":"2623:91:2","trueBody":{"id":499,"nodeType":"Block","src":"2651:63:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":494,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":493,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:2","typeDescriptions":{}}},"id":496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":492,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":398,"src":"2672:19:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":498,"nodeType":"RevertStatement","src":"2665:38:2"}]}},{"expression":{"arguments":[{"id":502,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":481,"src":"2742:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":501,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":526,"src":"2723:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":504,"nodeType":"ExpressionStatement","src":"2723:28:2"}]},"documentation":{"id":479,"nodeType":"StructuredDocumentation","src":"2400:138:2","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":506,"implemented":true,"kind":"function","modifiers":[{"id":484,"kind":"modifierInvocation","modifierName":{"id":483,"name":"onlyOwner","nameLocations":["2603:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":438,"src":"2603:9:2"},"nodeType":"ModifierInvocation","src":"2603:9:2"}],"name":"transferOwnership","nameLocation":"2552:17:2","nodeType":"FunctionDefinition","parameters":{"id":482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":481,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:2","nodeType":"VariableDeclaration","scope":506,"src":"2570:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":480,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:2"},"returnParameters":{"id":485,"nodeType":"ParameterList","parameters":[],"src":"2613:0:2"},"scope":527,"src":"2543:215:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":525,"nodeType":"Block","src":"2975:124:2","statements":[{"assignments":[513],"declarations":[{"constant":false,"id":513,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:2","nodeType":"VariableDeclaration","scope":525,"src":"2985:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":512,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":515,"initialValue":{"id":514,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"3004:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:2"},{"expression":{"id":518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":516,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"3020:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":517,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":509,"src":"3029:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":519,"nodeType":"ExpressionStatement","src":"3020:17:2"},{"eventCall":{"arguments":[{"id":521,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"3073:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":522,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":509,"src":"3083:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":520,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":404,"src":"3052:20:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":524,"nodeType":"EmitStatement","src":"3047:45:2"}]},"documentation":{"id":507,"nodeType":"StructuredDocumentation","src":"2764:143:2","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":526,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:2","nodeType":"FunctionDefinition","parameters":{"id":510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":509,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:2","nodeType":"VariableDeclaration","scope":526,"src":"2940:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":508,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:2"},"returnParameters":{"id":511,"nodeType":"ParameterList","parameters":[],"src":"2975:0:2"},"scope":527,"src":"2912:187:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":528,"src":"663:2438:2","usedErrors":[393,398],"usedEvents":[404]}],"src":"102:3000:2"},"id":2},"@openzeppelin/contracts/interfaces/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","exportedSymbols":{"IERC165":[3610]},"id":532,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":529,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"106:25:3"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../utils/introspection/IERC165.sol","id":531,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":532,"sourceUnit":3611,"src":"133:59:3","symbolAliases":[{"foreign":{"id":530,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3610,"src":"141:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"106:87:3"},"id":3},"@openzeppelin/contracts/interfaces/IERC4906.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC4906.sol","exportedSymbols":{"IERC165":[3610],"IERC4906":[555],"IERC721":[1770]},"id":556,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":533,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"107:24:4"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","file":"./IERC165.sol","id":535,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":556,"sourceUnit":532,"src":"133:38:4","symbolAliases":[{"foreign":{"id":534,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3610,"src":"141:7:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC721.sol","file":"./IERC721.sol","id":537,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":556,"sourceUnit":560,"src":"172:38:4","symbolAliases":[{"foreign":{"id":536,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1770,"src":"180:7:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":539,"name":"IERC165","nameLocations":["279:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":3610,"src":"279:7:4"},"id":540,"nodeType":"InheritanceSpecifier","src":"279:7:4"},{"baseName":{"id":541,"name":"IERC721","nameLocations":["288:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":1770,"src":"288:7:4"},"id":542,"nodeType":"InheritanceSpecifier","src":"288:7:4"}],"canonicalName":"IERC4906","contractDependencies":[],"contractKind":"interface","documentation":{"id":538,"nodeType":"StructuredDocumentation","src":"212:45:4","text":"@title ERC-721 Metadata Update Extension"},"fullyImplemented":false,"id":555,"linearizedBaseContracts":[555,1770,3610],"name":"IERC4906","nameLocation":"267:8:4","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":543,"nodeType":"StructuredDocumentation","src":"302:201:4","text":"@dev This event emits when the metadata of a token is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFT."},"eventSelector":"f8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7","id":547,"name":"MetadataUpdate","nameLocation":"514:14:4","nodeType":"EventDefinition","parameters":{"id":546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":545,"indexed":false,"mutability":"mutable","name":"_tokenId","nameLocation":"537:8:4","nodeType":"VariableDeclaration","scope":547,"src":"529:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":544,"name":"uint256","nodeType":"ElementaryTypeName","src":"529:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"528:18:4"},"src":"508:39:4"},{"anonymous":false,"documentation":{"id":548,"nodeType":"StructuredDocumentation","src":"553:212:4","text":"@dev This event emits when the metadata of a range of tokens is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFTs."},"eventSelector":"6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c","id":554,"name":"BatchMetadataUpdate","nameLocation":"776:19:4","nodeType":"EventDefinition","parameters":{"id":553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":550,"indexed":false,"mutability":"mutable","name":"_fromTokenId","nameLocation":"804:12:4","nodeType":"VariableDeclaration","scope":554,"src":"796:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":549,"name":"uint256","nodeType":"ElementaryTypeName","src":"796:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":552,"indexed":false,"mutability":"mutable","name":"_toTokenId","nameLocation":"826:10:4","nodeType":"VariableDeclaration","scope":554,"src":"818:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":551,"name":"uint256","nodeType":"ElementaryTypeName","src":"818:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"795:42:4"},"src":"770:68:4"}],"scope":556,"src":"257:583:4","usedErrors":[],"usedEvents":[547,554,1669,1678,1687]}],"src":"107:734:4"},"id":4},"@openzeppelin/contracts/interfaces/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC721.sol","exportedSymbols":{"IERC721":[1770]},"id":560,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":557,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"106:24:5"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../token/ERC721/IERC721.sol","id":559,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":560,"sourceUnit":1771,"src":"132:52:5","symbolAliases":[{"foreign":{"id":558,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1770,"src":"140:7:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"106:79:5"},"id":5},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[696],"IERC20Errors":[601],"IERC721Errors":[649]},"id":697,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":561,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"112:24:6"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":562,"nodeType":"StructuredDocumentation","src":"138:141:6","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":601,"linearizedBaseContracts":[601],"name":"IERC20Errors","nameLocation":"290:12:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":563,"nodeType":"StructuredDocumentation","src":"309:309:6","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":571,"name":"ERC20InsufficientBalance","nameLocation":"629:24:6","nodeType":"ErrorDefinition","parameters":{"id":570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":565,"mutability":"mutable","name":"sender","nameLocation":"662:6:6","nodeType":"VariableDeclaration","scope":571,"src":"654:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":564,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":567,"mutability":"mutable","name":"balance","nameLocation":"678:7:6","nodeType":"VariableDeclaration","scope":571,"src":"670:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":566,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":569,"mutability":"mutable","name":"needed","nameLocation":"695:6:6","nodeType":"VariableDeclaration","scope":571,"src":"687:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":568,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:6"},"src":"623:80:6"},{"documentation":{"id":572,"nodeType":"StructuredDocumentation","src":"709:152:6","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":576,"name":"ERC20InvalidSender","nameLocation":"872:18:6","nodeType":"ErrorDefinition","parameters":{"id":575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":574,"mutability":"mutable","name":"sender","nameLocation":"899:6:6","nodeType":"VariableDeclaration","scope":576,"src":"891:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":573,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:6"},"src":"866:41:6"},{"documentation":{"id":577,"nodeType":"StructuredDocumentation","src":"913:159:6","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":581,"name":"ERC20InvalidReceiver","nameLocation":"1083:20:6","nodeType":"ErrorDefinition","parameters":{"id":580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":579,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:6","nodeType":"VariableDeclaration","scope":581,"src":"1104:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":578,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:6"},"src":"1077:45:6"},{"documentation":{"id":582,"nodeType":"StructuredDocumentation","src":"1128:345:6","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":590,"name":"ERC20InsufficientAllowance","nameLocation":"1484:26:6","nodeType":"ErrorDefinition","parameters":{"id":589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":584,"mutability":"mutable","name":"spender","nameLocation":"1519:7:6","nodeType":"VariableDeclaration","scope":590,"src":"1511:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":583,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":586,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:6","nodeType":"VariableDeclaration","scope":590,"src":"1528:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":585,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":588,"mutability":"mutable","name":"needed","nameLocation":"1555:6:6","nodeType":"VariableDeclaration","scope":590,"src":"1547:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":587,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:6"},"src":"1478:85:6"},{"documentation":{"id":591,"nodeType":"StructuredDocumentation","src":"1569:174:6","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":595,"name":"ERC20InvalidApprover","nameLocation":"1754:20:6","nodeType":"ErrorDefinition","parameters":{"id":594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":593,"mutability":"mutable","name":"approver","nameLocation":"1783:8:6","nodeType":"VariableDeclaration","scope":595,"src":"1775:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":592,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:6"},"src":"1748:45:6"},{"documentation":{"id":596,"nodeType":"StructuredDocumentation","src":"1799:195:6","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":600,"name":"ERC20InvalidSpender","nameLocation":"2005:19:6","nodeType":"ErrorDefinition","parameters":{"id":599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":598,"mutability":"mutable","name":"spender","nameLocation":"2033:7:6","nodeType":"VariableDeclaration","scope":600,"src":"2025:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":597,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:6"},"src":"1999:43:6"}],"scope":697,"src":"280:1764:6","usedErrors":[571,576,581,590,595,600],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":602,"nodeType":"StructuredDocumentation","src":"2046:143:6","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":649,"linearizedBaseContracts":[649],"name":"IERC721Errors","nameLocation":"2200:13:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":603,"nodeType":"StructuredDocumentation","src":"2220:219:6","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":607,"name":"ERC721InvalidOwner","nameLocation":"2450:18:6","nodeType":"ErrorDefinition","parameters":{"id":606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":605,"mutability":"mutable","name":"owner","nameLocation":"2477:5:6","nodeType":"VariableDeclaration","scope":607,"src":"2469:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":604,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:6"},"src":"2444:40:6"},{"documentation":{"id":608,"nodeType":"StructuredDocumentation","src":"2490:132:6","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":612,"name":"ERC721NonexistentToken","nameLocation":"2633:22:6","nodeType":"ErrorDefinition","parameters":{"id":611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":610,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:6","nodeType":"VariableDeclaration","scope":612,"src":"2656:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":609,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:6"},"src":"2627:46:6"},{"documentation":{"id":613,"nodeType":"StructuredDocumentation","src":"2679:289:6","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":621,"name":"ERC721IncorrectOwner","nameLocation":"2979:20:6","nodeType":"ErrorDefinition","parameters":{"id":620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":615,"mutability":"mutable","name":"sender","nameLocation":"3008:6:6","nodeType":"VariableDeclaration","scope":621,"src":"3000:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":614,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":617,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:6","nodeType":"VariableDeclaration","scope":621,"src":"3016:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":616,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":619,"mutability":"mutable","name":"owner","nameLocation":"3041:5:6","nodeType":"VariableDeclaration","scope":621,"src":"3033:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":618,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:6"},"src":"2973:75:6"},{"documentation":{"id":622,"nodeType":"StructuredDocumentation","src":"3054:152:6","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":626,"name":"ERC721InvalidSender","nameLocation":"3217:19:6","nodeType":"ErrorDefinition","parameters":{"id":625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":624,"mutability":"mutable","name":"sender","nameLocation":"3245:6:6","nodeType":"VariableDeclaration","scope":626,"src":"3237:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":623,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:6"},"src":"3211:42:6"},{"documentation":{"id":627,"nodeType":"StructuredDocumentation","src":"3259:159:6","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":631,"name":"ERC721InvalidReceiver","nameLocation":"3429:21:6","nodeType":"ErrorDefinition","parameters":{"id":630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":629,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:6","nodeType":"VariableDeclaration","scope":631,"src":"3451:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":628,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:6"},"src":"3423:46:6"},{"documentation":{"id":632,"nodeType":"StructuredDocumentation","src":"3475:247:6","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":638,"name":"ERC721InsufficientApproval","nameLocation":"3733:26:6","nodeType":"ErrorDefinition","parameters":{"id":637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":634,"mutability":"mutable","name":"operator","nameLocation":"3768:8:6","nodeType":"VariableDeclaration","scope":638,"src":"3760:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":633,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":636,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:6","nodeType":"VariableDeclaration","scope":638,"src":"3778:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":635,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:6"},"src":"3727:68:6"},{"documentation":{"id":639,"nodeType":"StructuredDocumentation","src":"3801:174:6","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":643,"name":"ERC721InvalidApprover","nameLocation":"3986:21:6","nodeType":"ErrorDefinition","parameters":{"id":642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":641,"mutability":"mutable","name":"approver","nameLocation":"4016:8:6","nodeType":"VariableDeclaration","scope":643,"src":"4008:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":640,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:6"},"src":"3980:46:6"},{"documentation":{"id":644,"nodeType":"StructuredDocumentation","src":"4032:197:6","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":648,"name":"ERC721InvalidOperator","nameLocation":"4240:21:6","nodeType":"ErrorDefinition","parameters":{"id":647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":646,"mutability":"mutable","name":"operator","nameLocation":"4270:8:6","nodeType":"VariableDeclaration","scope":648,"src":"4262:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":645,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:6"},"src":"4234:46:6"}],"scope":697,"src":"2190:2092:6","usedErrors":[607,612,621,626,631,638,643,648],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":650,"nodeType":"StructuredDocumentation","src":"4284:145:6","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":696,"linearizedBaseContracts":[696],"name":"IERC1155Errors","nameLocation":"4440:14:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":651,"nodeType":"StructuredDocumentation","src":"4461:361:6","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":661,"name":"ERC1155InsufficientBalance","nameLocation":"4833:26:6","nodeType":"ErrorDefinition","parameters":{"id":660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":653,"mutability":"mutable","name":"sender","nameLocation":"4868:6:6","nodeType":"VariableDeclaration","scope":661,"src":"4860:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":652,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":655,"mutability":"mutable","name":"balance","nameLocation":"4884:7:6","nodeType":"VariableDeclaration","scope":661,"src":"4876:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":654,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":657,"mutability":"mutable","name":"needed","nameLocation":"4901:6:6","nodeType":"VariableDeclaration","scope":661,"src":"4893:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":656,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":659,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:6","nodeType":"VariableDeclaration","scope":661,"src":"4909:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":658,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:6"},"src":"4827:99:6"},{"documentation":{"id":662,"nodeType":"StructuredDocumentation","src":"4932:152:6","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":666,"name":"ERC1155InvalidSender","nameLocation":"5095:20:6","nodeType":"ErrorDefinition","parameters":{"id":665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":664,"mutability":"mutable","name":"sender","nameLocation":"5124:6:6","nodeType":"VariableDeclaration","scope":666,"src":"5116:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":663,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:6"},"src":"5089:43:6"},{"documentation":{"id":667,"nodeType":"StructuredDocumentation","src":"5138:159:6","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":671,"name":"ERC1155InvalidReceiver","nameLocation":"5308:22:6","nodeType":"ErrorDefinition","parameters":{"id":670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":669,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:6","nodeType":"VariableDeclaration","scope":671,"src":"5331:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":668,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:6"},"src":"5302:47:6"},{"documentation":{"id":672,"nodeType":"StructuredDocumentation","src":"5355:256:6","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":678,"name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:6","nodeType":"ErrorDefinition","parameters":{"id":677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":674,"mutability":"mutable","name":"operator","nameLocation":"5659:8:6","nodeType":"VariableDeclaration","scope":678,"src":"5651:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":673,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":676,"mutability":"mutable","name":"owner","nameLocation":"5677:5:6","nodeType":"VariableDeclaration","scope":678,"src":"5669:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":675,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:6"},"src":"5616:68:6"},{"documentation":{"id":679,"nodeType":"StructuredDocumentation","src":"5690:174:6","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":683,"name":"ERC1155InvalidApprover","nameLocation":"5875:22:6","nodeType":"ErrorDefinition","parameters":{"id":682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":681,"mutability":"mutable","name":"approver","nameLocation":"5906:8:6","nodeType":"VariableDeclaration","scope":683,"src":"5898:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":680,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:6"},"src":"5869:47:6"},{"documentation":{"id":684,"nodeType":"StructuredDocumentation","src":"5922:197:6","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":688,"name":"ERC1155InvalidOperator","nameLocation":"6130:22:6","nodeType":"ErrorDefinition","parameters":{"id":687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":686,"mutability":"mutable","name":"operator","nameLocation":"6161:8:6","nodeType":"VariableDeclaration","scope":688,"src":"6153:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":685,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:6"},"src":"6124:47:6"},{"documentation":{"id":689,"nodeType":"StructuredDocumentation","src":"6177:280:6","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":695,"name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:6","nodeType":"ErrorDefinition","parameters":{"id":694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":691,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:6","nodeType":"VariableDeclaration","scope":695,"src":"6494:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":690,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":693,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:6","nodeType":"VariableDeclaration","scope":695,"src":"6513:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":692,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:6"},"src":"6462:73:6"}],"scope":697,"src":"4430:2107:6","usedErrors":[661,666,671,678,683,688,695],"usedEvents":[]}],"src":"112:6426:6"},"id":6},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","exportedSymbols":{"Context":[2051],"ERC165":[3598],"ERC721":[1653],"ERC721Utils":[2021],"IERC165":[3610],"IERC721":[1770],"IERC721Errors":[649],"IERC721Metadata":[1944],"Strings":[3574]},"id":1654,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":698,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:7"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"./IERC721.sol","id":700,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1654,"sourceUnit":1771,"src":"133:38:7","symbolAliases":[{"foreign":{"id":699,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1770,"src":"141:7:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","file":"./extensions/IERC721Metadata.sol","id":702,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1654,"sourceUnit":1945,"src":"172:65:7","symbolAliases":[{"foreign":{"id":701,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1944,"src":"180:15:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol","file":"./utils/ERC721Utils.sol","id":704,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1654,"sourceUnit":2022,"src":"238:52:7","symbolAliases":[{"foreign":{"id":703,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"246:11:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":706,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1654,"sourceUnit":2052,"src":"291:48:7","symbolAliases":[{"foreign":{"id":705,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"299:7:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../../utils/Strings.sol","id":708,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1654,"sourceUnit":3575,"src":"340:48:7","symbolAliases":[{"foreign":{"id":707,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3574,"src":"348:7:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":711,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1654,"sourceUnit":3599,"src":"389:69:7","symbolAliases":[{"foreign":{"id":709,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3610,"src":"397:7:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":710,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3598,"src":"406:6:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":713,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1654,"sourceUnit":697,"src":"459:66:7","symbolAliases":[{"foreign":{"id":712,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"467:13:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":715,"name":"Context","nameLocations":["803:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":2051,"src":"803:7:7"},"id":716,"nodeType":"InheritanceSpecifier","src":"803:7:7"},{"baseName":{"id":717,"name":"ERC165","nameLocations":["812:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":3598,"src":"812:6:7"},"id":718,"nodeType":"InheritanceSpecifier","src":"812:6:7"},{"baseName":{"id":719,"name":"IERC721","nameLocations":["820:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":1770,"src":"820:7:7"},"id":720,"nodeType":"InheritanceSpecifier","src":"820:7:7"},{"baseName":{"id":721,"name":"IERC721Metadata","nameLocations":["829:15:7"],"nodeType":"IdentifierPath","referencedDeclaration":1944,"src":"829:15:7"},"id":722,"nodeType":"InheritanceSpecifier","src":"829:15:7"},{"baseName":{"id":723,"name":"IERC721Errors","nameLocations":["846:13:7"],"nodeType":"IdentifierPath","referencedDeclaration":649,"src":"846:13:7"},"id":724,"nodeType":"InheritanceSpecifier","src":"846:13:7"}],"canonicalName":"ERC721","contractDependencies":[],"contractKind":"contract","documentation":{"id":714,"nodeType":"StructuredDocumentation","src":"527:247:7","text":" @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."},"fullyImplemented":true,"id":1653,"linearizedBaseContracts":[1653,649,1944,1770,3598,3610,2051],"name":"ERC721","nameLocation":"793:6:7","nodeType":"ContractDefinition","nodes":[{"global":false,"id":727,"libraryName":{"id":725,"name":"Strings","nameLocations":["872:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":3574,"src":"872:7:7"},"nodeType":"UsingForDirective","src":"866:26:7","typeName":{"id":726,"name":"uint256","nodeType":"ElementaryTypeName","src":"884:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":729,"mutability":"mutable","name":"_name","nameLocation":"931:5:7","nodeType":"VariableDeclaration","scope":1653,"src":"916:20:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":728,"name":"string","nodeType":"ElementaryTypeName","src":"916:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":731,"mutability":"mutable","name":"_symbol","nameLocation":"978:7:7","nodeType":"VariableDeclaration","scope":1653,"src":"963:22:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":730,"name":"string","nodeType":"ElementaryTypeName","src":"963:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":735,"mutability":"mutable","name":"_owners","nameLocation":"1036:7:7","nodeType":"VariableDeclaration","scope":1653,"src":"992:51:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":734,"keyName":"tokenId","keyNameLocation":"1008:7:7","keyType":{"id":732,"name":"uint256","nodeType":"ElementaryTypeName","src":"1000:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"992:35:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":733,"name":"address","nodeType":"ElementaryTypeName","src":"1019:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":739,"mutability":"mutable","name":"_balances","nameLocation":"1092:9:7","nodeType":"VariableDeclaration","scope":1653,"src":"1050:51:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":738,"keyName":"owner","keyNameLocation":"1066:5:7","keyType":{"id":736,"name":"address","nodeType":"ElementaryTypeName","src":"1058:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1050:33:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":737,"name":"uint256","nodeType":"ElementaryTypeName","src":"1075:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":743,"mutability":"mutable","name":"_tokenApprovals","nameLocation":"1152:15:7","nodeType":"VariableDeclaration","scope":1653,"src":"1108:59:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":742,"keyName":"tokenId","keyNameLocation":"1124:7:7","keyType":{"id":740,"name":"uint256","nodeType":"ElementaryTypeName","src":"1116:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1108:35:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":741,"name":"address","nodeType":"ElementaryTypeName","src":"1135:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":749,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1242:18:7","nodeType":"VariableDeclaration","scope":1653,"src":"1174:86:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":748,"keyName":"owner","keyNameLocation":"1190:5:7","keyType":{"id":744,"name":"address","nodeType":"ElementaryTypeName","src":"1182:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1174:59:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":747,"keyName":"operator","keyNameLocation":"1215:8:7","keyType":{"id":745,"name":"address","nodeType":"ElementaryTypeName","src":"1207:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1199:33:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":746,"name":"bool","nodeType":"ElementaryTypeName","src":"1227:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"body":{"id":765,"nodeType":"Block","src":"1436:57:7","statements":[{"expression":{"id":759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":757,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"1446:5:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":758,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"1454:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1446:13:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":760,"nodeType":"ExpressionStatement","src":"1446:13:7"},{"expression":{"id":763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":761,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":731,"src":"1469:7:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":762,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":754,"src":"1479:7:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1469:17:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":764,"nodeType":"ExpressionStatement","src":"1469:17:7"}]},"documentation":{"id":750,"nodeType":"StructuredDocumentation","src":"1267:108:7","text":" @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."},"id":766,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":752,"mutability":"mutable","name":"name_","nameLocation":"1406:5:7","nodeType":"VariableDeclaration","scope":766,"src":"1392:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":751,"name":"string","nodeType":"ElementaryTypeName","src":"1392:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":754,"mutability":"mutable","name":"symbol_","nameLocation":"1427:7:7","nodeType":"VariableDeclaration","scope":766,"src":"1413:21:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":753,"name":"string","nodeType":"ElementaryTypeName","src":"1413:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1391:44:7"},"returnParameters":{"id":756,"nodeType":"ParameterList","parameters":[],"src":"1436:0:7"},"scope":1653,"src":"1380:113:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[3597,3609],"body":{"id":796,"nodeType":"Block","src":"1635:192:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":777,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"1664:11:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":779,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1770,"src":"1684:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$1770_$","typeString":"type(contract IERC721)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721_$1770_$","typeString":"type(contract IERC721)"}],"id":778,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1679:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1679:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721_$1770","typeString":"type(contract IERC721)"}},"id":781,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1693:11:7","memberName":"interfaceId","nodeType":"MemberAccess","src":"1679:25:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1664:40:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":783,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"1720:11:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":785,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1944,"src":"1740:15:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$1944_$","typeString":"type(contract IERC721Metadata)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$1944_$","typeString":"type(contract IERC721Metadata)"}],"id":784,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1735:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1735:21:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Metadata_$1944","typeString":"type(contract IERC721Metadata)"}},"id":787,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1757:11:7","memberName":"interfaceId","nodeType":"MemberAccess","src":"1735:33:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1720:48:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1664:104:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":792,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"1808:11:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":790,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1784:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721_$1653_$","typeString":"type(contract super ERC721)"}},"id":791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1790:17:7","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":3597,"src":"1784:23:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1784:36:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1664:156:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":776,"id":795,"nodeType":"Return","src":"1645:175:7"}]},"documentation":{"id":767,"nodeType":"StructuredDocumentation","src":"1499:23:7","text":"@inheritdoc IERC165"},"functionSelector":"01ffc9a7","id":797,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1536:17:7","nodeType":"FunctionDefinition","overrides":{"id":773,"nodeType":"OverrideSpecifier","overrides":[{"id":771,"name":"ERC165","nameLocations":["1603:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":3598,"src":"1603:6:7"},{"id":772,"name":"IERC165","nameLocations":["1611:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":3610,"src":"1611:7:7"}],"src":"1594:25:7"},"parameters":{"id":770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":769,"mutability":"mutable","name":"interfaceId","nameLocation":"1561:11:7","nodeType":"VariableDeclaration","scope":797,"src":"1554:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":768,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1554:6:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1553:20:7"},"returnParameters":{"id":776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":775,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":797,"src":"1629:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":774,"name":"bool","nodeType":"ElementaryTypeName","src":"1629:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1628:6:7"},"scope":1653,"src":"1527:300:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1695],"body":{"id":824,"nodeType":"Block","src":"1933:136:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":805,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":800,"src":"1947:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1964:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":807,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1956:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":806,"name":"address","nodeType":"ElementaryTypeName","src":"1956:7:7","typeDescriptions":{}}},"id":809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1956:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1947:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":819,"nodeType":"IfStatement","src":"1943:87:7","trueBody":{"id":818,"nodeType":"Block","src":"1968:62:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2016:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":813,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2008:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":812,"name":"address","nodeType":"ElementaryTypeName","src":"2008:7:7","typeDescriptions":{}}},"id":815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2008:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":811,"name":"ERC721InvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":607,"src":"1989:18:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1989:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":817,"nodeType":"RevertStatement","src":"1982:37:7"}]}},{"expression":{"baseExpression":{"id":820,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":739,"src":"2046:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":822,"indexExpression":{"id":821,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":800,"src":"2056:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2046:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":804,"id":823,"nodeType":"Return","src":"2039:23:7"}]},"documentation":{"id":798,"nodeType":"StructuredDocumentation","src":"1833:23:7","text":"@inheritdoc IERC721"},"functionSelector":"70a08231","id":825,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1870:9:7","nodeType":"FunctionDefinition","parameters":{"id":801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":800,"mutability":"mutable","name":"owner","nameLocation":"1888:5:7","nodeType":"VariableDeclaration","scope":825,"src":"1880:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":799,"name":"address","nodeType":"ElementaryTypeName","src":"1880:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1879:15:7"},"returnParameters":{"id":804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":803,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":825,"src":"1924:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":802,"name":"uint256","nodeType":"ElementaryTypeName","src":"1924:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1923:9:7"},"scope":1653,"src":"1861:208:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1703],"body":{"id":837,"nodeType":"Block","src":"2175:46:7","statements":[{"expression":{"arguments":[{"id":834,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":828,"src":"2206:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":833,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1652,"src":"2192:13:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2192:22:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":832,"id":836,"nodeType":"Return","src":"2185:29:7"}]},"documentation":{"id":826,"nodeType":"StructuredDocumentation","src":"2075:23:7","text":"@inheritdoc IERC721"},"functionSelector":"6352211e","id":838,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"2112:7:7","nodeType":"FunctionDefinition","parameters":{"id":829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":828,"mutability":"mutable","name":"tokenId","nameLocation":"2128:7:7","nodeType":"VariableDeclaration","scope":838,"src":"2120:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":827,"name":"uint256","nodeType":"ElementaryTypeName","src":"2120:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2119:17:7"},"returnParameters":{"id":832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":831,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":838,"src":"2166:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":830,"name":"address","nodeType":"ElementaryTypeName","src":"2166:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2165:9:7"},"scope":1653,"src":"2103:118:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1929],"body":{"id":846,"nodeType":"Block","src":"2323:29:7","statements":[{"expression":{"id":844,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"2340:5:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":843,"id":845,"nodeType":"Return","src":"2333:12:7"}]},"documentation":{"id":839,"nodeType":"StructuredDocumentation","src":"2227:31:7","text":"@inheritdoc IERC721Metadata"},"functionSelector":"06fdde03","id":847,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2272:4:7","nodeType":"FunctionDefinition","parameters":{"id":840,"nodeType":"ParameterList","parameters":[],"src":"2276:2:7"},"returnParameters":{"id":843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":842,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":847,"src":"2308:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":841,"name":"string","nodeType":"ElementaryTypeName","src":"2308:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2307:15:7"},"scope":1653,"src":"2263:89:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1935],"body":{"id":855,"nodeType":"Block","src":"2456:31:7","statements":[{"expression":{"id":853,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":731,"src":"2473:7:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":852,"id":854,"nodeType":"Return","src":"2466:14:7"}]},"documentation":{"id":848,"nodeType":"StructuredDocumentation","src":"2358:31:7","text":"@inheritdoc IERC721Metadata"},"functionSelector":"95d89b41","id":856,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2403:6:7","nodeType":"FunctionDefinition","parameters":{"id":849,"nodeType":"ParameterList","parameters":[],"src":"2409:2:7"},"returnParameters":{"id":852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":851,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":856,"src":"2441:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":850,"name":"string","nodeType":"ElementaryTypeName","src":"2441:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2440:15:7"},"scope":1653,"src":"2394:93:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1943],"body":{"id":891,"nodeType":"Block","src":"2608:176:7","statements":[{"expression":{"arguments":[{"id":865,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":859,"src":"2632:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":864,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1652,"src":"2618:13:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2618:22:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":867,"nodeType":"ExpressionStatement","src":"2618:22:7"},{"assignments":[869],"declarations":[{"constant":false,"id":869,"mutability":"mutable","name":"baseURI","nameLocation":"2665:7:7","nodeType":"VariableDeclaration","scope":891,"src":"2651:21:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":868,"name":"string","nodeType":"ElementaryTypeName","src":"2651:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":872,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":870,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":901,"src":"2675:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2675:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2651:34:7"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":875,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":869,"src":"2708:7:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":874,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2702:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":873,"name":"bytes","nodeType":"ElementaryTypeName","src":"2702:5:7","typeDescriptions":{}}},"id":876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2702:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2717:6:7","memberName":"length","nodeType":"MemberAccess","src":"2702:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2726:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2702:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2775:2:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2702:75:7","trueExpression":{"arguments":[{"id":883,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":869,"src":"2744:7:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":884,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":859,"src":"2753:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2761:8:7","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":2286,"src":"2753:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2753:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":881,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2730:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":880,"name":"string","nodeType":"ElementaryTypeName","src":"2730:6:7","typeDescriptions":{}}},"id":882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2737:6:7","memberName":"concat","nodeType":"MemberAccess","src":"2730:13:7","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2730:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":863,"id":890,"nodeType":"Return","src":"2695:82:7"}]},"documentation":{"id":857,"nodeType":"StructuredDocumentation","src":"2493:31:7","text":"@inheritdoc IERC721Metadata"},"functionSelector":"c87b56dd","id":892,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"2538:8:7","nodeType":"FunctionDefinition","parameters":{"id":860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":859,"mutability":"mutable","name":"tokenId","nameLocation":"2555:7:7","nodeType":"VariableDeclaration","scope":892,"src":"2547:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":858,"name":"uint256","nodeType":"ElementaryTypeName","src":"2547:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2546:17:7"},"returnParameters":{"id":863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":862,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":892,"src":"2593:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":861,"name":"string","nodeType":"ElementaryTypeName","src":"2593:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2592:15:7"},"scope":1653,"src":"2529:255:7","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":900,"nodeType":"Block","src":"3092:26:7","statements":[{"expression":{"hexValue":"","id":898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3109:2:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":897,"id":899,"nodeType":"Return","src":"3102:9:7"}]},"documentation":{"id":893,"nodeType":"StructuredDocumentation","src":"2790:231:7","text":" @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."},"id":901,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"3035:8:7","nodeType":"FunctionDefinition","parameters":{"id":894,"nodeType":"ParameterList","parameters":[],"src":"3043:2:7"},"returnParameters":{"id":897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":896,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":901,"src":"3077:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":895,"name":"string","nodeType":"ElementaryTypeName","src":"3077:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3076:15:7"},"scope":1653,"src":"3026:92:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[1743],"body":{"id":916,"nodeType":"Block","src":"3213:52:7","statements":[{"expression":{"arguments":[{"id":910,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":904,"src":"3232:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":911,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":906,"src":"3236:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":912,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2033,"src":"3245:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3245:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":909,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1520,1586],"referencedDeclaration":1520,"src":"3223:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address)"}},"id":914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3223:35:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":915,"nodeType":"ExpressionStatement","src":"3223:35:7"}]},"documentation":{"id":902,"nodeType":"StructuredDocumentation","src":"3124:23:7","text":"@inheritdoc IERC721"},"functionSelector":"095ea7b3","id":917,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3161:7:7","nodeType":"FunctionDefinition","parameters":{"id":907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":904,"mutability":"mutable","name":"to","nameLocation":"3177:2:7","nodeType":"VariableDeclaration","scope":917,"src":"3169:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":903,"name":"address","nodeType":"ElementaryTypeName","src":"3169:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":906,"mutability":"mutable","name":"tokenId","nameLocation":"3189:7:7","nodeType":"VariableDeclaration","scope":917,"src":"3181:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":905,"name":"uint256","nodeType":"ElementaryTypeName","src":"3181:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3168:29:7"},"returnParameters":{"id":908,"nodeType":"ParameterList","parameters":[],"src":"3213:0:7"},"scope":1653,"src":"3152:113:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1759],"body":{"id":933,"nodeType":"Block","src":"3375:78:7","statements":[{"expression":{"arguments":[{"id":926,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"3399:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":925,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1652,"src":"3385:13:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3385:22:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":928,"nodeType":"ExpressionStatement","src":"3385:22:7"},{"expression":{"arguments":[{"id":930,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"3438:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":929,"name":"_getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1087,"src":"3425:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":931,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3425:21:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":924,"id":932,"nodeType":"Return","src":"3418:28:7"}]},"documentation":{"id":918,"nodeType":"StructuredDocumentation","src":"3271:23:7","text":"@inheritdoc IERC721"},"functionSelector":"081812fc","id":934,"implemented":true,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"3308:11:7","nodeType":"FunctionDefinition","parameters":{"id":921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":920,"mutability":"mutable","name":"tokenId","nameLocation":"3328:7:7","nodeType":"VariableDeclaration","scope":934,"src":"3320:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":919,"name":"uint256","nodeType":"ElementaryTypeName","src":"3320:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3319:17:7"},"returnParameters":{"id":924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":923,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":934,"src":"3366:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":922,"name":"address","nodeType":"ElementaryTypeName","src":"3366:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3365:9:7"},"scope":1653,"src":"3299:154:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1751],"body":{"id":949,"nodeType":"Block","src":"3562:69:7","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":943,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2033,"src":"3591:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3591:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":945,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":937,"src":"3605:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":946,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":939,"src":"3615:8:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":942,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1623,"src":"3572:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3572:52:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":948,"nodeType":"ExpressionStatement","src":"3572:52:7"}]},"documentation":{"id":935,"nodeType":"StructuredDocumentation","src":"3459:23:7","text":"@inheritdoc IERC721"},"functionSelector":"a22cb465","id":950,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"3496:17:7","nodeType":"FunctionDefinition","parameters":{"id":940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":937,"mutability":"mutable","name":"operator","nameLocation":"3522:8:7","nodeType":"VariableDeclaration","scope":950,"src":"3514:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":936,"name":"address","nodeType":"ElementaryTypeName","src":"3514:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":939,"mutability":"mutable","name":"approved","nameLocation":"3537:8:7","nodeType":"VariableDeclaration","scope":950,"src":"3532:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":938,"name":"bool","nodeType":"ElementaryTypeName","src":"3532:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3513:33:7"},"returnParameters":{"id":941,"nodeType":"ParameterList","parameters":[],"src":"3562:0:7"},"scope":1653,"src":"3487:144:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1769],"body":{"id":966,"nodeType":"Block","src":"3759:59:7","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":960,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":749,"src":"3776:18:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":962,"indexExpression":{"id":961,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":953,"src":"3795:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3776:25:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":964,"indexExpression":{"id":963,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":955,"src":"3802:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3776:35:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":959,"id":965,"nodeType":"Return","src":"3769:42:7"}]},"documentation":{"id":951,"nodeType":"StructuredDocumentation","src":"3637:23:7","text":"@inheritdoc IERC721"},"functionSelector":"e985e9c5","id":967,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"3674:16:7","nodeType":"FunctionDefinition","parameters":{"id":956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":953,"mutability":"mutable","name":"owner","nameLocation":"3699:5:7","nodeType":"VariableDeclaration","scope":967,"src":"3691:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":952,"name":"address","nodeType":"ElementaryTypeName","src":"3691:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":955,"mutability":"mutable","name":"operator","nameLocation":"3714:8:7","nodeType":"VariableDeclaration","scope":967,"src":"3706:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":954,"name":"address","nodeType":"ElementaryTypeName","src":"3706:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3690:33:7"},"returnParameters":{"id":959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":958,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":967,"src":"3753:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":957,"name":"bool","nodeType":"ElementaryTypeName","src":"3753:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3752:6:7"},"scope":1653,"src":"3665:153:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1735],"body":{"id":1012,"nodeType":"Block","src":"3932:498:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":977,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":972,"src":"3946:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3960:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":979,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3952:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":978,"name":"address","nodeType":"ElementaryTypeName","src":"3952:7:7","typeDescriptions":{}}},"id":981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3952:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3946:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":991,"nodeType":"IfStatement","src":"3942:87:7","trueBody":{"id":990,"nodeType":"Block","src":"3964:65:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4015:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":985,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4007:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":984,"name":"address","nodeType":"ElementaryTypeName","src":"4007:7:7","typeDescriptions":{}}},"id":987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4007:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":983,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"3985:21:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3985:33:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":989,"nodeType":"RevertStatement","src":"3978:40:7"}]}},{"assignments":[993],"declarations":[{"constant":false,"id":993,"mutability":"mutable","name":"previousOwner","nameLocation":"4255:13:7","nodeType":"VariableDeclaration","scope":1012,"src":"4247:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":992,"name":"address","nodeType":"ElementaryTypeName","src":"4247:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1000,"initialValue":{"arguments":[{"id":995,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":972,"src":"4279:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":996,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":974,"src":"4283:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":997,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2033,"src":"4292:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":998,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4292:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":994,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"4271:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4271:34:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4247:58:7"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1001,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":993,"src":"4319:13:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1002,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":970,"src":"4336:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4319:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1011,"nodeType":"IfStatement","src":"4315:109:7","trueBody":{"id":1010,"nodeType":"Block","src":"4342:82:7","statements":[{"errorCall":{"arguments":[{"id":1005,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":970,"src":"4384:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1006,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":974,"src":"4390:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1007,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":993,"src":"4399:13:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1004,"name":"ERC721IncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":621,"src":"4363:20:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address) pure"}},"id":1008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4363:50:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1009,"nodeType":"RevertStatement","src":"4356:57:7"}]}}]},"documentation":{"id":968,"nodeType":"StructuredDocumentation","src":"3824:23:7","text":"@inheritdoc IERC721"},"functionSelector":"23b872dd","id":1013,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3861:12:7","nodeType":"FunctionDefinition","parameters":{"id":975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":970,"mutability":"mutable","name":"from","nameLocation":"3882:4:7","nodeType":"VariableDeclaration","scope":1013,"src":"3874:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":969,"name":"address","nodeType":"ElementaryTypeName","src":"3874:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":972,"mutability":"mutable","name":"to","nameLocation":"3896:2:7","nodeType":"VariableDeclaration","scope":1013,"src":"3888:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":971,"name":"address","nodeType":"ElementaryTypeName","src":"3888:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":974,"mutability":"mutable","name":"tokenId","nameLocation":"3908:7:7","nodeType":"VariableDeclaration","scope":1013,"src":"3900:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":973,"name":"uint256","nodeType":"ElementaryTypeName","src":"3900:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3873:43:7"},"returnParameters":{"id":976,"nodeType":"ParameterList","parameters":[],"src":"3932:0:7"},"scope":1653,"src":"3852:578:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1725],"body":{"id":1030,"nodeType":"Block","src":"4540:56:7","statements":[{"expression":{"arguments":[{"id":1024,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1016,"src":"4567:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1025,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1018,"src":"4573:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1026,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1020,"src":"4577:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4586:2:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1023,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[1031,1061],"referencedDeclaration":1061,"src":"4550:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":1028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4550:39:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1029,"nodeType":"ExpressionStatement","src":"4550:39:7"}]},"documentation":{"id":1014,"nodeType":"StructuredDocumentation","src":"4436:23:7","text":"@inheritdoc IERC721"},"functionSelector":"42842e0e","id":1031,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4473:16:7","nodeType":"FunctionDefinition","parameters":{"id":1021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1016,"mutability":"mutable","name":"from","nameLocation":"4498:4:7","nodeType":"VariableDeclaration","scope":1031,"src":"4490:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1015,"name":"address","nodeType":"ElementaryTypeName","src":"4490:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1018,"mutability":"mutable","name":"to","nameLocation":"4512:2:7","nodeType":"VariableDeclaration","scope":1031,"src":"4504:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1017,"name":"address","nodeType":"ElementaryTypeName","src":"4504:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1020,"mutability":"mutable","name":"tokenId","nameLocation":"4524:7:7","nodeType":"VariableDeclaration","scope":1031,"src":"4516:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1019,"name":"uint256","nodeType":"ElementaryTypeName","src":"4516:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4489:43:7"},"returnParameters":{"id":1022,"nodeType":"ParameterList","parameters":[],"src":"4540:0:7"},"scope":1653,"src":"4464:132:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1715],"body":{"id":1060,"nodeType":"Block","src":"4733:130:7","statements":[{"expression":{"arguments":[{"id":1044,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1034,"src":"4756:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1045,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1036,"src":"4762:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1046,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1038,"src":"4766:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1043,"name":"transferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1013,"src":"4743:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4743:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1048,"nodeType":"ExpressionStatement","src":"4743:31:7"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1052,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2033,"src":"4818:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4818:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1054,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1034,"src":"4832:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1055,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1036,"src":"4838:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1056,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1038,"src":"4842:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1057,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1040,"src":"4851:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1049,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"4784:11:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$2021_$","typeString":"type(library ERC721Utils)"}},"id":1051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4796:21:7","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":2020,"src":"4784:33:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":1058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4784:72:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1059,"nodeType":"ExpressionStatement","src":"4784:72:7"}]},"documentation":{"id":1032,"nodeType":"StructuredDocumentation","src":"4602:23:7","text":"@inheritdoc IERC721"},"functionSelector":"b88d4fde","id":1061,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4639:16:7","nodeType":"FunctionDefinition","parameters":{"id":1041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1034,"mutability":"mutable","name":"from","nameLocation":"4664:4:7","nodeType":"VariableDeclaration","scope":1061,"src":"4656:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1033,"name":"address","nodeType":"ElementaryTypeName","src":"4656:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1036,"mutability":"mutable","name":"to","nameLocation":"4678:2:7","nodeType":"VariableDeclaration","scope":1061,"src":"4670:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1035,"name":"address","nodeType":"ElementaryTypeName","src":"4670:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1038,"mutability":"mutable","name":"tokenId","nameLocation":"4690:7:7","nodeType":"VariableDeclaration","scope":1061,"src":"4682:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1037,"name":"uint256","nodeType":"ElementaryTypeName","src":"4682:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1040,"mutability":"mutable","name":"data","nameLocation":"4712:4:7","nodeType":"VariableDeclaration","scope":1061,"src":"4699:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1039,"name":"bytes","nodeType":"ElementaryTypeName","src":"4699:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4655:62:7"},"returnParameters":{"id":1042,"nodeType":"ParameterList","parameters":[],"src":"4733:0:7"},"scope":1653,"src":"4630:233:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1073,"nodeType":"Block","src":"5453:40:7","statements":[{"expression":{"baseExpression":{"id":1069,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":735,"src":"5470:7:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1071,"indexExpression":{"id":1070,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1064,"src":"5478:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5470:16:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1068,"id":1072,"nodeType":"Return","src":"5463:23:7"}]},"documentation":{"id":1062,"nodeType":"StructuredDocumentation","src":"4869:504:7","text":" @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC-721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."},"id":1074,"implemented":true,"kind":"function","modifiers":[],"name":"_ownerOf","nameLocation":"5387:8:7","nodeType":"FunctionDefinition","parameters":{"id":1065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1064,"mutability":"mutable","name":"tokenId","nameLocation":"5404:7:7","nodeType":"VariableDeclaration","scope":1074,"src":"5396:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1063,"name":"uint256","nodeType":"ElementaryTypeName","src":"5396:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5395:17:7"},"returnParameters":{"id":1068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1067,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1074,"src":"5444:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1066,"name":"address","nodeType":"ElementaryTypeName","src":"5444:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5443:9:7"},"scope":1653,"src":"5378:115:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1086,"nodeType":"Block","src":"5688:48:7","statements":[{"expression":{"baseExpression":{"id":1082,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":743,"src":"5705:15:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1084,"indexExpression":{"id":1083,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1077,"src":"5721:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5705:24:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1081,"id":1085,"nodeType":"Return","src":"5698:31:7"}]},"documentation":{"id":1075,"nodeType":"StructuredDocumentation","src":"5499:105:7","text":" @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."},"id":1087,"implemented":true,"kind":"function","modifiers":[],"name":"_getApproved","nameLocation":"5618:12:7","nodeType":"FunctionDefinition","parameters":{"id":1078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1077,"mutability":"mutable","name":"tokenId","nameLocation":"5639:7:7","nodeType":"VariableDeclaration","scope":1087,"src":"5631:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1076,"name":"uint256","nodeType":"ElementaryTypeName","src":"5631:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5630:17:7"},"returnParameters":{"id":1081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1080,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1087,"src":"5679:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1079,"name":"address","nodeType":"ElementaryTypeName","src":"5679:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5678:9:7"},"scope":1653,"src":"5609:127:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1122,"nodeType":"Block","src":"6156:163:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1099,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1092,"src":"6185:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6204:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1101,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6196:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1100,"name":"address","nodeType":"ElementaryTypeName","src":"6196:7:7","typeDescriptions":{}}},"id":1103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6196:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6185:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1105,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1090,"src":"6223:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1106,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1092,"src":"6232:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6223:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1109,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1090,"src":"6260:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1110,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1092,"src":"6267:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1108,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"6243:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6243:32:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6223:52:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1114,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1094,"src":"6292:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1113,"name":"_getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1087,"src":"6279:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6279:21:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1116,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1092,"src":"6304:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6279:32:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6223:88:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1119,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6222:90:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6185:127:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1098,"id":1121,"nodeType":"Return","src":"6166:146:7"}]},"documentation":{"id":1088,"nodeType":"StructuredDocumentation","src":"5742:300:7","text":" @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."},"id":1123,"implemented":true,"kind":"function","modifiers":[],"name":"_isAuthorized","nameLocation":"6056:13:7","nodeType":"FunctionDefinition","parameters":{"id":1095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1090,"mutability":"mutable","name":"owner","nameLocation":"6078:5:7","nodeType":"VariableDeclaration","scope":1123,"src":"6070:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1089,"name":"address","nodeType":"ElementaryTypeName","src":"6070:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1092,"mutability":"mutable","name":"spender","nameLocation":"6093:7:7","nodeType":"VariableDeclaration","scope":1123,"src":"6085:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1091,"name":"address","nodeType":"ElementaryTypeName","src":"6085:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1094,"mutability":"mutable","name":"tokenId","nameLocation":"6110:7:7","nodeType":"VariableDeclaration","scope":1123,"src":"6102:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1093,"name":"uint256","nodeType":"ElementaryTypeName","src":"6102:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6069:49:7"},"returnParameters":{"id":1098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1097,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1123,"src":"6150:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1096,"name":"bool","nodeType":"ElementaryTypeName","src":"6150:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6149:6:7"},"scope":1653,"src":"6047:272:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1159,"nodeType":"Block","src":"6848:271:7","statements":[{"condition":{"id":1138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6862:39:7","subExpression":{"arguments":[{"id":1134,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"6877:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1135,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"6884:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1136,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"6893:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1133,"name":"_isAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1123,"src":"6863:13:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) view returns (bool)"}},"id":1137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6863:38:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1158,"nodeType":"IfStatement","src":"6858:255:7","trueBody":{"id":1157,"nodeType":"Block","src":"6903:210:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1139,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"6921:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6938:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1141,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6930:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1140,"name":"address","nodeType":"ElementaryTypeName","src":"6930:7:7","typeDescriptions":{}}},"id":1143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6930:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6921:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1155,"nodeType":"Block","src":"7019:84:7","statements":[{"errorCall":{"arguments":[{"id":1151,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"7071:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1152,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"7080:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1150,"name":"ERC721InsufficientApproval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":638,"src":"7044:26:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) pure"}},"id":1153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7044:44:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1154,"nodeType":"RevertStatement","src":"7037:51:7"}]},"id":1156,"nodeType":"IfStatement","src":"6917:186:7","trueBody":{"id":1149,"nodeType":"Block","src":"6942:71:7","statements":[{"errorCall":{"arguments":[{"id":1146,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"6990:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1145,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":612,"src":"6967:22:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6967:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1148,"nodeType":"RevertStatement","src":"6960:38:7"}]}}]}}]},"documentation":{"id":1124,"nodeType":"StructuredDocumentation","src":"6325:421:7","text":" @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if:\n - `spender` does not have approval from `owner` for `tokenId`.\n - `spender` does not have approval to manage all of `owner`'s assets.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."},"id":1160,"implemented":true,"kind":"function","modifiers":[],"name":"_checkAuthorized","nameLocation":"6760:16:7","nodeType":"FunctionDefinition","parameters":{"id":1131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1126,"mutability":"mutable","name":"owner","nameLocation":"6785:5:7","nodeType":"VariableDeclaration","scope":1160,"src":"6777:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1125,"name":"address","nodeType":"ElementaryTypeName","src":"6777:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1128,"mutability":"mutable","name":"spender","nameLocation":"6800:7:7","nodeType":"VariableDeclaration","scope":1160,"src":"6792:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1127,"name":"address","nodeType":"ElementaryTypeName","src":"6792:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1130,"mutability":"mutable","name":"tokenId","nameLocation":"6817:7:7","nodeType":"VariableDeclaration","scope":1160,"src":"6809:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1129,"name":"uint256","nodeType":"ElementaryTypeName","src":"6809:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6776:49:7"},"returnParameters":{"id":1132,"nodeType":"ParameterList","parameters":[],"src":"6848:0:7"},"scope":1653,"src":"6751:368:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1175,"nodeType":"Block","src":"7836:78:7","statements":[{"id":1174,"nodeType":"UncheckedBlock","src":"7846:62:7","statements":[{"expression":{"id":1172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1168,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":739,"src":"7870:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1170,"indexExpression":{"id":1169,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1163,"src":"7880:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7870:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1171,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"7892:5:7","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"7870:27:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1173,"nodeType":"ExpressionStatement","src":"7870:27:7"}]}]},"documentation":{"id":1161,"nodeType":"StructuredDocumentation","src":"7125:631:7","text":" @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."},"id":1176,"implemented":true,"kind":"function","modifiers":[],"name":"_increaseBalance","nameLocation":"7770:16:7","nodeType":"FunctionDefinition","parameters":{"id":1166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1163,"mutability":"mutable","name":"account","nameLocation":"7795:7:7","nodeType":"VariableDeclaration","scope":1176,"src":"7787:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1162,"name":"address","nodeType":"ElementaryTypeName","src":"7787:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1165,"mutability":"mutable","name":"value","nameLocation":"7812:5:7","nodeType":"VariableDeclaration","scope":1176,"src":"7804:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1164,"name":"uint128","nodeType":"ElementaryTypeName","src":"7804:7:7","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"7786:32:7"},"returnParameters":{"id":1167,"nodeType":"ParameterList","parameters":[],"src":"7836:0:7"},"scope":1653,"src":"7761:153:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1265,"nodeType":"Block","src":"8602:700:7","statements":[{"assignments":[1189],"declarations":[{"constant":false,"id":1189,"mutability":"mutable","name":"from","nameLocation":"8620:4:7","nodeType":"VariableDeclaration","scope":1265,"src":"8612:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1188,"name":"address","nodeType":"ElementaryTypeName","src":"8612:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1193,"initialValue":{"arguments":[{"id":1191,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1181,"src":"8636:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1190,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1074,"src":"8627:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8627:17:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8612:32:7"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1194,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1183,"src":"8704:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8720:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1196,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8712:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1195,"name":"address","nodeType":"ElementaryTypeName","src":"8712:7:7","typeDescriptions":{}}},"id":1198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8712:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8704:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1207,"nodeType":"IfStatement","src":"8700:86:7","trueBody":{"id":1206,"nodeType":"Block","src":"8724:62:7","statements":[{"expression":{"arguments":[{"id":1201,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1189,"src":"8755:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1202,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1183,"src":"8761:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1203,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1181,"src":"8767:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1200,"name":"_checkAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1160,"src":"8738:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) view"}},"id":1204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8738:37:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1205,"nodeType":"ExpressionStatement","src":"8738:37:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1208,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1189,"src":"8830:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8846:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1210,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8838:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1209,"name":"address","nodeType":"ElementaryTypeName","src":"8838:7:7","typeDescriptions":{}}},"id":1212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8838:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8830:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1235,"nodeType":"IfStatement","src":"8826:256:7","trueBody":{"id":1234,"nodeType":"Block","src":"8850:232:7","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8963:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1216,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8955:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1215,"name":"address","nodeType":"ElementaryTypeName","src":"8955:7:7","typeDescriptions":{}}},"id":1218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8955:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1219,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1181,"src":"8967:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":1222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8984:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1221,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8976:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1220,"name":"address","nodeType":"ElementaryTypeName","src":"8976:7:7","typeDescriptions":{}}},"id":1223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8976:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"66616c7365","id":1224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8988:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1214,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1520,1586],"referencedDeclaration":1586,"src":"8946:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,uint256,address,bool)"}},"id":1225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8946:48:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1226,"nodeType":"ExpressionStatement","src":"8946:48:7"},{"id":1233,"nodeType":"UncheckedBlock","src":"9009:63:7","statements":[{"expression":{"id":1231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1227,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":739,"src":"9037:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1229,"indexExpression":{"id":1228,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1189,"src":"9047:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9037:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":1230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9056:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9037:20:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1232,"nodeType":"ExpressionStatement","src":"9037:20:7"}]}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1236,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"9096:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9110:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1238,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9102:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1237,"name":"address","nodeType":"ElementaryTypeName","src":"9102:7:7","typeDescriptions":{}}},"id":1240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9102:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9096:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1250,"nodeType":"IfStatement","src":"9092:107:7","trueBody":{"id":1249,"nodeType":"Block","src":"9114:85:7","statements":[{"id":1248,"nodeType":"UncheckedBlock","src":"9128:61:7","statements":[{"expression":{"id":1246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1242,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":739,"src":"9156:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1244,"indexExpression":{"id":1243,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"9166:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9156:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9173:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9156:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1247,"nodeType":"ExpressionStatement","src":"9156:18:7"}]}]}},{"expression":{"id":1255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1251,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":735,"src":"9209:7:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1253,"indexExpression":{"id":1252,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1181,"src":"9217:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9209:16:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1254,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"9228:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9209:21:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1256,"nodeType":"ExpressionStatement","src":"9209:21:7"},{"eventCall":{"arguments":[{"id":1258,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1189,"src":"9255:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1259,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"9261:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1260,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1181,"src":"9265:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1257,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1669,"src":"9246:8:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9246:27:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1262,"nodeType":"EmitStatement","src":"9241:32:7"},{"expression":{"id":1263,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1189,"src":"9291:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1187,"id":1264,"nodeType":"Return","src":"9284:11:7"}]},"documentation":{"id":1177,"nodeType":"StructuredDocumentation","src":"7920:582:7","text":" @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."},"id":1266,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"8516:7:7","nodeType":"FunctionDefinition","parameters":{"id":1184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1179,"mutability":"mutable","name":"to","nameLocation":"8532:2:7","nodeType":"VariableDeclaration","scope":1266,"src":"8524:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1178,"name":"address","nodeType":"ElementaryTypeName","src":"8524:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1181,"mutability":"mutable","name":"tokenId","nameLocation":"8544:7:7","nodeType":"VariableDeclaration","scope":1266,"src":"8536:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1180,"name":"uint256","nodeType":"ElementaryTypeName","src":"8536:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1183,"mutability":"mutable","name":"auth","nameLocation":"8561:4:7","nodeType":"VariableDeclaration","scope":1266,"src":"8553:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1182,"name":"address","nodeType":"ElementaryTypeName","src":"8553:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8523:43:7"},"returnParameters":{"id":1187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1186,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1266,"src":"8593:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1185,"name":"address","nodeType":"ElementaryTypeName","src":"8593:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8592:9:7"},"scope":1653,"src":"8507:795:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1315,"nodeType":"Block","src":"9677:274:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1274,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1269,"src":"9691:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9705:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1276,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9697:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1275,"name":"address","nodeType":"ElementaryTypeName","src":"9697:7:7","typeDescriptions":{}}},"id":1278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9697:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9691:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1288,"nodeType":"IfStatement","src":"9687:87:7","trueBody":{"id":1287,"nodeType":"Block","src":"9709:65:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9760:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1282,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9752:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1281,"name":"address","nodeType":"ElementaryTypeName","src":"9752:7:7","typeDescriptions":{}}},"id":1284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9752:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1280,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"9730:21:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9730:33:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1286,"nodeType":"RevertStatement","src":"9723:40:7"}]}},{"assignments":[1290],"declarations":[{"constant":false,"id":1290,"mutability":"mutable","name":"previousOwner","nameLocation":"9791:13:7","nodeType":"VariableDeclaration","scope":1315,"src":"9783:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1289,"name":"address","nodeType":"ElementaryTypeName","src":"9783:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1299,"initialValue":{"arguments":[{"id":1292,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1269,"src":"9815:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1293,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1271,"src":"9819:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":1296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9836:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1295,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9828:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1294,"name":"address","nodeType":"ElementaryTypeName","src":"9828:7:7","typeDescriptions":{}}},"id":1297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9828:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1291,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"9807:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":1298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9807:32:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"9783:56:7"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1300,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1290,"src":"9853:13:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9878:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1302,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9870:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1301,"name":"address","nodeType":"ElementaryTypeName","src":"9870:7:7","typeDescriptions":{}}},"id":1304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9870:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9853:27:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1314,"nodeType":"IfStatement","src":"9849:96:7","trueBody":{"id":1313,"nodeType":"Block","src":"9882:63:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9931:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1308,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9923:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1307,"name":"address","nodeType":"ElementaryTypeName","src":"9923:7:7","typeDescriptions":{}}},"id":1310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9923:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1306,"name":"ERC721InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"9903:19:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9903:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1312,"nodeType":"RevertStatement","src":"9896:38:7"}]}}]},"documentation":{"id":1267,"nodeType":"StructuredDocumentation","src":"9308:311:7","text":" @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."},"id":1316,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"9633:5:7","nodeType":"FunctionDefinition","parameters":{"id":1272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1269,"mutability":"mutable","name":"to","nameLocation":"9647:2:7","nodeType":"VariableDeclaration","scope":1316,"src":"9639:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1268,"name":"address","nodeType":"ElementaryTypeName","src":"9639:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1271,"mutability":"mutable","name":"tokenId","nameLocation":"9659:7:7","nodeType":"VariableDeclaration","scope":1316,"src":"9651:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1270,"name":"uint256","nodeType":"ElementaryTypeName","src":"9651:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9638:29:7"},"returnParameters":{"id":1273,"nodeType":"ParameterList","parameters":[],"src":"9677:0:7"},"scope":1653,"src":"9624:327:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1330,"nodeType":"Block","src":"10359:43:7","statements":[{"expression":{"arguments":[{"id":1325,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"10379:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1326,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1321,"src":"10383:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10392:2:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1324,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[1331,1361],"referencedDeclaration":1361,"src":"10369:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":1328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10369:26:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1329,"nodeType":"ExpressionStatement","src":"10369:26:7"}]},"documentation":{"id":1317,"nodeType":"StructuredDocumentation","src":"9957:340:7","text":" @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":1331,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"10311:9:7","nodeType":"FunctionDefinition","parameters":{"id":1322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1319,"mutability":"mutable","name":"to","nameLocation":"10329:2:7","nodeType":"VariableDeclaration","scope":1331,"src":"10321:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1318,"name":"address","nodeType":"ElementaryTypeName","src":"10321:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1321,"mutability":"mutable","name":"tokenId","nameLocation":"10341:7:7","nodeType":"VariableDeclaration","scope":1331,"src":"10333:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1320,"name":"uint256","nodeType":"ElementaryTypeName","src":"10333:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10320:29:7"},"returnParameters":{"id":1323,"nodeType":"ParameterList","parameters":[],"src":"10359:0:7"},"scope":1653,"src":"10302:100:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1360,"nodeType":"Block","src":"10707:123:7","statements":[{"expression":{"arguments":[{"id":1342,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1334,"src":"10723:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1343,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1336,"src":"10727:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1341,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1316,"src":"10717:5:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10717:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1345,"nodeType":"ExpressionStatement","src":"10717:18:7"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1349,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2033,"src":"10779:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10779:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10801:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1352,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10793:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1351,"name":"address","nodeType":"ElementaryTypeName","src":"10793:7:7","typeDescriptions":{}}},"id":1354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10793:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1355,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1334,"src":"10805:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1356,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1336,"src":"10809:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1357,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1338,"src":"10818:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1346,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"10745:11:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$2021_$","typeString":"type(library ERC721Utils)"}},"id":1348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10757:21:7","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":2020,"src":"10745:33:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":1358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10745:78:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1359,"nodeType":"ExpressionStatement","src":"10745:78:7"}]},"documentation":{"id":1332,"nodeType":"StructuredDocumentation","src":"10408:210:7","text":" @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":1361,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"10632:9:7","nodeType":"FunctionDefinition","parameters":{"id":1339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1334,"mutability":"mutable","name":"to","nameLocation":"10650:2:7","nodeType":"VariableDeclaration","scope":1361,"src":"10642:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1333,"name":"address","nodeType":"ElementaryTypeName","src":"10642:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1336,"mutability":"mutable","name":"tokenId","nameLocation":"10662:7:7","nodeType":"VariableDeclaration","scope":1361,"src":"10654:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1335,"name":"uint256","nodeType":"ElementaryTypeName","src":"10654:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1338,"mutability":"mutable","name":"data","nameLocation":"10684:4:7","nodeType":"VariableDeclaration","scope":1361,"src":"10671:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1337,"name":"bytes","nodeType":"ElementaryTypeName","src":"10671:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10641:48:7"},"returnParameters":{"id":1340,"nodeType":"ParameterList","parameters":[],"src":"10707:0:7"},"scope":1653,"src":"10623:207:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1393,"nodeType":"Block","src":"11197:186:7","statements":[{"assignments":[1368],"declarations":[{"constant":false,"id":1368,"mutability":"mutable","name":"previousOwner","nameLocation":"11215:13:7","nodeType":"VariableDeclaration","scope":1393,"src":"11207:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1367,"name":"address","nodeType":"ElementaryTypeName","src":"11207:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1380,"initialValue":{"arguments":[{"arguments":[{"hexValue":"30","id":1372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11247:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1371,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11239:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1370,"name":"address","nodeType":"ElementaryTypeName","src":"11239:7:7","typeDescriptions":{}}},"id":1373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11239:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1374,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1364,"src":"11251:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":1377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11268:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1376,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11260:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1375,"name":"address","nodeType":"ElementaryTypeName","src":"11260:7:7","typeDescriptions":{}}},"id":1378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11260:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1369,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"11231:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":1379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11231:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"11207:64:7"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1381,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1368,"src":"11285:13:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11310:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1383,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11302:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1382,"name":"address","nodeType":"ElementaryTypeName","src":"11302:7:7","typeDescriptions":{}}},"id":1385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11302:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11285:27:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1392,"nodeType":"IfStatement","src":"11281:96:7","trueBody":{"id":1391,"nodeType":"Block","src":"11314:63:7","statements":[{"errorCall":{"arguments":[{"id":1388,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1364,"src":"11358:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1387,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":612,"src":"11335:22:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11335:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1390,"nodeType":"RevertStatement","src":"11328:38:7"}]}}]},"documentation":{"id":1362,"nodeType":"StructuredDocumentation","src":"10836:315:7","text":" @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."},"id":1394,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"11165:5:7","nodeType":"FunctionDefinition","parameters":{"id":1365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1364,"mutability":"mutable","name":"tokenId","nameLocation":"11179:7:7","nodeType":"VariableDeclaration","scope":1394,"src":"11171:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1363,"name":"uint256","nodeType":"ElementaryTypeName","src":"11171:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11170:17:7"},"returnParameters":{"id":1366,"nodeType":"ParameterList","parameters":[],"src":"11197:0:7"},"scope":1653,"src":"11156:227:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1453,"nodeType":"Block","src":"11778:389:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1404,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1399,"src":"11792:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11806:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1406,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11798:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1405,"name":"address","nodeType":"ElementaryTypeName","src":"11798:7:7","typeDescriptions":{}}},"id":1408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11798:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11792:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1418,"nodeType":"IfStatement","src":"11788:87:7","trueBody":{"id":1417,"nodeType":"Block","src":"11810:65:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11861:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1412,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11853:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1411,"name":"address","nodeType":"ElementaryTypeName","src":"11853:7:7","typeDescriptions":{}}},"id":1414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11853:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1410,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"11831:21:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11831:33:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1416,"nodeType":"RevertStatement","src":"11824:40:7"}]}},{"assignments":[1420],"declarations":[{"constant":false,"id":1420,"mutability":"mutable","name":"previousOwner","nameLocation":"11892:13:7","nodeType":"VariableDeclaration","scope":1453,"src":"11884:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1419,"name":"address","nodeType":"ElementaryTypeName","src":"11884:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1429,"initialValue":{"arguments":[{"id":1422,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1399,"src":"11916:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1423,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1401,"src":"11920:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":1426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11937:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1425,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11929:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1424,"name":"address","nodeType":"ElementaryTypeName","src":"11929:7:7","typeDescriptions":{}}},"id":1427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11929:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1421,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"11908:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":1428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11908:32:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"11884:56:7"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1430,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1420,"src":"11954:13:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11979:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1432,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11971:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1431,"name":"address","nodeType":"ElementaryTypeName","src":"11971:7:7","typeDescriptions":{}}},"id":1434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11971:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11954:27:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1441,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1420,"src":"12056:13:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1442,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1397,"src":"12073:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12056:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1451,"nodeType":"IfStatement","src":"12052:109:7","trueBody":{"id":1450,"nodeType":"Block","src":"12079:82:7","statements":[{"errorCall":{"arguments":[{"id":1445,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1397,"src":"12121:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1446,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1401,"src":"12127:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1447,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1420,"src":"12136:13:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1444,"name":"ERC721IncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":621,"src":"12100:20:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address) pure"}},"id":1448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12100:50:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1449,"nodeType":"RevertStatement","src":"12093:57:7"}]}},"id":1452,"nodeType":"IfStatement","src":"11950:211:7","trueBody":{"id":1440,"nodeType":"Block","src":"11983:63:7","statements":[{"errorCall":{"arguments":[{"id":1437,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1401,"src":"12027:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1436,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":612,"src":"12004:22:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12004:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1439,"nodeType":"RevertStatement","src":"11997:38:7"}]}}]},"documentation":{"id":1395,"nodeType":"StructuredDocumentation","src":"11389:313:7","text":" @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."},"id":1454,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"11716:9:7","nodeType":"FunctionDefinition","parameters":{"id":1402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1397,"mutability":"mutable","name":"from","nameLocation":"11734:4:7","nodeType":"VariableDeclaration","scope":1454,"src":"11726:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1396,"name":"address","nodeType":"ElementaryTypeName","src":"11726:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1399,"mutability":"mutable","name":"to","nameLocation":"11748:2:7","nodeType":"VariableDeclaration","scope":1454,"src":"11740:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1398,"name":"address","nodeType":"ElementaryTypeName","src":"11740:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1401,"mutability":"mutable","name":"tokenId","nameLocation":"11760:7:7","nodeType":"VariableDeclaration","scope":1454,"src":"11752:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1400,"name":"uint256","nodeType":"ElementaryTypeName","src":"11752:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11725:43:7"},"returnParameters":{"id":1403,"nodeType":"ParameterList","parameters":[],"src":"11778:0:7"},"scope":1653,"src":"11707:460:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1471,"nodeType":"Block","src":"13176:53:7","statements":[{"expression":{"arguments":[{"id":1465,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1457,"src":"13200:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1466,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1459,"src":"13206:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1467,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1461,"src":"13210:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13219:2:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1464,"name":"_safeTransfer","nodeType":"Identifier","overloadedDeclarations":[1472,1502],"referencedDeclaration":1502,"src":"13186:13:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":1469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13186:36:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1470,"nodeType":"ExpressionStatement","src":"13186:36:7"}]},"documentation":{"id":1455,"nodeType":"StructuredDocumentation","src":"12173:923:7","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC-721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":1472,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"13110:13:7","nodeType":"FunctionDefinition","parameters":{"id":1462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1457,"mutability":"mutable","name":"from","nameLocation":"13132:4:7","nodeType":"VariableDeclaration","scope":1472,"src":"13124:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1456,"name":"address","nodeType":"ElementaryTypeName","src":"13124:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1459,"mutability":"mutable","name":"to","nameLocation":"13146:2:7","nodeType":"VariableDeclaration","scope":1472,"src":"13138:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1458,"name":"address","nodeType":"ElementaryTypeName","src":"13138:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1461,"mutability":"mutable","name":"tokenId","nameLocation":"13158:7:7","nodeType":"VariableDeclaration","scope":1472,"src":"13150:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1460,"name":"uint256","nodeType":"ElementaryTypeName","src":"13150:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13123:43:7"},"returnParameters":{"id":1463,"nodeType":"ParameterList","parameters":[],"src":"13176:0:7"},"scope":1653,"src":"13101:128:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1501,"nodeType":"Block","src":"13568:127:7","statements":[{"expression":{"arguments":[{"id":1485,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1475,"src":"13588:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1486,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1477,"src":"13594:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1487,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"13598:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1484,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1454,"src":"13578:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13578:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1489,"nodeType":"ExpressionStatement","src":"13578:28:7"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1493,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2033,"src":"13650:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13650:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1495,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1475,"src":"13664:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1496,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1477,"src":"13670:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1497,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"13674:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1498,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1481,"src":"13683:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1490,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"13616:11:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$2021_$","typeString":"type(library ERC721Utils)"}},"id":1492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13628:21:7","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":2020,"src":"13616:33:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":1499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13616:72:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1500,"nodeType":"ExpressionStatement","src":"13616:72:7"}]},"documentation":{"id":1473,"nodeType":"StructuredDocumentation","src":"13235:226:7","text":" @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":1502,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"13475:13:7","nodeType":"FunctionDefinition","parameters":{"id":1482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1475,"mutability":"mutable","name":"from","nameLocation":"13497:4:7","nodeType":"VariableDeclaration","scope":1502,"src":"13489:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1474,"name":"address","nodeType":"ElementaryTypeName","src":"13489:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1477,"mutability":"mutable","name":"to","nameLocation":"13511:2:7","nodeType":"VariableDeclaration","scope":1502,"src":"13503:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1476,"name":"address","nodeType":"ElementaryTypeName","src":"13503:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1479,"mutability":"mutable","name":"tokenId","nameLocation":"13523:7:7","nodeType":"VariableDeclaration","scope":1502,"src":"13515:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1478,"name":"uint256","nodeType":"ElementaryTypeName","src":"13515:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1481,"mutability":"mutable","name":"data","nameLocation":"13545:4:7","nodeType":"VariableDeclaration","scope":1502,"src":"13532:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1480,"name":"bytes","nodeType":"ElementaryTypeName","src":"13532:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"13488:62:7"},"returnParameters":{"id":1483,"nodeType":"ParameterList","parameters":[],"src":"13568:0:7"},"scope":1653,"src":"13466:229:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1519,"nodeType":"Block","src":"14208:50:7","statements":[{"expression":{"arguments":[{"id":1513,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1505,"src":"14227:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1514,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1507,"src":"14231:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1515,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1509,"src":"14240:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"74727565","id":1516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14246:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1512,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1520,1586],"referencedDeclaration":1586,"src":"14218:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,uint256,address,bool)"}},"id":1517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14218:33:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1518,"nodeType":"ExpressionStatement","src":"14218:33:7"}]},"documentation":{"id":1503,"nodeType":"StructuredDocumentation","src":"13701:432:7","text":" @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":1520,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"14147:8:7","nodeType":"FunctionDefinition","parameters":{"id":1510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1505,"mutability":"mutable","name":"to","nameLocation":"14164:2:7","nodeType":"VariableDeclaration","scope":1520,"src":"14156:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1504,"name":"address","nodeType":"ElementaryTypeName","src":"14156:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1507,"mutability":"mutable","name":"tokenId","nameLocation":"14176:7:7","nodeType":"VariableDeclaration","scope":1520,"src":"14168:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1506,"name":"uint256","nodeType":"ElementaryTypeName","src":"14168:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1509,"mutability":"mutable","name":"auth","nameLocation":"14193:4:7","nodeType":"VariableDeclaration","scope":1520,"src":"14185:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1508,"name":"address","nodeType":"ElementaryTypeName","src":"14185:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14155:43:7"},"returnParameters":{"id":1511,"nodeType":"ParameterList","parameters":[],"src":"14208:0:7"},"scope":1653,"src":"14138:120:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1585,"nodeType":"Block","src":"14534:568:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1532,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1529,"src":"14600:9:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1533,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1527,"src":"14613:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14629:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1535,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14621:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1534,"name":"address","nodeType":"ElementaryTypeName","src":"14621:7:7","typeDescriptions":{}}},"id":1537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14621:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14613:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14600:31:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1578,"nodeType":"IfStatement","src":"14596:460:7","trueBody":{"id":1577,"nodeType":"Block","src":"14633:423:7","statements":[{"assignments":[1541],"declarations":[{"constant":false,"id":1541,"mutability":"mutable","name":"owner","nameLocation":"14655:5:7","nodeType":"VariableDeclaration","scope":1577,"src":"14647:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1540,"name":"address","nodeType":"ElementaryTypeName","src":"14647:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1545,"initialValue":{"arguments":[{"id":1543,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1525,"src":"14677:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1542,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1652,"src":"14663:13:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14663:22:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"14647:38:7"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1546,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1527,"src":"14813:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14829:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1548,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14821:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1547,"name":"address","nodeType":"ElementaryTypeName","src":"14821:7:7","typeDescriptions":{}}},"id":1550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14821:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14813:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1552,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1541,"src":"14835:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1553,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1527,"src":"14844:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14835:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14813:35:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":1560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14852:30:7","subExpression":{"arguments":[{"id":1557,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1541,"src":"14870:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1558,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1527,"src":"14877:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1556,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"14853:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14853:29:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14813:69:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1567,"nodeType":"IfStatement","src":"14809:142:7","trueBody":{"id":1566,"nodeType":"Block","src":"14884:67:7","statements":[{"errorCall":{"arguments":[{"id":1563,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1527,"src":"14931:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1562,"name":"ERC721InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"14909:21:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14909:27:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1565,"nodeType":"RevertStatement","src":"14902:34:7"}]}},{"condition":{"id":1568,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1529,"src":"14969:9:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1576,"nodeType":"IfStatement","src":"14965:81:7","trueBody":{"id":1575,"nodeType":"Block","src":"14980:66:7","statements":[{"eventCall":{"arguments":[{"id":1570,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1541,"src":"15012:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1571,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1523,"src":"15019:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1572,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1525,"src":"15023:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1569,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1678,"src":"15003:8:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15003:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1574,"nodeType":"EmitStatement","src":"14998:33:7"}]}}]}},{"expression":{"id":1583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1579,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":743,"src":"15066:15:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1581,"indexExpression":{"id":1580,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1525,"src":"15082:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15066:24:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1582,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1523,"src":"15093:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15066:29:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1584,"nodeType":"ExpressionStatement","src":"15066:29:7"}]},"documentation":{"id":1521,"nodeType":"StructuredDocumentation","src":"14264:171:7","text":" @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."},"id":1586,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"14449:8:7","nodeType":"FunctionDefinition","parameters":{"id":1530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1523,"mutability":"mutable","name":"to","nameLocation":"14466:2:7","nodeType":"VariableDeclaration","scope":1586,"src":"14458:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1522,"name":"address","nodeType":"ElementaryTypeName","src":"14458:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1525,"mutability":"mutable","name":"tokenId","nameLocation":"14478:7:7","nodeType":"VariableDeclaration","scope":1586,"src":"14470:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1524,"name":"uint256","nodeType":"ElementaryTypeName","src":"14470:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1527,"mutability":"mutable","name":"auth","nameLocation":"14495:4:7","nodeType":"VariableDeclaration","scope":1586,"src":"14487:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1526,"name":"address","nodeType":"ElementaryTypeName","src":"14487:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1529,"mutability":"mutable","name":"emitEvent","nameLocation":"14506:9:7","nodeType":"VariableDeclaration","scope":1586,"src":"14501:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1528,"name":"bool","nodeType":"ElementaryTypeName","src":"14501:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14457:59:7"},"returnParameters":{"id":1531,"nodeType":"ParameterList","parameters":[],"src":"14534:0:7"},"scope":1653,"src":"14440:662:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1622,"nodeType":"Block","src":"15404:219:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1596,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1591,"src":"15418:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15438:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1598,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15430:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1597,"name":"address","nodeType":"ElementaryTypeName","src":"15430:7:7","typeDescriptions":{}}},"id":1600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15430:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15418:22:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1607,"nodeType":"IfStatement","src":"15414:91:7","trueBody":{"id":1606,"nodeType":"Block","src":"15442:63:7","statements":[{"errorCall":{"arguments":[{"id":1603,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1591,"src":"15485:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1602,"name":"ERC721InvalidOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":648,"src":"15463:21:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15463:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1605,"nodeType":"RevertStatement","src":"15456:38:7"}]}},{"expression":{"id":1614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1608,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":749,"src":"15514:18:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1611,"indexExpression":{"id":1609,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1589,"src":"15533:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15514:25:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1612,"indexExpression":{"id":1610,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1591,"src":"15540:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15514:35:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1613,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1593,"src":"15552:8:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15514:46:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1615,"nodeType":"ExpressionStatement","src":"15514:46:7"},{"eventCall":{"arguments":[{"id":1617,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1589,"src":"15590:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1618,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1591,"src":"15597:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1619,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1593,"src":"15607:8:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1616,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1687,"src":"15575:14:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15575:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1621,"nodeType":"EmitStatement","src":"15570:46:7"}]},"documentation":{"id":1587,"nodeType":"StructuredDocumentation","src":"15108:198:7","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."},"id":1623,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"15320:18:7","nodeType":"FunctionDefinition","parameters":{"id":1594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1589,"mutability":"mutable","name":"owner","nameLocation":"15347:5:7","nodeType":"VariableDeclaration","scope":1623,"src":"15339:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1588,"name":"address","nodeType":"ElementaryTypeName","src":"15339:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1591,"mutability":"mutable","name":"operator","nameLocation":"15362:8:7","nodeType":"VariableDeclaration","scope":1623,"src":"15354:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1590,"name":"address","nodeType":"ElementaryTypeName","src":"15354:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1593,"mutability":"mutable","name":"approved","nameLocation":"15377:8:7","nodeType":"VariableDeclaration","scope":1623,"src":"15372:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1592,"name":"bool","nodeType":"ElementaryTypeName","src":"15372:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15338:48:7"},"returnParameters":{"id":1595,"nodeType":"ParameterList","parameters":[],"src":"15404:0:7"},"scope":1653,"src":"15311:312:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1651,"nodeType":"Block","src":"15930:169:7","statements":[{"assignments":[1632],"declarations":[{"constant":false,"id":1632,"mutability":"mutable","name":"owner","nameLocation":"15948:5:7","nodeType":"VariableDeclaration","scope":1651,"src":"15940:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1631,"name":"address","nodeType":"ElementaryTypeName","src":"15940:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1636,"initialValue":{"arguments":[{"id":1634,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1626,"src":"15965:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1633,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1074,"src":"15956:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15956:17:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"15940:33:7"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1637,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1632,"src":"15987:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16004:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1639,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15996:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1638,"name":"address","nodeType":"ElementaryTypeName","src":"15996:7:7","typeDescriptions":{}}},"id":1641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15996:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15987:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1648,"nodeType":"IfStatement","src":"15983:88:7","trueBody":{"id":1647,"nodeType":"Block","src":"16008:63:7","statements":[{"errorCall":{"arguments":[{"id":1644,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1626,"src":"16052:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1643,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":612,"src":"16029:22:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16029:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1646,"nodeType":"RevertStatement","src":"16022:38:7"}]}},{"expression":{"id":1649,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1632,"src":"16087:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1630,"id":1650,"nodeType":"Return","src":"16080:12:7"}]},"documentation":{"id":1624,"nodeType":"StructuredDocumentation","src":"15629:224:7","text":" @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."},"id":1652,"implemented":true,"kind":"function","modifiers":[],"name":"_requireOwned","nameLocation":"15867:13:7","nodeType":"FunctionDefinition","parameters":{"id":1627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1626,"mutability":"mutable","name":"tokenId","nameLocation":"15889:7:7","nodeType":"VariableDeclaration","scope":1652,"src":"15881:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1625,"name":"uint256","nodeType":"ElementaryTypeName","src":"15881:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15880:17:7"},"returnParameters":{"id":1630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1629,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1652,"src":"15921:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1628,"name":"address","nodeType":"ElementaryTypeName","src":"15921:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15920:9:7"},"scope":1653,"src":"15858:241:7","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1654,"src":"775:15326:7","usedErrors":[607,612,621,626,631,638,643,648],"usedEvents":[1669,1678,1687]}],"src":"107:15995:7"},"id":7},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[3610],"IERC721":[1770]},"id":1771,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1655,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"108:24:8"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":1657,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1771,"sourceUnit":3611,"src":"134:62:8","symbolAliases":[{"foreign":{"id":1656,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3610,"src":"142:7:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1659,"name":"IERC165","nameLocations":["288:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":3610,"src":"288:7:8"},"id":1660,"nodeType":"InheritanceSpecifier","src":"288:7:8"}],"canonicalName":"IERC721","contractDependencies":[],"contractKind":"interface","documentation":{"id":1658,"nodeType":"StructuredDocumentation","src":"198:68:8","text":" @dev Required interface of an ERC-721 compliant contract."},"fullyImplemented":false,"id":1770,"linearizedBaseContracts":[1770,3610],"name":"IERC721","nameLocation":"277:7:8","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1661,"nodeType":"StructuredDocumentation","src":"302:88:8","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1669,"name":"Transfer","nameLocation":"401:8:8","nodeType":"EventDefinition","parameters":{"id":1668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1663,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"426:4:8","nodeType":"VariableDeclaration","scope":1669,"src":"410:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1662,"name":"address","nodeType":"ElementaryTypeName","src":"410:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1665,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"448:2:8","nodeType":"VariableDeclaration","scope":1669,"src":"432:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1664,"name":"address","nodeType":"ElementaryTypeName","src":"432:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1667,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"468:7:8","nodeType":"VariableDeclaration","scope":1669,"src":"452:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1666,"name":"uint256","nodeType":"ElementaryTypeName","src":"452:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"409:67:8"},"src":"395:82:8"},{"anonymous":false,"documentation":{"id":1670,"nodeType":"StructuredDocumentation","src":"483:94:8","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1678,"name":"Approval","nameLocation":"588:8:8","nodeType":"EventDefinition","parameters":{"id":1677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1672,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"613:5:8","nodeType":"VariableDeclaration","scope":1678,"src":"597:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1671,"name":"address","nodeType":"ElementaryTypeName","src":"597:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1674,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"636:8:8","nodeType":"VariableDeclaration","scope":1678,"src":"620:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1673,"name":"address","nodeType":"ElementaryTypeName","src":"620:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1676,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"662:7:8","nodeType":"VariableDeclaration","scope":1678,"src":"646:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1675,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"596:74:8"},"src":"582:89:8"},{"anonymous":false,"documentation":{"id":1679,"nodeType":"StructuredDocumentation","src":"677:117:8","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":1687,"name":"ApprovalForAll","nameLocation":"805:14:8","nodeType":"EventDefinition","parameters":{"id":1686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1681,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"836:5:8","nodeType":"VariableDeclaration","scope":1687,"src":"820:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1680,"name":"address","nodeType":"ElementaryTypeName","src":"820:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1683,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"859:8:8","nodeType":"VariableDeclaration","scope":1687,"src":"843:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1682,"name":"address","nodeType":"ElementaryTypeName","src":"843:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1685,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"874:8:8","nodeType":"VariableDeclaration","scope":1687,"src":"869:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1684,"name":"bool","nodeType":"ElementaryTypeName","src":"869:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"819:64:8"},"src":"799:85:8"},{"documentation":{"id":1688,"nodeType":"StructuredDocumentation","src":"890:76:8","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":1695,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"980:9:8","nodeType":"FunctionDefinition","parameters":{"id":1691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1690,"mutability":"mutable","name":"owner","nameLocation":"998:5:8","nodeType":"VariableDeclaration","scope":1695,"src":"990:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1689,"name":"address","nodeType":"ElementaryTypeName","src":"990:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"989:15:8"},"returnParameters":{"id":1694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1693,"mutability":"mutable","name":"balance","nameLocation":"1036:7:8","nodeType":"VariableDeclaration","scope":1695,"src":"1028:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1692,"name":"uint256","nodeType":"ElementaryTypeName","src":"1028:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1027:17:8"},"scope":1770,"src":"971:74:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1696,"nodeType":"StructuredDocumentation","src":"1051:131:8","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":1703,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1196:7:8","nodeType":"FunctionDefinition","parameters":{"id":1699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1698,"mutability":"mutable","name":"tokenId","nameLocation":"1212:7:8","nodeType":"VariableDeclaration","scope":1703,"src":"1204:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1697,"name":"uint256","nodeType":"ElementaryTypeName","src":"1204:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1203:17:8"},"returnParameters":{"id":1702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1701,"mutability":"mutable","name":"owner","nameLocation":"1252:5:8","nodeType":"VariableDeclaration","scope":1703,"src":"1244:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1700,"name":"address","nodeType":"ElementaryTypeName","src":"1244:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1243:15:8"},"scope":1770,"src":"1187:72:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1704,"nodeType":"StructuredDocumentation","src":"1265:565:8","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":1715,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1844:16:8","nodeType":"FunctionDefinition","parameters":{"id":1713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1706,"mutability":"mutable","name":"from","nameLocation":"1869:4:8","nodeType":"VariableDeclaration","scope":1715,"src":"1861:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1705,"name":"address","nodeType":"ElementaryTypeName","src":"1861:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1708,"mutability":"mutable","name":"to","nameLocation":"1883:2:8","nodeType":"VariableDeclaration","scope":1715,"src":"1875:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1707,"name":"address","nodeType":"ElementaryTypeName","src":"1875:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1710,"mutability":"mutable","name":"tokenId","nameLocation":"1895:7:8","nodeType":"VariableDeclaration","scope":1715,"src":"1887:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1709,"name":"uint256","nodeType":"ElementaryTypeName","src":"1887:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1712,"mutability":"mutable","name":"data","nameLocation":"1919:4:8","nodeType":"VariableDeclaration","scope":1715,"src":"1904:19:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1711,"name":"bytes","nodeType":"ElementaryTypeName","src":"1904:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1860:64:8"},"returnParameters":{"id":1714,"nodeType":"ParameterList","parameters":[],"src":"1933:0:8"},"scope":1770,"src":"1835:99:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1716,"nodeType":"StructuredDocumentation","src":"1940:706:8","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":1725,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2660:16:8","nodeType":"FunctionDefinition","parameters":{"id":1723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1718,"mutability":"mutable","name":"from","nameLocation":"2685:4:8","nodeType":"VariableDeclaration","scope":1725,"src":"2677:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1717,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1720,"mutability":"mutable","name":"to","nameLocation":"2699:2:8","nodeType":"VariableDeclaration","scope":1725,"src":"2691:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1719,"name":"address","nodeType":"ElementaryTypeName","src":"2691:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1722,"mutability":"mutable","name":"tokenId","nameLocation":"2711:7:8","nodeType":"VariableDeclaration","scope":1725,"src":"2703:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1721,"name":"uint256","nodeType":"ElementaryTypeName","src":"2703:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2676:43:8"},"returnParameters":{"id":1724,"nodeType":"ParameterList","parameters":[],"src":"2728:0:8"},"scope":1770,"src":"2651:78:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1726,"nodeType":"StructuredDocumentation","src":"2735:733:8","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1735,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3482:12:8","nodeType":"FunctionDefinition","parameters":{"id":1733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1728,"mutability":"mutable","name":"from","nameLocation":"3503:4:8","nodeType":"VariableDeclaration","scope":1735,"src":"3495:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1727,"name":"address","nodeType":"ElementaryTypeName","src":"3495:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1730,"mutability":"mutable","name":"to","nameLocation":"3517:2:8","nodeType":"VariableDeclaration","scope":1735,"src":"3509:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1729,"name":"address","nodeType":"ElementaryTypeName","src":"3509:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1732,"mutability":"mutable","name":"tokenId","nameLocation":"3529:7:8","nodeType":"VariableDeclaration","scope":1735,"src":"3521:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1731,"name":"uint256","nodeType":"ElementaryTypeName","src":"3521:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3494:43:8"},"returnParameters":{"id":1734,"nodeType":"ParameterList","parameters":[],"src":"3546:0:8"},"scope":1770,"src":"3473:74:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1736,"nodeType":"StructuredDocumentation","src":"3553:452:8","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1743,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4019:7:8","nodeType":"FunctionDefinition","parameters":{"id":1741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1738,"mutability":"mutable","name":"to","nameLocation":"4035:2:8","nodeType":"VariableDeclaration","scope":1743,"src":"4027:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1737,"name":"address","nodeType":"ElementaryTypeName","src":"4027:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1740,"mutability":"mutable","name":"tokenId","nameLocation":"4047:7:8","nodeType":"VariableDeclaration","scope":1743,"src":"4039:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1739,"name":"uint256","nodeType":"ElementaryTypeName","src":"4039:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4026:29:8"},"returnParameters":{"id":1742,"nodeType":"ParameterList","parameters":[],"src":"4064:0:8"},"scope":1770,"src":"4010:55:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1744,"nodeType":"StructuredDocumentation","src":"4071:315:8","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":1751,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4400:17:8","nodeType":"FunctionDefinition","parameters":{"id":1749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1746,"mutability":"mutable","name":"operator","nameLocation":"4426:8:8","nodeType":"VariableDeclaration","scope":1751,"src":"4418:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1745,"name":"address","nodeType":"ElementaryTypeName","src":"4418:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1748,"mutability":"mutable","name":"approved","nameLocation":"4441:8:8","nodeType":"VariableDeclaration","scope":1751,"src":"4436:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1747,"name":"bool","nodeType":"ElementaryTypeName","src":"4436:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4417:33:8"},"returnParameters":{"id":1750,"nodeType":"ParameterList","parameters":[],"src":"4459:0:8"},"scope":1770,"src":"4391:69:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1752,"nodeType":"StructuredDocumentation","src":"4466:139:8","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":1759,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4619:11:8","nodeType":"FunctionDefinition","parameters":{"id":1755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1754,"mutability":"mutable","name":"tokenId","nameLocation":"4639:7:8","nodeType":"VariableDeclaration","scope":1759,"src":"4631:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1753,"name":"uint256","nodeType":"ElementaryTypeName","src":"4631:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4630:17:8"},"returnParameters":{"id":1758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1757,"mutability":"mutable","name":"operator","nameLocation":"4679:8:8","nodeType":"VariableDeclaration","scope":1759,"src":"4671:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1756,"name":"address","nodeType":"ElementaryTypeName","src":"4671:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4670:18:8"},"scope":1770,"src":"4610:79:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1760,"nodeType":"StructuredDocumentation","src":"4695:138:8","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":1769,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4847:16:8","nodeType":"FunctionDefinition","parameters":{"id":1765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1762,"mutability":"mutable","name":"owner","nameLocation":"4872:5:8","nodeType":"VariableDeclaration","scope":1769,"src":"4864:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1761,"name":"address","nodeType":"ElementaryTypeName","src":"4864:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1764,"mutability":"mutable","name":"operator","nameLocation":"4887:8:8","nodeType":"VariableDeclaration","scope":1769,"src":"4879:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1763,"name":"address","nodeType":"ElementaryTypeName","src":"4879:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4863:33:8"},"returnParameters":{"id":1768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1767,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1769,"src":"4920:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1766,"name":"bool","nodeType":"ElementaryTypeName","src":"4920:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4919:6:8"},"scope":1770,"src":"4838:88:8","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1771,"src":"267:4661:8","usedErrors":[],"usedEvents":[1669,1678,1687]}],"src":"108:4821:8"},"id":8},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","exportedSymbols":{"IERC721Receiver":[1788]},"id":1789,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1772,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"116:24:9"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":1773,"nodeType":"StructuredDocumentation","src":"142:154:9","text":" @title ERC-721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC-721 asset contracts."},"fullyImplemented":false,"id":1788,"linearizedBaseContracts":[1788],"name":"IERC721Receiver","nameLocation":"307:15:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1774,"nodeType":"StructuredDocumentation","src":"329:500:9","text":" @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."},"functionSelector":"150b7a02","id":1787,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"843:16:9","nodeType":"FunctionDefinition","parameters":{"id":1783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1776,"mutability":"mutable","name":"operator","nameLocation":"877:8:9","nodeType":"VariableDeclaration","scope":1787,"src":"869:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1775,"name":"address","nodeType":"ElementaryTypeName","src":"869:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1778,"mutability":"mutable","name":"from","nameLocation":"903:4:9","nodeType":"VariableDeclaration","scope":1787,"src":"895:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1777,"name":"address","nodeType":"ElementaryTypeName","src":"895:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1780,"mutability":"mutable","name":"tokenId","nameLocation":"925:7:9","nodeType":"VariableDeclaration","scope":1787,"src":"917:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1779,"name":"uint256","nodeType":"ElementaryTypeName","src":"917:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1782,"mutability":"mutable","name":"data","nameLocation":"957:4:9","nodeType":"VariableDeclaration","scope":1787,"src":"942:19:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1781,"name":"bytes","nodeType":"ElementaryTypeName","src":"942:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"859:108:9"},"returnParameters":{"id":1786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1785,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1787,"src":"986:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1784,"name":"bytes4","nodeType":"ElementaryTypeName","src":"986:6:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"985:8:9"},"scope":1788,"src":"834:160:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1789,"src":"297:699:9","usedErrors":[],"usedEvents":[]}],"src":"116:881:9"},"id":9},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","exportedSymbols":{"ERC721":[1653],"ERC721URIStorage":[1916],"IERC165":[3610],"IERC4906":[555],"IERC721Metadata":[1944],"Strings":[3574]},"id":1917,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1790,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"128:24:10"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"../ERC721.sol","id":1792,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1917,"sourceUnit":1654,"src":"154:37:10","symbolAliases":[{"foreign":{"id":1791,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1653,"src":"162:6:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","file":"./IERC721Metadata.sol","id":1794,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1917,"sourceUnit":1945,"src":"192:54:10","symbolAliases":[{"foreign":{"id":1793,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1944,"src":"200:15:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../../../utils/Strings.sol","id":1796,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1917,"sourceUnit":3575,"src":"247:51:10","symbolAliases":[{"foreign":{"id":1795,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3574,"src":"255:7:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC4906.sol","file":"../../../interfaces/IERC4906.sol","id":1798,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1917,"sourceUnit":556,"src":"299:58:10","symbolAliases":[{"foreign":{"id":1797,"name":"IERC4906","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":555,"src":"307:8:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","file":"../../../interfaces/IERC165.sol","id":1800,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1917,"sourceUnit":532,"src":"358:56:10","symbolAliases":[{"foreign":{"id":1799,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3610,"src":"366:7:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1802,"name":"IERC4906","nameLocations":["525:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":555,"src":"525:8:10"},"id":1803,"nodeType":"InheritanceSpecifier","src":"525:8:10"},{"baseName":{"id":1804,"name":"ERC721","nameLocations":["535:6:10"],"nodeType":"IdentifierPath","referencedDeclaration":1653,"src":"535:6:10"},"id":1805,"nodeType":"InheritanceSpecifier","src":"535:6:10"}],"canonicalName":"ERC721URIStorage","contractDependencies":[],"contractKind":"contract","documentation":{"id":1801,"nodeType":"StructuredDocumentation","src":"416:70:10","text":" @dev ERC-721 token with storage based token URI management."},"fullyImplemented":true,"id":1916,"linearizedBaseContracts":[1916,1653,649,1944,555,1770,3598,3610,2051],"name":"ERC721URIStorage","nameLocation":"505:16:10","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1808,"libraryName":{"id":1806,"name":"Strings","nameLocations":["554:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":3574,"src":"554:7:10"},"nodeType":"UsingForDirective","src":"548:26:10","typeName":{"id":1807,"name":"uint256","nodeType":"ElementaryTypeName","src":"566:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":true,"id":1814,"mutability":"constant","name":"ERC4906_INTERFACE_ID","nameLocation":"786:20:10","nodeType":"VariableDeclaration","scope":1916,"src":"762:65:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1809,"name":"bytes4","nodeType":"ElementaryTypeName","src":"762:6:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"arguments":[{"hexValue":"30783439303634393036","id":1812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"816:10:10","typeDescriptions":{"typeIdentifier":"t_rational_1225148678_by_1","typeString":"int_const 1225148678"},"value":"0x49064906"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1225148678_by_1","typeString":"int_const 1225148678"}],"id":1811,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"809:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":1810,"name":"bytes4","nodeType":"ElementaryTypeName","src":"809:6:10","typeDescriptions":{}}},"id":1813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"809:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"private"},{"constant":false,"id":1818,"mutability":"mutable","name":"_tokenURIs","nameLocation":"916:10:10","nodeType":"VariableDeclaration","scope":1916,"src":"873:53:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"typeName":{"id":1817,"keyName":"tokenId","keyNameLocation":"889:7:10","keyType":{"id":1815,"name":"uint256","nodeType":"ElementaryTypeName","src":"881:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"873:34:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1816,"name":"string","nodeType":"ElementaryTypeName","src":"900:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"visibility":"private"},{"baseFunctions":[797,3609],"body":{"id":1838,"nodeType":"Block","src":"1069:99:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1829,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1821,"src":"1086:11:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1830,"name":"ERC4906_INTERFACE_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1814,"src":"1101:20:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1086:35:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1834,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1821,"src":"1149:11:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":1832,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1125:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721URIStorage_$1916_$","typeString":"type(contract super ERC721URIStorage)"}},"id":1833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1131:17:10","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":797,"src":"1125:23:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":1835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1125:36:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1086:75:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1828,"id":1837,"nodeType":"Return","src":"1079:82:10"}]},"documentation":{"id":1819,"nodeType":"StructuredDocumentation","src":"933:23:10","text":"@inheritdoc IERC165"},"functionSelector":"01ffc9a7","id":1839,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"970:17:10","nodeType":"FunctionDefinition","overrides":{"id":1825,"nodeType":"OverrideSpecifier","overrides":[{"id":1823,"name":"ERC721","nameLocations":["1037:6:10"],"nodeType":"IdentifierPath","referencedDeclaration":1653,"src":"1037:6:10"},{"id":1824,"name":"IERC165","nameLocations":["1045:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":3610,"src":"1045:7:10"}],"src":"1028:25:10"},"parameters":{"id":1822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1821,"mutability":"mutable","name":"interfaceId","nameLocation":"995:11:10","nodeType":"VariableDeclaration","scope":1839,"src":"988:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1820,"name":"bytes4","nodeType":"ElementaryTypeName","src":"988:6:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"987:20:10"},"returnParameters":{"id":1828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1827,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1839,"src":"1063:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1826,"name":"bool","nodeType":"ElementaryTypeName","src":"1063:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1062:6:10"},"scope":1916,"src":"961:207:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[892],"body":{"id":1895,"nodeType":"Block","src":"1298:505:10","statements":[{"expression":{"arguments":[{"id":1849,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1842,"src":"1322:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1848,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1652,"src":"1308:13:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1308:22:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1851,"nodeType":"ExpressionStatement","src":"1308:22:10"},{"assignments":[1853],"declarations":[{"constant":false,"id":1853,"mutability":"mutable","name":"_tokenURI","nameLocation":"1355:9:10","nodeType":"VariableDeclaration","scope":1895,"src":"1341:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1852,"name":"string","nodeType":"ElementaryTypeName","src":"1341:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1857,"initialValue":{"baseExpression":{"id":1854,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1818,"src":"1367:10:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":1856,"indexExpression":{"id":1855,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1842,"src":"1378:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1367:19:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1341:45:10"},{"assignments":[1859],"declarations":[{"constant":false,"id":1859,"mutability":"mutable","name":"base","nameLocation":"1410:4:10","nodeType":"VariableDeclaration","scope":1895,"src":"1396:18:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1858,"name":"string","nodeType":"ElementaryTypeName","src":"1396:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1862,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1860,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":901,"src":"1417:8:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":1861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1417:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1396:31:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1865,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1859,"src":"1506:4:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1864,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1500:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1863,"name":"bytes","nodeType":"ElementaryTypeName","src":"1500:5:10","typeDescriptions":{}}},"id":1866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1500:11:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1512:6:10","memberName":"length","nodeType":"MemberAccess","src":"1500:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1522:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1500:23:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1873,"nodeType":"IfStatement","src":"1496:70:10","trueBody":{"id":1872,"nodeType":"Block","src":"1525:41:10","statements":[{"expression":{"id":1870,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1853,"src":"1546:9:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1847,"id":1871,"nodeType":"Return","src":"1539:16:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1876,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1853,"src":"1671:9:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1875,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1665:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1874,"name":"bytes","nodeType":"ElementaryTypeName","src":"1665:5:10","typeDescriptions":{}}},"id":1877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1665:16:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1682:6:10","memberName":"length","nodeType":"MemberAccess","src":"1665:23:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1691:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1665:27:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1889,"nodeType":"IfStatement","src":"1661:95:10","trueBody":{"id":1888,"nodeType":"Block","src":"1694:62:10","statements":[{"expression":{"arguments":[{"id":1884,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1859,"src":"1729:4:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1885,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1853,"src":"1735:9:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1882,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1715:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1881,"name":"string","nodeType":"ElementaryTypeName","src":"1715:6:10","typeDescriptions":{}}},"id":1883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1722:6:10","memberName":"concat","nodeType":"MemberAccess","src":"1715:13:10","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":1886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1715:30:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1847,"id":1887,"nodeType":"Return","src":"1708:37:10"}]}},{"expression":{"arguments":[{"id":1892,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1842,"src":"1788:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1890,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1773:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721URIStorage_$1916_$","typeString":"type(contract super ERC721URIStorage)"}},"id":1891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1779:8:10","memberName":"tokenURI","nodeType":"MemberAccess","referencedDeclaration":892,"src":"1773:14:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) view returns (string memory)"}},"id":1893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1773:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1847,"id":1894,"nodeType":"Return","src":"1766:30:10"}]},"documentation":{"id":1840,"nodeType":"StructuredDocumentation","src":"1174:31:10","text":"@inheritdoc IERC721Metadata"},"functionSelector":"c87b56dd","id":1896,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"1219:8:10","nodeType":"FunctionDefinition","overrides":{"id":1844,"nodeType":"OverrideSpecifier","overrides":[],"src":"1265:8:10"},"parameters":{"id":1843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1842,"mutability":"mutable","name":"tokenId","nameLocation":"1236:7:10","nodeType":"VariableDeclaration","scope":1896,"src":"1228:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1841,"name":"uint256","nodeType":"ElementaryTypeName","src":"1228:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1227:17:10"},"returnParameters":{"id":1847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1846,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1896,"src":"1283:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1845,"name":"string","nodeType":"ElementaryTypeName","src":"1283:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1282:15:10"},"scope":1916,"src":"1210:593:10","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1914,"nodeType":"Block","src":"2012:86:10","statements":[{"expression":{"id":1908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1904,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1818,"src":"2022:10:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":1906,"indexExpression":{"id":1905,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1899,"src":"2033:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2022:19:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1907,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1901,"src":"2044:9:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2022:31:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1909,"nodeType":"ExpressionStatement","src":"2022:31:10"},{"eventCall":{"arguments":[{"id":1911,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1899,"src":"2083:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1910,"name":"MetadataUpdate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"2068:14:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2068:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1913,"nodeType":"EmitStatement","src":"2063:28:10"}]},"documentation":{"id":1897,"nodeType":"StructuredDocumentation","src":"1809:117:10","text":" @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n Emits {IERC4906-MetadataUpdate}."},"id":1915,"implemented":true,"kind":"function","modifiers":[],"name":"_setTokenURI","nameLocation":"1940:12:10","nodeType":"FunctionDefinition","parameters":{"id":1902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1899,"mutability":"mutable","name":"tokenId","nameLocation":"1961:7:10","nodeType":"VariableDeclaration","scope":1915,"src":"1953:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1898,"name":"uint256","nodeType":"ElementaryTypeName","src":"1953:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1901,"mutability":"mutable","name":"_tokenURI","nameLocation":"1984:9:10","nodeType":"VariableDeclaration","scope":1915,"src":"1970:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1900,"name":"string","nodeType":"ElementaryTypeName","src":"1970:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1952:42:10"},"returnParameters":{"id":1903,"nodeType":"ParameterList","parameters":[],"src":"2012:0:10"},"scope":1916,"src":"1931:167:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1917,"src":"487:1613:10","usedErrors":[607,612,621,626,631,638,643,648],"usedEvents":[547,554,1669,1678,1687]}],"src":"128:1973:10"},"id":10},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","exportedSymbols":{"IERC721":[1770],"IERC721Metadata":[1944]},"id":1945,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1918,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"127:24:11"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":1920,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1945,"sourceUnit":1771,"src":"153:39:11","symbolAliases":[{"foreign":{"id":1919,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1770,"src":"161:7:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1922,"name":"IERC721","nameLocations":["357:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":1770,"src":"357:7:11"},"id":1923,"nodeType":"InheritanceSpecifier","src":"357:7:11"}],"canonicalName":"IERC721Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":1921,"nodeType":"StructuredDocumentation","src":"194:133:11","text":" @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":1944,"linearizedBaseContracts":[1944,1770,3610],"name":"IERC721Metadata","nameLocation":"338:15:11","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1924,"nodeType":"StructuredDocumentation","src":"371:58:11","text":" @dev Returns the token collection name."},"functionSelector":"06fdde03","id":1929,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"443:4:11","nodeType":"FunctionDefinition","parameters":{"id":1925,"nodeType":"ParameterList","parameters":[],"src":"447:2:11"},"returnParameters":{"id":1928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1927,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1929,"src":"473:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1926,"name":"string","nodeType":"ElementaryTypeName","src":"473:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"472:15:11"},"scope":1944,"src":"434:54:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1930,"nodeType":"StructuredDocumentation","src":"494:60:11","text":" @dev Returns the token collection symbol."},"functionSelector":"95d89b41","id":1935,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"568:6:11","nodeType":"FunctionDefinition","parameters":{"id":1931,"nodeType":"ParameterList","parameters":[],"src":"574:2:11"},"returnParameters":{"id":1934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1933,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1935,"src":"600:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1932,"name":"string","nodeType":"ElementaryTypeName","src":"600:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"599:15:11"},"scope":1944,"src":"559:56:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1936,"nodeType":"StructuredDocumentation","src":"621:90:11","text":" @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"functionSelector":"c87b56dd","id":1943,"implemented":false,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"725:8:11","nodeType":"FunctionDefinition","parameters":{"id":1939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1938,"mutability":"mutable","name":"tokenId","nameLocation":"742:7:11","nodeType":"VariableDeclaration","scope":1943,"src":"734:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1937,"name":"uint256","nodeType":"ElementaryTypeName","src":"734:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"733:17:11"},"returnParameters":{"id":1942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1941,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1943,"src":"774:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1940,"name":"string","nodeType":"ElementaryTypeName","src":"774:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"773:15:11"},"scope":1944,"src":"716:73:11","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1945,"src":"328:463:11","usedErrors":[],"usedEvents":[1669,1678,1687]}],"src":"127:665:11"},"id":11},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol","exportedSymbols":{"ERC721Utils":[2021],"IERC721Errors":[649],"IERC721Receiver":[1788]},"id":2022,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1946,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"118:24:12"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","file":"../IERC721Receiver.sol","id":1948,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2022,"sourceUnit":1789,"src":"144:55:12","symbolAliases":[{"foreign":{"id":1947,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1788,"src":"152:15:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../../interfaces/draft-IERC6093.sol","id":1950,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2022,"sourceUnit":697,"src":"200:69:12","symbolAliases":[{"foreign":{"id":1949,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"208:13:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC721Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":1951,"nodeType":"StructuredDocumentation","src":"271:159:12","text":" @dev Library that provide common ERC-721 utility functions.\n See https://eips.ethereum.org/EIPS/eip-721[ERC-721].\n _Available since v5.1._"},"fullyImplemented":true,"id":2021,"linearizedBaseContracts":[2021],"name":"ERC721Utils","nameLocation":"439:11:12","nodeType":"ContractDefinition","nodes":[{"body":{"id":2019,"nodeType":"Block","src":"1159:760:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1965,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1958,"src":"1173:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1176:4:12","memberName":"code","nodeType":"MemberAccess","src":"1173:7:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1181:6:12","memberName":"length","nodeType":"MemberAccess","src":"1173:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1190:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1173:18:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2018,"nodeType":"IfStatement","src":"1169:744:12","trueBody":{"id":2017,"nodeType":"Block","src":"1193:720:12","statements":[{"clauses":[{"block":{"id":1995,"nodeType":"Block","src":"1303:214:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1982,"name":"retval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1980,"src":"1325:6:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":1983,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1788,"src":"1335:15:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1788_$","typeString":"type(contract IERC721Receiver)"}},"id":1984,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1351:16:12","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1787,"src":"1335:32:12","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"}},"id":1985,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1368:8:12","memberName":"selector","nodeType":"MemberAccess","src":"1335:41:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1325:51:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1994,"nodeType":"IfStatement","src":"1321:182:12","trueBody":{"id":1993,"nodeType":"Block","src":"1378:125:12","statements":[{"errorCall":{"arguments":[{"id":1990,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1958,"src":"1481:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1987,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"1445:13:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Errors_$649_$","typeString":"type(contract IERC721Errors)"}},"id":1989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1459:21:12","memberName":"ERC721InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":631,"src":"1445:35:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1991,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1445:39:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1992,"nodeType":"RevertStatement","src":"1438:46:12"}]}}]},"errorName":"","id":1996,"nodeType":"TryCatchClause","parameters":{"id":1981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1980,"mutability":"mutable","name":"retval","nameLocation":"1295:6:12","nodeType":"VariableDeclaration","scope":1996,"src":"1288:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1979,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1288:6:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1287:15:12"},"src":"1279:238:12"},{"block":{"id":2014,"nodeType":"Block","src":"1546:357:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2000,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1998,"src":"1568:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1575:6:12","memberName":"length","nodeType":"MemberAccess","src":"1568:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1585:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1568:18:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2012,"nodeType":"Block","src":"1736:153:12","statements":[{"AST":{"nodeType":"YulBlock","src":"1783:88:12","statements":[{"expression":{"arguments":[{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"1820:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"1828:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1816:3:12"},"nodeType":"YulFunctionCall","src":"1816:17:12"},{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"1841:6:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1835:5:12"},"nodeType":"YulFunctionCall","src":"1835:13:12"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1809:6:12"},"nodeType":"YulFunctionCall","src":"1809:40:12"},"nodeType":"YulExpressionStatement","src":"1809:40:12"}]},"evmVersion":"paris","externalReferences":[{"declaration":1998,"isOffset":false,"isSlot":false,"src":"1820:6:12","valueSize":1},{"declaration":1998,"isOffset":false,"isSlot":false,"src":"1841:6:12","valueSize":1}],"flags":["memory-safe"],"id":2011,"nodeType":"InlineAssembly","src":"1758:113:12"}]},"id":2013,"nodeType":"IfStatement","src":"1564:325:12","trueBody":{"id":2010,"nodeType":"Block","src":"1588:142:12","statements":[{"errorCall":{"arguments":[{"id":2007,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1958,"src":"1708:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2004,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"1672:13:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Errors_$649_$","typeString":"type(contract IERC721Errors)"}},"id":2006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1686:21:12","memberName":"ERC721InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":631,"src":"1672:35:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1672:39:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2009,"nodeType":"RevertStatement","src":"1665:46:12"}]}}]},"errorName":"","id":2015,"nodeType":"TryCatchClause","parameters":{"id":1999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1998,"mutability":"mutable","name":"reason","nameLocation":"1538:6:12","nodeType":"VariableDeclaration","scope":2015,"src":"1525:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1997,"name":"bytes","nodeType":"ElementaryTypeName","src":"1525:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1524:21:12"},"src":"1518:385:12"}],"externalCall":{"arguments":[{"id":1974,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1954,"src":"1248:8:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1975,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1956,"src":"1258:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1976,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"1264:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1977,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1962,"src":"1273:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1971,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1958,"src":"1227:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1970,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1788,"src":"1211:15:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1788_$","typeString":"type(contract IERC721Receiver)"}},"id":1972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1211:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Receiver_$1788","typeString":"contract IERC721Receiver"}},"id":1973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1231:16:12","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1787,"src":"1211:36:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":1978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1211:67:12","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":2016,"nodeType":"TryStatement","src":"1207:696:12"}]}}]},"documentation":{"id":1952,"nodeType":"StructuredDocumentation","src":"457:531:12","text":" @dev Performs an acceptance check for the provided `operator` by calling {IERC721Receiver-onERC721Received}\n on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n Otherwise, the recipient must implement {IERC721Receiver-onERC721Received} and return the acceptance magic value to accept\n the transfer."},"id":2020,"implemented":true,"kind":"function","modifiers":[],"name":"checkOnERC721Received","nameLocation":"1002:21:12","nodeType":"FunctionDefinition","parameters":{"id":1963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1954,"mutability":"mutable","name":"operator","nameLocation":"1041:8:12","nodeType":"VariableDeclaration","scope":2020,"src":"1033:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1953,"name":"address","nodeType":"ElementaryTypeName","src":"1033:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1956,"mutability":"mutable","name":"from","nameLocation":"1067:4:12","nodeType":"VariableDeclaration","scope":2020,"src":"1059:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1955,"name":"address","nodeType":"ElementaryTypeName","src":"1059:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1958,"mutability":"mutable","name":"to","nameLocation":"1089:2:12","nodeType":"VariableDeclaration","scope":2020,"src":"1081:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1957,"name":"address","nodeType":"ElementaryTypeName","src":"1081:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1960,"mutability":"mutable","name":"tokenId","nameLocation":"1109:7:12","nodeType":"VariableDeclaration","scope":2020,"src":"1101:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1959,"name":"uint256","nodeType":"ElementaryTypeName","src":"1101:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1962,"mutability":"mutable","name":"data","nameLocation":"1139:4:12","nodeType":"VariableDeclaration","scope":2020,"src":"1126:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1961,"name":"bytes","nodeType":"ElementaryTypeName","src":"1126:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1023:126:12"},"returnParameters":{"id":1964,"nodeType":"ParameterList","parameters":[],"src":"1159:0:12"},"scope":2021,"src":"993:926:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":2022,"src":"431:1490:12","usedErrors":[],"usedEvents":[]}],"src":"118:1804:12"},"id":12},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[2051]},"id":2052,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2023,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:13"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":2024,"nodeType":"StructuredDocumentation","src":"127:496:13","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":2051,"linearizedBaseContracts":[2051],"name":"Context","nameLocation":"642:7:13","nodeType":"ContractDefinition","nodes":[{"body":{"id":2032,"nodeType":"Block","src":"718:34:13","statements":[{"expression":{"expression":{"id":2029,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:13","memberName":"sender","nodeType":"MemberAccess","src":"735:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2028,"id":2031,"nodeType":"Return","src":"728:17:13"}]},"id":2033,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:13","nodeType":"FunctionDefinition","parameters":{"id":2025,"nodeType":"ParameterList","parameters":[],"src":"675:2:13"},"returnParameters":{"id":2028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2027,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2033,"src":"709:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2026,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:13"},"scope":2051,"src":"656:96:13","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2041,"nodeType":"Block","src":"825:32:13","statements":[{"expression":{"expression":{"id":2038,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:13","memberName":"data","nodeType":"MemberAccess","src":"842:8:13","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":2037,"id":2040,"nodeType":"Return","src":"835:15:13"}]},"id":2042,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:13","nodeType":"FunctionDefinition","parameters":{"id":2034,"nodeType":"ParameterList","parameters":[],"src":"775:2:13"},"returnParameters":{"id":2037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2036,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2042,"src":"809:14:13","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2035,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:13"},"scope":2051,"src":"758:99:13","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2049,"nodeType":"Block","src":"935:25:13","statements":[{"expression":{"hexValue":"30","id":2047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2046,"id":2048,"nodeType":"Return","src":"945:8:13"}]},"id":2050,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:13","nodeType":"FunctionDefinition","parameters":{"id":2043,"nodeType":"ParameterList","parameters":[],"src":"892:2:13"},"returnParameters":{"id":2046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2045,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2050,"src":"926:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2044,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:13"},"scope":2051,"src":"863:97:13","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":2052,"src":"624:338:13","usedErrors":[],"usedEvents":[]}],"src":"101:862:13"},"id":13},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[2103]},"id":2104,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2053,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:14"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":2054,"nodeType":"StructuredDocumentation","src":"125:489:14","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":2103,"linearizedBaseContracts":[2103],"name":"Panic","nameLocation":"665:5:14","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":2055,"nodeType":"StructuredDocumentation","src":"677:36:14","text":"@dev generic / unspecified error"},"id":2058,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:14","nodeType":"VariableDeclaration","scope":2103,"src":"718:40:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2056,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":2057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":2059,"nodeType":"StructuredDocumentation","src":"764:37:14","text":"@dev used by the assert() builtin"},"id":2062,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:14","nodeType":"VariableDeclaration","scope":2103,"src":"806:39:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2060,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":2061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":2063,"nodeType":"StructuredDocumentation","src":"851:41:14","text":"@dev arithmetic underflow or overflow"},"id":2066,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:14","nodeType":"VariableDeclaration","scope":2103,"src":"897:47:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2064,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":2065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:14","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":2067,"nodeType":"StructuredDocumentation","src":"950:35:14","text":"@dev division or modulo by zero"},"id":2070,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:14","nodeType":"VariableDeclaration","scope":2103,"src":"990:49:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2068,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":2069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:14","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":2071,"nodeType":"StructuredDocumentation","src":"1045:30:14","text":"@dev enum conversion error"},"id":2074,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:14","nodeType":"VariableDeclaration","scope":2103,"src":"1080:54:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2072,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":2073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:14","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":2075,"nodeType":"StructuredDocumentation","src":"1140:36:14","text":"@dev invalid encoding in storage"},"id":2078,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:14","nodeType":"VariableDeclaration","scope":2103,"src":"1181:55:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2076,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":2077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:14","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":2079,"nodeType":"StructuredDocumentation","src":"1242:24:14","text":"@dev empty array pop"},"id":2082,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:14","nodeType":"VariableDeclaration","scope":2103,"src":"1271:48:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2080,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":2081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:14","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":2083,"nodeType":"StructuredDocumentation","src":"1325:35:14","text":"@dev array out of bounds access"},"id":2086,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:14","nodeType":"VariableDeclaration","scope":2103,"src":"1365:52:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2084,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":2085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:14","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":2087,"nodeType":"StructuredDocumentation","src":"1423:65:14","text":"@dev resource error (too large allocation or too large array)"},"id":2090,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:14","nodeType":"VariableDeclaration","scope":2103,"src":"1493:47:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2088,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":2089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:14","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":2091,"nodeType":"StructuredDocumentation","src":"1546:42:14","text":"@dev calling invalid internal function"},"id":2094,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:14","nodeType":"VariableDeclaration","scope":2103,"src":"1593:58:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2092,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":2093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:14","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":2101,"nodeType":"Block","src":"1819:151:14","statements":[{"AST":{"nodeType":"YulBlock","src":"1854:110:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1875:4:14","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1881:10:14","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1868:6:14"},"nodeType":"YulFunctionCall","src":"1868:24:14"},"nodeType":"YulExpressionStatement","src":"1868:24:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1912:4:14","type":"","value":"0x20"},{"name":"code","nodeType":"YulIdentifier","src":"1918:4:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1905:6:14"},"nodeType":"YulFunctionCall","src":"1905:18:14"},"nodeType":"YulExpressionStatement","src":"1905:18:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1943:4:14","type":"","value":"0x1c"},{"kind":"number","nodeType":"YulLiteral","src":"1949:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1936:6:14"},"nodeType":"YulFunctionCall","src":"1936:18:14"},"nodeType":"YulExpressionStatement","src":"1936:18:14"}]},"evmVersion":"paris","externalReferences":[{"declaration":2097,"isOffset":false,"isSlot":false,"src":"1918:4:14","valueSize":1}],"flags":["memory-safe"],"id":2100,"nodeType":"InlineAssembly","src":"1829:135:14"}]},"documentation":{"id":2095,"nodeType":"StructuredDocumentation","src":"1658:113:14","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":2102,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:14","nodeType":"FunctionDefinition","parameters":{"id":2098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2097,"mutability":"mutable","name":"code","nameLocation":"1799:4:14","nodeType":"VariableDeclaration","scope":2102,"src":"1791:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2096,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:14"},"returnParameters":{"id":2099,"nodeType":"ParameterList","parameters":[],"src":"1819:0:14"},"scope":2103,"src":"1776:194:14","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2104,"src":"657:1315:14","usedErrors":[],"usedEvents":[]}],"src":"99:1874:14"},"id":14},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[2172]},"id":2173,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2105,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:15"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":2106,"nodeType":"StructuredDocumentation","src":"135:894:15","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":2172,"linearizedBaseContracts":[2172],"name":"ReentrancyGuard","nameLocation":"1048:15:15","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2109,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1843:11:15","nodeType":"VariableDeclaration","scope":2172,"src":"1818:40:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2107,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":2108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1857:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":2112,"mutability":"constant","name":"ENTERED","nameLocation":"1889:7:15","nodeType":"VariableDeclaration","scope":2172,"src":"1864:36:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2110,"name":"uint256","nodeType":"ElementaryTypeName","src":"1864:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":2111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1899:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":2114,"mutability":"mutable","name":"_status","nameLocation":"1923:7:15","nodeType":"VariableDeclaration","scope":2172,"src":"1907:23:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2113,"name":"uint256","nodeType":"ElementaryTypeName","src":"1907:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"documentation":{"id":2115,"nodeType":"StructuredDocumentation","src":"1937:52:15","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","id":2117,"name":"ReentrancyGuardReentrantCall","nameLocation":"2000:28:15","nodeType":"ErrorDefinition","parameters":{"id":2116,"nodeType":"ParameterList","parameters":[],"src":"2028:2:15"},"src":"1994:37:15"},{"body":{"id":2124,"nodeType":"Block","src":"2051:38:15","statements":[{"expression":{"id":2122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2120,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2114,"src":"2061:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2121,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2109,"src":"2071:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2061:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2123,"nodeType":"ExpressionStatement","src":"2061:21:15"}]},"id":2125,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2118,"nodeType":"ParameterList","parameters":[],"src":"2048:2:15"},"returnParameters":{"id":2119,"nodeType":"ParameterList","parameters":[],"src":"2051:0:15"},"scope":2172,"src":"2037:52:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2135,"nodeType":"Block","src":"2490:79:15","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2128,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2152,"src":"2500:19:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2500:21:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2130,"nodeType":"ExpressionStatement","src":"2500:21:15"},{"id":2131,"nodeType":"PlaceholderStatement","src":"2531:1:15"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2132,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2160,"src":"2542:18:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2542:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2134,"nodeType":"ExpressionStatement","src":"2542:20:15"}]},"documentation":{"id":2126,"nodeType":"StructuredDocumentation","src":"2095:366:15","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":2136,"name":"nonReentrant","nameLocation":"2475:12:15","nodeType":"ModifierDefinition","parameters":{"id":2127,"nodeType":"ParameterList","parameters":[],"src":"2487:2:15"},"src":"2466:103:15","virtual":false,"visibility":"internal"},{"body":{"id":2151,"nodeType":"Block","src":"2614:268:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2139,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2114,"src":"2702:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2140,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2112,"src":"2713:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2702:18:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2146,"nodeType":"IfStatement","src":"2698:86:15","trueBody":{"id":2145,"nodeType":"Block","src":"2722:62:15","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2142,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2117,"src":"2743:28:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2743:30:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2144,"nodeType":"RevertStatement","src":"2736:37:15"}]}},{"expression":{"id":2149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2147,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2114,"src":"2858:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2148,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2112,"src":"2868:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2858:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2150,"nodeType":"ExpressionStatement","src":"2858:17:15"}]},"id":2152,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2584:19:15","nodeType":"FunctionDefinition","parameters":{"id":2137,"nodeType":"ParameterList","parameters":[],"src":"2603:2:15"},"returnParameters":{"id":2138,"nodeType":"ParameterList","parameters":[],"src":"2614:0:15"},"scope":2172,"src":"2575:307:15","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2159,"nodeType":"Block","src":"2926:170:15","statements":[{"expression":{"id":2157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2155,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2114,"src":"3068:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2156,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2109,"src":"3078:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3068:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2158,"nodeType":"ExpressionStatement","src":"3068:21:15"}]},"id":2160,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2897:18:15","nodeType":"FunctionDefinition","parameters":{"id":2153,"nodeType":"ParameterList","parameters":[],"src":"2915:2:15"},"returnParameters":{"id":2154,"nodeType":"ParameterList","parameters":[],"src":"2926:0:15"},"scope":2172,"src":"2888:208:15","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2170,"nodeType":"Block","src":"3339:42:15","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2166,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2114,"src":"3356:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2167,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2112,"src":"3367:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3356:18:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2165,"id":2169,"nodeType":"Return","src":"3349:25:15"}]},"documentation":{"id":2161,"nodeType":"StructuredDocumentation","src":"3102:168:15","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":2171,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3284:23:15","nodeType":"FunctionDefinition","parameters":{"id":2162,"nodeType":"ParameterList","parameters":[],"src":"3307:2:15"},"returnParameters":{"id":2165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2164,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2171,"src":"3333:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2163,"name":"bool","nodeType":"ElementaryTypeName","src":"3333:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3332:6:15"},"scope":2172,"src":"3275:106:15","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2173,"src":"1030:2353:15","usedErrors":[2117],"usedEvents":[]}],"src":"109:3275:15"},"id":15},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[5231],"SafeCast":[6996],"SignedMath":[7140],"Strings":[3574]},"id":3575,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2174,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:16"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":2176,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3575,"sourceUnit":5232,"src":"127:37:16","symbolAliases":[{"foreign":{"id":2175,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5231,"src":"135:4:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./math/SafeCast.sol","id":2178,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3575,"sourceUnit":6997,"src":"165:45:16","symbolAliases":[{"foreign":{"id":2177,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6996,"src":"173:8:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":2180,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3575,"sourceUnit":7141,"src":"211:49:16","symbolAliases":[{"foreign":{"id":2179,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7140,"src":"219:10:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":2181,"nodeType":"StructuredDocumentation","src":"262:34:16","text":" @dev String operations."},"fullyImplemented":true,"id":3574,"linearizedBaseContracts":[3574],"name":"Strings","nameLocation":"305:7:16","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2183,"libraryName":{"id":2182,"name":"SafeCast","nameLocations":["325:8:16"],"nodeType":"IdentifierPath","referencedDeclaration":6996,"src":"325:8:16"},"nodeType":"UsingForDirective","src":"319:21:16"},{"constant":true,"id":2186,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"371:10:16","nodeType":"VariableDeclaration","scope":3574,"src":"346:56:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":2184,"name":"bytes16","nodeType":"ElementaryTypeName","src":"346:7:16","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":2185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"384:18:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":2189,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"431:14:16","nodeType":"VariableDeclaration","scope":3574,"src":"408:42:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2187,"name":"uint8","nodeType":"ElementaryTypeName","src":"408:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":2188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"448:2:16","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"constant":true,"id":2225,"mutability":"constant","name":"SPECIAL_CHARS_LOOKUP","nameLocation":"481:20:16","nodeType":"VariableDeclaration","scope":3574,"src":"456:302:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2190,"name":"uint256","nodeType":"ElementaryTypeName","src":"456:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"},"id":2224,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"},"id":2219,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"},"id":2214,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"},"id":2209,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"},"id":2204,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"},"id":2199,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":2193,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"513:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783038","id":2192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"518:4:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"513:9:16","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":2194,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"512:11:16","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"},"id":2197,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"552:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783039","id":2196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"557:4:16","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"552:9:16","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}}],"id":2198,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"551:11:16","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}},"src":"512:50:16","typeDescriptions":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"},"id":2202,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"585:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783061","id":2201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"590:4:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"585:9:16","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}}],"id":2203,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"584:11:16","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}},"src":"512:83:16","typeDescriptions":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"},"id":2207,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"622:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783063","id":2206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"627:4:16","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"622:9:16","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}}],"id":2208,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"621:11:16","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}},"src":"512:120:16","typeDescriptions":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"},"id":2212,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"661:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783064","id":2211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"666:4:16","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"661:9:16","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}}],"id":2213,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"660:11:16","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}},"src":"512:159:16","typeDescriptions":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"},"id":2217,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"706:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783232","id":2216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"711:4:16","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"706:9:16","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}}],"id":2218,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"705:11:16","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}},"src":"512:204:16","typeDescriptions":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"},"id":2222,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"748:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783563","id":2221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"753:4:16","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"748:9:16","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}}],"id":2223,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"747:11:16","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}},"src":"512:246:16","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"}},"visibility":"private"},{"documentation":{"id":2226,"nodeType":"StructuredDocumentation","src":"778:81:16","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":2232,"name":"StringsInsufficientHexLength","nameLocation":"870:28:16","nodeType":"ErrorDefinition","parameters":{"id":2231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2228,"mutability":"mutable","name":"value","nameLocation":"907:5:16","nodeType":"VariableDeclaration","scope":2232,"src":"899:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2227,"name":"uint256","nodeType":"ElementaryTypeName","src":"899:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2230,"mutability":"mutable","name":"length","nameLocation":"922:6:16","nodeType":"VariableDeclaration","scope":2232,"src":"914:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2229,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"898:31:16"},"src":"864:66:16"},{"documentation":{"id":2233,"nodeType":"StructuredDocumentation","src":"936:108:16","text":" @dev The string being parsed contains characters that are not in scope of the given base."},"errorSelector":"94e2737e","id":2235,"name":"StringsInvalidChar","nameLocation":"1055:18:16","nodeType":"ErrorDefinition","parameters":{"id":2234,"nodeType":"ParameterList","parameters":[],"src":"1073:2:16"},"src":"1049:27:16"},{"documentation":{"id":2236,"nodeType":"StructuredDocumentation","src":"1082:84:16","text":" @dev The string being parsed is not a properly formatted address."},"errorSelector":"1d15ae44","id":2238,"name":"StringsInvalidAddressFormat","nameLocation":"1177:27:16","nodeType":"ErrorDefinition","parameters":{"id":2237,"nodeType":"ParameterList","parameters":[],"src":"1204:2:16"},"src":"1171:36:16"},{"body":{"id":2285,"nodeType":"Block","src":"1379:563:16","statements":[{"id":2284,"nodeType":"UncheckedBlock","src":"1389:547:16","statements":[{"assignments":[2247],"declarations":[{"constant":false,"id":2247,"mutability":"mutable","name":"length","nameLocation":"1421:6:16","nodeType":"VariableDeclaration","scope":2284,"src":"1413:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2246,"name":"uint256","nodeType":"ElementaryTypeName","src":"1413:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2254,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2250,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2241,"src":"1441:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2248,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5231,"src":"1430:4:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5231_$","typeString":"type(library Math)"}},"id":2249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1435:5:16","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":5063,"src":"1430:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1430:17:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1450:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1430:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1413:38:16"},{"assignments":[2256],"declarations":[{"constant":false,"id":2256,"mutability":"mutable","name":"buffer","nameLocation":"1479:6:16","nodeType":"VariableDeclaration","scope":2284,"src":"1465:20:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2255,"name":"string","nodeType":"ElementaryTypeName","src":"1465:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2261,"initialValue":{"arguments":[{"id":2259,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2247,"src":"1499:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2258,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1488:10:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2257,"name":"string","nodeType":"ElementaryTypeName","src":"1492:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1488:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1465:41:16"},{"assignments":[2263],"declarations":[{"constant":false,"id":2263,"mutability":"mutable","name":"ptr","nameLocation":"1528:3:16","nodeType":"VariableDeclaration","scope":2284,"src":"1520:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2262,"name":"uint256","nodeType":"ElementaryTypeName","src":"1520:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2264,"nodeType":"VariableDeclarationStatement","src":"1520:11:16"},{"AST":{"nodeType":"YulBlock","src":"1570:69:16","statements":[{"nodeType":"YulAssignment","src":"1588:37:16","value":{"arguments":[{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"1603:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"1611:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1599:3:16"},"nodeType":"YulFunctionCall","src":"1599:17:16"},{"name":"length","nodeType":"YulIdentifier","src":"1618:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1595:3:16"},"nodeType":"YulFunctionCall","src":"1595:30:16"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"1588:3:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2256,"isOffset":false,"isSlot":false,"src":"1603:6:16","valueSize":1},{"declaration":2247,"isOffset":false,"isSlot":false,"src":"1618:6:16","valueSize":1},{"declaration":2263,"isOffset":false,"isSlot":false,"src":"1588:3:16","valueSize":1}],"flags":["memory-safe"],"id":2265,"nodeType":"InlineAssembly","src":"1545:94:16"},{"body":{"id":2280,"nodeType":"Block","src":"1665:234:16","statements":[{"expression":{"id":2268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1683:5:16","subExpression":{"id":2267,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2263,"src":"1683:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2269,"nodeType":"ExpressionStatement","src":"1683:5:16"},{"AST":{"nodeType":"YulBlock","src":"1731:86:16","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1761:3:16"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1775:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"1782:2:16","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"1771:3:16"},"nodeType":"YulFunctionCall","src":"1771:14:16"},{"name":"HEX_DIGITS","nodeType":"YulIdentifier","src":"1787:10:16"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"1766:4:16"},"nodeType":"YulFunctionCall","src":"1766:32:16"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"1753:7:16"},"nodeType":"YulFunctionCall","src":"1753:46:16"},"nodeType":"YulExpressionStatement","src":"1753:46:16"}]},"evmVersion":"paris","externalReferences":[{"declaration":2186,"isOffset":false,"isSlot":false,"src":"1787:10:16","valueSize":1},{"declaration":2263,"isOffset":false,"isSlot":false,"src":"1761:3:16","valueSize":1},{"declaration":2241,"isOffset":false,"isSlot":false,"src":"1775:5:16","valueSize":1}],"flags":["memory-safe"],"id":2270,"nodeType":"InlineAssembly","src":"1706:111:16"},{"expression":{"id":2273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2271,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2241,"src":"1834:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":2272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1843:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1834:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2274,"nodeType":"ExpressionStatement","src":"1834:11:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2275,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2241,"src":"1867:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1876:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1867:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2279,"nodeType":"IfStatement","src":"1863:21:16","trueBody":{"id":2278,"nodeType":"Break","src":"1879:5:16"}}]},"condition":{"hexValue":"74727565","id":2266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1659:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":2281,"nodeType":"WhileStatement","src":"1652:247:16"},{"expression":{"id":2282,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2256,"src":"1919:6:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2245,"id":2283,"nodeType":"Return","src":"1912:13:16"}]}]},"documentation":{"id":2239,"nodeType":"StructuredDocumentation","src":"1213:90:16","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":2286,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1317:8:16","nodeType":"FunctionDefinition","parameters":{"id":2242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2241,"mutability":"mutable","name":"value","nameLocation":"1334:5:16","nodeType":"VariableDeclaration","scope":2286,"src":"1326:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2240,"name":"uint256","nodeType":"ElementaryTypeName","src":"1326:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1325:15:16"},"returnParameters":{"id":2245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2244,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2286,"src":"1364:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2243,"name":"string","nodeType":"ElementaryTypeName","src":"1364:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1363:15:16"},"scope":3574,"src":"1308:634:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2311,"nodeType":"Block","src":"2118:92:16","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2297,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2289,"src":"2149:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":2298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2157:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2149:9:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":2301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2167:2:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":2302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2149:20:16","trueExpression":{"hexValue":"2d","id":2300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2161:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":2306,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2289,"src":"2195:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":2304,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7140,"src":"2180:10:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$7140_$","typeString":"type(library SignedMath)"}},"id":2305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2191:3:16","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":7139,"src":"2180:14:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":2307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2180:21:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2303,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2286,"src":"2171:8:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2171:31:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2295,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2135:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2294,"name":"string","nodeType":"ElementaryTypeName","src":"2135:6:16","typeDescriptions":{}}},"id":2296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2142:6:16","memberName":"concat","nodeType":"MemberAccess","src":"2135:13:16","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":2309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2135:68:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2293,"id":2310,"nodeType":"Return","src":"2128:75:16"}]},"documentation":{"id":2287,"nodeType":"StructuredDocumentation","src":"1948:89:16","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":2312,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"2051:14:16","nodeType":"FunctionDefinition","parameters":{"id":2290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2289,"mutability":"mutable","name":"value","nameLocation":"2073:5:16","nodeType":"VariableDeclaration","scope":2312,"src":"2066:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2288,"name":"int256","nodeType":"ElementaryTypeName","src":"2066:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"2065:14:16"},"returnParameters":{"id":2293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2292,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2312,"src":"2103:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2291,"name":"string","nodeType":"ElementaryTypeName","src":"2103:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2102:15:16"},"scope":3574,"src":"2042:168:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2331,"nodeType":"Block","src":"2389:100:16","statements":[{"id":2330,"nodeType":"UncheckedBlock","src":"2399:84:16","statements":[{"expression":{"arguments":[{"id":2321,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"2442:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2324,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"2461:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2322,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5231,"src":"2449:4:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5231_$","typeString":"type(library Math)"}},"id":2323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2454:6:16","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":5174,"src":"2449:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2449:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2470:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2449:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2320,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2332,2415,2435],"referencedDeclaration":2415,"src":"2430:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2430:42:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2319,"id":2329,"nodeType":"Return","src":"2423:49:16"}]}]},"documentation":{"id":2313,"nodeType":"StructuredDocumentation","src":"2216:94:16","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":2332,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2324:11:16","nodeType":"FunctionDefinition","parameters":{"id":2316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2315,"mutability":"mutable","name":"value","nameLocation":"2344:5:16","nodeType":"VariableDeclaration","scope":2332,"src":"2336:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2314,"name":"uint256","nodeType":"ElementaryTypeName","src":"2336:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2335:15:16"},"returnParameters":{"id":2319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2318,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2332,"src":"2374:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2317,"name":"string","nodeType":"ElementaryTypeName","src":"2374:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2373:15:16"},"scope":3574,"src":"2315:174:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2414,"nodeType":"Block","src":"2702:435:16","statements":[{"assignments":[2343],"declarations":[{"constant":false,"id":2343,"mutability":"mutable","name":"localValue","nameLocation":"2720:10:16","nodeType":"VariableDeclaration","scope":2414,"src":"2712:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2342,"name":"uint256","nodeType":"ElementaryTypeName","src":"2712:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2345,"initialValue":{"id":2344,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2335,"src":"2733:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2712:26:16"},{"assignments":[2347],"declarations":[{"constant":false,"id":2347,"mutability":"mutable","name":"buffer","nameLocation":"2761:6:16","nodeType":"VariableDeclaration","scope":2414,"src":"2748:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2346,"name":"bytes","nodeType":"ElementaryTypeName","src":"2748:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2356,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2780:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2351,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"2784:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2780:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":2353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2793:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2780:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2349,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2770:9:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2348,"name":"bytes","nodeType":"ElementaryTypeName","src":"2774:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2770:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2748:47:16"},{"expression":{"id":2361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2357,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2347,"src":"2805:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2359,"indexExpression":{"hexValue":"30","id":2358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2812:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2805:9:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2817:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2805:15:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2362,"nodeType":"ExpressionStatement","src":"2805:15:16"},{"expression":{"id":2367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2363,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2347,"src":"2830:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2365,"indexExpression":{"hexValue":"31","id":2364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2837:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2830:9:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":2366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2842:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2830:15:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2368,"nodeType":"ExpressionStatement","src":"2830:15:16"},{"body":{"id":2397,"nodeType":"Block","src":"2900:95:16","statements":[{"expression":{"id":2391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2383,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2347,"src":"2914:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2385,"indexExpression":{"id":2384,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2370,"src":"2921:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2914:9:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2386,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2186,"src":"2926:10:16","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":2390,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2387,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2343,"src":"2937:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2950:3:16","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2937:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2926:28:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2914:40:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2392,"nodeType":"ExpressionStatement","src":"2914:40:16"},{"expression":{"id":2395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2393,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2343,"src":"2968:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2983:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2968:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2396,"nodeType":"ExpressionStatement","src":"2968:16:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2377,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2370,"src":"2888:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2892:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2888:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2398,"initializationExpression":{"assignments":[2370],"declarations":[{"constant":false,"id":2370,"mutability":"mutable","name":"i","nameLocation":"2868:1:16","nodeType":"VariableDeclaration","scope":2398,"src":"2860:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2369,"name":"uint256","nodeType":"ElementaryTypeName","src":"2860:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2376,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2872:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2372,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"2876:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2872:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2885:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2872:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2860:26:16"},"loopExpression":{"expression":{"id":2381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2895:3:16","subExpression":{"id":2380,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2370,"src":"2897:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2382,"nodeType":"ExpressionStatement","src":"2895:3:16"},"nodeType":"ForStatement","src":"2855:140:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2399,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2343,"src":"3008:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3022:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3008:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2408,"nodeType":"IfStatement","src":"3004:96:16","trueBody":{"id":2407,"nodeType":"Block","src":"3025:75:16","statements":[{"errorCall":{"arguments":[{"id":2403,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2335,"src":"3075:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2404,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"3082:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2402,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"3046:28:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":2405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3046:43:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2406,"nodeType":"RevertStatement","src":"3039:50:16"}]}},{"expression":{"arguments":[{"id":2411,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2347,"src":"3123:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2410,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3116:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2409,"name":"string","nodeType":"ElementaryTypeName","src":"3116:6:16","typeDescriptions":{}}},"id":2412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3116:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2341,"id":2413,"nodeType":"Return","src":"3109:21:16"}]},"documentation":{"id":2333,"nodeType":"StructuredDocumentation","src":"2495:112:16","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":2415,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2621:11:16","nodeType":"FunctionDefinition","parameters":{"id":2338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2335,"mutability":"mutable","name":"value","nameLocation":"2641:5:16","nodeType":"VariableDeclaration","scope":2415,"src":"2633:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2334,"name":"uint256","nodeType":"ElementaryTypeName","src":"2633:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2337,"mutability":"mutable","name":"length","nameLocation":"2656:6:16","nodeType":"VariableDeclaration","scope":2415,"src":"2648:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2336,"name":"uint256","nodeType":"ElementaryTypeName","src":"2648:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2632:31:16"},"returnParameters":{"id":2341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2340,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2415,"src":"2687:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2339,"name":"string","nodeType":"ElementaryTypeName","src":"2687:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2686:15:16"},"scope":3574,"src":"2612:525:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2434,"nodeType":"Block","src":"3369:75:16","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":2428,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"3414:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2427,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3406:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2426,"name":"uint160","nodeType":"ElementaryTypeName","src":"3406:7:16","typeDescriptions":{}}},"id":2429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3406:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2425,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3398:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2424,"name":"uint256","nodeType":"ElementaryTypeName","src":"3398:7:16","typeDescriptions":{}}},"id":2430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3398:22:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2431,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2189,"src":"3422:14:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2423,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2332,2415,2435],"referencedDeclaration":2415,"src":"3386:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3386:51:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2422,"id":2433,"nodeType":"Return","src":"3379:58:16"}]},"documentation":{"id":2416,"nodeType":"StructuredDocumentation","src":"3143:148:16","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":2435,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"3305:11:16","nodeType":"FunctionDefinition","parameters":{"id":2419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2418,"mutability":"mutable","name":"addr","nameLocation":"3325:4:16","nodeType":"VariableDeclaration","scope":2435,"src":"3317:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2417,"name":"address","nodeType":"ElementaryTypeName","src":"3317:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3316:14:16"},"returnParameters":{"id":2422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2421,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2435,"src":"3354:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2420,"name":"string","nodeType":"ElementaryTypeName","src":"3354:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3353:15:16"},"scope":3574,"src":"3296:148:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2499,"nodeType":"Block","src":"3701:642:16","statements":[{"assignments":[2444],"declarations":[{"constant":false,"id":2444,"mutability":"mutable","name":"buffer","nameLocation":"3724:6:16","nodeType":"VariableDeclaration","scope":2499,"src":"3711:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2443,"name":"bytes","nodeType":"ElementaryTypeName","src":"3711:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2451,"initialValue":{"arguments":[{"arguments":[{"id":2448,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2438,"src":"3751:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2447,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2332,2415,2435],"referencedDeclaration":2435,"src":"3739:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":2449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3739:17:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2446,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3733:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2445,"name":"bytes","nodeType":"ElementaryTypeName","src":"3733:5:16","typeDescriptions":{}}},"id":2450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3733:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3711:46:16"},{"assignments":[2453],"declarations":[{"constant":false,"id":2453,"mutability":"mutable","name":"hashValue","nameLocation":"3850:9:16","nodeType":"VariableDeclaration","scope":2499,"src":"3842:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2452,"name":"uint256","nodeType":"ElementaryTypeName","src":"3842:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2454,"nodeType":"VariableDeclarationStatement","src":"3842:17:16"},{"AST":{"nodeType":"YulBlock","src":"3894:78:16","statements":[{"nodeType":"YulAssignment","src":"3908:54:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3925:2:16","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"3943:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"3951:4:16","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3939:3:16"},"nodeType":"YulFunctionCall","src":"3939:17:16"},{"kind":"number","nodeType":"YulLiteral","src":"3958:2:16","type":"","value":"40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3929:9:16"},"nodeType":"YulFunctionCall","src":"3929:32:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3921:3:16"},"nodeType":"YulFunctionCall","src":"3921:41:16"},"variableNames":[{"name":"hashValue","nodeType":"YulIdentifier","src":"3908:9:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2444,"isOffset":false,"isSlot":false,"src":"3943:6:16","valueSize":1},{"declaration":2453,"isOffset":false,"isSlot":false,"src":"3908:9:16","valueSize":1}],"flags":["memory-safe"],"id":2455,"nodeType":"InlineAssembly","src":"3869:103:16"},{"body":{"id":2492,"nodeType":"Block","src":"4015:291:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2466,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2453,"src":"4121:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4133:3:16","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"4121:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":2469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4139:1:16","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"4121:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":2473,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2444,"src":"4150:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2475,"indexExpression":{"id":2474,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2457,"src":"4157:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4150:9:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2472,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4144:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2471,"name":"uint8","nodeType":"ElementaryTypeName","src":"4144:5:16","typeDescriptions":{}}},"id":2476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4144:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":2477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4163:2:16","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"4144:21:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4121:44:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2487,"nodeType":"IfStatement","src":"4117:150:16","trueBody":{"id":2486,"nodeType":"Block","src":"4167:100:16","statements":[{"expression":{"id":2484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2480,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2444,"src":"4235:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2482,"indexExpression":{"id":2481,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2457,"src":"4242:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4235:9:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":2483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4248:4:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"4235:17:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2485,"nodeType":"ExpressionStatement","src":"4235:17:16"}]}},{"expression":{"id":2490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2488,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2453,"src":"4280:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4294:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"4280:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2491,"nodeType":"ExpressionStatement","src":"4280:15:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2460,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2457,"src":"4003:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4007:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4003:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2493,"initializationExpression":{"assignments":[2457],"declarations":[{"constant":false,"id":2457,"mutability":"mutable","name":"i","nameLocation":"3995:1:16","nodeType":"VariableDeclaration","scope":2493,"src":"3987:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2456,"name":"uint256","nodeType":"ElementaryTypeName","src":"3987:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2459,"initialValue":{"hexValue":"3431","id":2458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3999:2:16","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3987:14:16"},"loopExpression":{"expression":{"id":2464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"4010:3:16","subExpression":{"id":2463,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2457,"src":"4012:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2465,"nodeType":"ExpressionStatement","src":"4010:3:16"},"nodeType":"ForStatement","src":"3982:324:16"},{"expression":{"arguments":[{"id":2496,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2444,"src":"4329:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2495,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4322:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2494,"name":"string","nodeType":"ElementaryTypeName","src":"4322:6:16","typeDescriptions":{}}},"id":2497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4322:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2442,"id":2498,"nodeType":"Return","src":"4315:21:16"}]},"documentation":{"id":2436,"nodeType":"StructuredDocumentation","src":"3450:165:16","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":2500,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"3629:19:16","nodeType":"FunctionDefinition","parameters":{"id":2439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2438,"mutability":"mutable","name":"addr","nameLocation":"3657:4:16","nodeType":"VariableDeclaration","scope":2500,"src":"3649:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2437,"name":"address","nodeType":"ElementaryTypeName","src":"3649:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3648:14:16"},"returnParameters":{"id":2442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2441,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2500,"src":"3686:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2440,"name":"string","nodeType":"ElementaryTypeName","src":"3686:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3685:15:16"},"scope":3574,"src":"3620:723:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2536,"nodeType":"Block","src":"4498:104:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2512,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2503,"src":"4521:1:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2511,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4515:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2510,"name":"bytes","nodeType":"ElementaryTypeName","src":"4515:5:16","typeDescriptions":{}}},"id":2513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4515:8:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4524:6:16","memberName":"length","nodeType":"MemberAccess","src":"4515:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2517,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2505,"src":"4540:1:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2516,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4534:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2515,"name":"bytes","nodeType":"ElementaryTypeName","src":"4534:5:16","typeDescriptions":{}}},"id":2518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4534:8:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4543:6:16","memberName":"length","nodeType":"MemberAccess","src":"4534:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4515:34:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2524,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2503,"src":"4569:1:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2523,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4563:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2522,"name":"bytes","nodeType":"ElementaryTypeName","src":"4563:5:16","typeDescriptions":{}}},"id":2525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4563:8:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2521,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4553:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4553:19:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":2530,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2505,"src":"4592:1:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2529,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4586:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2528,"name":"bytes","nodeType":"ElementaryTypeName","src":"4586:5:16","typeDescriptions":{}}},"id":2531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4586:8:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2527,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4576:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4576:19:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4553:42:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4515:80:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2509,"id":2535,"nodeType":"Return","src":"4508:87:16"}]},"documentation":{"id":2501,"nodeType":"StructuredDocumentation","src":"4349:66:16","text":" @dev Returns true if the two strings are equal."},"id":2537,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"4429:5:16","nodeType":"FunctionDefinition","parameters":{"id":2506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2503,"mutability":"mutable","name":"a","nameLocation":"4449:1:16","nodeType":"VariableDeclaration","scope":2537,"src":"4435:15:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2502,"name":"string","nodeType":"ElementaryTypeName","src":"4435:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2505,"mutability":"mutable","name":"b","nameLocation":"4466:1:16","nodeType":"VariableDeclaration","scope":2537,"src":"4452:15:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2504,"name":"string","nodeType":"ElementaryTypeName","src":"4452:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4434:34:16"},"returnParameters":{"id":2509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2508,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2537,"src":"4492:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2507,"name":"bool","nodeType":"ElementaryTypeName","src":"4492:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4491:6:16"},"scope":3574,"src":"4420:182:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2555,"nodeType":"Block","src":"4899:64:16","statements":[{"expression":{"arguments":[{"id":2546,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2540,"src":"4926:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4933:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2550,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2540,"src":"4942:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2549,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4936:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2548,"name":"bytes","nodeType":"ElementaryTypeName","src":"4936:5:16","typeDescriptions":{}}},"id":2551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4936:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4949:6:16","memberName":"length","nodeType":"MemberAccess","src":"4936:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2545,"name":"parseUint","nodeType":"Identifier","overloadedDeclarations":[2556,2587],"referencedDeclaration":2587,"src":"4916:9:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":2553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4916:40:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2544,"id":2554,"nodeType":"Return","src":"4909:47:16"}]},"documentation":{"id":2538,"nodeType":"StructuredDocumentation","src":"4608:214:16","text":" @dev Parse a decimal string and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":2556,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4836:9:16","nodeType":"FunctionDefinition","parameters":{"id":2541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2540,"mutability":"mutable","name":"input","nameLocation":"4860:5:16","nodeType":"VariableDeclaration","scope":2556,"src":"4846:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2539,"name":"string","nodeType":"ElementaryTypeName","src":"4846:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4845:21:16"},"returnParameters":{"id":2544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2543,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2556,"src":"4890:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2542,"name":"uint256","nodeType":"ElementaryTypeName","src":"4890:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4889:9:16"},"scope":3574,"src":"4827:136:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2586,"nodeType":"Block","src":"5368:153:16","statements":[{"assignments":[2569,2571],"declarations":[{"constant":false,"id":2569,"mutability":"mutable","name":"success","nameLocation":"5384:7:16","nodeType":"VariableDeclaration","scope":2586,"src":"5379:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2568,"name":"bool","nodeType":"ElementaryTypeName","src":"5379:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2571,"mutability":"mutable","name":"value","nameLocation":"5401:5:16","nodeType":"VariableDeclaration","scope":2586,"src":"5393:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2570,"name":"uint256","nodeType":"ElementaryTypeName","src":"5393:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2577,"initialValue":{"arguments":[{"id":2573,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2559,"src":"5423:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2574,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2561,"src":"5430:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2575,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2563,"src":"5437:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2572,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[2608,2645],"referencedDeclaration":2645,"src":"5410:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5410:31:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5378:63:16"},{"condition":{"id":2579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5455:8:16","subExpression":{"id":2578,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2569,"src":"5456:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2583,"nodeType":"IfStatement","src":"5451:41:16","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2580,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"5472:18:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5472:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2582,"nodeType":"RevertStatement","src":"5465:27:16"}},{"expression":{"id":2584,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2571,"src":"5509:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2567,"id":2585,"nodeType":"Return","src":"5502:12:16"}]},"documentation":{"id":2557,"nodeType":"StructuredDocumentation","src":"4969:294:16","text":" @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":2587,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"5277:9:16","nodeType":"FunctionDefinition","parameters":{"id":2564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2559,"mutability":"mutable","name":"input","nameLocation":"5301:5:16","nodeType":"VariableDeclaration","scope":2587,"src":"5287:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2558,"name":"string","nodeType":"ElementaryTypeName","src":"5287:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2561,"mutability":"mutable","name":"begin","nameLocation":"5316:5:16","nodeType":"VariableDeclaration","scope":2587,"src":"5308:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2560,"name":"uint256","nodeType":"ElementaryTypeName","src":"5308:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2563,"mutability":"mutable","name":"end","nameLocation":"5331:3:16","nodeType":"VariableDeclaration","scope":2587,"src":"5323:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2562,"name":"uint256","nodeType":"ElementaryTypeName","src":"5323:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5286:49:16"},"returnParameters":{"id":2567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2566,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2587,"src":"5359:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2565,"name":"uint256","nodeType":"ElementaryTypeName","src":"5359:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5358:9:16"},"scope":3574,"src":"5268:253:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2607,"nodeType":"Block","src":"5842:83:16","statements":[{"expression":{"arguments":[{"id":2598,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2590,"src":"5888:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5895:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2602,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2590,"src":"5904:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2601,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2600,"name":"bytes","nodeType":"ElementaryTypeName","src":"5898:5:16","typeDescriptions":{}}},"id":2603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5911:6:16","memberName":"length","nodeType":"MemberAccess","src":"5898:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2597,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2715,"src":"5859:28:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5859:59:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2596,"id":2606,"nodeType":"Return","src":"5852:66:16"}]},"documentation":{"id":2588,"nodeType":"StructuredDocumentation","src":"5527:215:16","text":" @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2608,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5756:12:16","nodeType":"FunctionDefinition","parameters":{"id":2591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2590,"mutability":"mutable","name":"input","nameLocation":"5783:5:16","nodeType":"VariableDeclaration","scope":2608,"src":"5769:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2589,"name":"string","nodeType":"ElementaryTypeName","src":"5769:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5768:21:16"},"returnParameters":{"id":2596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2593,"mutability":"mutable","name":"success","nameLocation":"5818:7:16","nodeType":"VariableDeclaration","scope":2608,"src":"5813:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2592,"name":"bool","nodeType":"ElementaryTypeName","src":"5813:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2595,"mutability":"mutable","name":"value","nameLocation":"5835:5:16","nodeType":"VariableDeclaration","scope":2608,"src":"5827:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2594,"name":"uint256","nodeType":"ElementaryTypeName","src":"5827:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5812:29:16"},"scope":3574,"src":"5747:178:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2644,"nodeType":"Block","src":"6327:144:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2622,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2615,"src":"6341:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2625,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2611,"src":"6353:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2624,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6347:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2623,"name":"bytes","nodeType":"ElementaryTypeName","src":"6347:5:16","typeDescriptions":{}}},"id":2626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6347:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6360:6:16","memberName":"length","nodeType":"MemberAccess","src":"6347:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6341:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2629,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"6370:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2630,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2615,"src":"6378:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6370:11:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6341:40:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2637,"nodeType":"IfStatement","src":"6337:63:16","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6391:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6398:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2635,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6390:10:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2621,"id":2636,"nodeType":"Return","src":"6383:17:16"}},{"expression":{"arguments":[{"id":2639,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2611,"src":"6446:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2640,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"6453:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2641,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2615,"src":"6460:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2638,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2715,"src":"6417:28:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6417:47:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2621,"id":2643,"nodeType":"Return","src":"6410:54:16"}]},"documentation":{"id":2609,"nodeType":"StructuredDocumentation","src":"5931:238:16","text":" @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2645,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"6183:12:16","nodeType":"FunctionDefinition","parameters":{"id":2616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2611,"mutability":"mutable","name":"input","nameLocation":"6219:5:16","nodeType":"VariableDeclaration","scope":2645,"src":"6205:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2610,"name":"string","nodeType":"ElementaryTypeName","src":"6205:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2613,"mutability":"mutable","name":"begin","nameLocation":"6242:5:16","nodeType":"VariableDeclaration","scope":2645,"src":"6234:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2612,"name":"uint256","nodeType":"ElementaryTypeName","src":"6234:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2615,"mutability":"mutable","name":"end","nameLocation":"6265:3:16","nodeType":"VariableDeclaration","scope":2645,"src":"6257:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2614,"name":"uint256","nodeType":"ElementaryTypeName","src":"6257:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6195:79:16"},"returnParameters":{"id":2621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2618,"mutability":"mutable","name":"success","nameLocation":"6303:7:16","nodeType":"VariableDeclaration","scope":2645,"src":"6298:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2617,"name":"bool","nodeType":"ElementaryTypeName","src":"6298:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2620,"mutability":"mutable","name":"value","nameLocation":"6320:5:16","nodeType":"VariableDeclaration","scope":2645,"src":"6312:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2619,"name":"uint256","nodeType":"ElementaryTypeName","src":"6312:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6297:29:16"},"scope":3574,"src":"6174:297:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2714,"nodeType":"Block","src":"6874:347:16","statements":[{"assignments":[2660],"declarations":[{"constant":false,"id":2660,"mutability":"mutable","name":"buffer","nameLocation":"6897:6:16","nodeType":"VariableDeclaration","scope":2714,"src":"6884:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2659,"name":"bytes","nodeType":"ElementaryTypeName","src":"6884:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2665,"initialValue":{"arguments":[{"id":2663,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2648,"src":"6912:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2662,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6906:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2661,"name":"bytes","nodeType":"ElementaryTypeName","src":"6906:5:16","typeDescriptions":{}}},"id":2664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6906:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6884:34:16"},{"assignments":[2667],"declarations":[{"constant":false,"id":2667,"mutability":"mutable","name":"result","nameLocation":"6937:6:16","nodeType":"VariableDeclaration","scope":2714,"src":"6929:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2666,"name":"uint256","nodeType":"ElementaryTypeName","src":"6929:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2669,"initialValue":{"hexValue":"30","id":2668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6946:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6929:18:16"},{"body":{"id":2708,"nodeType":"Block","src":"6995:189:16","statements":[{"assignments":[2681],"declarations":[{"constant":false,"id":2681,"mutability":"mutable","name":"chr","nameLocation":"7015:3:16","nodeType":"VariableDeclaration","scope":2708,"src":"7009:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2680,"name":"uint8","nodeType":"ElementaryTypeName","src":"7009:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2691,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":2686,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2660,"src":"7064:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2687,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2671,"src":"7072:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2685,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3573,"src":"7041:22:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7041:33:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2684,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7034:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2683,"name":"bytes1","nodeType":"ElementaryTypeName","src":"7034:6:16","typeDescriptions":{}}},"id":2689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7034:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2682,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3395,"src":"7021:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":2690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7021:55:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"7009:67:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2692,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2681,"src":"7094:3:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"39","id":2693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7100:1:16","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"src":"7094:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2699,"nodeType":"IfStatement","src":"7090:30:16","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7111:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7118:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2697,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7110:10:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2658,"id":2698,"nodeType":"Return","src":"7103:17:16"}},{"expression":{"id":2702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2700,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2667,"src":"7134:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3130","id":2701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7144:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"7134:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2703,"nodeType":"ExpressionStatement","src":"7134:12:16"},{"expression":{"id":2706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2704,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2667,"src":"7160:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2705,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2681,"src":"7170:3:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"7160:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2707,"nodeType":"ExpressionStatement","src":"7160:13:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2674,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2671,"src":"6981:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2675,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2652,"src":"6985:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6981:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2709,"initializationExpression":{"assignments":[2671],"declarations":[{"constant":false,"id":2671,"mutability":"mutable","name":"i","nameLocation":"6970:1:16","nodeType":"VariableDeclaration","scope":2709,"src":"6962:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2670,"name":"uint256","nodeType":"ElementaryTypeName","src":"6962:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2673,"initialValue":{"id":2672,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2650,"src":"6974:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6962:17:16"},"loopExpression":{"expression":{"id":2678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6990:3:16","subExpression":{"id":2677,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2671,"src":"6992:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2679,"nodeType":"ExpressionStatement","src":"6990:3:16"},"nodeType":"ForStatement","src":"6957:227:16"},{"expression":{"components":[{"hexValue":"74727565","id":2710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7201:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2711,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2667,"src":"7207:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2712,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7200:14:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2658,"id":2713,"nodeType":"Return","src":"7193:21:16"}]},"documentation":{"id":2646,"nodeType":"StructuredDocumentation","src":"6477:224:16","text":" @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2715,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseUintUncheckedBounds","nameLocation":"6715:28:16","nodeType":"FunctionDefinition","parameters":{"id":2653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2648,"mutability":"mutable","name":"input","nameLocation":"6767:5:16","nodeType":"VariableDeclaration","scope":2715,"src":"6753:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2647,"name":"string","nodeType":"ElementaryTypeName","src":"6753:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2650,"mutability":"mutable","name":"begin","nameLocation":"6790:5:16","nodeType":"VariableDeclaration","scope":2715,"src":"6782:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2649,"name":"uint256","nodeType":"ElementaryTypeName","src":"6782:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2652,"mutability":"mutable","name":"end","nameLocation":"6813:3:16","nodeType":"VariableDeclaration","scope":2715,"src":"6805:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2651,"name":"uint256","nodeType":"ElementaryTypeName","src":"6805:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6743:79:16"},"returnParameters":{"id":2658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2655,"mutability":"mutable","name":"success","nameLocation":"6850:7:16","nodeType":"VariableDeclaration","scope":2715,"src":"6845:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2654,"name":"bool","nodeType":"ElementaryTypeName","src":"6845:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2657,"mutability":"mutable","name":"value","nameLocation":"6867:5:16","nodeType":"VariableDeclaration","scope":2715,"src":"6859:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2656,"name":"uint256","nodeType":"ElementaryTypeName","src":"6859:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6844:29:16"},"scope":3574,"src":"6706:515:16","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2733,"nodeType":"Block","src":"7518:63:16","statements":[{"expression":{"arguments":[{"id":2724,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2718,"src":"7544:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7551:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2728,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2718,"src":"7560:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2727,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7554:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2726,"name":"bytes","nodeType":"ElementaryTypeName","src":"7554:5:16","typeDescriptions":{}}},"id":2729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7554:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7567:6:16","memberName":"length","nodeType":"MemberAccess","src":"7554:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2723,"name":"parseInt","nodeType":"Identifier","overloadedDeclarations":[2734,2765],"referencedDeclaration":2765,"src":"7535:8:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (int256)"}},"id":2731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7535:39:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2722,"id":2732,"nodeType":"Return","src":"7528:46:16"}]},"documentation":{"id":2716,"nodeType":"StructuredDocumentation","src":"7227:216:16","text":" @dev Parse a decimal string and returns the value as a `int256`.\n Requirements:\n - The string must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":2734,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7457:8:16","nodeType":"FunctionDefinition","parameters":{"id":2719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2718,"mutability":"mutable","name":"input","nameLocation":"7480:5:16","nodeType":"VariableDeclaration","scope":2734,"src":"7466:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2717,"name":"string","nodeType":"ElementaryTypeName","src":"7466:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7465:21:16"},"returnParameters":{"id":2722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2721,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2734,"src":"7510:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2720,"name":"int256","nodeType":"ElementaryTypeName","src":"7510:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7509:8:16"},"scope":3574,"src":"7448:133:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2764,"nodeType":"Block","src":"7986:151:16","statements":[{"assignments":[2747,2749],"declarations":[{"constant":false,"id":2747,"mutability":"mutable","name":"success","nameLocation":"8002:7:16","nodeType":"VariableDeclaration","scope":2764,"src":"7997:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2746,"name":"bool","nodeType":"ElementaryTypeName","src":"7997:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2749,"mutability":"mutable","name":"value","nameLocation":"8018:5:16","nodeType":"VariableDeclaration","scope":2764,"src":"8011:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2748,"name":"int256","nodeType":"ElementaryTypeName","src":"8011:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":2755,"initialValue":{"arguments":[{"id":2751,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2737,"src":"8039:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2752,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"8046:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2753,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2741,"src":"8053:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2750,"name":"tryParseInt","nodeType":"Identifier","overloadedDeclarations":[2786,2828],"referencedDeclaration":2828,"src":"8027:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8027:30:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"nodeType":"VariableDeclarationStatement","src":"7996:61:16"},{"condition":{"id":2757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8071:8:16","subExpression":{"id":2756,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2747,"src":"8072:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2761,"nodeType":"IfStatement","src":"8067:41:16","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2758,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"8088:18:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8088:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2760,"nodeType":"RevertStatement","src":"8081:27:16"}},{"expression":{"id":2762,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2749,"src":"8125:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2745,"id":2763,"nodeType":"Return","src":"8118:12:16"}]},"documentation":{"id":2735,"nodeType":"StructuredDocumentation","src":"7587:296:16","text":" @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":2765,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7897:8:16","nodeType":"FunctionDefinition","parameters":{"id":2742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2737,"mutability":"mutable","name":"input","nameLocation":"7920:5:16","nodeType":"VariableDeclaration","scope":2765,"src":"7906:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2736,"name":"string","nodeType":"ElementaryTypeName","src":"7906:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2739,"mutability":"mutable","name":"begin","nameLocation":"7935:5:16","nodeType":"VariableDeclaration","scope":2765,"src":"7927:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2738,"name":"uint256","nodeType":"ElementaryTypeName","src":"7927:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2741,"mutability":"mutable","name":"end","nameLocation":"7950:3:16","nodeType":"VariableDeclaration","scope":2765,"src":"7942:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2740,"name":"uint256","nodeType":"ElementaryTypeName","src":"7942:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7905:49:16"},"returnParameters":{"id":2745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2744,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2765,"src":"7978:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2743,"name":"int256","nodeType":"ElementaryTypeName","src":"7978:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7977:8:16"},"scope":3574,"src":"7888:249:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2785,"nodeType":"Block","src":"8528:82:16","statements":[{"expression":{"arguments":[{"id":2776,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2768,"src":"8573:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8580:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2780,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2768,"src":"8589:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2779,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8583:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2778,"name":"bytes","nodeType":"ElementaryTypeName","src":"8583:5:16","typeDescriptions":{}}},"id":2781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8583:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8596:6:16","memberName":"length","nodeType":"MemberAccess","src":"8583:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2775,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2949,"src":"8545:27:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8545:58:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2774,"id":2784,"nodeType":"Return","src":"8538:65:16"}]},"documentation":{"id":2766,"nodeType":"StructuredDocumentation","src":"8143:287:16","text":" @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":2786,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8444:11:16","nodeType":"FunctionDefinition","parameters":{"id":2769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2768,"mutability":"mutable","name":"input","nameLocation":"8470:5:16","nodeType":"VariableDeclaration","scope":2786,"src":"8456:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2767,"name":"string","nodeType":"ElementaryTypeName","src":"8456:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8455:21:16"},"returnParameters":{"id":2774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2771,"mutability":"mutable","name":"success","nameLocation":"8505:7:16","nodeType":"VariableDeclaration","scope":2786,"src":"8500:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2770,"name":"bool","nodeType":"ElementaryTypeName","src":"8500:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2773,"mutability":"mutable","name":"value","nameLocation":"8521:5:16","nodeType":"VariableDeclaration","scope":2786,"src":"8514:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2772,"name":"int256","nodeType":"ElementaryTypeName","src":"8514:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8499:28:16"},"scope":3574,"src":"8435:175:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"constant":true,"id":2791,"mutability":"constant","name":"ABS_MIN_INT256","nameLocation":"8641:14:16","nodeType":"VariableDeclaration","scope":3574,"src":"8616:50:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2787,"name":"uint256","nodeType":"ElementaryTypeName","src":"8616:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"},"id":2790,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8658:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"323535","id":2789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8663:3:16","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"8658:8:16","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"}},"visibility":"private"},{"body":{"id":2827,"nodeType":"Block","src":"9132:143:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2805,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2798,"src":"9146:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2808,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2794,"src":"9158:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2807,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9152:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2806,"name":"bytes","nodeType":"ElementaryTypeName","src":"9152:5:16","typeDescriptions":{}}},"id":2809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9152:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9165:6:16","memberName":"length","nodeType":"MemberAccess","src":"9152:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9146:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2812,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2796,"src":"9175:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2813,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2798,"src":"9183:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9175:11:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9146:40:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2820,"nodeType":"IfStatement","src":"9142:63:16","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9196:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9203:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2818,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"9195:10:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2804,"id":2819,"nodeType":"Return","src":"9188:17:16"}},{"expression":{"arguments":[{"id":2822,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2794,"src":"9250:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2823,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2796,"src":"9257:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2824,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2798,"src":"9264:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2821,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2949,"src":"9222:27:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9222:46:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2804,"id":2826,"nodeType":"Return","src":"9215:53:16"}]},"documentation":{"id":2792,"nodeType":"StructuredDocumentation","src":"8673:303:16","text":" @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character or if the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":2828,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8990:11:16","nodeType":"FunctionDefinition","parameters":{"id":2799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2794,"mutability":"mutable","name":"input","nameLocation":"9025:5:16","nodeType":"VariableDeclaration","scope":2828,"src":"9011:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2793,"name":"string","nodeType":"ElementaryTypeName","src":"9011:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2796,"mutability":"mutable","name":"begin","nameLocation":"9048:5:16","nodeType":"VariableDeclaration","scope":2828,"src":"9040:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2795,"name":"uint256","nodeType":"ElementaryTypeName","src":"9040:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2798,"mutability":"mutable","name":"end","nameLocation":"9071:3:16","nodeType":"VariableDeclaration","scope":2828,"src":"9063:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2797,"name":"uint256","nodeType":"ElementaryTypeName","src":"9063:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9001:79:16"},"returnParameters":{"id":2804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2801,"mutability":"mutable","name":"success","nameLocation":"9109:7:16","nodeType":"VariableDeclaration","scope":2828,"src":"9104:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2800,"name":"bool","nodeType":"ElementaryTypeName","src":"9104:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2803,"mutability":"mutable","name":"value","nameLocation":"9125:5:16","nodeType":"VariableDeclaration","scope":2828,"src":"9118:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2802,"name":"int256","nodeType":"ElementaryTypeName","src":"9118:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9103:28:16"},"scope":3574,"src":"8981:294:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2948,"nodeType":"Block","src":"9675:812:16","statements":[{"assignments":[2843],"declarations":[{"constant":false,"id":2843,"mutability":"mutable","name":"buffer","nameLocation":"9698:6:16","nodeType":"VariableDeclaration","scope":2948,"src":"9685:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2842,"name":"bytes","nodeType":"ElementaryTypeName","src":"9685:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2848,"initialValue":{"arguments":[{"id":2846,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2831,"src":"9713:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2845,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9707:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2844,"name":"bytes","nodeType":"ElementaryTypeName","src":"9707:5:16","typeDescriptions":{}}},"id":2847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9707:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"9685:34:16"},{"assignments":[2850],"declarations":[{"constant":false,"id":2850,"mutability":"mutable","name":"sign","nameLocation":"9783:4:16","nodeType":"VariableDeclaration","scope":2948,"src":"9776:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2849,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9776:6:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":2866,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2851,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2833,"src":"9790:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2852,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2835,"src":"9799:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9790:12:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"arguments":[{"id":2861,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2843,"src":"9847:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2862,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2833,"src":"9855:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2860,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3573,"src":"9824:22:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9824:37:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2859,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9817:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2858,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9817:6:16","typeDescriptions":{}}},"id":2864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9817:45:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9790:72:16","trueExpression":{"arguments":[{"hexValue":"30","id":2856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9812:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2855,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9805:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2854,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9805:6:16","typeDescriptions":{}}},"id":2857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9805:9:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"9776:86:16"},{"assignments":[2868],"declarations":[{"constant":false,"id":2868,"mutability":"mutable","name":"positiveSign","nameLocation":"9948:12:16","nodeType":"VariableDeclaration","scope":2948,"src":"9943:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2867,"name":"bool","nodeType":"ElementaryTypeName","src":"9943:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2875,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2869,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2850,"src":"9963:4:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2b","id":2872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9978:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""},"value":"+"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""}],"id":2871,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9971:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2870,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9971:6:16","typeDescriptions":{}}},"id":2873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9971:11:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9963:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9943:39:16"},{"assignments":[2877],"declarations":[{"constant":false,"id":2877,"mutability":"mutable","name":"negativeSign","nameLocation":"9997:12:16","nodeType":"VariableDeclaration","scope":2948,"src":"9992:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2876,"name":"bool","nodeType":"ElementaryTypeName","src":"9992:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2884,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2878,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2850,"src":"10012:4:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2d","id":2881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10027:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""}],"id":2880,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10020:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2879,"name":"bytes1","nodeType":"ElementaryTypeName","src":"10020:6:16","typeDescriptions":{}}},"id":2882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10020:11:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"10012:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9992:39:16"},{"assignments":[2886],"declarations":[{"constant":false,"id":2886,"mutability":"mutable","name":"offset","nameLocation":"10049:6:16","nodeType":"VariableDeclaration","scope":2948,"src":"10041:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2885,"name":"uint256","nodeType":"ElementaryTypeName","src":"10041:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2893,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2887,"name":"positiveSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2868,"src":"10059:12:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":2888,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2877,"src":"10075:12:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10059:28:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2890,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10058:30:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10089:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6995,"src":"10058:37:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":2892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10058:39:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10041:56:16"},{"assignments":[2895,2897],"declarations":[{"constant":false,"id":2895,"mutability":"mutable","name":"absSuccess","nameLocation":"10114:10:16","nodeType":"VariableDeclaration","scope":2948,"src":"10109:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2894,"name":"bool","nodeType":"ElementaryTypeName","src":"10109:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2897,"mutability":"mutable","name":"absValue","nameLocation":"10134:8:16","nodeType":"VariableDeclaration","scope":2948,"src":"10126:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2896,"name":"uint256","nodeType":"ElementaryTypeName","src":"10126:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2905,"initialValue":{"arguments":[{"id":2899,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2831,"src":"10159:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2900,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2833,"src":"10166:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2901,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2886,"src":"10174:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10166:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2903,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2835,"src":"10182:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2898,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[2608,2645],"referencedDeclaration":2645,"src":"10146:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10146:40:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"10108:78:16"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2906,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2895,"src":"10201:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2907,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2897,"src":"10215:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2908,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2791,"src":"10226:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10215:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10201:39:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2926,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2895,"src":"10343:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":2927,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2877,"src":"10357:12:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10343:26:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2929,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2897,"src":"10373:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2930,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2791,"src":"10385:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10373:26:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10343:56:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10471:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10478:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2944,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10470:10:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2841,"id":2945,"nodeType":"Return","src":"10463:17:16"},"id":2946,"nodeType":"IfStatement","src":"10339:141:16","trueBody":{"id":2941,"nodeType":"Block","src":"10401:56:16","statements":[{"expression":{"components":[{"hexValue":"74727565","id":2933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10423:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"arguments":[{"id":2936,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10434:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2935,"name":"int256","nodeType":"ElementaryTypeName","src":"10434:6:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":2934,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10429:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10429:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":2938,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10442:3:16","memberName":"min","nodeType":"MemberAccess","src":"10429:16:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2939,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10422:24:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2841,"id":2940,"nodeType":"Return","src":"10415:31:16"}]}},"id":2947,"nodeType":"IfStatement","src":"10197:283:16","trueBody":{"id":2925,"nodeType":"Block","src":"10242:91:16","statements":[{"expression":{"components":[{"hexValue":"74727565","id":2911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10264:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"condition":{"id":2912,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2877,"src":"10270:12:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":2920,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2897,"src":"10312:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2919,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10305:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2918,"name":"int256","nodeType":"ElementaryTypeName","src":"10305:6:16","typeDescriptions":{}}},"id":2921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10305:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10270:51:16","trueExpression":{"id":2917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"10285:17:16","subExpression":{"arguments":[{"id":2915,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2897,"src":"10293:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2914,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10286:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2913,"name":"int256","nodeType":"ElementaryTypeName","src":"10286:6:16","typeDescriptions":{}}},"id":2916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10286:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2923,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10263:59:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2841,"id":2924,"nodeType":"Return","src":"10256:66:16"}]}}]},"documentation":{"id":2829,"nodeType":"StructuredDocumentation","src":"9281:223:16","text":" @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2949,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseIntUncheckedBounds","nameLocation":"9518:27:16","nodeType":"FunctionDefinition","parameters":{"id":2836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2831,"mutability":"mutable","name":"input","nameLocation":"9569:5:16","nodeType":"VariableDeclaration","scope":2949,"src":"9555:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2830,"name":"string","nodeType":"ElementaryTypeName","src":"9555:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2833,"mutability":"mutable","name":"begin","nameLocation":"9592:5:16","nodeType":"VariableDeclaration","scope":2949,"src":"9584:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2832,"name":"uint256","nodeType":"ElementaryTypeName","src":"9584:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2835,"mutability":"mutable","name":"end","nameLocation":"9615:3:16","nodeType":"VariableDeclaration","scope":2949,"src":"9607:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2834,"name":"uint256","nodeType":"ElementaryTypeName","src":"9607:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9545:79:16"},"returnParameters":{"id":2841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2838,"mutability":"mutable","name":"success","nameLocation":"9652:7:16","nodeType":"VariableDeclaration","scope":2949,"src":"9647:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2837,"name":"bool","nodeType":"ElementaryTypeName","src":"9647:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2840,"mutability":"mutable","name":"value","nameLocation":"9668:5:16","nodeType":"VariableDeclaration","scope":2949,"src":"9661:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2839,"name":"int256","nodeType":"ElementaryTypeName","src":"9661:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9646:28:16"},"scope":3574,"src":"9509:978:16","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2967,"nodeType":"Block","src":"10832:67:16","statements":[{"expression":{"arguments":[{"id":2958,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2952,"src":"10862:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10869:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2962,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2952,"src":"10878:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2961,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10872:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2960,"name":"bytes","nodeType":"ElementaryTypeName","src":"10872:5:16","typeDescriptions":{}}},"id":2963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10872:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10885:6:16","memberName":"length","nodeType":"MemberAccess","src":"10872:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2957,"name":"parseHexUint","nodeType":"Identifier","overloadedDeclarations":[2968,2999],"referencedDeclaration":2999,"src":"10849:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":2965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10849:43:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2956,"id":2966,"nodeType":"Return","src":"10842:50:16"}]},"documentation":{"id":2950,"nodeType":"StructuredDocumentation","src":"10493:259:16","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":2968,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10766:12:16","nodeType":"FunctionDefinition","parameters":{"id":2953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2952,"mutability":"mutable","name":"input","nameLocation":"10793:5:16","nodeType":"VariableDeclaration","scope":2968,"src":"10779:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2951,"name":"string","nodeType":"ElementaryTypeName","src":"10779:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10778:21:16"},"returnParameters":{"id":2956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2955,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2968,"src":"10823:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2954,"name":"uint256","nodeType":"ElementaryTypeName","src":"10823:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10822:9:16"},"scope":3574,"src":"10757:142:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2998,"nodeType":"Block","src":"11320:156:16","statements":[{"assignments":[2981,2983],"declarations":[{"constant":false,"id":2981,"mutability":"mutable","name":"success","nameLocation":"11336:7:16","nodeType":"VariableDeclaration","scope":2998,"src":"11331:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2980,"name":"bool","nodeType":"ElementaryTypeName","src":"11331:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2983,"mutability":"mutable","name":"value","nameLocation":"11353:5:16","nodeType":"VariableDeclaration","scope":2998,"src":"11345:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2982,"name":"uint256","nodeType":"ElementaryTypeName","src":"11345:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2989,"initialValue":{"arguments":[{"id":2985,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2971,"src":"11378:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2986,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2973,"src":"11385:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2987,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2975,"src":"11392:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2984,"name":"tryParseHexUint","nodeType":"Identifier","overloadedDeclarations":[3020,3057],"referencedDeclaration":3057,"src":"11362:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11362:34:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11330:66:16"},{"condition":{"id":2991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11410:8:16","subExpression":{"id":2990,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2981,"src":"11411:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2995,"nodeType":"IfStatement","src":"11406:41:16","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2992,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"11427:18:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11427:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2994,"nodeType":"RevertStatement","src":"11420:27:16"}},{"expression":{"id":2996,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2983,"src":"11464:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2979,"id":2997,"nodeType":"Return","src":"11457:12:16"}]},"documentation":{"id":2969,"nodeType":"StructuredDocumentation","src":"10905:307:16","text":" @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":2999,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"11226:12:16","nodeType":"FunctionDefinition","parameters":{"id":2976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2971,"mutability":"mutable","name":"input","nameLocation":"11253:5:16","nodeType":"VariableDeclaration","scope":2999,"src":"11239:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2970,"name":"string","nodeType":"ElementaryTypeName","src":"11239:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2973,"mutability":"mutable","name":"begin","nameLocation":"11268:5:16","nodeType":"VariableDeclaration","scope":2999,"src":"11260:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2972,"name":"uint256","nodeType":"ElementaryTypeName","src":"11260:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2975,"mutability":"mutable","name":"end","nameLocation":"11283:3:16","nodeType":"VariableDeclaration","scope":2999,"src":"11275:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2974,"name":"uint256","nodeType":"ElementaryTypeName","src":"11275:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11238:49:16"},"returnParameters":{"id":2979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2978,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2999,"src":"11311:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2977,"name":"uint256","nodeType":"ElementaryTypeName","src":"11311:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11310:9:16"},"scope":3574,"src":"11217:259:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3019,"nodeType":"Block","src":"11803:86:16","statements":[{"expression":{"arguments":[{"id":3010,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3002,"src":"11852:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11859:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3014,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3002,"src":"11868:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3013,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11862:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3012,"name":"bytes","nodeType":"ElementaryTypeName","src":"11862:5:16","typeDescriptions":{}}},"id":3015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11862:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11875:6:16","memberName":"length","nodeType":"MemberAccess","src":"11862:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3009,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3160,"src":"11820:31:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11820:62:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3008,"id":3018,"nodeType":"Return","src":"11813:69:16"}]},"documentation":{"id":3000,"nodeType":"StructuredDocumentation","src":"11482:218:16","text":" @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":3020,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11714:15:16","nodeType":"FunctionDefinition","parameters":{"id":3003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3002,"mutability":"mutable","name":"input","nameLocation":"11744:5:16","nodeType":"VariableDeclaration","scope":3020,"src":"11730:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3001,"name":"string","nodeType":"ElementaryTypeName","src":"11730:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11729:21:16"},"returnParameters":{"id":3008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3005,"mutability":"mutable","name":"success","nameLocation":"11779:7:16","nodeType":"VariableDeclaration","scope":3020,"src":"11774:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3004,"name":"bool","nodeType":"ElementaryTypeName","src":"11774:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3007,"mutability":"mutable","name":"value","nameLocation":"11796:5:16","nodeType":"VariableDeclaration","scope":3020,"src":"11788:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3006,"name":"uint256","nodeType":"ElementaryTypeName","src":"11788:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11773:29:16"},"scope":3574,"src":"11705:184:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3056,"nodeType":"Block","src":"12297:147:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3034,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"12311:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3037,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3023,"src":"12323:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3036,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12317:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3035,"name":"bytes","nodeType":"ElementaryTypeName","src":"12317:5:16","typeDescriptions":{}}},"id":3038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12317:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12330:6:16","memberName":"length","nodeType":"MemberAccess","src":"12317:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12311:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3041,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3025,"src":"12340:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3042,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"12348:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12340:11:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12311:40:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3049,"nodeType":"IfStatement","src":"12307:63:16","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12361:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12368:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3047,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"12360:10:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3033,"id":3048,"nodeType":"Return","src":"12353:17:16"}},{"expression":{"arguments":[{"id":3051,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3023,"src":"12419:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3052,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3025,"src":"12426:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3053,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"12433:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3050,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3160,"src":"12387:31:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12387:50:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3033,"id":3055,"nodeType":"Return","src":"12380:57:16"}]},"documentation":{"id":3021,"nodeType":"StructuredDocumentation","src":"11895:241:16","text":" @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":3057,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"12150:15:16","nodeType":"FunctionDefinition","parameters":{"id":3028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3023,"mutability":"mutable","name":"input","nameLocation":"12189:5:16","nodeType":"VariableDeclaration","scope":3057,"src":"12175:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3022,"name":"string","nodeType":"ElementaryTypeName","src":"12175:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3025,"mutability":"mutable","name":"begin","nameLocation":"12212:5:16","nodeType":"VariableDeclaration","scope":3057,"src":"12204:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3024,"name":"uint256","nodeType":"ElementaryTypeName","src":"12204:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3027,"mutability":"mutable","name":"end","nameLocation":"12235:3:16","nodeType":"VariableDeclaration","scope":3057,"src":"12227:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3026,"name":"uint256","nodeType":"ElementaryTypeName","src":"12227:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12165:79:16"},"returnParameters":{"id":3033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3030,"mutability":"mutable","name":"success","nameLocation":"12273:7:16","nodeType":"VariableDeclaration","scope":3057,"src":"12268:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3029,"name":"bool","nodeType":"ElementaryTypeName","src":"12268:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3032,"mutability":"mutable","name":"value","nameLocation":"12290:5:16","nodeType":"VariableDeclaration","scope":3057,"src":"12282:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3031,"name":"uint256","nodeType":"ElementaryTypeName","src":"12282:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12267:29:16"},"scope":3574,"src":"12141:303:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3159,"nodeType":"Block","src":"12853:881:16","statements":[{"assignments":[3072],"declarations":[{"constant":false,"id":3072,"mutability":"mutable","name":"buffer","nameLocation":"12876:6:16","nodeType":"VariableDeclaration","scope":3159,"src":"12863:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3071,"name":"bytes","nodeType":"ElementaryTypeName","src":"12863:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3077,"initialValue":{"arguments":[{"id":3075,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3060,"src":"12891:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3074,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12885:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3073,"name":"bytes","nodeType":"ElementaryTypeName","src":"12885:5:16","typeDescriptions":{}}},"id":3076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12885:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"12863:34:16"},{"assignments":[3079],"declarations":[{"constant":false,"id":3079,"mutability":"mutable","name":"hasPrefix","nameLocation":"12950:9:16","nodeType":"VariableDeclaration","scope":3159,"src":"12945:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3078,"name":"bool","nodeType":"ElementaryTypeName","src":"12945:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3099,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3080,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3064,"src":"12963:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3081,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3062,"src":"12969:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12977:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12969:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12963:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3085,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12962:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":3097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":3089,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3072,"src":"13013:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3090,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3062,"src":"13021:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3088,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3573,"src":"12990:22:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12990:37:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3087,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12983:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3086,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12983:6:16","typeDescriptions":{}}},"id":3092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12983:45:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":3095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13039:4:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":3094,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13032:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3093,"name":"bytes2","nodeType":"ElementaryTypeName","src":"13032:6:16","typeDescriptions":{}}},"id":3096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13032:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"12983:61:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12962:82:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"12945:99:16"},{"assignments":[3101],"declarations":[{"constant":false,"id":3101,"mutability":"mutable","name":"offset","nameLocation":"13133:6:16","nodeType":"VariableDeclaration","scope":3159,"src":"13125:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3100,"name":"uint256","nodeType":"ElementaryTypeName","src":"13125:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3107,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3102,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3079,"src":"13142:9:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13152:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6995,"src":"13142:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":3104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13142:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":3105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13163:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"13142:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13125:39:16"},{"assignments":[3109],"declarations":[{"constant":false,"id":3109,"mutability":"mutable","name":"result","nameLocation":"13183:6:16","nodeType":"VariableDeclaration","scope":3159,"src":"13175:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3108,"name":"uint256","nodeType":"ElementaryTypeName","src":"13175:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3111,"initialValue":{"hexValue":"30","id":3110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13192:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13175:18:16"},{"body":{"id":3153,"nodeType":"Block","src":"13250:447:16","statements":[{"assignments":[3125],"declarations":[{"constant":false,"id":3125,"mutability":"mutable","name":"chr","nameLocation":"13270:3:16","nodeType":"VariableDeclaration","scope":3153,"src":"13264:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3124,"name":"uint8","nodeType":"ElementaryTypeName","src":"13264:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3135,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":3130,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3072,"src":"13319:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3131,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3113,"src":"13327:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3129,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3573,"src":"13296:22:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13296:33:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3128,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13289:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3127,"name":"bytes1","nodeType":"ElementaryTypeName","src":"13289:6:16","typeDescriptions":{}}},"id":3133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13289:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3126,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3395,"src":"13276:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":3134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13276:55:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"13264:67:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3136,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3125,"src":"13349:3:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3135","id":3137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13355:2:16","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"src":"13349:8:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3143,"nodeType":"IfStatement","src":"13345:31:16","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13367:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13374:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3141,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"13366:10:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3070,"id":3142,"nodeType":"Return","src":"13359:17:16"}},{"expression":{"id":3146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3144,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3109,"src":"13390:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3136","id":3145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13400:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13390:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3147,"nodeType":"ExpressionStatement","src":"13390:12:16"},{"id":3152,"nodeType":"UncheckedBlock","src":"13416:271:16","statements":[{"expression":{"id":3150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3148,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3109,"src":"13659:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3149,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3125,"src":"13669:3:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13659:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3151,"nodeType":"ExpressionStatement","src":"13659:13:16"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3118,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3113,"src":"13236:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3119,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3064,"src":"13240:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13236:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3154,"initializationExpression":{"assignments":[3113],"declarations":[{"constant":false,"id":3113,"mutability":"mutable","name":"i","nameLocation":"13216:1:16","nodeType":"VariableDeclaration","scope":3154,"src":"13208:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3112,"name":"uint256","nodeType":"ElementaryTypeName","src":"13208:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3117,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3114,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3062,"src":"13220:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3115,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3101,"src":"13228:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13220:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13208:26:16"},"loopExpression":{"expression":{"id":3122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"13245:3:16","subExpression":{"id":3121,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3113,"src":"13247:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3123,"nodeType":"ExpressionStatement","src":"13245:3:16"},"nodeType":"ForStatement","src":"13203:494:16"},{"expression":{"components":[{"hexValue":"74727565","id":3155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13714:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3156,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3109,"src":"13720:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3157,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13713:14:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3070,"id":3158,"nodeType":"Return","src":"13706:21:16"}]},"documentation":{"id":3058,"nodeType":"StructuredDocumentation","src":"12450:227:16","text":" @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":3160,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseHexUintUncheckedBounds","nameLocation":"12691:31:16","nodeType":"FunctionDefinition","parameters":{"id":3065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3060,"mutability":"mutable","name":"input","nameLocation":"12746:5:16","nodeType":"VariableDeclaration","scope":3160,"src":"12732:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3059,"name":"string","nodeType":"ElementaryTypeName","src":"12732:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3062,"mutability":"mutable","name":"begin","nameLocation":"12769:5:16","nodeType":"VariableDeclaration","scope":3160,"src":"12761:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3061,"name":"uint256","nodeType":"ElementaryTypeName","src":"12761:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3064,"mutability":"mutable","name":"end","nameLocation":"12792:3:16","nodeType":"VariableDeclaration","scope":3160,"src":"12784:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3063,"name":"uint256","nodeType":"ElementaryTypeName","src":"12784:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12722:79:16"},"returnParameters":{"id":3070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3067,"mutability":"mutable","name":"success","nameLocation":"12829:7:16","nodeType":"VariableDeclaration","scope":3160,"src":"12824:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3066,"name":"bool","nodeType":"ElementaryTypeName","src":"12824:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3069,"mutability":"mutable","name":"value","nameLocation":"12846:5:16","nodeType":"VariableDeclaration","scope":3160,"src":"12838:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3068,"name":"uint256","nodeType":"ElementaryTypeName","src":"12838:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12823:29:16"},"scope":3574,"src":"12682:1052:16","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3178,"nodeType":"Block","src":"14032:67:16","statements":[{"expression":{"arguments":[{"id":3169,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3163,"src":"14062:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14069:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3173,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3163,"src":"14078:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3172,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14072:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3171,"name":"bytes","nodeType":"ElementaryTypeName","src":"14072:5:16","typeDescriptions":{}}},"id":3174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14072:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14085:6:16","memberName":"length","nodeType":"MemberAccess","src":"14072:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3168,"name":"parseAddress","nodeType":"Identifier","overloadedDeclarations":[3179,3210],"referencedDeclaration":3210,"src":"14049:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (address)"}},"id":3176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14049:43:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3167,"id":3177,"nodeType":"Return","src":"14042:50:16"}]},"documentation":{"id":3161,"nodeType":"StructuredDocumentation","src":"13740:212:16","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":3179,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13966:12:16","nodeType":"FunctionDefinition","parameters":{"id":3164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3163,"mutability":"mutable","name":"input","nameLocation":"13993:5:16","nodeType":"VariableDeclaration","scope":3179,"src":"13979:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3162,"name":"string","nodeType":"ElementaryTypeName","src":"13979:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13978:21:16"},"returnParameters":{"id":3167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3166,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3179,"src":"14023:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3165,"name":"address","nodeType":"ElementaryTypeName","src":"14023:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14022:9:16"},"scope":3574,"src":"13957:142:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3209,"nodeType":"Block","src":"14472:165:16","statements":[{"assignments":[3192,3194],"declarations":[{"constant":false,"id":3192,"mutability":"mutable","name":"success","nameLocation":"14488:7:16","nodeType":"VariableDeclaration","scope":3209,"src":"14483:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3191,"name":"bool","nodeType":"ElementaryTypeName","src":"14483:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3194,"mutability":"mutable","name":"value","nameLocation":"14505:5:16","nodeType":"VariableDeclaration","scope":3209,"src":"14497:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3193,"name":"address","nodeType":"ElementaryTypeName","src":"14497:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3200,"initialValue":{"arguments":[{"id":3196,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"14530:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3197,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3184,"src":"14537:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3198,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"14544:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3195,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[3231,3335],"referencedDeclaration":3335,"src":"14514:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":3199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14514:34:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"nodeType":"VariableDeclarationStatement","src":"14482:66:16"},{"condition":{"id":3202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14562:8:16","subExpression":{"id":3201,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"14563:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3206,"nodeType":"IfStatement","src":"14558:50:16","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3203,"name":"StringsInvalidAddressFormat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2238,"src":"14579:27:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14579:29:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3205,"nodeType":"RevertStatement","src":"14572:36:16"}},{"expression":{"id":3207,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"14625:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3190,"id":3208,"nodeType":"Return","src":"14618:12:16"}]},"documentation":{"id":3180,"nodeType":"StructuredDocumentation","src":"14105:259:16","text":" @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":3210,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"14378:12:16","nodeType":"FunctionDefinition","parameters":{"id":3187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3182,"mutability":"mutable","name":"input","nameLocation":"14405:5:16","nodeType":"VariableDeclaration","scope":3210,"src":"14391:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3181,"name":"string","nodeType":"ElementaryTypeName","src":"14391:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3184,"mutability":"mutable","name":"begin","nameLocation":"14420:5:16","nodeType":"VariableDeclaration","scope":3210,"src":"14412:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3183,"name":"uint256","nodeType":"ElementaryTypeName","src":"14412:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3186,"mutability":"mutable","name":"end","nameLocation":"14435:3:16","nodeType":"VariableDeclaration","scope":3210,"src":"14427:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3185,"name":"uint256","nodeType":"ElementaryTypeName","src":"14427:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14390:49:16"},"returnParameters":{"id":3190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3189,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3210,"src":"14463:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3188,"name":"address","nodeType":"ElementaryTypeName","src":"14463:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14462:9:16"},"scope":3574,"src":"14369:268:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3230,"nodeType":"Block","src":"14944:70:16","statements":[{"expression":{"arguments":[{"id":3221,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3213,"src":"14977:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14984:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3225,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3213,"src":"14993:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3224,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14987:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3223,"name":"bytes","nodeType":"ElementaryTypeName","src":"14987:5:16","typeDescriptions":{}}},"id":3226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14987:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15000:6:16","memberName":"length","nodeType":"MemberAccess","src":"14987:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3220,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[3231,3335],"referencedDeclaration":3335,"src":"14961:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":3228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14961:46:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3219,"id":3229,"nodeType":"Return","src":"14954:53:16"}]},"documentation":{"id":3211,"nodeType":"StructuredDocumentation","src":"14643:198:16","text":" @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n formatted address. See {parseAddress-string} requirements."},"id":3231,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14855:15:16","nodeType":"FunctionDefinition","parameters":{"id":3214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3213,"mutability":"mutable","name":"input","nameLocation":"14885:5:16","nodeType":"VariableDeclaration","scope":3231,"src":"14871:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3212,"name":"string","nodeType":"ElementaryTypeName","src":"14871:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14870:21:16"},"returnParameters":{"id":3219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3216,"mutability":"mutable","name":"success","nameLocation":"14920:7:16","nodeType":"VariableDeclaration","scope":3231,"src":"14915:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3215,"name":"bool","nodeType":"ElementaryTypeName","src":"14915:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3218,"mutability":"mutable","name":"value","nameLocation":"14937:5:16","nodeType":"VariableDeclaration","scope":3231,"src":"14929:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3217,"name":"address","nodeType":"ElementaryTypeName","src":"14929:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14914:29:16"},"scope":3574,"src":"14846:168:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3334,"nodeType":"Block","src":"15407:733:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3245,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3238,"src":"15421:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3248,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3234,"src":"15433:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3247,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15427:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3246,"name":"bytes","nodeType":"ElementaryTypeName","src":"15427:5:16","typeDescriptions":{}}},"id":3249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15427:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15440:6:16","memberName":"length","nodeType":"MemberAccess","src":"15427:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15421:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3252,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3236,"src":"15450:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3253,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3238,"src":"15458:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15450:11:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15421:40:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3263,"nodeType":"IfStatement","src":"15417:72:16","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15471:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":3259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15486:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3258,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15478:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3257,"name":"address","nodeType":"ElementaryTypeName","src":"15478:7:16","typeDescriptions":{}}},"id":3260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15478:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3261,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15470:19:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3244,"id":3262,"nodeType":"Return","src":"15463:26:16"}},{"assignments":[3265],"declarations":[{"constant":false,"id":3265,"mutability":"mutable","name":"hasPrefix","nameLocation":"15505:9:16","nodeType":"VariableDeclaration","scope":3334,"src":"15500:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3264,"name":"bool","nodeType":"ElementaryTypeName","src":"15500:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3288,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3266,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3238,"src":"15518:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3267,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3236,"src":"15524:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15532:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15524:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15518:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3271,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15517:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":3286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"id":3277,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3234,"src":"15574:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3276,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15568:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3275,"name":"bytes","nodeType":"ElementaryTypeName","src":"15568:5:16","typeDescriptions":{}}},"id":3278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15568:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3279,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3236,"src":"15582:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3274,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3573,"src":"15545:22:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15545:43:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3273,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15538:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3272,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15538:6:16","typeDescriptions":{}}},"id":3281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15538:51:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":3284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15600:4:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":3283,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15593:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3282,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15593:6:16","typeDescriptions":{}}},"id":3285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15593:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"15538:67:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15517:88:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"15500:105:16"},{"assignments":[3290],"declarations":[{"constant":false,"id":3290,"mutability":"mutable","name":"expectedLength","nameLocation":"15694:14:16","nodeType":"VariableDeclaration","scope":3334,"src":"15686:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3289,"name":"uint256","nodeType":"ElementaryTypeName","src":"15686:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3298,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3430","id":3291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15711:2:16","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3292,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3265,"src":"15716:9:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15726:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6995,"src":"15716:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":3294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15716:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":3295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15737:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15716:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15711:27:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15686:52:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3299,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3238,"src":"15803:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3300,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3236,"src":"15809:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15803:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3302,"name":"expectedLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3290,"src":"15818:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15803:29:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3332,"nodeType":"Block","src":"16083:51:16","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":3325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16105:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":3328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16120:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3327,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16112:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3326,"name":"address","nodeType":"ElementaryTypeName","src":"16112:7:16","typeDescriptions":{}}},"id":3329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16112:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3330,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16104:19:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3244,"id":3331,"nodeType":"Return","src":"16097:26:16"}]},"id":3333,"nodeType":"IfStatement","src":"15799:335:16","trueBody":{"id":3324,"nodeType":"Block","src":"15834:243:16","statements":[{"assignments":[3305,3307],"declarations":[{"constant":false,"id":3305,"mutability":"mutable","name":"s","nameLocation":"15955:1:16","nodeType":"VariableDeclaration","scope":3324,"src":"15950:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3304,"name":"bool","nodeType":"ElementaryTypeName","src":"15950:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3307,"mutability":"mutable","name":"v","nameLocation":"15966:1:16","nodeType":"VariableDeclaration","scope":3324,"src":"15958:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3306,"name":"uint256","nodeType":"ElementaryTypeName","src":"15958:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3313,"initialValue":{"arguments":[{"id":3309,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3234,"src":"16003:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3310,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3236,"src":"16010:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3311,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3238,"src":"16017:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3308,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3160,"src":"15971:31:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15971:50:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"15949:72:16"},{"expression":{"components":[{"id":3314,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3305,"src":"16043:1:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"arguments":[{"id":3319,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3307,"src":"16062:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3318,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16054:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3317,"name":"uint160","nodeType":"ElementaryTypeName","src":"16054:7:16","typeDescriptions":{}}},"id":3320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3316,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16046:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3315,"name":"address","nodeType":"ElementaryTypeName","src":"16046:7:16","typeDescriptions":{}}},"id":3321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16046:19:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3322,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16042:24:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3244,"id":3323,"nodeType":"Return","src":"16035:31:16"}]}}]},"documentation":{"id":3232,"nodeType":"StructuredDocumentation","src":"15020:226:16","text":" @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n formatted address. See {parseAddress-string-uint256-uint256} requirements."},"id":3335,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"15260:15:16","nodeType":"FunctionDefinition","parameters":{"id":3239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3234,"mutability":"mutable","name":"input","nameLocation":"15299:5:16","nodeType":"VariableDeclaration","scope":3335,"src":"15285:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3233,"name":"string","nodeType":"ElementaryTypeName","src":"15285:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3236,"mutability":"mutable","name":"begin","nameLocation":"15322:5:16","nodeType":"VariableDeclaration","scope":3335,"src":"15314:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3235,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3238,"mutability":"mutable","name":"end","nameLocation":"15345:3:16","nodeType":"VariableDeclaration","scope":3335,"src":"15337:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3237,"name":"uint256","nodeType":"ElementaryTypeName","src":"15337:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15275:79:16"},"returnParameters":{"id":3244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3241,"mutability":"mutable","name":"success","nameLocation":"15383:7:16","nodeType":"VariableDeclaration","scope":3335,"src":"15378:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3240,"name":"bool","nodeType":"ElementaryTypeName","src":"15378:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3243,"mutability":"mutable","name":"value","nameLocation":"15400:5:16","nodeType":"VariableDeclaration","scope":3335,"src":"15392:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3242,"name":"address","nodeType":"ElementaryTypeName","src":"15392:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15377:29:16"},"scope":3574,"src":"15251:889:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3394,"nodeType":"Block","src":"16209:461:16","statements":[{"assignments":[3343],"declarations":[{"constant":false,"id":3343,"mutability":"mutable","name":"value","nameLocation":"16225:5:16","nodeType":"VariableDeclaration","scope":3394,"src":"16219:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3342,"name":"uint8","nodeType":"ElementaryTypeName","src":"16219:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3348,"initialValue":{"arguments":[{"id":3346,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3337,"src":"16239:3:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3345,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16233:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3344,"name":"uint8","nodeType":"ElementaryTypeName","src":"16233:5:16","typeDescriptions":{}}},"id":3347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16233:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"16219:24:16"},{"id":3391,"nodeType":"UncheckedBlock","src":"16403:238:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3349,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3343,"src":"16431:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3437","id":3350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16439:2:16","typeDescriptions":{"typeIdentifier":"t_rational_47_by_1","typeString":"int_const 47"},"value":"47"},"src":"16431:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3352,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3343,"src":"16445:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3538","id":3353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16453:2:16","typeDescriptions":{"typeIdentifier":"t_rational_58_by_1","typeString":"int_const 58"},"value":"58"},"src":"16445:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16431:24:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3360,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3343,"src":"16491:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":3361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16499:2:16","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"16491:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3363,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3343,"src":"16505:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"313033","id":3364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16513:3:16","typeDescriptions":{"typeIdentifier":"t_rational_103_by_1","typeString":"int_const 103"},"value":"103"},"src":"16505:11:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16491:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3371,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3343,"src":"16552:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3634","id":3372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16560:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"16552:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3374,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3343,"src":"16566:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3731","id":3375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16574:2:16","typeDescriptions":{"typeIdentifier":"t_rational_71_by_1","typeString":"int_const 71"},"value":"71"},"src":"16566:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16552:24:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"expression":{"arguments":[{"id":3384,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16620:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3383,"name":"uint8","nodeType":"ElementaryTypeName","src":"16620:5:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":3382,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16615:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16615:11:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":3386,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16627:3:16","memberName":"max","nodeType":"MemberAccess","src":"16615:15:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":3341,"id":3387,"nodeType":"Return","src":"16608:22:16"},"id":3388,"nodeType":"IfStatement","src":"16548:82:16","trueBody":{"expression":{"id":3380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3378,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3343,"src":"16578:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3535","id":3379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16587:2:16","typeDescriptions":{"typeIdentifier":"t_rational_55_by_1","typeString":"int_const 55"},"value":"55"},"src":"16578:11:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3381,"nodeType":"ExpressionStatement","src":"16578:11:16"}},"id":3389,"nodeType":"IfStatement","src":"16487:143:16","trueBody":{"expression":{"id":3369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3367,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3343,"src":"16518:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3837","id":3368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16527:2:16","typeDescriptions":{"typeIdentifier":"t_rational_87_by_1","typeString":"int_const 87"},"value":"87"},"src":"16518:11:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3370,"nodeType":"ExpressionStatement","src":"16518:11:16"}},"id":3390,"nodeType":"IfStatement","src":"16427:203:16","trueBody":{"expression":{"id":3358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3356,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3343,"src":"16457:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3438","id":3357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16466:2:16","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"16457:11:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3359,"nodeType":"ExpressionStatement","src":"16457:11:16"}}]},{"expression":{"id":3392,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3343,"src":"16658:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":3341,"id":3393,"nodeType":"Return","src":"16651:12:16"}]},"id":3395,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseChr","nameLocation":"16155:12:16","nodeType":"FunctionDefinition","parameters":{"id":3338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3337,"mutability":"mutable","name":"chr","nameLocation":"16175:3:16","nodeType":"VariableDeclaration","scope":3395,"src":"16168:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":3336,"name":"bytes1","nodeType":"ElementaryTypeName","src":"16168:6:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"src":"16167:12:16"},"returnParameters":{"id":3341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3340,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3395,"src":"16202:5:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3339,"name":"uint8","nodeType":"ElementaryTypeName","src":"16202:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16201:7:16"},"scope":3574,"src":"16146:524:16","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3560,"nodeType":"Block","src":"17336:1331:16","statements":[{"assignments":[3404],"declarations":[{"constant":false,"id":3404,"mutability":"mutable","name":"buffer","nameLocation":"17359:6:16","nodeType":"VariableDeclaration","scope":3560,"src":"17346:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3403,"name":"bytes","nodeType":"ElementaryTypeName","src":"17346:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3409,"initialValue":{"arguments":[{"id":3407,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3398,"src":"17374:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3406,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17368:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3405,"name":"bytes","nodeType":"ElementaryTypeName","src":"17368:5:16","typeDescriptions":{}}},"id":3408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17368:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17346:34:16"},{"assignments":[3411],"declarations":[{"constant":false,"id":3411,"mutability":"mutable","name":"output","nameLocation":"17403:6:16","nodeType":"VariableDeclaration","scope":3560,"src":"17390:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3410,"name":"bytes","nodeType":"ElementaryTypeName","src":"17390:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3419,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17422:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":3415,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3404,"src":"17426:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17433:6:16","memberName":"length","nodeType":"MemberAccess","src":"17426:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17422:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3413,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"17412:9:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":3412,"name":"bytes","nodeType":"ElementaryTypeName","src":"17416:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":3418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17412:28:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17390:50:16"},{"assignments":[3421],"declarations":[{"constant":false,"id":3421,"mutability":"mutable","name":"outputLength","nameLocation":"17481:12:16","nodeType":"VariableDeclaration","scope":3560,"src":"17473:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3420,"name":"uint256","nodeType":"ElementaryTypeName","src":"17473:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3423,"initialValue":{"hexValue":"30","id":3422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17496:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17473:24:16"},{"body":{"id":3552,"nodeType":"Block","src":"17548:854:16","statements":[{"assignments":[3435],"declarations":[{"constant":false,"id":3435,"mutability":"mutable","name":"char","nameLocation":"17569:4:16","nodeType":"VariableDeclaration","scope":3552,"src":"17562:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":3434,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17562:6:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":3443,"initialValue":{"arguments":[{"arguments":[{"id":3439,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3404,"src":"17606:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3440,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3425,"src":"17614:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3438,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3573,"src":"17583:22:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17583:33:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3437,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17576:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3436,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17576:6:16","typeDescriptions":{}}},"id":3442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17576:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"17562:55:16"},{"condition":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3444,"name":"SPECIAL_CHARS_LOOKUP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2225,"src":"17637:20:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17661:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"arguments":[{"id":3448,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3435,"src":"17672:4:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3447,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17666:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3446,"name":"uint8","nodeType":"ElementaryTypeName","src":"17666:5:16","typeDescriptions":{}}},"id":3449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17666:11:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"17661:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3451,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17660:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17637:41:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3453,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17636:43:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17683:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17636:48:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3456,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17635:50:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3550,"nodeType":"Block","src":"18330:62:16","statements":[{"expression":{"id":3548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3543,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3411,"src":"18348:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3546,"indexExpression":{"id":3545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18355:14:16","subExpression":{"id":3544,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3421,"src":"18355:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18348:22:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3547,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3435,"src":"18373:4:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"18348:29:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3549,"nodeType":"ExpressionStatement","src":"18348:29:16"}]},"id":3551,"nodeType":"IfStatement","src":"17631:761:16","trueBody":{"id":3542,"nodeType":"Block","src":"17687:637:16","statements":[{"expression":{"id":3462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3457,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3411,"src":"17705:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3460,"indexExpression":{"id":3459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17712:14:16","subExpression":{"id":3458,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3421,"src":"17712:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17705:22:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":3461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17730:4:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"17705:29:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3463,"nodeType":"ExpressionStatement","src":"17705:29:16"},{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3464,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3435,"src":"17756:4:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783038","id":3465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17764:4:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"17756:12:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3474,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3435,"src":"17825:4:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783039","id":3475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17833:4:16","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"17825:12:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3484,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3435,"src":"17894:4:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783061","id":3485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17902:4:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"17894:12:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3494,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3435,"src":"17963:4:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783063","id":3495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17971:4:16","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"17963:12:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3504,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3435,"src":"18032:4:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783064","id":3505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18040:4:16","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"18032:12:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3514,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3435,"src":"18101:4:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783563","id":3515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18109:4:16","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"18101:12:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3524,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3435,"src":"18171:4:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783232","id":3525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18179:4:16","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"18171:12:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3535,"nodeType":"IfStatement","src":"18167:143:16","trueBody":{"id":3534,"nodeType":"Block","src":"18185:125:16","statements":[{"expression":{"id":3532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3527,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3411,"src":"18263:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3530,"indexExpression":{"id":3529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18270:14:16","subExpression":{"id":3528,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3421,"src":"18270:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18263:22:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"22","id":3531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18288:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0","typeString":"literal_string \"\"\""},"value":"\""},"src":"18263:28:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3533,"nodeType":"ExpressionStatement","src":"18263:28:16"}]}},"id":3536,"nodeType":"IfStatement","src":"18097:213:16","trueBody":{"expression":{"id":3522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3517,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3411,"src":"18115:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3520,"indexExpression":{"id":3519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18122:14:16","subExpression":{"id":3518,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3421,"src":"18122:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18115:22:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":3521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18140:4:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"18115:29:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3523,"nodeType":"ExpressionStatement","src":"18115:29:16"}},"id":3537,"nodeType":"IfStatement","src":"18028:282:16","trueBody":{"expression":{"id":3512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3507,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3411,"src":"18046:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3510,"indexExpression":{"id":3509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18053:14:16","subExpression":{"id":3508,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3421,"src":"18053:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18046:22:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"72","id":3511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18071:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_414f72a4d550cad29f17d9d99a4af64b3776ec5538cd440cef0f03fef2e9e010","typeString":"literal_string \"r\""},"value":"r"},"src":"18046:28:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3513,"nodeType":"ExpressionStatement","src":"18046:28:16"}},"id":3538,"nodeType":"IfStatement","src":"17959:351:16","trueBody":{"expression":{"id":3502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3497,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3411,"src":"17977:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3500,"indexExpression":{"id":3499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17984:14:16","subExpression":{"id":3498,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3421,"src":"17984:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17977:22:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66","id":3501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18002:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_d1e8aeb79500496ef3dc2e57ba746a8315d048b7a664a2bf948db4fa91960483","typeString":"literal_string \"f\""},"value":"f"},"src":"17977:28:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3503,"nodeType":"ExpressionStatement","src":"17977:28:16"}},"id":3539,"nodeType":"IfStatement","src":"17890:420:16","trueBody":{"expression":{"id":3492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3487,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3411,"src":"17908:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3490,"indexExpression":{"id":3489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17915:14:16","subExpression":{"id":3488,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3421,"src":"17915:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17908:22:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"6e","id":3491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17933:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_4b4ecedb4964a40fe416b16c7bd8b46092040ec42ef0aa69e59f09872f105cf3","typeString":"literal_string \"n\""},"value":"n"},"src":"17908:28:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3493,"nodeType":"ExpressionStatement","src":"17908:28:16"}},"id":3540,"nodeType":"IfStatement","src":"17821:489:16","trueBody":{"expression":{"id":3482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3477,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3411,"src":"17839:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3480,"indexExpression":{"id":3479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17846:14:16","subExpression":{"id":3478,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3421,"src":"17846:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17839:22:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74","id":3481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17864:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_cac1bb71f0a97c8ac94ca9546b43178a9ad254c7b757ac07433aa6df35cd8089","typeString":"literal_string \"t\""},"value":"t"},"src":"17839:28:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3483,"nodeType":"ExpressionStatement","src":"17839:28:16"}},"id":3541,"nodeType":"IfStatement","src":"17752:558:16","trueBody":{"expression":{"id":3472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3467,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3411,"src":"17770:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3470,"indexExpression":{"id":3469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17777:14:16","subExpression":{"id":3468,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3421,"src":"17777:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17770:22:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"62","id":3471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17795:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_b5553de315e0edf504d9150af82dafa5c4667fa618ed0a6f19c69b41166c5510","typeString":"literal_string \"b\""},"value":"b"},"src":"17770:28:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3473,"nodeType":"ExpressionStatement","src":"17770:28:16"}}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3427,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3425,"src":"17524:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3428,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3404,"src":"17528:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17535:6:16","memberName":"length","nodeType":"MemberAccess","src":"17528:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17524:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3553,"initializationExpression":{"assignments":[3425],"declarations":[{"constant":false,"id":3425,"mutability":"mutable","name":"i","nameLocation":"17521:1:16","nodeType":"VariableDeclaration","scope":3553,"src":"17513:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3424,"name":"uint256","nodeType":"ElementaryTypeName","src":"17513:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3426,"nodeType":"VariableDeclarationStatement","src":"17513:9:16"},"loopExpression":{"expression":{"id":3432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17543:3:16","subExpression":{"id":3431,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3425,"src":"17545:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3433,"nodeType":"ExpressionStatement","src":"17543:3:16"},"nodeType":"ForStatement","src":"17508:894:16"},{"AST":{"nodeType":"YulBlock","src":"18500:129:16","statements":[{"expression":{"arguments":[{"name":"output","nodeType":"YulIdentifier","src":"18521:6:16"},{"name":"outputLength","nodeType":"YulIdentifier","src":"18529:12:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18514:6:16"},"nodeType":"YulFunctionCall","src":"18514:28:16"},"nodeType":"YulExpressionStatement","src":"18514:28:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18562:4:16","type":"","value":"0x40"},{"arguments":[{"name":"output","nodeType":"YulIdentifier","src":"18572:6:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18584:1:16","type":"","value":"5"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18591:1:16","type":"","value":"5"},{"arguments":[{"name":"outputLength","nodeType":"YulIdentifier","src":"18598:12:16"},{"kind":"number","nodeType":"YulLiteral","src":"18612:2:16","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18594:3:16"},"nodeType":"YulFunctionCall","src":"18594:21:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"18587:3:16"},"nodeType":"YulFunctionCall","src":"18587:29:16"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"18580:3:16"},"nodeType":"YulFunctionCall","src":"18580:37:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18568:3:16"},"nodeType":"YulFunctionCall","src":"18568:50:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18555:6:16"},"nodeType":"YulFunctionCall","src":"18555:64:16"},"nodeType":"YulExpressionStatement","src":"18555:64:16"}]},"evmVersion":"paris","externalReferences":[{"declaration":3411,"isOffset":false,"isSlot":false,"src":"18521:6:16","valueSize":1},{"declaration":3411,"isOffset":false,"isSlot":false,"src":"18572:6:16","valueSize":1},{"declaration":3421,"isOffset":false,"isSlot":false,"src":"18529:12:16","valueSize":1},{"declaration":3421,"isOffset":false,"isSlot":false,"src":"18598:12:16","valueSize":1}],"flags":["memory-safe"],"id":3554,"nodeType":"InlineAssembly","src":"18475:154:16"},{"expression":{"arguments":[{"id":3557,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3411,"src":"18653:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3556,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18646:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3555,"name":"string","nodeType":"ElementaryTypeName","src":"18646:6:16","typeDescriptions":{}}},"id":3558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18646:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3402,"id":3559,"nodeType":"Return","src":"18639:21:16"}]},"documentation":{"id":3396,"nodeType":"StructuredDocumentation","src":"16676:576:16","text":" @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n characters that are not in this range, but other tooling may provide different results."},"id":3561,"implemented":true,"kind":"function","modifiers":[],"name":"escapeJSON","nameLocation":"17266:10:16","nodeType":"FunctionDefinition","parameters":{"id":3399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3398,"mutability":"mutable","name":"input","nameLocation":"17291:5:16","nodeType":"VariableDeclaration","scope":3561,"src":"17277:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3397,"name":"string","nodeType":"ElementaryTypeName","src":"17277:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17276:21:16"},"returnParameters":{"id":3402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3401,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3561,"src":"17321:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3400,"name":"string","nodeType":"ElementaryTypeName","src":"17321:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17320:15:16"},"scope":3574,"src":"17257:1410:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3572,"nodeType":"Block","src":"19052:225:16","statements":[{"AST":{"nodeType":"YulBlock","src":"19201:70:16","statements":[{"nodeType":"YulAssignment","src":"19215:46:16","value":{"arguments":[{"arguments":[{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"19238:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"19246:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19234:3:16"},"nodeType":"YulFunctionCall","src":"19234:17:16"},{"name":"offset","nodeType":"YulIdentifier","src":"19253:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19230:3:16"},"nodeType":"YulFunctionCall","src":"19230:30:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19224:5:16"},"nodeType":"YulFunctionCall","src":"19224:37:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"19215:5:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3564,"isOffset":false,"isSlot":false,"src":"19238:6:16","valueSize":1},{"declaration":3566,"isOffset":false,"isSlot":false,"src":"19253:6:16","valueSize":1},{"declaration":3569,"isOffset":false,"isSlot":false,"src":"19215:5:16","valueSize":1}],"flags":["memory-safe"],"id":3571,"nodeType":"InlineAssembly","src":"19176:95:16"}]},"documentation":{"id":3562,"nodeType":"StructuredDocumentation","src":"18673:268:16","text":" @dev Reads a bytes32 from a bytes array without bounds checking.\n NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n assembly block as such would prevent some optimizations."},"id":3573,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeReadBytesOffset","nameLocation":"18955:22:16","nodeType":"FunctionDefinition","parameters":{"id":3567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3564,"mutability":"mutable","name":"buffer","nameLocation":"18991:6:16","nodeType":"VariableDeclaration","scope":3573,"src":"18978:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3563,"name":"bytes","nodeType":"ElementaryTypeName","src":"18978:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3566,"mutability":"mutable","name":"offset","nameLocation":"19007:6:16","nodeType":"VariableDeclaration","scope":3573,"src":"18999:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3565,"name":"uint256","nodeType":"ElementaryTypeName","src":"18999:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18977:37:16"},"returnParameters":{"id":3570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3569,"mutability":"mutable","name":"value","nameLocation":"19045:5:16","nodeType":"VariableDeclaration","scope":3573,"src":"19037:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3568,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19037:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19036:15:16"},"scope":3574,"src":"18946:331:16","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":3575,"src":"297:18982:16","usedErrors":[2232,2235,2238],"usedEvents":[]}],"src":"101:19179:16"},"id":16},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[3598],"IERC165":[3610]},"id":3599,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3576,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:17"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":3578,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3599,"sourceUnit":3611,"src":"140:38:17","symbolAliases":[{"foreign":{"id":3577,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3610,"src":"148:7:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3580,"name":"IERC165","nameLocations":["688:7:17"],"nodeType":"IdentifierPath","referencedDeclaration":3610,"src":"688:7:17"},"id":3581,"nodeType":"InheritanceSpecifier","src":"688:7:17"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":3579,"nodeType":"StructuredDocumentation","src":"180:479:17","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":3598,"linearizedBaseContracts":[3598,3610],"name":"ERC165","nameLocation":"678:6:17","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[3609],"body":{"id":3596,"nodeType":"Block","src":"812:64:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":3594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3589,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3584,"src":"829:11:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":3591,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3610,"src":"849:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$3610_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$3610_$","typeString":"type(contract IERC165)"}],"id":3590,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"844:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"844:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$3610","typeString":"type(contract IERC165)"}},"id":3593,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"858:11:17","memberName":"interfaceId","nodeType":"MemberAccess","src":"844:25:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"829:40:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3588,"id":3595,"nodeType":"Return","src":"822:47:17"}]},"documentation":{"id":3582,"nodeType":"StructuredDocumentation","src":"702:23:17","text":"@inheritdoc IERC165"},"functionSelector":"01ffc9a7","id":3597,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"739:17:17","nodeType":"FunctionDefinition","parameters":{"id":3585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3584,"mutability":"mutable","name":"interfaceId","nameLocation":"764:11:17","nodeType":"VariableDeclaration","scope":3597,"src":"757:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3583,"name":"bytes4","nodeType":"ElementaryTypeName","src":"757:6:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"756:20:17"},"returnParameters":{"id":3588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3587,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3597,"src":"806:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3586,"name":"bool","nodeType":"ElementaryTypeName","src":"806:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"805:6:17"},"scope":3598,"src":"730:146:17","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":3599,"src":"660:218:17","usedErrors":[],"usedEvents":[]}],"src":"114:765:17"},"id":17},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[3610]},"id":3611,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3600,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"115:25:18"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":3601,"nodeType":"StructuredDocumentation","src":"142:280:18","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":3610,"linearizedBaseContracts":[3610],"name":"IERC165","nameLocation":"433:7:18","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3602,"nodeType":"StructuredDocumentation","src":"447:340:18","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":3609,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"801:17:18","nodeType":"FunctionDefinition","parameters":{"id":3605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3604,"mutability":"mutable","name":"interfaceId","nameLocation":"826:11:18","nodeType":"VariableDeclaration","scope":3609,"src":"819:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3603,"name":"bytes4","nodeType":"ElementaryTypeName","src":"819:6:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"818:20:18"},"returnParameters":{"id":3608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3607,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3609,"src":"862:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3606,"name":"bool","nodeType":"ElementaryTypeName","src":"862:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"861:6:18"},"scope":3610,"src":"792:76:18","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3611,"src":"423:447:18","usedErrors":[],"usedEvents":[]}],"src":"115:756:18"},"id":18},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[5231],"Panic":[2103],"SafeCast":[6996]},"id":5232,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3612,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:19"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":3614,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5232,"sourceUnit":2104,"src":"129:35:19","symbolAliases":[{"foreign":{"id":3613,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2103,"src":"137:5:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":3616,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5232,"sourceUnit":6997,"src":"165:40:19","symbolAliases":[{"foreign":{"id":3615,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6996,"src":"173:8:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":3617,"nodeType":"StructuredDocumentation","src":"207:73:19","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":5231,"linearizedBaseContracts":[5231],"name":"Math","nameLocation":"289:4:19","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":3622,"members":[{"id":3618,"name":"Floor","nameLocation":"324:5:19","nodeType":"EnumValue","src":"324:5:19"},{"id":3619,"name":"Ceil","nameLocation":"367:4:19","nodeType":"EnumValue","src":"367:4:19"},{"id":3620,"name":"Trunc","nameLocation":"409:5:19","nodeType":"EnumValue","src":"409:5:19"},{"id":3621,"name":"Expand","nameLocation":"439:6:19","nodeType":"EnumValue","src":"439:6:19"}],"name":"Rounding","nameLocation":"305:8:19","nodeType":"EnumDefinition","src":"300:169:19"},{"body":{"id":3635,"nodeType":"Block","src":"731:112:19","statements":[{"AST":{"nodeType":"YulBlock","src":"766:71:19","statements":[{"nodeType":"YulAssignment","src":"780:16:19","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"791:1:19"},{"name":"b","nodeType":"YulIdentifier","src":"794:1:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"787:3:19"},"nodeType":"YulFunctionCall","src":"787:9:19"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"780:3:19"}]},{"nodeType":"YulAssignment","src":"809:18:19","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"820:3:19"},{"name":"a","nodeType":"YulIdentifier","src":"825:1:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"817:2:19"},"nodeType":"YulFunctionCall","src":"817:10:19"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"809:4:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3625,"isOffset":false,"isSlot":false,"src":"791:1:19","valueSize":1},{"declaration":3625,"isOffset":false,"isSlot":false,"src":"825:1:19","valueSize":1},{"declaration":3627,"isOffset":false,"isSlot":false,"src":"794:1:19","valueSize":1},{"declaration":3630,"isOffset":false,"isSlot":false,"src":"809:4:19","valueSize":1},{"declaration":3632,"isOffset":false,"isSlot":false,"src":"780:3:19","valueSize":1},{"declaration":3632,"isOffset":false,"isSlot":false,"src":"820:3:19","valueSize":1}],"flags":["memory-safe"],"id":3634,"nodeType":"InlineAssembly","src":"741:96:19"}]},"documentation":{"id":3623,"nodeType":"StructuredDocumentation","src":"475:163:19","text":" @dev Return the 512-bit addition of two uint256.\n The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low."},"id":3636,"implemented":true,"kind":"function","modifiers":[],"name":"add512","nameLocation":"652:6:19","nodeType":"FunctionDefinition","parameters":{"id":3628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3625,"mutability":"mutable","name":"a","nameLocation":"667:1:19","nodeType":"VariableDeclaration","scope":3636,"src":"659:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3624,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3627,"mutability":"mutable","name":"b","nameLocation":"678:1:19","nodeType":"VariableDeclaration","scope":3636,"src":"670:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3626,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"658:22:19"},"returnParameters":{"id":3633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3630,"mutability":"mutable","name":"high","nameLocation":"712:4:19","nodeType":"VariableDeclaration","scope":3636,"src":"704:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3629,"name":"uint256","nodeType":"ElementaryTypeName","src":"704:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3632,"mutability":"mutable","name":"low","nameLocation":"726:3:19","nodeType":"VariableDeclaration","scope":3636,"src":"718:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3631,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"703:27:19"},"scope":5231,"src":"643:200:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3649,"nodeType":"Block","src":"1115:462:19","statements":[{"AST":{"nodeType":"YulBlock","src":"1437:134:19","statements":[{"nodeType":"YulVariableDeclaration","src":"1451:30:19","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"1468:1:19"},{"name":"b","nodeType":"YulIdentifier","src":"1471:1:19"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1478:1:19","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1474:3:19"},"nodeType":"YulFunctionCall","src":"1474:6:19"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"1461:6:19"},"nodeType":"YulFunctionCall","src":"1461:20:19"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"1455:2:19","type":""}]},{"nodeType":"YulAssignment","src":"1494:16:19","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"1505:1:19"},{"name":"b","nodeType":"YulIdentifier","src":"1508:1:19"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1501:3:19"},"nodeType":"YulFunctionCall","src":"1501:9:19"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"1494:3:19"}]},{"nodeType":"YulAssignment","src":"1523:38:19","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"1539:2:19"},{"name":"low","nodeType":"YulIdentifier","src":"1543:3:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1535:3:19"},"nodeType":"YulFunctionCall","src":"1535:12:19"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"1552:2:19"},{"name":"low","nodeType":"YulIdentifier","src":"1556:3:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1549:2:19"},"nodeType":"YulFunctionCall","src":"1549:11:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1531:3:19"},"nodeType":"YulFunctionCall","src":"1531:30:19"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"1523:4:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3639,"isOffset":false,"isSlot":false,"src":"1468:1:19","valueSize":1},{"declaration":3639,"isOffset":false,"isSlot":false,"src":"1505:1:19","valueSize":1},{"declaration":3641,"isOffset":false,"isSlot":false,"src":"1471:1:19","valueSize":1},{"declaration":3641,"isOffset":false,"isSlot":false,"src":"1508:1:19","valueSize":1},{"declaration":3644,"isOffset":false,"isSlot":false,"src":"1523:4:19","valueSize":1},{"declaration":3646,"isOffset":false,"isSlot":false,"src":"1494:3:19","valueSize":1},{"declaration":3646,"isOffset":false,"isSlot":false,"src":"1543:3:19","valueSize":1},{"declaration":3646,"isOffset":false,"isSlot":false,"src":"1556:3:19","valueSize":1}],"flags":["memory-safe"],"id":3648,"nodeType":"InlineAssembly","src":"1412:159:19"}]},"documentation":{"id":3637,"nodeType":"StructuredDocumentation","src":"849:173:19","text":" @dev Return the 512-bit multiplication of two uint256.\n The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low."},"id":3650,"implemented":true,"kind":"function","modifiers":[],"name":"mul512","nameLocation":"1036:6:19","nodeType":"FunctionDefinition","parameters":{"id":3642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3639,"mutability":"mutable","name":"a","nameLocation":"1051:1:19","nodeType":"VariableDeclaration","scope":3650,"src":"1043:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3638,"name":"uint256","nodeType":"ElementaryTypeName","src":"1043:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3641,"mutability":"mutable","name":"b","nameLocation":"1062:1:19","nodeType":"VariableDeclaration","scope":3650,"src":"1054:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3640,"name":"uint256","nodeType":"ElementaryTypeName","src":"1054:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1042:22:19"},"returnParameters":{"id":3647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3644,"mutability":"mutable","name":"high","nameLocation":"1096:4:19","nodeType":"VariableDeclaration","scope":3650,"src":"1088:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3643,"name":"uint256","nodeType":"ElementaryTypeName","src":"1088:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3646,"mutability":"mutable","name":"low","nameLocation":"1110:3:19","nodeType":"VariableDeclaration","scope":3650,"src":"1102:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3645,"name":"uint256","nodeType":"ElementaryTypeName","src":"1102:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1087:27:19"},"scope":5231,"src":"1027:550:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3684,"nodeType":"Block","src":"1784:149:19","statements":[{"id":3683,"nodeType":"UncheckedBlock","src":"1794:133:19","statements":[{"assignments":[3663],"declarations":[{"constant":false,"id":3663,"mutability":"mutable","name":"c","nameLocation":"1826:1:19","nodeType":"VariableDeclaration","scope":3683,"src":"1818:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3662,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3667,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3664,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3653,"src":"1830:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3665,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3655,"src":"1834:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1830:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1818:17:19"},{"expression":{"id":3672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3668,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3658,"src":"1849:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3669,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3663,"src":"1859:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3670,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3653,"src":"1864:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1859:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1849:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3673,"nodeType":"ExpressionStatement","src":"1849:16:19"},{"expression":{"id":3681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3674,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3660,"src":"1879:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3675,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3663,"src":"1888:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3678,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3658,"src":"1908:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3676,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6996,"src":"1892:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6996_$","typeString":"type(library SafeCast)"}},"id":3677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1901:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6995,"src":"1892:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1892:24:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1888:28:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1879:37:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3682,"nodeType":"ExpressionStatement","src":"1879:37:19"}]}]},"documentation":{"id":3651,"nodeType":"StructuredDocumentation","src":"1583:105:19","text":" @dev Returns the addition of two unsigned integers, with a success flag (no overflow)."},"id":3685,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"1702:6:19","nodeType":"FunctionDefinition","parameters":{"id":3656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3653,"mutability":"mutable","name":"a","nameLocation":"1717:1:19","nodeType":"VariableDeclaration","scope":3685,"src":"1709:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3652,"name":"uint256","nodeType":"ElementaryTypeName","src":"1709:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3655,"mutability":"mutable","name":"b","nameLocation":"1728:1:19","nodeType":"VariableDeclaration","scope":3685,"src":"1720:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3654,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1708:22:19"},"returnParameters":{"id":3661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3658,"mutability":"mutable","name":"success","nameLocation":"1759:7:19","nodeType":"VariableDeclaration","scope":3685,"src":"1754:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3657,"name":"bool","nodeType":"ElementaryTypeName","src":"1754:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3660,"mutability":"mutable","name":"result","nameLocation":"1776:6:19","nodeType":"VariableDeclaration","scope":3685,"src":"1768:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3659,"name":"uint256","nodeType":"ElementaryTypeName","src":"1768:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1753:30:19"},"scope":5231,"src":"1693:240:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3719,"nodeType":"Block","src":"2143:149:19","statements":[{"id":3718,"nodeType":"UncheckedBlock","src":"2153:133:19","statements":[{"assignments":[3698],"declarations":[{"constant":false,"id":3698,"mutability":"mutable","name":"c","nameLocation":"2185:1:19","nodeType":"VariableDeclaration","scope":3718,"src":"2177:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3697,"name":"uint256","nodeType":"ElementaryTypeName","src":"2177:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3702,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3699,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3688,"src":"2189:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3700,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3690,"src":"2193:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2189:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2177:17:19"},{"expression":{"id":3707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3703,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3693,"src":"2208:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3704,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3698,"src":"2218:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3705,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3688,"src":"2223:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2218:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2208:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3708,"nodeType":"ExpressionStatement","src":"2208:16:19"},{"expression":{"id":3716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3709,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3695,"src":"2238:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3710,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3698,"src":"2247:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3713,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3693,"src":"2267:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3711,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6996,"src":"2251:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6996_$","typeString":"type(library SafeCast)"}},"id":3712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2260:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6995,"src":"2251:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2251:24:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2247:28:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2238:37:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3717,"nodeType":"ExpressionStatement","src":"2238:37:19"}]}]},"documentation":{"id":3686,"nodeType":"StructuredDocumentation","src":"1939:108:19","text":" @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow)."},"id":3720,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"2061:6:19","nodeType":"FunctionDefinition","parameters":{"id":3691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3688,"mutability":"mutable","name":"a","nameLocation":"2076:1:19","nodeType":"VariableDeclaration","scope":3720,"src":"2068:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3687,"name":"uint256","nodeType":"ElementaryTypeName","src":"2068:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3690,"mutability":"mutable","name":"b","nameLocation":"2087:1:19","nodeType":"VariableDeclaration","scope":3720,"src":"2079:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3689,"name":"uint256","nodeType":"ElementaryTypeName","src":"2079:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2067:22:19"},"returnParameters":{"id":3696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3693,"mutability":"mutable","name":"success","nameLocation":"2118:7:19","nodeType":"VariableDeclaration","scope":3720,"src":"2113:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3692,"name":"bool","nodeType":"ElementaryTypeName","src":"2113:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3695,"mutability":"mutable","name":"result","nameLocation":"2135:6:19","nodeType":"VariableDeclaration","scope":3720,"src":"2127:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3694,"name":"uint256","nodeType":"ElementaryTypeName","src":"2127:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2112:30:19"},"scope":5231,"src":"2052:240:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3749,"nodeType":"Block","src":"2505:391:19","statements":[{"id":3748,"nodeType":"UncheckedBlock","src":"2515:375:19","statements":[{"assignments":[3733],"declarations":[{"constant":false,"id":3733,"mutability":"mutable","name":"c","nameLocation":"2547:1:19","nodeType":"VariableDeclaration","scope":3748,"src":"2539:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3732,"name":"uint256","nodeType":"ElementaryTypeName","src":"2539:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3737,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3734,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3723,"src":"2551:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3735,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3725,"src":"2555:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2551:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2539:17:19"},{"AST":{"nodeType":"YulBlock","src":"2595:188:19","statements":[{"nodeType":"YulAssignment","src":"2727:42:19","value":{"arguments":[{"arguments":[{"arguments":[{"name":"c","nodeType":"YulIdentifier","src":"2748:1:19"},{"name":"a","nodeType":"YulIdentifier","src":"2751:1:19"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2744:3:19"},"nodeType":"YulFunctionCall","src":"2744:9:19"},{"name":"b","nodeType":"YulIdentifier","src":"2755:1:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2741:2:19"},"nodeType":"YulFunctionCall","src":"2741:16:19"},{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"2766:1:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2759:6:19"},"nodeType":"YulFunctionCall","src":"2759:9:19"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2738:2:19"},"nodeType":"YulFunctionCall","src":"2738:31:19"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"2727:7:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3723,"isOffset":false,"isSlot":false,"src":"2751:1:19","valueSize":1},{"declaration":3723,"isOffset":false,"isSlot":false,"src":"2766:1:19","valueSize":1},{"declaration":3725,"isOffset":false,"isSlot":false,"src":"2755:1:19","valueSize":1},{"declaration":3733,"isOffset":false,"isSlot":false,"src":"2748:1:19","valueSize":1},{"declaration":3728,"isOffset":false,"isSlot":false,"src":"2727:7:19","valueSize":1}],"flags":["memory-safe"],"id":3738,"nodeType":"InlineAssembly","src":"2570:213:19"},{"expression":{"id":3746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3739,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3730,"src":"2842:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3740,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3733,"src":"2851:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3743,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3728,"src":"2871:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3741,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6996,"src":"2855:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6996_$","typeString":"type(library SafeCast)"}},"id":3742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2864:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6995,"src":"2855:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2855:24:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2851:28:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2842:37:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3747,"nodeType":"ExpressionStatement","src":"2842:37:19"}]}]},"documentation":{"id":3721,"nodeType":"StructuredDocumentation","src":"2298:111:19","text":" @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow)."},"id":3750,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"2423:6:19","nodeType":"FunctionDefinition","parameters":{"id":3726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3723,"mutability":"mutable","name":"a","nameLocation":"2438:1:19","nodeType":"VariableDeclaration","scope":3750,"src":"2430:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3722,"name":"uint256","nodeType":"ElementaryTypeName","src":"2430:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3725,"mutability":"mutable","name":"b","nameLocation":"2449:1:19","nodeType":"VariableDeclaration","scope":3750,"src":"2441:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3724,"name":"uint256","nodeType":"ElementaryTypeName","src":"2441:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2429:22:19"},"returnParameters":{"id":3731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3728,"mutability":"mutable","name":"success","nameLocation":"2480:7:19","nodeType":"VariableDeclaration","scope":3750,"src":"2475:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3727,"name":"bool","nodeType":"ElementaryTypeName","src":"2475:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3730,"mutability":"mutable","name":"result","nameLocation":"2497:6:19","nodeType":"VariableDeclaration","scope":3750,"src":"2489:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3729,"name":"uint256","nodeType":"ElementaryTypeName","src":"2489:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2474:30:19"},"scope":5231,"src":"2414:482:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3770,"nodeType":"Block","src":"3111:231:19","statements":[{"id":3769,"nodeType":"UncheckedBlock","src":"3121:215:19","statements":[{"expression":{"id":3766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3762,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3758,"src":"3145:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3763,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3755,"src":"3155:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3159:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3155:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3145:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3767,"nodeType":"ExpressionStatement","src":"3145:15:19"},{"AST":{"nodeType":"YulBlock","src":"3199:127:19","statements":[{"nodeType":"YulAssignment","src":"3293:19:19","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"3307:1:19"},{"name":"b","nodeType":"YulIdentifier","src":"3310:1:19"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3303:3:19"},"nodeType":"YulFunctionCall","src":"3303:9:19"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3293:6:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3753,"isOffset":false,"isSlot":false,"src":"3307:1:19","valueSize":1},{"declaration":3755,"isOffset":false,"isSlot":false,"src":"3310:1:19","valueSize":1},{"declaration":3760,"isOffset":false,"isSlot":false,"src":"3293:6:19","valueSize":1}],"flags":["memory-safe"],"id":3768,"nodeType":"InlineAssembly","src":"3174:152:19"}]}]},"documentation":{"id":3751,"nodeType":"StructuredDocumentation","src":"2902:113:19","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":3771,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"3029:6:19","nodeType":"FunctionDefinition","parameters":{"id":3756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3753,"mutability":"mutable","name":"a","nameLocation":"3044:1:19","nodeType":"VariableDeclaration","scope":3771,"src":"3036:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3752,"name":"uint256","nodeType":"ElementaryTypeName","src":"3036:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3755,"mutability":"mutable","name":"b","nameLocation":"3055:1:19","nodeType":"VariableDeclaration","scope":3771,"src":"3047:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3754,"name":"uint256","nodeType":"ElementaryTypeName","src":"3047:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3035:22:19"},"returnParameters":{"id":3761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3758,"mutability":"mutable","name":"success","nameLocation":"3086:7:19","nodeType":"VariableDeclaration","scope":3771,"src":"3081:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3757,"name":"bool","nodeType":"ElementaryTypeName","src":"3081:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3760,"mutability":"mutable","name":"result","nameLocation":"3103:6:19","nodeType":"VariableDeclaration","scope":3771,"src":"3095:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3759,"name":"uint256","nodeType":"ElementaryTypeName","src":"3095:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3080:30:19"},"scope":5231,"src":"3020:322:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3791,"nodeType":"Block","src":"3567:231:19","statements":[{"id":3790,"nodeType":"UncheckedBlock","src":"3577:215:19","statements":[{"expression":{"id":3787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3783,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3779,"src":"3601:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3784,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3776,"src":"3611:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3615:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3611:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3601:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3788,"nodeType":"ExpressionStatement","src":"3601:15:19"},{"AST":{"nodeType":"YulBlock","src":"3655:127:19","statements":[{"nodeType":"YulAssignment","src":"3749:19:19","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"3763:1:19"},{"name":"b","nodeType":"YulIdentifier","src":"3766:1:19"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"3759:3:19"},"nodeType":"YulFunctionCall","src":"3759:9:19"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3749:6:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3774,"isOffset":false,"isSlot":false,"src":"3763:1:19","valueSize":1},{"declaration":3776,"isOffset":false,"isSlot":false,"src":"3766:1:19","valueSize":1},{"declaration":3781,"isOffset":false,"isSlot":false,"src":"3749:6:19","valueSize":1}],"flags":["memory-safe"],"id":3789,"nodeType":"InlineAssembly","src":"3630:152:19"}]}]},"documentation":{"id":3772,"nodeType":"StructuredDocumentation","src":"3348:123:19","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":3792,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"3485:6:19","nodeType":"FunctionDefinition","parameters":{"id":3777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3774,"mutability":"mutable","name":"a","nameLocation":"3500:1:19","nodeType":"VariableDeclaration","scope":3792,"src":"3492:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3773,"name":"uint256","nodeType":"ElementaryTypeName","src":"3492:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3776,"mutability":"mutable","name":"b","nameLocation":"3511:1:19","nodeType":"VariableDeclaration","scope":3792,"src":"3503:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3775,"name":"uint256","nodeType":"ElementaryTypeName","src":"3503:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3491:22:19"},"returnParameters":{"id":3782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3779,"mutability":"mutable","name":"success","nameLocation":"3542:7:19","nodeType":"VariableDeclaration","scope":3792,"src":"3537:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3778,"name":"bool","nodeType":"ElementaryTypeName","src":"3537:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3781,"mutability":"mutable","name":"result","nameLocation":"3559:6:19","nodeType":"VariableDeclaration","scope":3792,"src":"3551:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3780,"name":"uint256","nodeType":"ElementaryTypeName","src":"3551:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3536:30:19"},"scope":5231,"src":"3476:322:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3821,"nodeType":"Block","src":"3989:122:19","statements":[{"assignments":[3803,3805],"declarations":[{"constant":false,"id":3803,"mutability":"mutable","name":"success","nameLocation":"4005:7:19","nodeType":"VariableDeclaration","scope":3821,"src":"4000:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3802,"name":"bool","nodeType":"ElementaryTypeName","src":"4000:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3805,"mutability":"mutable","name":"result","nameLocation":"4022:6:19","nodeType":"VariableDeclaration","scope":3821,"src":"4014:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3804,"name":"uint256","nodeType":"ElementaryTypeName","src":"4014:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3810,"initialValue":{"arguments":[{"id":3807,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3795,"src":"4039:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3808,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3797,"src":"4042:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3806,"name":"tryAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3685,"src":"4032:6:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":3809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4032:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"3999:45:19"},{"expression":{"arguments":[{"id":3812,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3803,"src":"4069:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3813,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3805,"src":"4078:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":3816,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4091:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3815,"name":"uint256","nodeType":"ElementaryTypeName","src":"4091:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":3814,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4086:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4086:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":3818,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4100:3:19","memberName":"max","nodeType":"MemberAccess","src":"4086:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3811,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3899,"src":"4061:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4061:43:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3801,"id":3820,"nodeType":"Return","src":"4054:50:19"}]},"documentation":{"id":3793,"nodeType":"StructuredDocumentation","src":"3804:103:19","text":" @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":3822,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingAdd","nameLocation":"3921:13:19","nodeType":"FunctionDefinition","parameters":{"id":3798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3795,"mutability":"mutable","name":"a","nameLocation":"3943:1:19","nodeType":"VariableDeclaration","scope":3822,"src":"3935:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3794,"name":"uint256","nodeType":"ElementaryTypeName","src":"3935:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3797,"mutability":"mutable","name":"b","nameLocation":"3954:1:19","nodeType":"VariableDeclaration","scope":3822,"src":"3946:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3796,"name":"uint256","nodeType":"ElementaryTypeName","src":"3946:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3934:22:19"},"returnParameters":{"id":3801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3800,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3822,"src":"3980:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3799,"name":"uint256","nodeType":"ElementaryTypeName","src":"3980:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3979:9:19"},"scope":5231,"src":"3912:199:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3841,"nodeType":"Block","src":"4294:73:19","statements":[{"assignments":[null,3833],"declarations":[null,{"constant":false,"id":3833,"mutability":"mutable","name":"result","nameLocation":"4315:6:19","nodeType":"VariableDeclaration","scope":3841,"src":"4307:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3832,"name":"uint256","nodeType":"ElementaryTypeName","src":"4307:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3838,"initialValue":{"arguments":[{"id":3835,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3825,"src":"4332:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3836,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3827,"src":"4335:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3834,"name":"trySub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3720,"src":"4325:6:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":3837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4325:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4304:33:19"},{"expression":{"id":3839,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3833,"src":"4354:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3831,"id":3840,"nodeType":"Return","src":"4347:13:19"}]},"documentation":{"id":3823,"nodeType":"StructuredDocumentation","src":"4117:95:19","text":" @dev Unsigned saturating subtraction, bounds to zero instead of overflowing."},"id":3842,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingSub","nameLocation":"4226:13:19","nodeType":"FunctionDefinition","parameters":{"id":3828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3825,"mutability":"mutable","name":"a","nameLocation":"4248:1:19","nodeType":"VariableDeclaration","scope":3842,"src":"4240:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3824,"name":"uint256","nodeType":"ElementaryTypeName","src":"4240:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3827,"mutability":"mutable","name":"b","nameLocation":"4259:1:19","nodeType":"VariableDeclaration","scope":3842,"src":"4251:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3826,"name":"uint256","nodeType":"ElementaryTypeName","src":"4251:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4239:22:19"},"returnParameters":{"id":3831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3830,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3842,"src":"4285:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3829,"name":"uint256","nodeType":"ElementaryTypeName","src":"4285:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4284:9:19"},"scope":5231,"src":"4217:150:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3871,"nodeType":"Block","src":"4564:122:19","statements":[{"assignments":[3853,3855],"declarations":[{"constant":false,"id":3853,"mutability":"mutable","name":"success","nameLocation":"4580:7:19","nodeType":"VariableDeclaration","scope":3871,"src":"4575:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3852,"name":"bool","nodeType":"ElementaryTypeName","src":"4575:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3855,"mutability":"mutable","name":"result","nameLocation":"4597:6:19","nodeType":"VariableDeclaration","scope":3871,"src":"4589:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3854,"name":"uint256","nodeType":"ElementaryTypeName","src":"4589:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3860,"initialValue":{"arguments":[{"id":3857,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3845,"src":"4614:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3858,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3847,"src":"4617:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3856,"name":"tryMul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3750,"src":"4607:6:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":3859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4607:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4574:45:19"},{"expression":{"arguments":[{"id":3862,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3853,"src":"4644:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3863,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3855,"src":"4653:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":3866,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4666:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3865,"name":"uint256","nodeType":"ElementaryTypeName","src":"4666:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":3864,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4661:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4661:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":3868,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4675:3:19","memberName":"max","nodeType":"MemberAccess","src":"4661:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3861,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3899,"src":"4636:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4636:43:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3851,"id":3870,"nodeType":"Return","src":"4629:50:19"}]},"documentation":{"id":3843,"nodeType":"StructuredDocumentation","src":"4373:109:19","text":" @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":3872,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingMul","nameLocation":"4496:13:19","nodeType":"FunctionDefinition","parameters":{"id":3848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3845,"mutability":"mutable","name":"a","nameLocation":"4518:1:19","nodeType":"VariableDeclaration","scope":3872,"src":"4510:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3844,"name":"uint256","nodeType":"ElementaryTypeName","src":"4510:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3847,"mutability":"mutable","name":"b","nameLocation":"4529:1:19","nodeType":"VariableDeclaration","scope":3872,"src":"4521:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3846,"name":"uint256","nodeType":"ElementaryTypeName","src":"4521:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4509:22:19"},"returnParameters":{"id":3851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3850,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3872,"src":"4555:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3849,"name":"uint256","nodeType":"ElementaryTypeName","src":"4555:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4554:9:19"},"scope":5231,"src":"4487:199:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3898,"nodeType":"Block","src":"5158:207:19","statements":[{"id":3897,"nodeType":"UncheckedBlock","src":"5168:191:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3884,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3879,"src":"5306:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3885,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3877,"src":"5312:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3886,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3879,"src":"5316:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5312:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3888,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5311:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3891,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3875,"src":"5337:9:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3889,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6996,"src":"5321:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6996_$","typeString":"type(library SafeCast)"}},"id":3890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5330:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6995,"src":"5321:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5321:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5311:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3894,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5310:38:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5306:42:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3883,"id":3896,"nodeType":"Return","src":"5299:49:19"}]}]},"documentation":{"id":3873,"nodeType":"StructuredDocumentation","src":"4692:374:19","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":3899,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"5080:7:19","nodeType":"FunctionDefinition","parameters":{"id":3880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3875,"mutability":"mutable","name":"condition","nameLocation":"5093:9:19","nodeType":"VariableDeclaration","scope":3899,"src":"5088:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3874,"name":"bool","nodeType":"ElementaryTypeName","src":"5088:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3877,"mutability":"mutable","name":"a","nameLocation":"5112:1:19","nodeType":"VariableDeclaration","scope":3899,"src":"5104:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3876,"name":"uint256","nodeType":"ElementaryTypeName","src":"5104:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3879,"mutability":"mutable","name":"b","nameLocation":"5123:1:19","nodeType":"VariableDeclaration","scope":3899,"src":"5115:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3878,"name":"uint256","nodeType":"ElementaryTypeName","src":"5115:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5087:38:19"},"returnParameters":{"id":3883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3882,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3899,"src":"5149:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3881,"name":"uint256","nodeType":"ElementaryTypeName","src":"5149:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5148:9:19"},"scope":5231,"src":"5071:294:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3917,"nodeType":"Block","src":"5502:44:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3910,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3902,"src":"5527:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3911,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3904,"src":"5531:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5527:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3913,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3902,"src":"5534:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3914,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3904,"src":"5537:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3909,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3899,"src":"5519:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5519:20:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3908,"id":3916,"nodeType":"Return","src":"5512:27:19"}]},"documentation":{"id":3900,"nodeType":"StructuredDocumentation","src":"5371:59:19","text":" @dev Returns the largest of two numbers."},"id":3918,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"5444:3:19","nodeType":"FunctionDefinition","parameters":{"id":3905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3902,"mutability":"mutable","name":"a","nameLocation":"5456:1:19","nodeType":"VariableDeclaration","scope":3918,"src":"5448:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3901,"name":"uint256","nodeType":"ElementaryTypeName","src":"5448:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3904,"mutability":"mutable","name":"b","nameLocation":"5467:1:19","nodeType":"VariableDeclaration","scope":3918,"src":"5459:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3903,"name":"uint256","nodeType":"ElementaryTypeName","src":"5459:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5447:22:19"},"returnParameters":{"id":3908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3907,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3918,"src":"5493:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3906,"name":"uint256","nodeType":"ElementaryTypeName","src":"5493:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5492:9:19"},"scope":5231,"src":"5435:111:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3936,"nodeType":"Block","src":"5684:44:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3929,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3921,"src":"5709:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3930,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3923,"src":"5713:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5709:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3932,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3921,"src":"5716:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3933,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3923,"src":"5719:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3928,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3899,"src":"5701:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5701:20:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3927,"id":3935,"nodeType":"Return","src":"5694:27:19"}]},"documentation":{"id":3919,"nodeType":"StructuredDocumentation","src":"5552:60:19","text":" @dev Returns the smallest of two numbers."},"id":3937,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"5626:3:19","nodeType":"FunctionDefinition","parameters":{"id":3924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3921,"mutability":"mutable","name":"a","nameLocation":"5638:1:19","nodeType":"VariableDeclaration","scope":3937,"src":"5630:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3920,"name":"uint256","nodeType":"ElementaryTypeName","src":"5630:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3923,"mutability":"mutable","name":"b","nameLocation":"5649:1:19","nodeType":"VariableDeclaration","scope":3937,"src":"5641:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3922,"name":"uint256","nodeType":"ElementaryTypeName","src":"5641:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5629:22:19"},"returnParameters":{"id":3927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3926,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3937,"src":"5675:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3925,"name":"uint256","nodeType":"ElementaryTypeName","src":"5675:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:9:19"},"scope":5231,"src":"5617:111:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3959,"nodeType":"Block","src":"5912:82:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3947,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3940,"src":"5967:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3948,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3942,"src":"5971:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5967:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3950,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5966:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3951,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3940,"src":"5977:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3952,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3942,"src":"5981:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5977:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3954,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5976:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":3955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5986:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"5976:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5966:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3946,"id":3958,"nodeType":"Return","src":"5959:28:19"}]},"documentation":{"id":3938,"nodeType":"StructuredDocumentation","src":"5734:102:19","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":3960,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"5850:7:19","nodeType":"FunctionDefinition","parameters":{"id":3943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3940,"mutability":"mutable","name":"a","nameLocation":"5866:1:19","nodeType":"VariableDeclaration","scope":3960,"src":"5858:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3939,"name":"uint256","nodeType":"ElementaryTypeName","src":"5858:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3942,"mutability":"mutable","name":"b","nameLocation":"5877:1:19","nodeType":"VariableDeclaration","scope":3960,"src":"5869:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3941,"name":"uint256","nodeType":"ElementaryTypeName","src":"5869:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5857:22:19"},"returnParameters":{"id":3946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3945,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3960,"src":"5903:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3944,"name":"uint256","nodeType":"ElementaryTypeName","src":"5903:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5902:9:19"},"scope":5231,"src":"5841:153:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4000,"nodeType":"Block","src":"6286:633:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3970,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3965,"src":"6300:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6305:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6300:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3981,"nodeType":"IfStatement","src":"6296:150:19","trueBody":{"id":3980,"nodeType":"Block","src":"6308:138:19","statements":[{"expression":{"arguments":[{"expression":{"id":3976,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2103,"src":"6412:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2103_$","typeString":"type(library Panic)"}},"id":3977,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6418:16:19","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2070,"src":"6412:22:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3973,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2103,"src":"6400:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2103_$","typeString":"type(library Panic)"}},"id":3975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6406:5:19","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2102,"src":"6400:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6400:35:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3979,"nodeType":"ExpressionStatement","src":"6400:35:19"}]}},{"id":3999,"nodeType":"UncheckedBlock","src":"6829:84:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3984,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3963,"src":"6876:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6880:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6876:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3982,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6996,"src":"6860:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6996_$","typeString":"type(library SafeCast)"}},"id":3983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6869:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6995,"src":"6860:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6860:22:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3988,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3963,"src":"6887:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6891:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6887:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3991,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6886:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3992,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3965,"src":"6896:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6886:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6900:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6886:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3996,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6885:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6860:42:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3969,"id":3998,"nodeType":"Return","src":"6853:49:19"}]}]},"documentation":{"id":3961,"nodeType":"StructuredDocumentation","src":"6000:210:19","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":4001,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"6224:7:19","nodeType":"FunctionDefinition","parameters":{"id":3966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3963,"mutability":"mutable","name":"a","nameLocation":"6240:1:19","nodeType":"VariableDeclaration","scope":4001,"src":"6232:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3962,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3965,"mutability":"mutable","name":"b","nameLocation":"6251:1:19","nodeType":"VariableDeclaration","scope":4001,"src":"6243:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3964,"name":"uint256","nodeType":"ElementaryTypeName","src":"6243:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6231:22:19"},"returnParameters":{"id":3969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3968,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4001,"src":"6277:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3967,"name":"uint256","nodeType":"ElementaryTypeName","src":"6277:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6276:9:19"},"scope":5231,"src":"6215:704:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4136,"nodeType":"Block","src":"7340:3585:19","statements":[{"id":4135,"nodeType":"UncheckedBlock","src":"7350:3569:19","statements":[{"assignments":[4014,4016],"declarations":[{"constant":false,"id":4014,"mutability":"mutable","name":"high","nameLocation":"7383:4:19","nodeType":"VariableDeclaration","scope":4135,"src":"7375:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4013,"name":"uint256","nodeType":"ElementaryTypeName","src":"7375:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4016,"mutability":"mutable","name":"low","nameLocation":"7397:3:19","nodeType":"VariableDeclaration","scope":4135,"src":"7389:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4015,"name":"uint256","nodeType":"ElementaryTypeName","src":"7389:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4021,"initialValue":{"arguments":[{"id":4018,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4004,"src":"7411:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4019,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4006,"src":"7414:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4017,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3650,"src":"7404:6:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":4020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7404:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"7374:42:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4022,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4014,"src":"7498:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7506:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7498:9:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4030,"nodeType":"IfStatement","src":"7494:365:19","trueBody":{"id":4029,"nodeType":"Block","src":"7509:350:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4025,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4016,"src":"7827:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4026,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4008,"src":"7833:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7827:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4012,"id":4028,"nodeType":"Return","src":"7820:24:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4031,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4008,"src":"7969:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4032,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4014,"src":"7984:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7969:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4049,"nodeType":"IfStatement","src":"7965:142:19","trueBody":{"id":4048,"nodeType":"Block","src":"7990:117:19","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4038,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4008,"src":"8028:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8043:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8028:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":4041,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2103,"src":"8046:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2103_$","typeString":"type(library Panic)"}},"id":4042,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8052:16:19","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2070,"src":"8046:22:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4043,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2103,"src":"8070:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2103_$","typeString":"type(library Panic)"}},"id":4044,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8076:14:19","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":2066,"src":"8070:20:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4037,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3899,"src":"8020:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8020:71:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4034,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2103,"src":"8008:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2103_$","typeString":"type(library Panic)"}},"id":4036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8014:5:19","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2102,"src":"8008:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8008:84:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4047,"nodeType":"ExpressionStatement","src":"8008:84:19"}]}},{"assignments":[4051],"declarations":[{"constant":false,"id":4051,"mutability":"mutable","name":"remainder","nameLocation":"8367:9:19","nodeType":"VariableDeclaration","scope":4135,"src":"8359:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4050,"name":"uint256","nodeType":"ElementaryTypeName","src":"8359:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4052,"nodeType":"VariableDeclarationStatement","src":"8359:17:19"},{"AST":{"nodeType":"YulBlock","src":"8415:283:19","statements":[{"nodeType":"YulAssignment","src":"8484:38:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8504:1:19"},{"name":"y","nodeType":"YulIdentifier","src":"8507:1:19"},{"name":"denominator","nodeType":"YulIdentifier","src":"8510:11:19"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"8497:6:19"},"nodeType":"YulFunctionCall","src":"8497:25:19"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"8484:9:19"}]},{"nodeType":"YulAssignment","src":"8604:37:19","value":{"arguments":[{"name":"high","nodeType":"YulIdentifier","src":"8616:4:19"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"8625:9:19"},{"name":"low","nodeType":"YulIdentifier","src":"8636:3:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8622:2:19"},"nodeType":"YulFunctionCall","src":"8622:18:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8612:3:19"},"nodeType":"YulFunctionCall","src":"8612:29:19"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"8604:4:19"}]},{"nodeType":"YulAssignment","src":"8658:26:19","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"8669:3:19"},{"name":"remainder","nodeType":"YulIdentifier","src":"8674:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8665:3:19"},"nodeType":"YulFunctionCall","src":"8665:19:19"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"8658:3:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4008,"isOffset":false,"isSlot":false,"src":"8510:11:19","valueSize":1},{"declaration":4014,"isOffset":false,"isSlot":false,"src":"8604:4:19","valueSize":1},{"declaration":4014,"isOffset":false,"isSlot":false,"src":"8616:4:19","valueSize":1},{"declaration":4016,"isOffset":false,"isSlot":false,"src":"8636:3:19","valueSize":1},{"declaration":4016,"isOffset":false,"isSlot":false,"src":"8658:3:19","valueSize":1},{"declaration":4016,"isOffset":false,"isSlot":false,"src":"8669:3:19","valueSize":1},{"declaration":4051,"isOffset":false,"isSlot":false,"src":"8484:9:19","valueSize":1},{"declaration":4051,"isOffset":false,"isSlot":false,"src":"8625:9:19","valueSize":1},{"declaration":4051,"isOffset":false,"isSlot":false,"src":"8674:9:19","valueSize":1},{"declaration":4004,"isOffset":false,"isSlot":false,"src":"8504:1:19","valueSize":1},{"declaration":4006,"isOffset":false,"isSlot":false,"src":"8507:1:19","valueSize":1}],"flags":["memory-safe"],"id":4053,"nodeType":"InlineAssembly","src":"8390:308:19"},{"assignments":[4055],"declarations":[{"constant":false,"id":4055,"mutability":"mutable","name":"twos","nameLocation":"8910:4:19","nodeType":"VariableDeclaration","scope":4135,"src":"8902:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4054,"name":"uint256","nodeType":"ElementaryTypeName","src":"8902:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4062,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4056,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4008,"src":"8917:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":4057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8932:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4058,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4008,"src":"8936:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8932:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4060,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8931:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8917:31:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8902:46:19"},{"AST":{"nodeType":"YulBlock","src":"8987:359:19","statements":[{"nodeType":"YulAssignment","src":"9052:37:19","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"9071:11:19"},{"name":"twos","nodeType":"YulIdentifier","src":"9084:4:19"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9067:3:19"},"nodeType":"YulFunctionCall","src":"9067:22:19"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"9052:11:19"}]},{"nodeType":"YulAssignment","src":"9153:21:19","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"9164:3:19"},{"name":"twos","nodeType":"YulIdentifier","src":"9169:4:19"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9160:3:19"},"nodeType":"YulFunctionCall","src":"9160:14:19"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"9153:3:19"}]},{"nodeType":"YulAssignment","src":"9293:39:19","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9313:1:19","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"9316:4:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9309:3:19"},"nodeType":"YulFunctionCall","src":"9309:12:19"},{"name":"twos","nodeType":"YulIdentifier","src":"9323:4:19"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9305:3:19"},"nodeType":"YulFunctionCall","src":"9305:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"9330:1:19","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9301:3:19"},"nodeType":"YulFunctionCall","src":"9301:31:19"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"9293:4:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4008,"isOffset":false,"isSlot":false,"src":"9052:11:19","valueSize":1},{"declaration":4008,"isOffset":false,"isSlot":false,"src":"9071:11:19","valueSize":1},{"declaration":4016,"isOffset":false,"isSlot":false,"src":"9153:3:19","valueSize":1},{"declaration":4016,"isOffset":false,"isSlot":false,"src":"9164:3:19","valueSize":1},{"declaration":4055,"isOffset":false,"isSlot":false,"src":"9084:4:19","valueSize":1},{"declaration":4055,"isOffset":false,"isSlot":false,"src":"9169:4:19","valueSize":1},{"declaration":4055,"isOffset":false,"isSlot":false,"src":"9293:4:19","valueSize":1},{"declaration":4055,"isOffset":false,"isSlot":false,"src":"9316:4:19","valueSize":1},{"declaration":4055,"isOffset":false,"isSlot":false,"src":"9323:4:19","valueSize":1}],"flags":["memory-safe"],"id":4063,"nodeType":"InlineAssembly","src":"8962:384:19"},{"expression":{"id":4068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4064,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4016,"src":"9409:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4065,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4014,"src":"9416:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4066,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4055,"src":"9423:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9416:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9409:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4069,"nodeType":"ExpressionStatement","src":"9409:18:19"},{"assignments":[4071],"declarations":[{"constant":false,"id":4071,"mutability":"mutable","name":"inverse","nameLocation":"9770:7:19","nodeType":"VariableDeclaration","scope":4135,"src":"9762:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4070,"name":"uint256","nodeType":"ElementaryTypeName","src":"9762:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4078,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":4072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9781:1:19","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4073,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4008,"src":"9785:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9781:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4075,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9780:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":4076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9800:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9780:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9762:39:19"},{"expression":{"id":4085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4079,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4071,"src":"10018:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10029:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4081,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4008,"src":"10033:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4082,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4071,"src":"10047:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10033:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10029:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10018:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4086,"nodeType":"ExpressionStatement","src":"10018:36:19"},{"expression":{"id":4093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4087,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4071,"src":"10088:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10099:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4089,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4008,"src":"10103:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4090,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4071,"src":"10117:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10099:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10088:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4094,"nodeType":"ExpressionStatement","src":"10088:36:19"},{"expression":{"id":4101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4095,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4071,"src":"10160:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10171:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4097,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4008,"src":"10175:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4098,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4071,"src":"10189:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10175:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10171:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10160:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4102,"nodeType":"ExpressionStatement","src":"10160:36:19"},{"expression":{"id":4109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4103,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4071,"src":"10231:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10242:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4105,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4008,"src":"10246:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4106,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4071,"src":"10260:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10246:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10242:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10231:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4110,"nodeType":"ExpressionStatement","src":"10231:36:19"},{"expression":{"id":4117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4111,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4071,"src":"10304:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10315:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4113,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4008,"src":"10319:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4114,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4071,"src":"10333:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10319:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10315:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10304:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4118,"nodeType":"ExpressionStatement","src":"10304:36:19"},{"expression":{"id":4125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4119,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4071,"src":"10378:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10389:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4121,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4008,"src":"10393:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4122,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4071,"src":"10407:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10393:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10389:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10378:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4126,"nodeType":"ExpressionStatement","src":"10378:36:19"},{"expression":{"id":4131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4127,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4011,"src":"10859:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4128,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4016,"src":"10868:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4129,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4071,"src":"10874:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10868:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10859:22:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4132,"nodeType":"ExpressionStatement","src":"10859:22:19"},{"expression":{"id":4133,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4011,"src":"10902:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4012,"id":4134,"nodeType":"Return","src":"10895:13:19"}]}]},"documentation":{"id":4002,"nodeType":"StructuredDocumentation","src":"6925:312:19","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":4137,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"7251:6:19","nodeType":"FunctionDefinition","parameters":{"id":4009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4004,"mutability":"mutable","name":"x","nameLocation":"7266:1:19","nodeType":"VariableDeclaration","scope":4137,"src":"7258:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4003,"name":"uint256","nodeType":"ElementaryTypeName","src":"7258:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4006,"mutability":"mutable","name":"y","nameLocation":"7277:1:19","nodeType":"VariableDeclaration","scope":4137,"src":"7269:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4005,"name":"uint256","nodeType":"ElementaryTypeName","src":"7269:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4008,"mutability":"mutable","name":"denominator","nameLocation":"7288:11:19","nodeType":"VariableDeclaration","scope":4137,"src":"7280:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4007,"name":"uint256","nodeType":"ElementaryTypeName","src":"7280:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7257:43:19"},"returnParameters":{"id":4012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4011,"mutability":"mutable","name":"result","nameLocation":"7332:6:19","nodeType":"VariableDeclaration","scope":4137,"src":"7324:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4010,"name":"uint256","nodeType":"ElementaryTypeName","src":"7324:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7323:16:19"},"scope":5231,"src":"7242:3683:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4173,"nodeType":"Block","src":"11164:128:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4153,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4140,"src":"11188:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4154,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4142,"src":"11191:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4155,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4144,"src":"11194:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4152,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[4137,4174],"referencedDeclaration":4137,"src":"11181:6:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11181:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4160,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4147,"src":"11242:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3622","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3622","typeString":"enum Math.Rounding"}],"id":4159,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5230,"src":"11225:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3622_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11225:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4163,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4140,"src":"11262:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4164,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4142,"src":"11265:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4165,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4144,"src":"11268:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4162,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"11255:6:19","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11255:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11283:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11255:29:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11225:59:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4157,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6996,"src":"11209:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6996_$","typeString":"type(library SafeCast)"}},"id":4158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11218:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6995,"src":"11209:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11209:76:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11181:104:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4151,"id":4172,"nodeType":"Return","src":"11174:111:19"}]},"documentation":{"id":4138,"nodeType":"StructuredDocumentation","src":"10931:118:19","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":4174,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"11063:6:19","nodeType":"FunctionDefinition","parameters":{"id":4148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4140,"mutability":"mutable","name":"x","nameLocation":"11078:1:19","nodeType":"VariableDeclaration","scope":4174,"src":"11070:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4139,"name":"uint256","nodeType":"ElementaryTypeName","src":"11070:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4142,"mutability":"mutable","name":"y","nameLocation":"11089:1:19","nodeType":"VariableDeclaration","scope":4174,"src":"11081:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4141,"name":"uint256","nodeType":"ElementaryTypeName","src":"11081:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4144,"mutability":"mutable","name":"denominator","nameLocation":"11100:11:19","nodeType":"VariableDeclaration","scope":4174,"src":"11092:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4143,"name":"uint256","nodeType":"ElementaryTypeName","src":"11092:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4147,"mutability":"mutable","name":"rounding","nameLocation":"11122:8:19","nodeType":"VariableDeclaration","scope":4174,"src":"11113:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3622","typeString":"enum Math.Rounding"},"typeName":{"id":4146,"nodeType":"UserDefinedTypeName","pathNode":{"id":4145,"name":"Rounding","nameLocations":["11113:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":3622,"src":"11113:8:19"},"referencedDeclaration":3622,"src":"11113:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3622","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11069:62:19"},"returnParameters":{"id":4151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4150,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4174,"src":"11155:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4149,"name":"uint256","nodeType":"ElementaryTypeName","src":"11155:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11154:9:19"},"scope":5231,"src":"11054:238:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4223,"nodeType":"Block","src":"11500:245:19","statements":[{"id":4222,"nodeType":"UncheckedBlock","src":"11510:229:19","statements":[{"assignments":[4187,4189],"declarations":[{"constant":false,"id":4187,"mutability":"mutable","name":"high","nameLocation":"11543:4:19","nodeType":"VariableDeclaration","scope":4222,"src":"11535:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4186,"name":"uint256","nodeType":"ElementaryTypeName","src":"11535:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4189,"mutability":"mutable","name":"low","nameLocation":"11557:3:19","nodeType":"VariableDeclaration","scope":4222,"src":"11549:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4188,"name":"uint256","nodeType":"ElementaryTypeName","src":"11549:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4194,"initialValue":{"arguments":[{"id":4191,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4177,"src":"11571:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4192,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4179,"src":"11574:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4190,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3650,"src":"11564:6:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":4193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11564:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11534:42:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4195,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4187,"src":"11594:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11602:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4197,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4181,"src":"11607:1:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11602:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11594:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4208,"nodeType":"IfStatement","src":"11590:86:19","trueBody":{"id":4207,"nodeType":"Block","src":"11610:66:19","statements":[{"expression":{"arguments":[{"expression":{"id":4203,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2103,"src":"11640:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2103_$","typeString":"type(library Panic)"}},"id":4204,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11646:14:19","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":2066,"src":"11640:20:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4200,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2103,"src":"11628:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2103_$","typeString":"type(library Panic)"}},"id":4202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11634:5:19","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2102,"src":"11628:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11628:33:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4206,"nodeType":"ExpressionStatement","src":"11628:33:19"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4209,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4187,"src":"11697:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":4212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":4210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11706:3:19","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4211,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4181,"src":"11712:1:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11706:7:19","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"id":4213,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11705:9:19","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"11697:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4215,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11696:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4216,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4189,"src":"11719:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4217,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4181,"src":"11726:1:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11719:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4219,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11718:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11696:32:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4185,"id":4221,"nodeType":"Return","src":"11689:39:19"}]}]},"documentation":{"id":4175,"nodeType":"StructuredDocumentation","src":"11298:111:19","text":" @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256."},"id":4224,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11423:6:19","nodeType":"FunctionDefinition","parameters":{"id":4182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4177,"mutability":"mutable","name":"x","nameLocation":"11438:1:19","nodeType":"VariableDeclaration","scope":4224,"src":"11430:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4176,"name":"uint256","nodeType":"ElementaryTypeName","src":"11430:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4179,"mutability":"mutable","name":"y","nameLocation":"11449:1:19","nodeType":"VariableDeclaration","scope":4224,"src":"11441:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4178,"name":"uint256","nodeType":"ElementaryTypeName","src":"11441:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4181,"mutability":"mutable","name":"n","nameLocation":"11458:1:19","nodeType":"VariableDeclaration","scope":4224,"src":"11452:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4180,"name":"uint8","nodeType":"ElementaryTypeName","src":"11452:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"11429:31:19"},"returnParameters":{"id":4185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4184,"mutability":"mutable","name":"result","nameLocation":"11492:6:19","nodeType":"VariableDeclaration","scope":4224,"src":"11484:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4183,"name":"uint256","nodeType":"ElementaryTypeName","src":"11484:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11483:16:19"},"scope":5231,"src":"11414:331:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4262,"nodeType":"Block","src":"11963:113:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4240,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4227,"src":"11987:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4241,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4229,"src":"11990:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4242,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4231,"src":"11993:1:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":4239,"name":"mulShr","nodeType":"Identifier","overloadedDeclarations":[4224,4263],"referencedDeclaration":4224,"src":"11980:6:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint8_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint8) pure returns (uint256)"}},"id":4243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11980:15:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4247,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4234,"src":"12031:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3622","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3622","typeString":"enum Math.Rounding"}],"id":4246,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5230,"src":"12014:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3622_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12014:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4250,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4227,"src":"12051:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4251,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4229,"src":"12054:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12057:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4253,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4231,"src":"12062:1:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12057:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4249,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"12044:6:19","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12044:20:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12044:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12014:54:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4244,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6996,"src":"11998:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6996_$","typeString":"type(library SafeCast)"}},"id":4245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12007:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6995,"src":"11998:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11998:71:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11980:89:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4238,"id":4261,"nodeType":"Return","src":"11973:96:19"}]},"documentation":{"id":4225,"nodeType":"StructuredDocumentation","src":"11751:109:19","text":" @dev Calculates x * y >> n with full precision, following the selected rounding direction."},"id":4263,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11874:6:19","nodeType":"FunctionDefinition","parameters":{"id":4235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4227,"mutability":"mutable","name":"x","nameLocation":"11889:1:19","nodeType":"VariableDeclaration","scope":4263,"src":"11881:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4226,"name":"uint256","nodeType":"ElementaryTypeName","src":"11881:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4229,"mutability":"mutable","name":"y","nameLocation":"11900:1:19","nodeType":"VariableDeclaration","scope":4263,"src":"11892:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4228,"name":"uint256","nodeType":"ElementaryTypeName","src":"11892:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4231,"mutability":"mutable","name":"n","nameLocation":"11909:1:19","nodeType":"VariableDeclaration","scope":4263,"src":"11903:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4230,"name":"uint8","nodeType":"ElementaryTypeName","src":"11903:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4234,"mutability":"mutable","name":"rounding","nameLocation":"11921:8:19","nodeType":"VariableDeclaration","scope":4263,"src":"11912:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3622","typeString":"enum Math.Rounding"},"typeName":{"id":4233,"nodeType":"UserDefinedTypeName","pathNode":{"id":4232,"name":"Rounding","nameLocations":["11912:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":3622,"src":"11912:8:19"},"referencedDeclaration":3622,"src":"11912:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3622","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11880:50:19"},"returnParameters":{"id":4238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4237,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4263,"src":"11954:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4236,"name":"uint256","nodeType":"ElementaryTypeName","src":"11954:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11953:9:19"},"scope":5231,"src":"11865:211:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4359,"nodeType":"Block","src":"12710:1849:19","statements":[{"id":4358,"nodeType":"UncheckedBlock","src":"12720:1833:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4273,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4268,"src":"12748:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12753:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12748:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4278,"nodeType":"IfStatement","src":"12744:20:19","trueBody":{"expression":{"hexValue":"30","id":4276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4272,"id":4277,"nodeType":"Return","src":"12756:8:19"}},{"assignments":[4280],"declarations":[{"constant":false,"id":4280,"mutability":"mutable","name":"remainder","nameLocation":"13243:9:19","nodeType":"VariableDeclaration","scope":4358,"src":"13235:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4279,"name":"uint256","nodeType":"ElementaryTypeName","src":"13235:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4284,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4281,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4266,"src":"13255:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":4282,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4268,"src":"13259:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13255:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13235:25:19"},{"assignments":[4286],"declarations":[{"constant":false,"id":4286,"mutability":"mutable","name":"gcd","nameLocation":"13282:3:19","nodeType":"VariableDeclaration","scope":4358,"src":"13274:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4285,"name":"uint256","nodeType":"ElementaryTypeName","src":"13274:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4288,"initialValue":{"id":4287,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4268,"src":"13288:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13274:15:19"},{"assignments":[4290],"declarations":[{"constant":false,"id":4290,"mutability":"mutable","name":"x","nameLocation":"13432:1:19","nodeType":"VariableDeclaration","scope":4358,"src":"13425:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4289,"name":"int256","nodeType":"ElementaryTypeName","src":"13425:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4292,"initialValue":{"hexValue":"30","id":4291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13436:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13425:12:19"},{"assignments":[4294],"declarations":[{"constant":false,"id":4294,"mutability":"mutable","name":"y","nameLocation":"13458:1:19","nodeType":"VariableDeclaration","scope":4358,"src":"13451:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4293,"name":"int256","nodeType":"ElementaryTypeName","src":"13451:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4296,"initialValue":{"hexValue":"31","id":4295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13462:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"13451:12:19"},{"body":{"id":4333,"nodeType":"Block","src":"13501:882:19","statements":[{"assignments":[4301],"declarations":[{"constant":false,"id":4301,"mutability":"mutable","name":"quotient","nameLocation":"13527:8:19","nodeType":"VariableDeclaration","scope":4333,"src":"13519:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4300,"name":"uint256","nodeType":"ElementaryTypeName","src":"13519:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4305,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4302,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4286,"src":"13538:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4303,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4280,"src":"13544:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13538:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13519:34:19"},{"expression":{"id":4316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4306,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4286,"src":"13573:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4307,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4280,"src":"13578:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4308,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13572:16:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":4309,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4280,"src":"13678:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4310,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4286,"src":"13923:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4311,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4280,"src":"13929:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4312,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4301,"src":"13941:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13929:20:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13923:26:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4315,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13591:376:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"13572:395:19","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4317,"nodeType":"ExpressionStatement","src":"13572:395:19"},{"expression":{"id":4331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4318,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4290,"src":"13987:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":4319,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294,"src":"13990:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4320,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13986:6:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":4321,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294,"src":"14072:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4322,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4290,"src":"14326:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4323,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294,"src":"14330:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4326,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4301,"src":"14341:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4325,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14334:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4324,"name":"int256","nodeType":"ElementaryTypeName","src":"14334:6:19","typeDescriptions":{}}},"id":4327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14334:16:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14330:20:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14326:24:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4330,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13995:373:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"13986:382:19","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4332,"nodeType":"ExpressionStatement","src":"13986:382:19"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4297,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4280,"src":"13485:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13498:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13485:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4334,"nodeType":"WhileStatement","src":"13478:905:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4335,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4286,"src":"14401:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":4336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14408:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14401:8:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4340,"nodeType":"IfStatement","src":"14397:22:19","trueBody":{"expression":{"hexValue":"30","id":4338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14418:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4272,"id":4339,"nodeType":"Return","src":"14411:8:19"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4342,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4290,"src":"14470:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":4343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14474:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14470:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4345,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4268,"src":"14477:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":4349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"14489:2:19","subExpression":{"id":4348,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4290,"src":"14490:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4347,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14481:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4346,"name":"uint256","nodeType":"ElementaryTypeName","src":"14481:7:19","typeDescriptions":{}}},"id":4350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14481:11:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14477:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":4354,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4290,"src":"14502:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4353,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14494:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4352,"name":"uint256","nodeType":"ElementaryTypeName","src":"14494:7:19","typeDescriptions":{}}},"id":4355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14494:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4341,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3899,"src":"14462:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14462:43:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4272,"id":4357,"nodeType":"Return","src":"14455:50:19"}]}]},"documentation":{"id":4264,"nodeType":"StructuredDocumentation","src":"12082:553:19","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":4360,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"12649:6:19","nodeType":"FunctionDefinition","parameters":{"id":4269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4266,"mutability":"mutable","name":"a","nameLocation":"12664:1:19","nodeType":"VariableDeclaration","scope":4360,"src":"12656:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4265,"name":"uint256","nodeType":"ElementaryTypeName","src":"12656:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4268,"mutability":"mutable","name":"n","nameLocation":"12675:1:19","nodeType":"VariableDeclaration","scope":4360,"src":"12667:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4267,"name":"uint256","nodeType":"ElementaryTypeName","src":"12667:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12655:22:19"},"returnParameters":{"id":4272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4271,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4360,"src":"12701:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4270,"name":"uint256","nodeType":"ElementaryTypeName","src":"12701:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12700:9:19"},"scope":5231,"src":"12640:1919:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4380,"nodeType":"Block","src":"15159:82:19","statements":[{"id":4379,"nodeType":"UncheckedBlock","src":"15169:66:19","statements":[{"expression":{"arguments":[{"id":4372,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4363,"src":"15212:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4373,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4365,"src":"15215:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":4374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15219:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15215:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4376,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4365,"src":"15222:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4370,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5231,"src":"15200:4:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5231_$","typeString":"type(library Math)"}},"id":4371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15205:6:19","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":4417,"src":"15200:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":4377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15200:24:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4369,"id":4378,"nodeType":"Return","src":"15193:31:19"}]}]},"documentation":{"id":4361,"nodeType":"StructuredDocumentation","src":"14565:514:19","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":4381,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"15093:11:19","nodeType":"FunctionDefinition","parameters":{"id":4366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4363,"mutability":"mutable","name":"a","nameLocation":"15113:1:19","nodeType":"VariableDeclaration","scope":4381,"src":"15105:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4362,"name":"uint256","nodeType":"ElementaryTypeName","src":"15105:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4365,"mutability":"mutable","name":"p","nameLocation":"15124:1:19","nodeType":"VariableDeclaration","scope":4381,"src":"15116:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4364,"name":"uint256","nodeType":"ElementaryTypeName","src":"15116:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15104:22:19"},"returnParameters":{"id":4369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4368,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4381,"src":"15150:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4367,"name":"uint256","nodeType":"ElementaryTypeName","src":"15150:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15149:9:19"},"scope":5231,"src":"15084:157:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4416,"nodeType":"Block","src":"16011:174:19","statements":[{"assignments":[4394,4396],"declarations":[{"constant":false,"id":4394,"mutability":"mutable","name":"success","nameLocation":"16027:7:19","nodeType":"VariableDeclaration","scope":4416,"src":"16022:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4393,"name":"bool","nodeType":"ElementaryTypeName","src":"16022:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4396,"mutability":"mutable","name":"result","nameLocation":"16044:6:19","nodeType":"VariableDeclaration","scope":4416,"src":"16036:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4395,"name":"uint256","nodeType":"ElementaryTypeName","src":"16036:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4402,"initialValue":{"arguments":[{"id":4398,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4384,"src":"16064:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4399,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4386,"src":"16067:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4400,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4388,"src":"16070:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4397,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[4441,4523],"referencedDeclaration":4441,"src":"16054:9:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":4401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:18:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"16021:51:19"},{"condition":{"id":4404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16086:8:19","subExpression":{"id":4403,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4394,"src":"16087:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4413,"nodeType":"IfStatement","src":"16082:74:19","trueBody":{"id":4412,"nodeType":"Block","src":"16096:60:19","statements":[{"expression":{"arguments":[{"expression":{"id":4408,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2103,"src":"16122:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2103_$","typeString":"type(library Panic)"}},"id":4409,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16128:16:19","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2070,"src":"16122:22:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4405,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2103,"src":"16110:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2103_$","typeString":"type(library Panic)"}},"id":4407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16116:5:19","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2102,"src":"16110:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:35:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4411,"nodeType":"ExpressionStatement","src":"16110:35:19"}]}},{"expression":{"id":4414,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4396,"src":"16172:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4392,"id":4415,"nodeType":"Return","src":"16165:13:19"}]},"documentation":{"id":4382,"nodeType":"StructuredDocumentation","src":"15247:678:19","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":4417,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"15939:6:19","nodeType":"FunctionDefinition","parameters":{"id":4389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4384,"mutability":"mutable","name":"b","nameLocation":"15954:1:19","nodeType":"VariableDeclaration","scope":4417,"src":"15946:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4383,"name":"uint256","nodeType":"ElementaryTypeName","src":"15946:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4386,"mutability":"mutable","name":"e","nameLocation":"15965:1:19","nodeType":"VariableDeclaration","scope":4417,"src":"15957:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4385,"name":"uint256","nodeType":"ElementaryTypeName","src":"15957:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4388,"mutability":"mutable","name":"m","nameLocation":"15976:1:19","nodeType":"VariableDeclaration","scope":4417,"src":"15968:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4387,"name":"uint256","nodeType":"ElementaryTypeName","src":"15968:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15945:33:19"},"returnParameters":{"id":4392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4391,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4417,"src":"16002:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4390,"name":"uint256","nodeType":"ElementaryTypeName","src":"16002:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16001:9:19"},"scope":5231,"src":"15930:255:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4440,"nodeType":"Block","src":"17039:1493:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4431,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4424,"src":"17053:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17058:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17053:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4438,"nodeType":"IfStatement","src":"17049:29:19","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17069:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17076:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4436,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"17068:10:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4430,"id":4437,"nodeType":"Return","src":"17061:17:19"}},{"AST":{"nodeType":"YulBlock","src":"17113:1413:19","statements":[{"nodeType":"YulVariableDeclaration","src":"17127:22:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17144:4:19","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17138:5:19"},"nodeType":"YulFunctionCall","src":"17138:11:19"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"17131:3:19","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18057:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"18062:4:19","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18050:6:19"},"nodeType":"YulFunctionCall","src":"18050:17:19"},"nodeType":"YulExpressionStatement","src":"18050:17:19"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18091:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"18096:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18087:3:19"},"nodeType":"YulFunctionCall","src":"18087:14:19"},{"kind":"number","nodeType":"YulLiteral","src":"18103:4:19","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18080:6:19"},"nodeType":"YulFunctionCall","src":"18080:28:19"},"nodeType":"YulExpressionStatement","src":"18080:28:19"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18132:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"18137:4:19","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18128:3:19"},"nodeType":"YulFunctionCall","src":"18128:14:19"},{"kind":"number","nodeType":"YulLiteral","src":"18144:4:19","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18121:6:19"},"nodeType":"YulFunctionCall","src":"18121:28:19"},"nodeType":"YulExpressionStatement","src":"18121:28:19"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18173:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"18178:4:19","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18169:3:19"},"nodeType":"YulFunctionCall","src":"18169:14:19"},{"name":"b","nodeType":"YulIdentifier","src":"18185:1:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18162:6:19"},"nodeType":"YulFunctionCall","src":"18162:25:19"},"nodeType":"YulExpressionStatement","src":"18162:25:19"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18211:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"18216:4:19","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18207:3:19"},"nodeType":"YulFunctionCall","src":"18207:14:19"},{"name":"e","nodeType":"YulIdentifier","src":"18223:1:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18200:6:19"},"nodeType":"YulFunctionCall","src":"18200:25:19"},"nodeType":"YulExpressionStatement","src":"18200:25:19"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18249:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"18254:4:19","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18245:3:19"},"nodeType":"YulFunctionCall","src":"18245:14:19"},{"name":"m","nodeType":"YulIdentifier","src":"18261:1:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18238:6:19"},"nodeType":"YulFunctionCall","src":"18238:25:19"},"nodeType":"YulExpressionStatement","src":"18238:25:19"},{"nodeType":"YulAssignment","src":"18425:57:19","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"18447:3:19"},"nodeType":"YulFunctionCall","src":"18447:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"18454:4:19","type":"","value":"0x05"},{"name":"ptr","nodeType":"YulIdentifier","src":"18460:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"18465:4:19","type":"","value":"0xc0"},{"kind":"number","nodeType":"YulLiteral","src":"18471:4:19","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"18477:4:19","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"18436:10:19"},"nodeType":"YulFunctionCall","src":"18436:46:19"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"18425:7:19"}]},{"nodeType":"YulAssignment","src":"18495:21:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18511:4:19","type":"","value":"0x00"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18505:5:19"},"nodeType":"YulFunctionCall","src":"18505:11:19"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"18495:6:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4420,"isOffset":false,"isSlot":false,"src":"18185:1:19","valueSize":1},{"declaration":4422,"isOffset":false,"isSlot":false,"src":"18223:1:19","valueSize":1},{"declaration":4424,"isOffset":false,"isSlot":false,"src":"18261:1:19","valueSize":1},{"declaration":4429,"isOffset":false,"isSlot":false,"src":"18495:6:19","valueSize":1},{"declaration":4427,"isOffset":false,"isSlot":false,"src":"18425:7:19","valueSize":1}],"flags":["memory-safe"],"id":4439,"nodeType":"InlineAssembly","src":"17088:1438:19"}]},"documentation":{"id":4418,"nodeType":"StructuredDocumentation","src":"16191:738:19","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":4441,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16943:9:19","nodeType":"FunctionDefinition","parameters":{"id":4425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4420,"mutability":"mutable","name":"b","nameLocation":"16961:1:19","nodeType":"VariableDeclaration","scope":4441,"src":"16953:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4419,"name":"uint256","nodeType":"ElementaryTypeName","src":"16953:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4422,"mutability":"mutable","name":"e","nameLocation":"16972:1:19","nodeType":"VariableDeclaration","scope":4441,"src":"16964:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4421,"name":"uint256","nodeType":"ElementaryTypeName","src":"16964:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4424,"mutability":"mutable","name":"m","nameLocation":"16983:1:19","nodeType":"VariableDeclaration","scope":4441,"src":"16975:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4423,"name":"uint256","nodeType":"ElementaryTypeName","src":"16975:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16952:33:19"},"returnParameters":{"id":4430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4427,"mutability":"mutable","name":"success","nameLocation":"17014:7:19","nodeType":"VariableDeclaration","scope":4441,"src":"17009:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4426,"name":"bool","nodeType":"ElementaryTypeName","src":"17009:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4429,"mutability":"mutable","name":"result","nameLocation":"17031:6:19","nodeType":"VariableDeclaration","scope":4441,"src":"17023:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4428,"name":"uint256","nodeType":"ElementaryTypeName","src":"17023:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17008:30:19"},"scope":5231,"src":"16934:1598:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4476,"nodeType":"Block","src":"18729:179:19","statements":[{"assignments":[4454,4456],"declarations":[{"constant":false,"id":4454,"mutability":"mutable","name":"success","nameLocation":"18745:7:19","nodeType":"VariableDeclaration","scope":4476,"src":"18740:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4453,"name":"bool","nodeType":"ElementaryTypeName","src":"18740:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4456,"mutability":"mutable","name":"result","nameLocation":"18767:6:19","nodeType":"VariableDeclaration","scope":4476,"src":"18754:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4455,"name":"bytes","nodeType":"ElementaryTypeName","src":"18754:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4462,"initialValue":{"arguments":[{"id":4458,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4444,"src":"18787:1:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4459,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4446,"src":"18790:1:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4460,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4448,"src":"18793:1:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4457,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[4441,4523],"referencedDeclaration":4523,"src":"18777:9:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":4461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18777:18:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"18739:56:19"},{"condition":{"id":4464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"18809:8:19","subExpression":{"id":4463,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4454,"src":"18810:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4473,"nodeType":"IfStatement","src":"18805:74:19","trueBody":{"id":4472,"nodeType":"Block","src":"18819:60:19","statements":[{"expression":{"arguments":[{"expression":{"id":4468,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2103,"src":"18845:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2103_$","typeString":"type(library Panic)"}},"id":4469,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"18851:16:19","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2070,"src":"18845:22:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4465,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2103,"src":"18833:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2103_$","typeString":"type(library Panic)"}},"id":4467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18839:5:19","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2102,"src":"18833:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18833:35:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4471,"nodeType":"ExpressionStatement","src":"18833:35:19"}]}},{"expression":{"id":4474,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4456,"src":"18895:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4452,"id":4475,"nodeType":"Return","src":"18888:13:19"}]},"documentation":{"id":4442,"nodeType":"StructuredDocumentation","src":"18538:85:19","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":4477,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"18637:6:19","nodeType":"FunctionDefinition","parameters":{"id":4449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4444,"mutability":"mutable","name":"b","nameLocation":"18657:1:19","nodeType":"VariableDeclaration","scope":4477,"src":"18644:14:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4443,"name":"bytes","nodeType":"ElementaryTypeName","src":"18644:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4446,"mutability":"mutable","name":"e","nameLocation":"18673:1:19","nodeType":"VariableDeclaration","scope":4477,"src":"18660:14:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4445,"name":"bytes","nodeType":"ElementaryTypeName","src":"18660:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4448,"mutability":"mutable","name":"m","nameLocation":"18689:1:19","nodeType":"VariableDeclaration","scope":4477,"src":"18676:14:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4447,"name":"bytes","nodeType":"ElementaryTypeName","src":"18676:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18643:48:19"},"returnParameters":{"id":4452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4451,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4477,"src":"18715:12:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4450,"name":"bytes","nodeType":"ElementaryTypeName","src":"18715:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18714:14:19"},"scope":5231,"src":"18628:280:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4522,"nodeType":"Block","src":"19162:771:19","statements":[{"condition":{"arguments":[{"id":4492,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4484,"src":"19187:1:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4491,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4556,"src":"19176:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":4493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19176:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4501,"nodeType":"IfStatement","src":"19172:47:19","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19199:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":4497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19216:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4496,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"19206:9:19","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":4495,"name":"bytes","nodeType":"ElementaryTypeName","src":"19210:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":4498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19206:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":4499,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19198:21:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":4490,"id":4500,"nodeType":"Return","src":"19191:28:19"}},{"assignments":[4503],"declarations":[{"constant":false,"id":4503,"mutability":"mutable","name":"mLen","nameLocation":"19238:4:19","nodeType":"VariableDeclaration","scope":4522,"src":"19230:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4502,"name":"uint256","nodeType":"ElementaryTypeName","src":"19230:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4506,"initialValue":{"expression":{"id":4504,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4484,"src":"19245:1:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19247:6:19","memberName":"length","nodeType":"MemberAccess","src":"19245:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19230:23:19"},{"expression":{"id":4519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4507,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"19335:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":4510,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4480,"src":"19361:1:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19363:6:19","memberName":"length","nodeType":"MemberAccess","src":"19361:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4512,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4482,"src":"19371:1:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19373:6:19","memberName":"length","nodeType":"MemberAccess","src":"19371:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4514,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4503,"src":"19381:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4515,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4480,"src":"19387:1:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4516,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4482,"src":"19390:1:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4517,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4484,"src":"19393:1:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4508,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"19344:3:19","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4509,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19348:12:19","memberName":"encodePacked","nodeType":"MemberAccess","src":"19344:16:19","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19344:51:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"19335:60:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4520,"nodeType":"ExpressionStatement","src":"19335:60:19"},{"AST":{"nodeType":"YulBlock","src":"19431:496:19","statements":[{"nodeType":"YulVariableDeclaration","src":"19445:32:19","value":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19464:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"19472:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19460:3:19"},"nodeType":"YulFunctionCall","src":"19460:17:19"},"variables":[{"name":"dataPtr","nodeType":"YulTypedName","src":"19449:7:19","type":""}]},{"nodeType":"YulAssignment","src":"19567:73:19","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"19589:3:19"},"nodeType":"YulFunctionCall","src":"19589:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"19596:4:19","type":"","value":"0x05"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"19602:7:19"},{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19617:6:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19611:5:19"},"nodeType":"YulFunctionCall","src":"19611:13:19"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"19626:7:19"},{"name":"mLen","nodeType":"YulIdentifier","src":"19635:4:19"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"19578:10:19"},"nodeType":"YulFunctionCall","src":"19578:62:19"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"19567:7:19"}]},{"expression":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19796:6:19"},{"name":"mLen","nodeType":"YulIdentifier","src":"19804:4:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19789:6:19"},"nodeType":"YulFunctionCall","src":"19789:20:19"},"nodeType":"YulExpressionStatement","src":"19789:20:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19892:4:19","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"19902:7:19"},{"name":"mLen","nodeType":"YulIdentifier","src":"19911:4:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19898:3:19"},"nodeType":"YulFunctionCall","src":"19898:18:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19885:6:19"},"nodeType":"YulFunctionCall","src":"19885:32:19"},"nodeType":"YulExpressionStatement","src":"19885:32:19"}]},"evmVersion":"paris","externalReferences":[{"declaration":4503,"isOffset":false,"isSlot":false,"src":"19635:4:19","valueSize":1},{"declaration":4503,"isOffset":false,"isSlot":false,"src":"19804:4:19","valueSize":1},{"declaration":4503,"isOffset":false,"isSlot":false,"src":"19911:4:19","valueSize":1},{"declaration":4489,"isOffset":false,"isSlot":false,"src":"19464:6:19","valueSize":1},{"declaration":4489,"isOffset":false,"isSlot":false,"src":"19617:6:19","valueSize":1},{"declaration":4489,"isOffset":false,"isSlot":false,"src":"19796:6:19","valueSize":1},{"declaration":4487,"isOffset":false,"isSlot":false,"src":"19567:7:19","valueSize":1}],"flags":["memory-safe"],"id":4521,"nodeType":"InlineAssembly","src":"19406:521:19"}]},"documentation":{"id":4478,"nodeType":"StructuredDocumentation","src":"18914:88:19","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":4523,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"19016:9:19","nodeType":"FunctionDefinition","parameters":{"id":4485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4480,"mutability":"mutable","name":"b","nameLocation":"19048:1:19","nodeType":"VariableDeclaration","scope":4523,"src":"19035:14:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4479,"name":"bytes","nodeType":"ElementaryTypeName","src":"19035:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4482,"mutability":"mutable","name":"e","nameLocation":"19072:1:19","nodeType":"VariableDeclaration","scope":4523,"src":"19059:14:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4481,"name":"bytes","nodeType":"ElementaryTypeName","src":"19059:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4484,"mutability":"mutable","name":"m","nameLocation":"19096:1:19","nodeType":"VariableDeclaration","scope":4523,"src":"19083:14:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4483,"name":"bytes","nodeType":"ElementaryTypeName","src":"19083:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19025:78:19"},"returnParameters":{"id":4490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4487,"mutability":"mutable","name":"success","nameLocation":"19132:7:19","nodeType":"VariableDeclaration","scope":4523,"src":"19127:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4486,"name":"bool","nodeType":"ElementaryTypeName","src":"19127:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4489,"mutability":"mutable","name":"result","nameLocation":"19154:6:19","nodeType":"VariableDeclaration","scope":4523,"src":"19141:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4488,"name":"bytes","nodeType":"ElementaryTypeName","src":"19141:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19126:35:19"},"scope":5231,"src":"19007:926:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4555,"nodeType":"Block","src":"20088:176:19","statements":[{"body":{"id":4551,"nodeType":"Block","src":"20145:92:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4542,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4526,"src":"20163:9:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4544,"indexExpression":{"id":4543,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4532,"src":"20173:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20163:12:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20179:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20163:17:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4550,"nodeType":"IfStatement","src":"20159:68:19","trueBody":{"id":4549,"nodeType":"Block","src":"20182:45:19","statements":[{"expression":{"hexValue":"66616c7365","id":4547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20207:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":4530,"id":4548,"nodeType":"Return","src":"20200:12:19"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4535,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4532,"src":"20118:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4536,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4526,"src":"20122:9:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20132:6:19","memberName":"length","nodeType":"MemberAccess","src":"20122:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20118:20:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4552,"initializationExpression":{"assignments":[4532],"declarations":[{"constant":false,"id":4532,"mutability":"mutable","name":"i","nameLocation":"20111:1:19","nodeType":"VariableDeclaration","scope":4552,"src":"20103:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4531,"name":"uint256","nodeType":"ElementaryTypeName","src":"20103:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4534,"initialValue":{"hexValue":"30","id":4533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20115:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"20103:13:19"},"loopExpression":{"expression":{"id":4540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"20140:3:19","subExpression":{"id":4539,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4532,"src":"20142:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4541,"nodeType":"ExpressionStatement","src":"20140:3:19"},"nodeType":"ForStatement","src":"20098:139:19"},{"expression":{"hexValue":"74727565","id":4553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20253:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":4530,"id":4554,"nodeType":"Return","src":"20246:11:19"}]},"documentation":{"id":4524,"nodeType":"StructuredDocumentation","src":"19939:72:19","text":" @dev Returns whether the provided byte array is zero."},"id":4556,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"20025:10:19","nodeType":"FunctionDefinition","parameters":{"id":4527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4526,"mutability":"mutable","name":"byteArray","nameLocation":"20049:9:19","nodeType":"VariableDeclaration","scope":4556,"src":"20036:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4525,"name":"bytes","nodeType":"ElementaryTypeName","src":"20036:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20035:24:19"},"returnParameters":{"id":4530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4529,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4556,"src":"20082:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4528,"name":"bool","nodeType":"ElementaryTypeName","src":"20082:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20081:6:19"},"scope":5231,"src":"20016:248:19","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4774,"nodeType":"Block","src":"20624:5124:19","statements":[{"id":4773,"nodeType":"UncheckedBlock","src":"20634:5108:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4564,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4559,"src":"20728:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":4565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20733:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20728:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4570,"nodeType":"IfStatement","src":"20724:53:19","trueBody":{"id":4569,"nodeType":"Block","src":"20736:41:19","statements":[{"expression":{"id":4567,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4559,"src":"20761:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4563,"id":4568,"nodeType":"Return","src":"20754:8:19"}]}},{"assignments":[4572],"declarations":[{"constant":false,"id":4572,"mutability":"mutable","name":"aa","nameLocation":"21712:2:19","nodeType":"VariableDeclaration","scope":4773,"src":"21704:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4571,"name":"uint256","nodeType":"ElementaryTypeName","src":"21704:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4574,"initialValue":{"id":4573,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4559,"src":"21717:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21704:14:19"},{"assignments":[4576],"declarations":[{"constant":false,"id":4576,"mutability":"mutable","name":"xn","nameLocation":"21740:2:19","nodeType":"VariableDeclaration","scope":4773,"src":"21732:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4575,"name":"uint256","nodeType":"ElementaryTypeName","src":"21732:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4578,"initialValue":{"hexValue":"31","id":4577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21745:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"21732:14:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4579,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4572,"src":"21765:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":4582,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21772:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":4581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21777:3:19","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21772:8:19","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":4583,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21771:10:19","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"21765:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4594,"nodeType":"IfStatement","src":"21761:92:19","trueBody":{"id":4593,"nodeType":"Block","src":"21783:70:19","statements":[{"expression":{"id":4587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4585,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4572,"src":"21801:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":4586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21808:3:19","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21801:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4588,"nodeType":"ExpressionStatement","src":"21801:10:19"},{"expression":{"id":4591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4589,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4576,"src":"21829:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":4590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21836:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21829:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4592,"nodeType":"ExpressionStatement","src":"21829:9:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4595,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4572,"src":"21870:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":4598,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21877:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":4597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21882:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21877:7:19","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":4599,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21876:9:19","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"21870:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4610,"nodeType":"IfStatement","src":"21866:90:19","trueBody":{"id":4609,"nodeType":"Block","src":"21887:69:19","statements":[{"expression":{"id":4603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4601,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4572,"src":"21905:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":4602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21912:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21905:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4604,"nodeType":"ExpressionStatement","src":"21905:9:19"},{"expression":{"id":4607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4605,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4576,"src":"21932:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":4606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21939:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21932:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4608,"nodeType":"ExpressionStatement","src":"21932:9:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4611,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4572,"src":"21973:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":4614,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21980:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":4613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21985:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21980:7:19","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":4615,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21979:9:19","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"21973:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4626,"nodeType":"IfStatement","src":"21969:90:19","trueBody":{"id":4625,"nodeType":"Block","src":"21990:69:19","statements":[{"expression":{"id":4619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4617,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4572,"src":"22008:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":4618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22015:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"22008:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4620,"nodeType":"ExpressionStatement","src":"22008:9:19"},{"expression":{"id":4623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4621,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4576,"src":"22035:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":4622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22042:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22035:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4624,"nodeType":"ExpressionStatement","src":"22035:9:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4627,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4572,"src":"22076:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":4630,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22083:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":4629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22088:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22083:7:19","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":4631,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22082:9:19","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"22076:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4642,"nodeType":"IfStatement","src":"22072:89:19","trueBody":{"id":4641,"nodeType":"Block","src":"22093:68:19","statements":[{"expression":{"id":4635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4633,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4572,"src":"22111:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":4634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22118:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22111:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4636,"nodeType":"ExpressionStatement","src":"22111:9:19"},{"expression":{"id":4639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4637,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4576,"src":"22138:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":4638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22145:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22138:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4640,"nodeType":"ExpressionStatement","src":"22138:8:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4643,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4572,"src":"22178:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":4646,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22185:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":4645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22190:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22185:6:19","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":4647,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22184:8:19","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"22178:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4658,"nodeType":"IfStatement","src":"22174:87:19","trueBody":{"id":4657,"nodeType":"Block","src":"22194:67:19","statements":[{"expression":{"id":4651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4649,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4572,"src":"22212:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":4650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22219:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22212:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4652,"nodeType":"ExpressionStatement","src":"22212:8:19"},{"expression":{"id":4655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4653,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4576,"src":"22238:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":4654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22245:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22238:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4656,"nodeType":"ExpressionStatement","src":"22238:8:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4659,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4572,"src":"22278:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":4662,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22285:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":4661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22290:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22285:6:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":4663,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22284:8:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"22278:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4674,"nodeType":"IfStatement","src":"22274:87:19","trueBody":{"id":4673,"nodeType":"Block","src":"22294:67:19","statements":[{"expression":{"id":4667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4665,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4572,"src":"22312:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":4666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22319:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22312:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4668,"nodeType":"ExpressionStatement","src":"22312:8:19"},{"expression":{"id":4671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4669,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4576,"src":"22338:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":4670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22345:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22338:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4672,"nodeType":"ExpressionStatement","src":"22338:8:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4675,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4572,"src":"22378:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":4678,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22385:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":4677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22390:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22385:6:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":4679,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22384:8:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"22378:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4686,"nodeType":"IfStatement","src":"22374:61:19","trueBody":{"id":4685,"nodeType":"Block","src":"22394:41:19","statements":[{"expression":{"id":4683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4681,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4576,"src":"22412:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":4682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22419:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22412:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4684,"nodeType":"ExpressionStatement","src":"22412:8:19"}]}},{"expression":{"id":4694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4687,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4576,"src":"22855:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":4688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22861:1:19","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4689,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4576,"src":"22865:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22861:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4691,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22860:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22872:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22860:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22855:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4695,"nodeType":"ExpressionStatement","src":"22855:18:19"},{"expression":{"id":4705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4696,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4576,"src":"24760:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4697,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4576,"src":"24766:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4698,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4559,"src":"24771:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4699,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4576,"src":"24775:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24771:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24766:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4702,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24765:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24782:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24765:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24760:23:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4706,"nodeType":"ExpressionStatement","src":"24760:23:19"},{"expression":{"id":4716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4707,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4576,"src":"24869:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4708,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4576,"src":"24875:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4709,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4559,"src":"24880:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4710,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4576,"src":"24884:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24880:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24875:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4713,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24874:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24891:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24874:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24869:23:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4717,"nodeType":"ExpressionStatement","src":"24869:23:19"},{"expression":{"id":4727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4718,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4576,"src":"24980:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4719,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4576,"src":"24986:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4720,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4559,"src":"24991:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4721,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4576,"src":"24995:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24991:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24986:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4724,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24985:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25002:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24985:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24980:23:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4728,"nodeType":"ExpressionStatement","src":"24980:23:19"},{"expression":{"id":4738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4729,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4576,"src":"25089:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4730,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4576,"src":"25095:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4731,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4559,"src":"25100:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4732,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4576,"src":"25104:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25100:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25095:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4735,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25094:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25111:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25094:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25089:23:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4739,"nodeType":"ExpressionStatement","src":"25089:23:19"},{"expression":{"id":4749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4740,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4576,"src":"25199:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4741,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4576,"src":"25205:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4742,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4559,"src":"25210:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4743,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4576,"src":"25214:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25210:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25205:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4746,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25204:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25221:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25204:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25199:23:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4750,"nodeType":"ExpressionStatement","src":"25199:23:19"},{"expression":{"id":4760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4751,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4576,"src":"25309:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4752,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4576,"src":"25315:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4753,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4559,"src":"25320:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4754,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4576,"src":"25324:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25320:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25315:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4757,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25314:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25331:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25314:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25309:23:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4761,"nodeType":"ExpressionStatement","src":"25309:23:19"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4762,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4576,"src":"25698:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4765,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4576,"src":"25719:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4766,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4559,"src":"25724:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4767,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4576,"src":"25728:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25724:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25719:11:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4763,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6996,"src":"25703:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6996_$","typeString":"type(library SafeCast)"}},"id":4764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25712:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6995,"src":"25703:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25703:28:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25698:33:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4563,"id":4772,"nodeType":"Return","src":"25691:40:19"}]}]},"documentation":{"id":4557,"nodeType":"StructuredDocumentation","src":"20270:292:19","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":4775,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"20576:4:19","nodeType":"FunctionDefinition","parameters":{"id":4560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4559,"mutability":"mutable","name":"a","nameLocation":"20589:1:19","nodeType":"VariableDeclaration","scope":4775,"src":"20581:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4558,"name":"uint256","nodeType":"ElementaryTypeName","src":"20581:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20580:11:19"},"returnParameters":{"id":4563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4562,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4775,"src":"20615:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4561,"name":"uint256","nodeType":"ElementaryTypeName","src":"20615:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20614:9:19"},"scope":5231,"src":"20567:5181:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4808,"nodeType":"Block","src":"25921:171:19","statements":[{"id":4807,"nodeType":"UncheckedBlock","src":"25931:155:19","statements":[{"assignments":[4787],"declarations":[{"constant":false,"id":4787,"mutability":"mutable","name":"result","nameLocation":"25963:6:19","nodeType":"VariableDeclaration","scope":4807,"src":"25955:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4786,"name":"uint256","nodeType":"ElementaryTypeName","src":"25955:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4791,"initialValue":{"arguments":[{"id":4789,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4778,"src":"25977:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4788,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[4775,4809],"referencedDeclaration":4775,"src":"25972:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25972:7:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25955:24:19"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4792,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4787,"src":"26000:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4796,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4781,"src":"26042:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3622","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3622","typeString":"enum Math.Rounding"}],"id":4795,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5230,"src":"26025:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3622_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26025:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4798,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4787,"src":"26055:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4799,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4787,"src":"26064:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4801,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4778,"src":"26073:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26025:49:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4793,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6996,"src":"26009:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6996_$","typeString":"type(library SafeCast)"}},"id":4794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26018:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6995,"src":"26009:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26009:66:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26000:75:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4785,"id":4806,"nodeType":"Return","src":"25993:82:19"}]}]},"documentation":{"id":4776,"nodeType":"StructuredDocumentation","src":"25754:86:19","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":4809,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"25854:4:19","nodeType":"FunctionDefinition","parameters":{"id":4782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4778,"mutability":"mutable","name":"a","nameLocation":"25867:1:19","nodeType":"VariableDeclaration","scope":4809,"src":"25859:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4777,"name":"uint256","nodeType":"ElementaryTypeName","src":"25859:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4781,"mutability":"mutable","name":"rounding","nameLocation":"25879:8:19","nodeType":"VariableDeclaration","scope":4809,"src":"25870:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3622","typeString":"enum Math.Rounding"},"typeName":{"id":4780,"nodeType":"UserDefinedTypeName","pathNode":{"id":4779,"name":"Rounding","nameLocations":["25870:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":3622,"src":"25870:8:19"},"referencedDeclaration":3622,"src":"25870:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3622","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"25858:30:19"},"returnParameters":{"id":4785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4784,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4809,"src":"25912:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4783,"name":"uint256","nodeType":"ElementaryTypeName","src":"25912:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25911:9:19"},"scope":5231,"src":"25845:247:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4899,"nodeType":"Block","src":"26281:2334:19","statements":[{"expression":{"id":4826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4817,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4815,"src":"26363:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4820,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4812,"src":"26383:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":4821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26387:34:19","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"26383:38:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4818,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6996,"src":"26367:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6996_$","typeString":"type(library SafeCast)"}},"id":4819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26376:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6995,"src":"26367:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26367:55:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":4824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26426:1:19","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"26367:60:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26363:64:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4827,"nodeType":"ExpressionStatement","src":"26363:64:19"},{"expression":{"id":4840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4828,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4815,"src":"26503:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4831,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4812,"src":"26525:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4832,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4815,"src":"26530:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26525:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4834,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26524:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":4835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26535:18:19","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"26524:29:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4829,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6996,"src":"26508:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6996_$","typeString":"type(library SafeCast)"}},"id":4830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26517:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6995,"src":"26508:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26508:46:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":4838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26558:1:19","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"26508:51:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26503:56:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4841,"nodeType":"ExpressionStatement","src":"26503:56:19"},{"expression":{"id":4854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4842,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4815,"src":"26634:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4845,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4812,"src":"26656:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4846,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4815,"src":"26661:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26656:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4848,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26655:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":4849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26666:10:19","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"26655:21:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4843,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6996,"src":"26639:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6996_$","typeString":"type(library SafeCast)"}},"id":4844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26648:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6995,"src":"26639:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26639:38:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":4852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26681:1:19","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"26639:43:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26634:48:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4855,"nodeType":"ExpressionStatement","src":"26634:48:19"},{"expression":{"id":4868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4856,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4815,"src":"26757:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4859,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4812,"src":"26779:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4860,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4815,"src":"26784:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26779:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4862,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26778:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":4863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26789:6:19","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"26778:17:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4857,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6996,"src":"26762:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6996_$","typeString":"type(library SafeCast)"}},"id":4858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26771:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6995,"src":"26762:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26762:34:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":4866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26800:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"26762:39:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26757:44:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4869,"nodeType":"ExpressionStatement","src":"26757:44:19"},{"expression":{"id":4882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4870,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4815,"src":"26874:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4873,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4812,"src":"26896:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4874,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4815,"src":"26901:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26896:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4876,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26895:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":4877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26906:4:19","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"26895:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4871,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6996,"src":"26879:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6996_$","typeString":"type(library SafeCast)"}},"id":4872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26888:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6995,"src":"26879:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26879:32:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":4880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26915:1:19","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"26879:37:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26874:42:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4883,"nodeType":"ExpressionStatement","src":"26874:42:19"},{"expression":{"id":4896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4884,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4815,"src":"26988:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4887,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4812,"src":"27010:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4888,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4815,"src":"27015:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27010:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4890,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27009:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866","id":4891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27020:3:19","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"27009:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4885,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6996,"src":"26993:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6996_$","typeString":"type(library SafeCast)"}},"id":4886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27002:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6995,"src":"26993:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26993:31:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":4894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27028:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26993:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26988:41:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4897,"nodeType":"ExpressionStatement","src":"26988:41:19"},{"AST":{"nodeType":"YulBlock","src":"28490:119:19","statements":[{"nodeType":"YulAssignment","src":"28504:95:19","value":{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"28512:1:19"},{"arguments":[{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"28524:1:19"},{"name":"x","nodeType":"YulIdentifier","src":"28527:1:19"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"28520:3:19"},"nodeType":"YulFunctionCall","src":"28520:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"28531:66:19","type":"","value":"0x0000010102020202030303030303030300000000000000000000000000000000"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"28515:4:19"},"nodeType":"YulFunctionCall","src":"28515:83:19"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"28509:2:19"},"nodeType":"YulFunctionCall","src":"28509:90:19"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"28504:1:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4815,"isOffset":false,"isSlot":false,"src":"28504:1:19","valueSize":1},{"declaration":4815,"isOffset":false,"isSlot":false,"src":"28512:1:19","valueSize":1},{"declaration":4815,"isOffset":false,"isSlot":false,"src":"28524:1:19","valueSize":1},{"declaration":4812,"isOffset":false,"isSlot":false,"src":"28527:1:19","valueSize":1}],"flags":["memory-safe"],"id":4898,"nodeType":"InlineAssembly","src":"28465:144:19"}]},"documentation":{"id":4810,"nodeType":"StructuredDocumentation","src":"26098:119:19","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":4900,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"26231:4:19","nodeType":"FunctionDefinition","parameters":{"id":4813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4812,"mutability":"mutable","name":"x","nameLocation":"26244:1:19","nodeType":"VariableDeclaration","scope":4900,"src":"26236:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4811,"name":"uint256","nodeType":"ElementaryTypeName","src":"26236:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26235:11:19"},"returnParameters":{"id":4816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4815,"mutability":"mutable","name":"r","nameLocation":"26278:1:19","nodeType":"VariableDeclaration","scope":4900,"src":"26270:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4814,"name":"uint256","nodeType":"ElementaryTypeName","src":"26270:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26269:11:19"},"scope":5231,"src":"26222:2393:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4933,"nodeType":"Block","src":"28848:175:19","statements":[{"id":4932,"nodeType":"UncheckedBlock","src":"28858:159:19","statements":[{"assignments":[4912],"declarations":[{"constant":false,"id":4912,"mutability":"mutable","name":"result","nameLocation":"28890:6:19","nodeType":"VariableDeclaration","scope":4932,"src":"28882:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4911,"name":"uint256","nodeType":"ElementaryTypeName","src":"28882:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4916,"initialValue":{"arguments":[{"id":4914,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4903,"src":"28904:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4913,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[4900,4934],"referencedDeclaration":4900,"src":"28899:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28899:11:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"28882:28:19"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4917,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4912,"src":"28931:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4921,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4906,"src":"28973:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3622","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3622","typeString":"enum Math.Rounding"}],"id":4920,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5230,"src":"28956:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3622_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28956:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28986:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4924,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4912,"src":"28991:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4926,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4903,"src":"29000:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"28956:49:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4918,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6996,"src":"28940:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6996_$","typeString":"type(library SafeCast)"}},"id":4919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28949:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6995,"src":"28940:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28940:66:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28931:75:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4910,"id":4931,"nodeType":"Return","src":"28924:82:19"}]}]},"documentation":{"id":4901,"nodeType":"StructuredDocumentation","src":"28621:142:19","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4934,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"28777:4:19","nodeType":"FunctionDefinition","parameters":{"id":4907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4903,"mutability":"mutable","name":"value","nameLocation":"28790:5:19","nodeType":"VariableDeclaration","scope":4934,"src":"28782:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4902,"name":"uint256","nodeType":"ElementaryTypeName","src":"28782:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4906,"mutability":"mutable","name":"rounding","nameLocation":"28806:8:19","nodeType":"VariableDeclaration","scope":4934,"src":"28797:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3622","typeString":"enum Math.Rounding"},"typeName":{"id":4905,"nodeType":"UserDefinedTypeName","pathNode":{"id":4904,"name":"Rounding","nameLocations":["28797:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":3622,"src":"28797:8:19"},"referencedDeclaration":3622,"src":"28797:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3622","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28781:34:19"},"returnParameters":{"id":4910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4909,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4934,"src":"28839:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4908,"name":"uint256","nodeType":"ElementaryTypeName","src":"28839:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28838:9:19"},"scope":5231,"src":"28768:255:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5062,"nodeType":"Block","src":"29216:854:19","statements":[{"assignments":[4943],"declarations":[{"constant":false,"id":4943,"mutability":"mutable","name":"result","nameLocation":"29234:6:19","nodeType":"VariableDeclaration","scope":5062,"src":"29226:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4942,"name":"uint256","nodeType":"ElementaryTypeName","src":"29226:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4945,"initialValue":{"hexValue":"30","id":4944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29243:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"29226:18:19"},{"id":5059,"nodeType":"UncheckedBlock","src":"29254:787:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4946,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4937,"src":"29282:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4949,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29291:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29297:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29291:8:19","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29282:17:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4962,"nodeType":"IfStatement","src":"29278:103:19","trueBody":{"id":4961,"nodeType":"Block","src":"29301:80:19","statements":[{"expression":{"id":4955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4951,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4937,"src":"29319:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4954,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29328:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29334:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29328:8:19","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29319:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4956,"nodeType":"ExpressionStatement","src":"29319:17:19"},{"expression":{"id":4959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4957,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4943,"src":"29354:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":4958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29364:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29354:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4960,"nodeType":"ExpressionStatement","src":"29354:12:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4963,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4937,"src":"29398:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4966,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29407:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29413:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29407:8:19","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29398:17:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4979,"nodeType":"IfStatement","src":"29394:103:19","trueBody":{"id":4978,"nodeType":"Block","src":"29417:80:19","statements":[{"expression":{"id":4972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4968,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4937,"src":"29435:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4971,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29444:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29450:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29444:8:19","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29435:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4973,"nodeType":"ExpressionStatement","src":"29435:17:19"},{"expression":{"id":4976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4974,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4943,"src":"29470:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":4975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29480:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29470:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4977,"nodeType":"ExpressionStatement","src":"29470:12:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4980,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4937,"src":"29514:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4983,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29523:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29529:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29523:8:19","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29514:17:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4996,"nodeType":"IfStatement","src":"29510:103:19","trueBody":{"id":4995,"nodeType":"Block","src":"29533:80:19","statements":[{"expression":{"id":4989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4985,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4937,"src":"29551:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4988,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29560:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29566:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29560:8:19","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29551:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4990,"nodeType":"ExpressionStatement","src":"29551:17:19"},{"expression":{"id":4993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4991,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4943,"src":"29586:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29596:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29586:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4994,"nodeType":"ExpressionStatement","src":"29586:12:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4997,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4937,"src":"29630:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":5000,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29639:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29645:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29639:7:19","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29630:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5013,"nodeType":"IfStatement","src":"29626:100:19","trueBody":{"id":5012,"nodeType":"Block","src":"29648:78:19","statements":[{"expression":{"id":5006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5002,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4937,"src":"29666:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":5005,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29675:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":5004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29681:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29675:7:19","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29666:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5007,"nodeType":"ExpressionStatement","src":"29666:16:19"},{"expression":{"id":5010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5008,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4943,"src":"29700:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":5009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29710:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29700:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5011,"nodeType":"ExpressionStatement","src":"29700:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5014,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4937,"src":"29743:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":5017,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29752:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":5016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29758:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29752:7:19","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29743:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5030,"nodeType":"IfStatement","src":"29739:100:19","trueBody":{"id":5029,"nodeType":"Block","src":"29761:78:19","statements":[{"expression":{"id":5023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5019,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4937,"src":"29779:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":5022,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29788:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":5021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29794:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29788:7:19","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29779:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5024,"nodeType":"ExpressionStatement","src":"29779:16:19"},{"expression":{"id":5027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5025,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4943,"src":"29813:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":5026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29823:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29813:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5028,"nodeType":"ExpressionStatement","src":"29813:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5031,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4937,"src":"29856:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":5034,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29865:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":5033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29871:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29865:7:19","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29856:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5047,"nodeType":"IfStatement","src":"29852:100:19","trueBody":{"id":5046,"nodeType":"Block","src":"29874:78:19","statements":[{"expression":{"id":5040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5036,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4937,"src":"29892:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":5039,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29901:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":5038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29907:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29901:7:19","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29892:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5041,"nodeType":"ExpressionStatement","src":"29892:16:19"},{"expression":{"id":5044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5042,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4943,"src":"29926:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":5043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29936:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29926:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5045,"nodeType":"ExpressionStatement","src":"29926:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5048,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4937,"src":"29969:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":5051,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29978:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":5050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29984:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"29978:7:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"29969:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5058,"nodeType":"IfStatement","src":"29965:66:19","trueBody":{"id":5057,"nodeType":"Block","src":"29987:44:19","statements":[{"expression":{"id":5055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5053,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4943,"src":"30005:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":5054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30015:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"30005:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5056,"nodeType":"ExpressionStatement","src":"30005:11:19"}]}}]},{"expression":{"id":5060,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4943,"src":"30057:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4941,"id":5061,"nodeType":"Return","src":"30050:13:19"}]},"documentation":{"id":4935,"nodeType":"StructuredDocumentation","src":"29029:120:19","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":5063,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"29163:5:19","nodeType":"FunctionDefinition","parameters":{"id":4938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4937,"mutability":"mutable","name":"value","nameLocation":"29177:5:19","nodeType":"VariableDeclaration","scope":5063,"src":"29169:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4936,"name":"uint256","nodeType":"ElementaryTypeName","src":"29169:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29168:15:19"},"returnParameters":{"id":4941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4940,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5063,"src":"29207:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4939,"name":"uint256","nodeType":"ElementaryTypeName","src":"29207:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29206:9:19"},"scope":5231,"src":"29154:916:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5096,"nodeType":"Block","src":"30305:177:19","statements":[{"id":5095,"nodeType":"UncheckedBlock","src":"30315:161:19","statements":[{"assignments":[5075],"declarations":[{"constant":false,"id":5075,"mutability":"mutable","name":"result","nameLocation":"30347:6:19","nodeType":"VariableDeclaration","scope":5095,"src":"30339:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5074,"name":"uint256","nodeType":"ElementaryTypeName","src":"30339:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5079,"initialValue":{"arguments":[{"id":5077,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5066,"src":"30362:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5076,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[5063,5097],"referencedDeclaration":5063,"src":"30356:5:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30356:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"30339:29:19"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5080,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5075,"src":"30389:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5084,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5069,"src":"30431:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3622","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3622","typeString":"enum Math.Rounding"}],"id":5083,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5230,"src":"30414:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3622_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30414:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30444:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":5087,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5075,"src":"30450:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5089,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5066,"src":"30459:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:20:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"30414:50:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5081,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6996,"src":"30398:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6996_$","typeString":"type(library SafeCast)"}},"id":5082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30407:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6995,"src":"30398:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30398:67:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30389:76:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5073,"id":5094,"nodeType":"Return","src":"30382:83:19"}]}]},"documentation":{"id":5064,"nodeType":"StructuredDocumentation","src":"30076:143:19","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5097,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"30233:5:19","nodeType":"FunctionDefinition","parameters":{"id":5070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5066,"mutability":"mutable","name":"value","nameLocation":"30247:5:19","nodeType":"VariableDeclaration","scope":5097,"src":"30239:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5065,"name":"uint256","nodeType":"ElementaryTypeName","src":"30239:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5069,"mutability":"mutable","name":"rounding","nameLocation":"30263:8:19","nodeType":"VariableDeclaration","scope":5097,"src":"30254:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3622","typeString":"enum Math.Rounding"},"typeName":{"id":5068,"nodeType":"UserDefinedTypeName","pathNode":{"id":5067,"name":"Rounding","nameLocations":["30254:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":3622,"src":"30254:8:19"},"referencedDeclaration":3622,"src":"30254:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3622","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"30238:34:19"},"returnParameters":{"id":5073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5072,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5097,"src":"30296:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5071,"name":"uint256","nodeType":"ElementaryTypeName","src":"30296:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30295:9:19"},"scope":5231,"src":"30224:258:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5173,"nodeType":"Block","src":"30800:675:19","statements":[{"expression":{"id":5114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5105,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5103,"src":"30882:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5108,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5100,"src":"30902:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":5109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30906:34:19","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"30902:38:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5106,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6996,"src":"30886:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6996_$","typeString":"type(library SafeCast)"}},"id":5107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30895:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6995,"src":"30886:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30886:55:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":5112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30945:1:19","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"30886:60:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30882:64:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5115,"nodeType":"ExpressionStatement","src":"30882:64:19"},{"expression":{"id":5128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5116,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5103,"src":"31022:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5119,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5100,"src":"31044:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5120,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5103,"src":"31049:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31044:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5122,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31043:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":5123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31054:18:19","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"31043:29:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5117,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6996,"src":"31027:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6996_$","typeString":"type(library SafeCast)"}},"id":5118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31036:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6995,"src":"31027:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31027:46:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":5126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31077:1:19","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"31027:51:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31022:56:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5129,"nodeType":"ExpressionStatement","src":"31022:56:19"},{"expression":{"id":5142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5130,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5103,"src":"31153:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5133,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5100,"src":"31175:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5134,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5103,"src":"31180:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31175:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5136,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31174:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":5137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31185:10:19","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"31174:21:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5131,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6996,"src":"31158:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6996_$","typeString":"type(library SafeCast)"}},"id":5132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31167:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6995,"src":"31158:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31158:38:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":5140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31200:1:19","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"31158:43:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31153:48:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5143,"nodeType":"ExpressionStatement","src":"31153:48:19"},{"expression":{"id":5156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5144,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5103,"src":"31276:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5147,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5100,"src":"31298:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5148,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5103,"src":"31303:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31298:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5150,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31297:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":5151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31308:6:19","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"31297:17:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5145,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6996,"src":"31281:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6996_$","typeString":"type(library SafeCast)"}},"id":5146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31290:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6995,"src":"31281:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31281:34:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":5154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31319:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"31281:39:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31276:44:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5157,"nodeType":"ExpressionStatement","src":"31276:44:19"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5158,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5103,"src":"31426:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"33","id":5159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31431:1:19","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31426:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5161,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31425:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5164,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5100,"src":"31453:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5165,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5103,"src":"31458:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31453:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5167,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31452:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":5168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31463:4:19","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"31452:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5162,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6996,"src":"31436:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6996_$","typeString":"type(library SafeCast)"}},"id":5163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31445:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6995,"src":"31436:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31436:32:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31425:43:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5104,"id":5172,"nodeType":"Return","src":"31418:50:19"}]},"documentation":{"id":5098,"nodeType":"StructuredDocumentation","src":"30488:246:19","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":5174,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"30748:6:19","nodeType":"FunctionDefinition","parameters":{"id":5101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5100,"mutability":"mutable","name":"x","nameLocation":"30763:1:19","nodeType":"VariableDeclaration","scope":5174,"src":"30755:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5099,"name":"uint256","nodeType":"ElementaryTypeName","src":"30755:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30754:11:19"},"returnParameters":{"id":5104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5103,"mutability":"mutable","name":"r","nameLocation":"30797:1:19","nodeType":"VariableDeclaration","scope":5174,"src":"30789:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5102,"name":"uint256","nodeType":"ElementaryTypeName","src":"30789:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30788:11:19"},"scope":5231,"src":"30739:736:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5210,"nodeType":"Block","src":"31712:184:19","statements":[{"id":5209,"nodeType":"UncheckedBlock","src":"31722:168:19","statements":[{"assignments":[5186],"declarations":[{"constant":false,"id":5186,"mutability":"mutable","name":"result","nameLocation":"31754:6:19","nodeType":"VariableDeclaration","scope":5209,"src":"31746:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5185,"name":"uint256","nodeType":"ElementaryTypeName","src":"31746:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5190,"initialValue":{"arguments":[{"id":5188,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5177,"src":"31770:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5187,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[5174,5211],"referencedDeclaration":5174,"src":"31763:6:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31763:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"31746:30:19"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5191,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5186,"src":"31797:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5195,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5180,"src":"31839:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3622","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3622","typeString":"enum Math.Rounding"}],"id":5194,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5230,"src":"31822:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3622_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31822:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31852:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5198,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5186,"src":"31858:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":5199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31868:1:19","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31858:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5201,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31857:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5203,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5177,"src":"31873:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:26:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"31822:56:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5192,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6996,"src":"31806:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6996_$","typeString":"type(library SafeCast)"}},"id":5193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31815:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6995,"src":"31806:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31806:73:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31797:82:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5184,"id":5208,"nodeType":"Return","src":"31790:89:19"}]}]},"documentation":{"id":5175,"nodeType":"StructuredDocumentation","src":"31481:144:19","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5211,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"31639:6:19","nodeType":"FunctionDefinition","parameters":{"id":5181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5177,"mutability":"mutable","name":"value","nameLocation":"31654:5:19","nodeType":"VariableDeclaration","scope":5211,"src":"31646:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5176,"name":"uint256","nodeType":"ElementaryTypeName","src":"31646:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5180,"mutability":"mutable","name":"rounding","nameLocation":"31670:8:19","nodeType":"VariableDeclaration","scope":5211,"src":"31661:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3622","typeString":"enum Math.Rounding"},"typeName":{"id":5179,"nodeType":"UserDefinedTypeName","pathNode":{"id":5178,"name":"Rounding","nameLocations":["31661:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":3622,"src":"31661:8:19"},"referencedDeclaration":3622,"src":"31661:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3622","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"31645:34:19"},"returnParameters":{"id":5184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5183,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5211,"src":"31703:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5182,"name":"uint256","nodeType":"ElementaryTypeName","src":"31703:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"31702:9:19"},"scope":5231,"src":"31630:266:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5229,"nodeType":"Block","src":"32094:48:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5222,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5215,"src":"32117:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3622","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3622","typeString":"enum Math.Rounding"}],"id":5221,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32111:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5220,"name":"uint8","nodeType":"ElementaryTypeName","src":"32111:5:19","typeDescriptions":{}}},"id":5223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32111:15:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":5224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32129:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"32111:19:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":5226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32134:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"32111:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5219,"id":5228,"nodeType":"Return","src":"32104:31:19"}]},"documentation":{"id":5212,"nodeType":"StructuredDocumentation","src":"31902:113:19","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":5230,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"32029:16:19","nodeType":"FunctionDefinition","parameters":{"id":5216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5215,"mutability":"mutable","name":"rounding","nameLocation":"32055:8:19","nodeType":"VariableDeclaration","scope":5230,"src":"32046:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3622","typeString":"enum Math.Rounding"},"typeName":{"id":5214,"nodeType":"UserDefinedTypeName","pathNode":{"id":5213,"name":"Rounding","nameLocations":["32046:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":3622,"src":"32046:8:19"},"referencedDeclaration":3622,"src":"32046:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3622","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"32045:19:19"},"returnParameters":{"id":5219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5218,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5230,"src":"32088:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5217,"name":"bool","nodeType":"ElementaryTypeName","src":"32088:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"32087:6:19"},"scope":5231,"src":"32020:122:19","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5232,"src":"281:31863:19","usedErrors":[],"usedEvents":[]}],"src":"103:32042:19"},"id":19},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[6996]},"id":6997,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5233,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:20"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":5234,"nodeType":"StructuredDocumentation","src":"218:550:20","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":6996,"linearizedBaseContracts":[6996],"name":"SafeCast","nameLocation":"777:8:20","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":5235,"nodeType":"StructuredDocumentation","src":"792:68:20","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":5241,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:20","nodeType":"ErrorDefinition","parameters":{"id":5240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5237,"mutability":"mutable","name":"bits","nameLocation":"908:4:20","nodeType":"VariableDeclaration","scope":5241,"src":"902:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5236,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5239,"mutability":"mutable","name":"value","nameLocation":"922:5:20","nodeType":"VariableDeclaration","scope":5241,"src":"914:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5238,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:20"},"src":"865:64:20"},{"documentation":{"id":5242,"nodeType":"StructuredDocumentation","src":"935:75:20","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":5246,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:20","nodeType":"ErrorDefinition","parameters":{"id":5245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5244,"mutability":"mutable","name":"value","nameLocation":"1056:5:20","nodeType":"VariableDeclaration","scope":5246,"src":"1049:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5243,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:20"},"src":"1015:48:20"},{"documentation":{"id":5247,"nodeType":"StructuredDocumentation","src":"1069:67:20","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":5253,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:20","nodeType":"ErrorDefinition","parameters":{"id":5252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5249,"mutability":"mutable","name":"bits","nameLocation":"1183:4:20","nodeType":"VariableDeclaration","scope":5253,"src":"1177:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5248,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5251,"mutability":"mutable","name":"value","nameLocation":"1196:5:20","nodeType":"VariableDeclaration","scope":5253,"src":"1189:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5250,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:20"},"src":"1141:62:20"},{"documentation":{"id":5254,"nodeType":"StructuredDocumentation","src":"1209:75:20","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":5258,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:20","nodeType":"ErrorDefinition","parameters":{"id":5257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5256,"mutability":"mutable","name":"value","nameLocation":"1331:5:20","nodeType":"VariableDeclaration","scope":5258,"src":"1323:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5255,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:20"},"src":"1289:49:20"},{"body":{"id":5285,"nodeType":"Block","src":"1695:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5266,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5261,"src":"1709:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5269,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":5268,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":5267,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":5271,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:20","memberName":"max","nodeType":"MemberAccess","src":"1717:17:20","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5279,"nodeType":"IfStatement","src":"1705:105:20","trueBody":{"id":5278,"nodeType":"Block","src":"1736:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":5274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:20","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":5275,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5261,"src":"1793:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5273,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5241,"src":"1757:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5277,"nodeType":"RevertStatement","src":"1750:49:20"}]}},{"expression":{"arguments":[{"id":5282,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5261,"src":"1834:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5281,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":5280,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:20","typeDescriptions":{}}},"id":5283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":5265,"id":5284,"nodeType":"Return","src":"1819:21:20"}]},"documentation":{"id":5259,"nodeType":"StructuredDocumentation","src":"1344:280:20","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":5286,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:20","nodeType":"FunctionDefinition","parameters":{"id":5262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5261,"mutability":"mutable","name":"value","nameLocation":"1656:5:20","nodeType":"VariableDeclaration","scope":5286,"src":"1648:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5260,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:20"},"returnParameters":{"id":5265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5264,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5286,"src":"1686:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":5263,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:20","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:20"},"scope":6996,"src":"1629:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5313,"nodeType":"Block","src":"2204:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5294,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5289,"src":"2218:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5297,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":5296,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":5295,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":5299,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:20","memberName":"max","nodeType":"MemberAccess","src":"2226:17:20","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5307,"nodeType":"IfStatement","src":"2214:105:20","trueBody":{"id":5306,"nodeType":"Block","src":"2245:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":5302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:20","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":5303,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5289,"src":"2302:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5301,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5241,"src":"2266:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5305,"nodeType":"RevertStatement","src":"2259:49:20"}]}},{"expression":{"arguments":[{"id":5310,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5289,"src":"2343:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5309,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":5308,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:20","typeDescriptions":{}}},"id":5311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":5293,"id":5312,"nodeType":"Return","src":"2328:21:20"}]},"documentation":{"id":5287,"nodeType":"StructuredDocumentation","src":"1853:280:20","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":5314,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:20","nodeType":"FunctionDefinition","parameters":{"id":5290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5289,"mutability":"mutable","name":"value","nameLocation":"2165:5:20","nodeType":"VariableDeclaration","scope":5314,"src":"2157:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5288,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:20"},"returnParameters":{"id":5293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5292,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5314,"src":"2195:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":5291,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:20","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:20"},"scope":6996,"src":"2138:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5341,"nodeType":"Block","src":"2713:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5322,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5317,"src":"2727:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5325,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":5324,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":5323,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":5327,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:20","memberName":"max","nodeType":"MemberAccess","src":"2735:17:20","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5335,"nodeType":"IfStatement","src":"2723:105:20","trueBody":{"id":5334,"nodeType":"Block","src":"2754:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":5330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:20","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":5331,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5317,"src":"2811:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5329,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5241,"src":"2775:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5333,"nodeType":"RevertStatement","src":"2768:49:20"}]}},{"expression":{"arguments":[{"id":5338,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5317,"src":"2852:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5337,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":5336,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:20","typeDescriptions":{}}},"id":5339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":5321,"id":5340,"nodeType":"Return","src":"2837:21:20"}]},"documentation":{"id":5315,"nodeType":"StructuredDocumentation","src":"2362:280:20","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":5342,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:20","nodeType":"FunctionDefinition","parameters":{"id":5318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5317,"mutability":"mutable","name":"value","nameLocation":"2674:5:20","nodeType":"VariableDeclaration","scope":5342,"src":"2666:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5316,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:20"},"returnParameters":{"id":5321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5320,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5342,"src":"2704:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":5319,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:20","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:20"},"scope":6996,"src":"2647:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5369,"nodeType":"Block","src":"3222:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5350,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5345,"src":"3236:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5353,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":5352,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":5351,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":5355,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:20","memberName":"max","nodeType":"MemberAccess","src":"3244:17:20","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5363,"nodeType":"IfStatement","src":"3232:105:20","trueBody":{"id":5362,"nodeType":"Block","src":"3263:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":5358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:20","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":5359,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5345,"src":"3320:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5357,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5241,"src":"3284:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5361,"nodeType":"RevertStatement","src":"3277:49:20"}]}},{"expression":{"arguments":[{"id":5366,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5345,"src":"3361:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5365,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":5364,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:20","typeDescriptions":{}}},"id":5367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":5349,"id":5368,"nodeType":"Return","src":"3346:21:20"}]},"documentation":{"id":5343,"nodeType":"StructuredDocumentation","src":"2871:280:20","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":5370,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:20","nodeType":"FunctionDefinition","parameters":{"id":5346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5345,"mutability":"mutable","name":"value","nameLocation":"3183:5:20","nodeType":"VariableDeclaration","scope":5370,"src":"3175:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5344,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:20"},"returnParameters":{"id":5349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5348,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5370,"src":"3213:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":5347,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:20","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:20"},"scope":6996,"src":"3156:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5397,"nodeType":"Block","src":"3731:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5378,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5373,"src":"3745:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5381,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":5380,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":5379,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":5383,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:20","memberName":"max","nodeType":"MemberAccess","src":"3753:17:20","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5391,"nodeType":"IfStatement","src":"3741:105:20","trueBody":{"id":5390,"nodeType":"Block","src":"3772:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":5386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:20","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":5387,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5373,"src":"3829:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5385,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5241,"src":"3793:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5389,"nodeType":"RevertStatement","src":"3786:49:20"}]}},{"expression":{"arguments":[{"id":5394,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5373,"src":"3870:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":5392,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:20","typeDescriptions":{}}},"id":5395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":5377,"id":5396,"nodeType":"Return","src":"3855:21:20"}]},"documentation":{"id":5371,"nodeType":"StructuredDocumentation","src":"3380:280:20","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":5398,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:20","nodeType":"FunctionDefinition","parameters":{"id":5374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5373,"mutability":"mutable","name":"value","nameLocation":"3692:5:20","nodeType":"VariableDeclaration","scope":5398,"src":"3684:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5372,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:20"},"returnParameters":{"id":5377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5376,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5398,"src":"3722:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":5375,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:20","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:20"},"scope":6996,"src":"3665:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5425,"nodeType":"Block","src":"4240:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5406,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5401,"src":"4254:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5409,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":5408,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":5407,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":5411,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:20","memberName":"max","nodeType":"MemberAccess","src":"4262:17:20","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5419,"nodeType":"IfStatement","src":"4250:105:20","trueBody":{"id":5418,"nodeType":"Block","src":"4281:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":5414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:20","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":5415,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5401,"src":"4338:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5413,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5241,"src":"4302:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5417,"nodeType":"RevertStatement","src":"4295:49:20"}]}},{"expression":{"arguments":[{"id":5422,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5401,"src":"4379:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5421,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":5420,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:20","typeDescriptions":{}}},"id":5423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":5405,"id":5424,"nodeType":"Return","src":"4364:21:20"}]},"documentation":{"id":5399,"nodeType":"StructuredDocumentation","src":"3889:280:20","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":5426,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:20","nodeType":"FunctionDefinition","parameters":{"id":5402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5401,"mutability":"mutable","name":"value","nameLocation":"4201:5:20","nodeType":"VariableDeclaration","scope":5426,"src":"4193:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5400,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:20"},"returnParameters":{"id":5405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5404,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5426,"src":"4231:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":5403,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:20","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:20"},"scope":6996,"src":"4174:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5453,"nodeType":"Block","src":"4749:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5434,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5429,"src":"4763:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5437,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":5436,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":5435,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":5439,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:20","memberName":"max","nodeType":"MemberAccess","src":"4771:17:20","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5447,"nodeType":"IfStatement","src":"4759:105:20","trueBody":{"id":5446,"nodeType":"Block","src":"4790:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":5442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:20","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":5443,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5429,"src":"4847:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5441,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5241,"src":"4811:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5445,"nodeType":"RevertStatement","src":"4804:49:20"}]}},{"expression":{"arguments":[{"id":5450,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5429,"src":"4888:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5449,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":5448,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:20","typeDescriptions":{}}},"id":5451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":5433,"id":5452,"nodeType":"Return","src":"4873:21:20"}]},"documentation":{"id":5427,"nodeType":"StructuredDocumentation","src":"4398:280:20","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":5454,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:20","nodeType":"FunctionDefinition","parameters":{"id":5430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5429,"mutability":"mutable","name":"value","nameLocation":"4710:5:20","nodeType":"VariableDeclaration","scope":5454,"src":"4702:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5428,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:20"},"returnParameters":{"id":5433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5432,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5454,"src":"4740:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":5431,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:20","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:20"},"scope":6996,"src":"4683:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5481,"nodeType":"Block","src":"5258:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5462,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5457,"src":"5272:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5465,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":5464,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":5463,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":5467,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:20","memberName":"max","nodeType":"MemberAccess","src":"5280:17:20","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5475,"nodeType":"IfStatement","src":"5268:105:20","trueBody":{"id":5474,"nodeType":"Block","src":"5299:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":5470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:20","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":5471,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5457,"src":"5356:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5469,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5241,"src":"5320:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5473,"nodeType":"RevertStatement","src":"5313:49:20"}]}},{"expression":{"arguments":[{"id":5478,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5457,"src":"5397:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5477,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":5476,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:20","typeDescriptions":{}}},"id":5479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":5461,"id":5480,"nodeType":"Return","src":"5382:21:20"}]},"documentation":{"id":5455,"nodeType":"StructuredDocumentation","src":"4907:280:20","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":5482,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:20","nodeType":"FunctionDefinition","parameters":{"id":5458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5457,"mutability":"mutable","name":"value","nameLocation":"5219:5:20","nodeType":"VariableDeclaration","scope":5482,"src":"5211:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5456,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:20"},"returnParameters":{"id":5461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5460,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5482,"src":"5249:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":5459,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:20","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:20"},"scope":6996,"src":"5192:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5509,"nodeType":"Block","src":"5767:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5490,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5485,"src":"5781:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5493,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":5492,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":5491,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":5495,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:20","memberName":"max","nodeType":"MemberAccess","src":"5789:17:20","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5503,"nodeType":"IfStatement","src":"5777:105:20","trueBody":{"id":5502,"nodeType":"Block","src":"5808:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":5498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:20","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":5499,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5485,"src":"5865:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5497,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5241,"src":"5829:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5501,"nodeType":"RevertStatement","src":"5822:49:20"}]}},{"expression":{"arguments":[{"id":5506,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5485,"src":"5906:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5505,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":5504,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:20","typeDescriptions":{}}},"id":5507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":5489,"id":5508,"nodeType":"Return","src":"5891:21:20"}]},"documentation":{"id":5483,"nodeType":"StructuredDocumentation","src":"5416:280:20","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":5510,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:20","nodeType":"FunctionDefinition","parameters":{"id":5486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5485,"mutability":"mutable","name":"value","nameLocation":"5728:5:20","nodeType":"VariableDeclaration","scope":5510,"src":"5720:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5484,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:20"},"returnParameters":{"id":5489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5488,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5510,"src":"5758:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":5487,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:20","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:20"},"scope":6996,"src":"5701:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5537,"nodeType":"Block","src":"6276:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5518,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5513,"src":"6290:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5521,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":5520,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":5519,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":5523,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:20","memberName":"max","nodeType":"MemberAccess","src":"6298:17:20","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5531,"nodeType":"IfStatement","src":"6286:105:20","trueBody":{"id":5530,"nodeType":"Block","src":"6317:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":5526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:20","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":5527,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5513,"src":"6374:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5525,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5241,"src":"6338:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5529,"nodeType":"RevertStatement","src":"6331:49:20"}]}},{"expression":{"arguments":[{"id":5534,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5513,"src":"6415:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5533,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":5532,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:20","typeDescriptions":{}}},"id":5535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":5517,"id":5536,"nodeType":"Return","src":"6400:21:20"}]},"documentation":{"id":5511,"nodeType":"StructuredDocumentation","src":"5925:280:20","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":5538,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:20","nodeType":"FunctionDefinition","parameters":{"id":5514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5513,"mutability":"mutable","name":"value","nameLocation":"6237:5:20","nodeType":"VariableDeclaration","scope":5538,"src":"6229:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5512,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:20"},"returnParameters":{"id":5517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5516,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5538,"src":"6267:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":5515,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:20","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:20"},"scope":6996,"src":"6210:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5565,"nodeType":"Block","src":"6785:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5546,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5541,"src":"6799:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5549,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":5548,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":5547,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":5551,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:20","memberName":"max","nodeType":"MemberAccess","src":"6807:17:20","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5559,"nodeType":"IfStatement","src":"6795:105:20","trueBody":{"id":5558,"nodeType":"Block","src":"6826:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":5554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:20","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":5555,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5541,"src":"6883:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5553,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5241,"src":"6847:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5557,"nodeType":"RevertStatement","src":"6840:49:20"}]}},{"expression":{"arguments":[{"id":5562,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5541,"src":"6924:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5561,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":5560,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:20","typeDescriptions":{}}},"id":5563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":5545,"id":5564,"nodeType":"Return","src":"6909:21:20"}]},"documentation":{"id":5539,"nodeType":"StructuredDocumentation","src":"6434:280:20","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":5566,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:20","nodeType":"FunctionDefinition","parameters":{"id":5542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5541,"mutability":"mutable","name":"value","nameLocation":"6746:5:20","nodeType":"VariableDeclaration","scope":5566,"src":"6738:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5540,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:20"},"returnParameters":{"id":5545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5544,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5566,"src":"6776:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":5543,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:20","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:20"},"scope":6996,"src":"6719:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5593,"nodeType":"Block","src":"7294:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5574,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5569,"src":"7308:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5577,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5576,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":5575,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":5579,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:20","memberName":"max","nodeType":"MemberAccess","src":"7316:17:20","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5587,"nodeType":"IfStatement","src":"7304:105:20","trueBody":{"id":5586,"nodeType":"Block","src":"7335:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":5582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:20","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":5583,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5569,"src":"7392:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5581,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5241,"src":"7356:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5585,"nodeType":"RevertStatement","src":"7349:49:20"}]}},{"expression":{"arguments":[{"id":5590,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5569,"src":"7433:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5589,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5588,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:20","typeDescriptions":{}}},"id":5591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":5573,"id":5592,"nodeType":"Return","src":"7418:21:20"}]},"documentation":{"id":5567,"nodeType":"StructuredDocumentation","src":"6943:280:20","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":5594,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:20","nodeType":"FunctionDefinition","parameters":{"id":5570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5569,"mutability":"mutable","name":"value","nameLocation":"7255:5:20","nodeType":"VariableDeclaration","scope":5594,"src":"7247:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5568,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:20"},"returnParameters":{"id":5573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5572,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5594,"src":"7285:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":5571,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:20","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:20"},"scope":6996,"src":"7228:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5621,"nodeType":"Block","src":"7803:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5602,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5597,"src":"7817:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5605,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":5604,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":5603,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":5607,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:20","memberName":"max","nodeType":"MemberAccess","src":"7825:17:20","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5615,"nodeType":"IfStatement","src":"7813:105:20","trueBody":{"id":5614,"nodeType":"Block","src":"7844:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":5610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:20","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":5611,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5597,"src":"7901:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5609,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5241,"src":"7865:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5613,"nodeType":"RevertStatement","src":"7858:49:20"}]}},{"expression":{"arguments":[{"id":5618,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5597,"src":"7942:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5617,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":5616,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:20","typeDescriptions":{}}},"id":5619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":5601,"id":5620,"nodeType":"Return","src":"7927:21:20"}]},"documentation":{"id":5595,"nodeType":"StructuredDocumentation","src":"7452:280:20","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":5622,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:20","nodeType":"FunctionDefinition","parameters":{"id":5598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5597,"mutability":"mutable","name":"value","nameLocation":"7764:5:20","nodeType":"VariableDeclaration","scope":5622,"src":"7756:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5596,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:20"},"returnParameters":{"id":5601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5600,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5622,"src":"7794:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":5599,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:20","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:20"},"scope":6996,"src":"7737:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5649,"nodeType":"Block","src":"8312:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5630,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5625,"src":"8326:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5633,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":5632,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":5631,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":5635,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:20","memberName":"max","nodeType":"MemberAccess","src":"8334:17:20","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5643,"nodeType":"IfStatement","src":"8322:105:20","trueBody":{"id":5642,"nodeType":"Block","src":"8353:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":5638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:20","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":5639,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5625,"src":"8410:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5637,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5241,"src":"8374:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5641,"nodeType":"RevertStatement","src":"8367:49:20"}]}},{"expression":{"arguments":[{"id":5646,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5625,"src":"8451:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5645,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":5644,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:20","typeDescriptions":{}}},"id":5647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":5629,"id":5648,"nodeType":"Return","src":"8436:21:20"}]},"documentation":{"id":5623,"nodeType":"StructuredDocumentation","src":"7961:280:20","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":5650,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:20","nodeType":"FunctionDefinition","parameters":{"id":5626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5625,"mutability":"mutable","name":"value","nameLocation":"8273:5:20","nodeType":"VariableDeclaration","scope":5650,"src":"8265:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5624,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:20"},"returnParameters":{"id":5629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5628,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5650,"src":"8303:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":5627,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:20","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:20"},"scope":6996,"src":"8246:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5677,"nodeType":"Block","src":"8821:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5658,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5653,"src":"8835:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5661,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":5660,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":5659,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":5663,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:20","memberName":"max","nodeType":"MemberAccess","src":"8843:17:20","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5671,"nodeType":"IfStatement","src":"8831:105:20","trueBody":{"id":5670,"nodeType":"Block","src":"8862:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":5666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:20","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":5667,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5653,"src":"8919:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5665,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5241,"src":"8883:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5669,"nodeType":"RevertStatement","src":"8876:49:20"}]}},{"expression":{"arguments":[{"id":5674,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5653,"src":"8960:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5673,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":5672,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:20","typeDescriptions":{}}},"id":5675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":5657,"id":5676,"nodeType":"Return","src":"8945:21:20"}]},"documentation":{"id":5651,"nodeType":"StructuredDocumentation","src":"8470:280:20","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":5678,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:20","nodeType":"FunctionDefinition","parameters":{"id":5654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5653,"mutability":"mutable","name":"value","nameLocation":"8782:5:20","nodeType":"VariableDeclaration","scope":5678,"src":"8774:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5652,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:20"},"returnParameters":{"id":5657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5656,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5678,"src":"8812:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":5655,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:20","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:20"},"scope":6996,"src":"8755:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5705,"nodeType":"Block","src":"9330:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5686,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5681,"src":"9344:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5689,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5688,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":5687,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":5691,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:20","memberName":"max","nodeType":"MemberAccess","src":"9352:17:20","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5699,"nodeType":"IfStatement","src":"9340:105:20","trueBody":{"id":5698,"nodeType":"Block","src":"9371:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":5694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:20","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":5695,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5681,"src":"9428:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5693,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5241,"src":"9392:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5697,"nodeType":"RevertStatement","src":"9385:49:20"}]}},{"expression":{"arguments":[{"id":5702,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5681,"src":"9469:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5701,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5700,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:20","typeDescriptions":{}}},"id":5703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":5685,"id":5704,"nodeType":"Return","src":"9454:21:20"}]},"documentation":{"id":5679,"nodeType":"StructuredDocumentation","src":"8979:280:20","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":5706,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:20","nodeType":"FunctionDefinition","parameters":{"id":5682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5681,"mutability":"mutable","name":"value","nameLocation":"9291:5:20","nodeType":"VariableDeclaration","scope":5706,"src":"9283:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5680,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:20"},"returnParameters":{"id":5685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5684,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5706,"src":"9321:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":5683,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:20","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:20"},"scope":6996,"src":"9264:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5733,"nodeType":"Block","src":"9839:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5714,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5709,"src":"9853:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5717,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":5716,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":5715,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":5719,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:20","memberName":"max","nodeType":"MemberAccess","src":"9861:17:20","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5727,"nodeType":"IfStatement","src":"9849:105:20","trueBody":{"id":5726,"nodeType":"Block","src":"9880:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":5722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:20","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":5723,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5709,"src":"9937:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5721,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5241,"src":"9901:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5725,"nodeType":"RevertStatement","src":"9894:49:20"}]}},{"expression":{"arguments":[{"id":5730,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5709,"src":"9978:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5729,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":5728,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:20","typeDescriptions":{}}},"id":5731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":5713,"id":5732,"nodeType":"Return","src":"9963:21:20"}]},"documentation":{"id":5707,"nodeType":"StructuredDocumentation","src":"9488:280:20","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":5734,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:20","nodeType":"FunctionDefinition","parameters":{"id":5710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5709,"mutability":"mutable","name":"value","nameLocation":"9800:5:20","nodeType":"VariableDeclaration","scope":5734,"src":"9792:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5708,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:20"},"returnParameters":{"id":5713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5712,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5734,"src":"9830:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":5711,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:20","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:20"},"scope":6996,"src":"9773:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5761,"nodeType":"Block","src":"10348:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5742,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5737,"src":"10362:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5745,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":5744,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":5743,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":5747,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:20","memberName":"max","nodeType":"MemberAccess","src":"10370:17:20","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5755,"nodeType":"IfStatement","src":"10358:105:20","trueBody":{"id":5754,"nodeType":"Block","src":"10389:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":5750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:20","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":5751,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5737,"src":"10446:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5749,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5241,"src":"10410:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5753,"nodeType":"RevertStatement","src":"10403:49:20"}]}},{"expression":{"arguments":[{"id":5758,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5737,"src":"10487:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5757,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":5756,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:20","typeDescriptions":{}}},"id":5759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":5741,"id":5760,"nodeType":"Return","src":"10472:21:20"}]},"documentation":{"id":5735,"nodeType":"StructuredDocumentation","src":"9997:280:20","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":5762,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:20","nodeType":"FunctionDefinition","parameters":{"id":5738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5737,"mutability":"mutable","name":"value","nameLocation":"10309:5:20","nodeType":"VariableDeclaration","scope":5762,"src":"10301:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5736,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:20"},"returnParameters":{"id":5741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5740,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5762,"src":"10339:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":5739,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:20","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:20"},"scope":6996,"src":"10282:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5789,"nodeType":"Block","src":"10857:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5770,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5765,"src":"10871:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5773,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":5772,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":5771,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":5775,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:20","memberName":"max","nodeType":"MemberAccess","src":"10879:17:20","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5783,"nodeType":"IfStatement","src":"10867:105:20","trueBody":{"id":5782,"nodeType":"Block","src":"10898:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":5778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:20","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":5779,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5765,"src":"10955:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5777,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5241,"src":"10919:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5781,"nodeType":"RevertStatement","src":"10912:49:20"}]}},{"expression":{"arguments":[{"id":5786,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5765,"src":"10996:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5785,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":5784,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:20","typeDescriptions":{}}},"id":5787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":5769,"id":5788,"nodeType":"Return","src":"10981:21:20"}]},"documentation":{"id":5763,"nodeType":"StructuredDocumentation","src":"10506:280:20","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":5790,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:20","nodeType":"FunctionDefinition","parameters":{"id":5766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5765,"mutability":"mutable","name":"value","nameLocation":"10818:5:20","nodeType":"VariableDeclaration","scope":5790,"src":"10810:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5764,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:20"},"returnParameters":{"id":5769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5768,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5790,"src":"10848:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":5767,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:20","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:20"},"scope":6996,"src":"10791:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5817,"nodeType":"Block","src":"11360:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5798,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5793,"src":"11374:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5801,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":5800,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":5799,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":5803,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:20","memberName":"max","nodeType":"MemberAccess","src":"11382:16:20","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5811,"nodeType":"IfStatement","src":"11370:103:20","trueBody":{"id":5810,"nodeType":"Block","src":"11400:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":5806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:20","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":5807,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5793,"src":"11456:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5805,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5241,"src":"11421:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5809,"nodeType":"RevertStatement","src":"11414:48:20"}]}},{"expression":{"arguments":[{"id":5814,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5793,"src":"11496:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5813,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":5812,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:20","typeDescriptions":{}}},"id":5815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":5797,"id":5816,"nodeType":"Return","src":"11482:20:20"}]},"documentation":{"id":5791,"nodeType":"StructuredDocumentation","src":"11015:276:20","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":5818,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:20","nodeType":"FunctionDefinition","parameters":{"id":5794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5793,"mutability":"mutable","name":"value","nameLocation":"11322:5:20","nodeType":"VariableDeclaration","scope":5818,"src":"11314:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5792,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:20"},"returnParameters":{"id":5797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5796,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5818,"src":"11352:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":5795,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:20","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:20"},"scope":6996,"src":"11296:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5845,"nodeType":"Block","src":"11860:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5826,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5821,"src":"11874:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5829,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":5828,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":5827,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5830,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":5831,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:20","memberName":"max","nodeType":"MemberAccess","src":"11882:16:20","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5839,"nodeType":"IfStatement","src":"11870:103:20","trueBody":{"id":5838,"nodeType":"Block","src":"11900:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":5834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:20","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":5835,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5821,"src":"11956:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5833,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5241,"src":"11921:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5837,"nodeType":"RevertStatement","src":"11914:48:20"}]}},{"expression":{"arguments":[{"id":5842,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5821,"src":"11996:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5841,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":5840,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:20","typeDescriptions":{}}},"id":5843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":5825,"id":5844,"nodeType":"Return","src":"11982:20:20"}]},"documentation":{"id":5819,"nodeType":"StructuredDocumentation","src":"11515:276:20","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":5846,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:20","nodeType":"FunctionDefinition","parameters":{"id":5822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5821,"mutability":"mutable","name":"value","nameLocation":"11822:5:20","nodeType":"VariableDeclaration","scope":5846,"src":"11814:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5820,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:20"},"returnParameters":{"id":5825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5824,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5846,"src":"11852:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":5823,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:20","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:20"},"scope":6996,"src":"11796:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5873,"nodeType":"Block","src":"12360:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5854,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5849,"src":"12374:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5857,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":5856,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":5855,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":5859,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:20","memberName":"max","nodeType":"MemberAccess","src":"12382:16:20","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5867,"nodeType":"IfStatement","src":"12370:103:20","trueBody":{"id":5866,"nodeType":"Block","src":"12400:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":5862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:20","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":5863,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5849,"src":"12456:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5861,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5241,"src":"12421:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5865,"nodeType":"RevertStatement","src":"12414:48:20"}]}},{"expression":{"arguments":[{"id":5870,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5849,"src":"12496:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5869,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":5868,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:20","typeDescriptions":{}}},"id":5871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":5853,"id":5872,"nodeType":"Return","src":"12482:20:20"}]},"documentation":{"id":5847,"nodeType":"StructuredDocumentation","src":"12015:276:20","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":5874,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:20","nodeType":"FunctionDefinition","parameters":{"id":5850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5849,"mutability":"mutable","name":"value","nameLocation":"12322:5:20","nodeType":"VariableDeclaration","scope":5874,"src":"12314:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5848,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:20"},"returnParameters":{"id":5853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5852,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5874,"src":"12352:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":5851,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:20","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:20"},"scope":6996,"src":"12296:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5901,"nodeType":"Block","src":"12860:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5882,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5877,"src":"12874:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5885,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5884,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":5883,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":5887,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:20","memberName":"max","nodeType":"MemberAccess","src":"12882:16:20","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5895,"nodeType":"IfStatement","src":"12870:103:20","trueBody":{"id":5894,"nodeType":"Block","src":"12900:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":5890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:20","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":5891,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5877,"src":"12956:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5889,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5241,"src":"12921:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5893,"nodeType":"RevertStatement","src":"12914:48:20"}]}},{"expression":{"arguments":[{"id":5898,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5877,"src":"12996:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5897,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5896,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:20","typeDescriptions":{}}},"id":5899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":5881,"id":5900,"nodeType":"Return","src":"12982:20:20"}]},"documentation":{"id":5875,"nodeType":"StructuredDocumentation","src":"12515:276:20","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":5902,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:20","nodeType":"FunctionDefinition","parameters":{"id":5878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5877,"mutability":"mutable","name":"value","nameLocation":"12822:5:20","nodeType":"VariableDeclaration","scope":5902,"src":"12814:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5876,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:20"},"returnParameters":{"id":5881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5880,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5902,"src":"12852:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":5879,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:20","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:20"},"scope":6996,"src":"12796:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5929,"nodeType":"Block","src":"13360:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5910,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5905,"src":"13374:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5913,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5912,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":5911,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":5915,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:20","memberName":"max","nodeType":"MemberAccess","src":"13382:16:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5923,"nodeType":"IfStatement","src":"13370:103:20","trueBody":{"id":5922,"nodeType":"Block","src":"13400:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":5918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:20","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":5919,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5905,"src":"13456:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5917,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5241,"src":"13421:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5921,"nodeType":"RevertStatement","src":"13414:48:20"}]}},{"expression":{"arguments":[{"id":5926,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5905,"src":"13496:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5925,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5924,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:20","typeDescriptions":{}}},"id":5927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":5909,"id":5928,"nodeType":"Return","src":"13482:20:20"}]},"documentation":{"id":5903,"nodeType":"StructuredDocumentation","src":"13015:276:20","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":5930,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:20","nodeType":"FunctionDefinition","parameters":{"id":5906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5905,"mutability":"mutable","name":"value","nameLocation":"13322:5:20","nodeType":"VariableDeclaration","scope":5930,"src":"13314:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5904,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:20"},"returnParameters":{"id":5909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5908,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5930,"src":"13352:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5907,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:20"},"scope":6996,"src":"13296:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5957,"nodeType":"Block","src":"13860:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5938,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5933,"src":"13874:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5941,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5940,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":5939,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":5943,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:20","memberName":"max","nodeType":"MemberAccess","src":"13882:16:20","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5951,"nodeType":"IfStatement","src":"13870:103:20","trueBody":{"id":5950,"nodeType":"Block","src":"13900:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":5946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:20","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":5947,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5933,"src":"13956:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5945,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5241,"src":"13921:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5949,"nodeType":"RevertStatement","src":"13914:48:20"}]}},{"expression":{"arguments":[{"id":5954,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5933,"src":"13996:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5953,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5952,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:20","typeDescriptions":{}}},"id":5955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":5937,"id":5956,"nodeType":"Return","src":"13982:20:20"}]},"documentation":{"id":5931,"nodeType":"StructuredDocumentation","src":"13515:276:20","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":5958,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:20","nodeType":"FunctionDefinition","parameters":{"id":5934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5933,"mutability":"mutable","name":"value","nameLocation":"13822:5:20","nodeType":"VariableDeclaration","scope":5958,"src":"13814:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5932,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:20"},"returnParameters":{"id":5937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5936,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5958,"src":"13852:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":5935,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:20","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:20"},"scope":6996,"src":"13796:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5985,"nodeType":"Block","src":"14360:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5966,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5961,"src":"14374:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5969,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5968,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":5967,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":5971,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:20","memberName":"max","nodeType":"MemberAccess","src":"14382:16:20","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5979,"nodeType":"IfStatement","src":"14370:103:20","trueBody":{"id":5978,"nodeType":"Block","src":"14400:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":5974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:20","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":5975,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5961,"src":"14456:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5973,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5241,"src":"14421:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5977,"nodeType":"RevertStatement","src":"14414:48:20"}]}},{"expression":{"arguments":[{"id":5982,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5961,"src":"14496:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5981,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5980,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:20","typeDescriptions":{}}},"id":5983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":5965,"id":5984,"nodeType":"Return","src":"14482:20:20"}]},"documentation":{"id":5959,"nodeType":"StructuredDocumentation","src":"14015:276:20","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":5986,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:20","nodeType":"FunctionDefinition","parameters":{"id":5962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5961,"mutability":"mutable","name":"value","nameLocation":"14322:5:20","nodeType":"VariableDeclaration","scope":5986,"src":"14314:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5960,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:20"},"returnParameters":{"id":5965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5964,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5986,"src":"14352:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":5963,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:20","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:20"},"scope":6996,"src":"14296:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6013,"nodeType":"Block","src":"14860:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5994,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5989,"src":"14874:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5997,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":5996,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":5995,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":5999,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:20","memberName":"max","nodeType":"MemberAccess","src":"14882:16:20","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6007,"nodeType":"IfStatement","src":"14870:103:20","trueBody":{"id":6006,"nodeType":"Block","src":"14900:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":6002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:20","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":6003,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5989,"src":"14956:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6001,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5241,"src":"14921:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6005,"nodeType":"RevertStatement","src":"14914:48:20"}]}},{"expression":{"arguments":[{"id":6010,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5989,"src":"14996:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6009,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":6008,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:20","typeDescriptions":{}}},"id":6011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":5993,"id":6012,"nodeType":"Return","src":"14982:20:20"}]},"documentation":{"id":5987,"nodeType":"StructuredDocumentation","src":"14515:276:20","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":6014,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:20","nodeType":"FunctionDefinition","parameters":{"id":5990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5989,"mutability":"mutable","name":"value","nameLocation":"14822:5:20","nodeType":"VariableDeclaration","scope":6014,"src":"14814:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5988,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:20"},"returnParameters":{"id":5993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5992,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6014,"src":"14852:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":5991,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:20","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:20"},"scope":6996,"src":"14796:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6041,"nodeType":"Block","src":"15360:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6022,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6017,"src":"15374:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6025,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":6024,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":6023,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":6027,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:20","memberName":"max","nodeType":"MemberAccess","src":"15382:16:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6035,"nodeType":"IfStatement","src":"15370:103:20","trueBody":{"id":6034,"nodeType":"Block","src":"15400:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":6030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":6031,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6017,"src":"15456:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6029,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5241,"src":"15421:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6033,"nodeType":"RevertStatement","src":"15414:48:20"}]}},{"expression":{"arguments":[{"id":6038,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6017,"src":"15496:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6037,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":6036,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:20","typeDescriptions":{}}},"id":6039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":6021,"id":6040,"nodeType":"Return","src":"15482:20:20"}]},"documentation":{"id":6015,"nodeType":"StructuredDocumentation","src":"15015:276:20","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":6042,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:20","nodeType":"FunctionDefinition","parameters":{"id":6018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6017,"mutability":"mutable","name":"value","nameLocation":"15322:5:20","nodeType":"VariableDeclaration","scope":6042,"src":"15314:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6016,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:20"},"returnParameters":{"id":6021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6020,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6042,"src":"15352:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6019,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:20"},"scope":6996,"src":"15296:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6069,"nodeType":"Block","src":"15860:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6050,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6045,"src":"15874:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6053,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":6052,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":6051,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":6055,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:20","memberName":"max","nodeType":"MemberAccess","src":"15882:16:20","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6063,"nodeType":"IfStatement","src":"15870:103:20","trueBody":{"id":6062,"nodeType":"Block","src":"15900:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":6058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:20","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":6059,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6045,"src":"15956:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6057,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5241,"src":"15921:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6061,"nodeType":"RevertStatement","src":"15914:48:20"}]}},{"expression":{"arguments":[{"id":6066,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6045,"src":"15996:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6065,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":6064,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:20","typeDescriptions":{}}},"id":6067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":6049,"id":6068,"nodeType":"Return","src":"15982:20:20"}]},"documentation":{"id":6043,"nodeType":"StructuredDocumentation","src":"15515:276:20","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":6070,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:20","nodeType":"FunctionDefinition","parameters":{"id":6046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6045,"mutability":"mutable","name":"value","nameLocation":"15822:5:20","nodeType":"VariableDeclaration","scope":6070,"src":"15814:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6044,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:20"},"returnParameters":{"id":6049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6048,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6070,"src":"15852:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":6047,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:20","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:20"},"scope":6996,"src":"15796:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6097,"nodeType":"Block","src":"16360:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6078,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6073,"src":"16374:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6081,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":6080,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":6079,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":6083,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:20","memberName":"max","nodeType":"MemberAccess","src":"16382:16:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6091,"nodeType":"IfStatement","src":"16370:103:20","trueBody":{"id":6090,"nodeType":"Block","src":"16400:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":6086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":6087,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6073,"src":"16456:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6085,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5241,"src":"16421:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6089,"nodeType":"RevertStatement","src":"16414:48:20"}]}},{"expression":{"arguments":[{"id":6094,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6073,"src":"16496:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6093,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":6092,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:20","typeDescriptions":{}}},"id":6095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":6077,"id":6096,"nodeType":"Return","src":"16482:20:20"}]},"documentation":{"id":6071,"nodeType":"StructuredDocumentation","src":"16015:276:20","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":6098,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:20","nodeType":"FunctionDefinition","parameters":{"id":6074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6073,"mutability":"mutable","name":"value","nameLocation":"16322:5:20","nodeType":"VariableDeclaration","scope":6098,"src":"16314:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6072,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:20"},"returnParameters":{"id":6077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6076,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6098,"src":"16352:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":6075,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:20"},"scope":6996,"src":"16296:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6125,"nodeType":"Block","src":"16854:146:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6106,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6101,"src":"16868:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6109,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6108,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":6107,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":6111,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:20","memberName":"max","nodeType":"MemberAccess","src":"16876:15:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6119,"nodeType":"IfStatement","src":"16864:101:20","trueBody":{"id":6118,"nodeType":"Block","src":"16893:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":6114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:20","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":6115,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6101,"src":"16948:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6113,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5241,"src":"16914:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6117,"nodeType":"RevertStatement","src":"16907:47:20"}]}},{"expression":{"arguments":[{"id":6122,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6101,"src":"16987:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6121,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6120,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:20","typeDescriptions":{}}},"id":6123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":6105,"id":6124,"nodeType":"Return","src":"16974:19:20"}]},"documentation":{"id":6099,"nodeType":"StructuredDocumentation","src":"16515:272:20","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":6126,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:20","nodeType":"FunctionDefinition","parameters":{"id":6102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6101,"mutability":"mutable","name":"value","nameLocation":"16817:5:20","nodeType":"VariableDeclaration","scope":6126,"src":"16809:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6100,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:20"},"returnParameters":{"id":6105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6104,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6126,"src":"16847:5:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6103,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:20"},"scope":6996,"src":"16792:208:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6148,"nodeType":"Block","src":"17236:128:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6134,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6129,"src":"17250:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":6135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6142,"nodeType":"IfStatement","src":"17246:81:20","trueBody":{"id":6141,"nodeType":"Block","src":"17261:66:20","statements":[{"errorCall":{"arguments":[{"id":6138,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6129,"src":"17310:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6137,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5246,"src":"17282:27:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$__$","typeString":"function (int256) pure"}},"id":6139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6140,"nodeType":"RevertStatement","src":"17275:41:20"}]}},{"expression":{"arguments":[{"id":6145,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6129,"src":"17351:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6144,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6143,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:20","typeDescriptions":{}}},"id":6146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6133,"id":6147,"nodeType":"Return","src":"17336:21:20"}]},"documentation":{"id":6127,"nodeType":"StructuredDocumentation","src":"17006:160:20","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":6149,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:20","nodeType":"FunctionDefinition","parameters":{"id":6130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6129,"mutability":"mutable","name":"value","nameLocation":"17197:5:20","nodeType":"VariableDeclaration","scope":6149,"src":"17190:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6128,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:20"},"returnParameters":{"id":6133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6132,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6149,"src":"17227:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6131,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:20"},"scope":6996,"src":"17171:193:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6174,"nodeType":"Block","src":"17761:150:20","statements":[{"expression":{"id":6162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6157,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6155,"src":"17771:10:20","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6160,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6152,"src":"17791:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6159,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":6158,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:20","typeDescriptions":{}}},"id":6161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:20","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":6163,"nodeType":"ExpressionStatement","src":"17771:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6164,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6155,"src":"17811:10:20","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6165,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6152,"src":"17825:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6173,"nodeType":"IfStatement","src":"17807:98:20","trueBody":{"id":6172,"nodeType":"Block","src":"17832:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":6168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:20","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":6169,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6152,"src":"17888:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6167,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5253,"src":"17853:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6171,"nodeType":"RevertStatement","src":"17846:48:20"}]}}]},"documentation":{"id":6150,"nodeType":"StructuredDocumentation","src":"17370:312:20","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":6175,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:20","nodeType":"FunctionDefinition","parameters":{"id":6153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6152,"mutability":"mutable","name":"value","nameLocation":"17712:5:20","nodeType":"VariableDeclaration","scope":6175,"src":"17705:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6151,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:20"},"returnParameters":{"id":6156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6155,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:20","nodeType":"VariableDeclaration","scope":6175,"src":"17742:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":6154,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:20","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:20"},"scope":6996,"src":"17687:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6200,"nodeType":"Block","src":"18308:150:20","statements":[{"expression":{"id":6188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6183,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6181,"src":"18318:10:20","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6186,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6178,"src":"18338:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6185,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":6184,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:20","typeDescriptions":{}}},"id":6187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:20","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":6189,"nodeType":"ExpressionStatement","src":"18318:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6190,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6181,"src":"18358:10:20","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6191,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6178,"src":"18372:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6199,"nodeType":"IfStatement","src":"18354:98:20","trueBody":{"id":6198,"nodeType":"Block","src":"18379:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":6194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:20","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":6195,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6178,"src":"18435:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6193,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5253,"src":"18400:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6197,"nodeType":"RevertStatement","src":"18393:48:20"}]}}]},"documentation":{"id":6176,"nodeType":"StructuredDocumentation","src":"17917:312:20","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":6201,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:20","nodeType":"FunctionDefinition","parameters":{"id":6179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6178,"mutability":"mutable","name":"value","nameLocation":"18259:5:20","nodeType":"VariableDeclaration","scope":6201,"src":"18252:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6177,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:20"},"returnParameters":{"id":6182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6181,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:20","nodeType":"VariableDeclaration","scope":6201,"src":"18289:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":6180,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:20","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:20"},"scope":6996,"src":"18234:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6226,"nodeType":"Block","src":"18855:150:20","statements":[{"expression":{"id":6214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6209,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6207,"src":"18865:10:20","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6212,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6204,"src":"18885:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6211,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":6210,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:20","typeDescriptions":{}}},"id":6213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:20","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":6215,"nodeType":"ExpressionStatement","src":"18865:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6216,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6207,"src":"18905:10:20","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6217,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6204,"src":"18919:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6225,"nodeType":"IfStatement","src":"18901:98:20","trueBody":{"id":6224,"nodeType":"Block","src":"18926:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":6220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:20","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":6221,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6204,"src":"18982:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6219,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5253,"src":"18947:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6223,"nodeType":"RevertStatement","src":"18940:48:20"}]}}]},"documentation":{"id":6202,"nodeType":"StructuredDocumentation","src":"18464:312:20","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":6227,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:20","nodeType":"FunctionDefinition","parameters":{"id":6205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6204,"mutability":"mutable","name":"value","nameLocation":"18806:5:20","nodeType":"VariableDeclaration","scope":6227,"src":"18799:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6203,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:20"},"returnParameters":{"id":6208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6207,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:20","nodeType":"VariableDeclaration","scope":6227,"src":"18836:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":6206,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:20","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:20"},"scope":6996,"src":"18781:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6252,"nodeType":"Block","src":"19402:150:20","statements":[{"expression":{"id":6240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6235,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6233,"src":"19412:10:20","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6238,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6230,"src":"19432:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6237,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":6236,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:20","typeDescriptions":{}}},"id":6239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:20","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":6241,"nodeType":"ExpressionStatement","src":"19412:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6242,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6233,"src":"19452:10:20","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6243,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6230,"src":"19466:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6251,"nodeType":"IfStatement","src":"19448:98:20","trueBody":{"id":6250,"nodeType":"Block","src":"19473:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":6246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:20","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":6247,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6230,"src":"19529:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6245,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5253,"src":"19494:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6249,"nodeType":"RevertStatement","src":"19487:48:20"}]}}]},"documentation":{"id":6228,"nodeType":"StructuredDocumentation","src":"19011:312:20","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":6253,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:20","nodeType":"FunctionDefinition","parameters":{"id":6231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6230,"mutability":"mutable","name":"value","nameLocation":"19353:5:20","nodeType":"VariableDeclaration","scope":6253,"src":"19346:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6229,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:20"},"returnParameters":{"id":6234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6233,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:20","nodeType":"VariableDeclaration","scope":6253,"src":"19383:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":6232,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:20","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:20"},"scope":6996,"src":"19328:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6278,"nodeType":"Block","src":"19949:150:20","statements":[{"expression":{"id":6266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6261,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6259,"src":"19959:10:20","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6264,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6256,"src":"19979:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6263,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":6262,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:20","typeDescriptions":{}}},"id":6265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:20","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":6267,"nodeType":"ExpressionStatement","src":"19959:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6268,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6259,"src":"19999:10:20","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6269,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6256,"src":"20013:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6277,"nodeType":"IfStatement","src":"19995:98:20","trueBody":{"id":6276,"nodeType":"Block","src":"20020:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":6272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:20","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":6273,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6256,"src":"20076:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6271,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5253,"src":"20041:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6275,"nodeType":"RevertStatement","src":"20034:48:20"}]}}]},"documentation":{"id":6254,"nodeType":"StructuredDocumentation","src":"19558:312:20","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":6279,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:20","nodeType":"FunctionDefinition","parameters":{"id":6257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6256,"mutability":"mutable","name":"value","nameLocation":"19900:5:20","nodeType":"VariableDeclaration","scope":6279,"src":"19893:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6255,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:20"},"returnParameters":{"id":6260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6259,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:20","nodeType":"VariableDeclaration","scope":6279,"src":"19930:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":6258,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:20","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:20"},"scope":6996,"src":"19875:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6304,"nodeType":"Block","src":"20496:150:20","statements":[{"expression":{"id":6292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6287,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6285,"src":"20506:10:20","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6290,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6282,"src":"20526:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6289,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":6288,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:20","typeDescriptions":{}}},"id":6291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:20","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":6293,"nodeType":"ExpressionStatement","src":"20506:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6294,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6285,"src":"20546:10:20","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6295,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6282,"src":"20560:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6303,"nodeType":"IfStatement","src":"20542:98:20","trueBody":{"id":6302,"nodeType":"Block","src":"20567:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":6298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:20","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":6299,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6282,"src":"20623:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6297,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5253,"src":"20588:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6301,"nodeType":"RevertStatement","src":"20581:48:20"}]}}]},"documentation":{"id":6280,"nodeType":"StructuredDocumentation","src":"20105:312:20","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":6305,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:20","nodeType":"FunctionDefinition","parameters":{"id":6283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6282,"mutability":"mutable","name":"value","nameLocation":"20447:5:20","nodeType":"VariableDeclaration","scope":6305,"src":"20440:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6281,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:20"},"returnParameters":{"id":6286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6285,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:20","nodeType":"VariableDeclaration","scope":6305,"src":"20477:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":6284,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:20","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:20"},"scope":6996,"src":"20422:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6330,"nodeType":"Block","src":"21043:150:20","statements":[{"expression":{"id":6318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6313,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6311,"src":"21053:10:20","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6316,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6308,"src":"21073:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6315,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":6314,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:20","typeDescriptions":{}}},"id":6317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:20","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":6319,"nodeType":"ExpressionStatement","src":"21053:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6320,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6311,"src":"21093:10:20","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6321,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6308,"src":"21107:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6329,"nodeType":"IfStatement","src":"21089:98:20","trueBody":{"id":6328,"nodeType":"Block","src":"21114:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":6324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:20","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":6325,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6308,"src":"21170:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6323,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5253,"src":"21135:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6327,"nodeType":"RevertStatement","src":"21128:48:20"}]}}]},"documentation":{"id":6306,"nodeType":"StructuredDocumentation","src":"20652:312:20","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":6331,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:20","nodeType":"FunctionDefinition","parameters":{"id":6309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6308,"mutability":"mutable","name":"value","nameLocation":"20994:5:20","nodeType":"VariableDeclaration","scope":6331,"src":"20987:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6307,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:20"},"returnParameters":{"id":6312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6311,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:20","nodeType":"VariableDeclaration","scope":6331,"src":"21024:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":6310,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:20","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:20"},"scope":6996,"src":"20969:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6356,"nodeType":"Block","src":"21590:150:20","statements":[{"expression":{"id":6344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6339,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6337,"src":"21600:10:20","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6342,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6334,"src":"21620:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6341,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":6340,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:20","typeDescriptions":{}}},"id":6343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:20","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":6345,"nodeType":"ExpressionStatement","src":"21600:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6346,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6337,"src":"21640:10:20","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6347,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6334,"src":"21654:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6355,"nodeType":"IfStatement","src":"21636:98:20","trueBody":{"id":6354,"nodeType":"Block","src":"21661:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":6350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:20","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":6351,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6334,"src":"21717:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6349,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5253,"src":"21682:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6353,"nodeType":"RevertStatement","src":"21675:48:20"}]}}]},"documentation":{"id":6332,"nodeType":"StructuredDocumentation","src":"21199:312:20","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":6357,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:20","nodeType":"FunctionDefinition","parameters":{"id":6335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6334,"mutability":"mutable","name":"value","nameLocation":"21541:5:20","nodeType":"VariableDeclaration","scope":6357,"src":"21534:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6333,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:20"},"returnParameters":{"id":6338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6337,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:20","nodeType":"VariableDeclaration","scope":6357,"src":"21571:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":6336,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:20","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:20"},"scope":6996,"src":"21516:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6382,"nodeType":"Block","src":"22137:150:20","statements":[{"expression":{"id":6370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6365,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6363,"src":"22147:10:20","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6368,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6360,"src":"22167:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6367,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":6366,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:20","typeDescriptions":{}}},"id":6369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:20","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":6371,"nodeType":"ExpressionStatement","src":"22147:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6372,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6363,"src":"22187:10:20","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6373,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6360,"src":"22201:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6381,"nodeType":"IfStatement","src":"22183:98:20","trueBody":{"id":6380,"nodeType":"Block","src":"22208:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":6376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:20","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":6377,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6360,"src":"22264:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6375,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5253,"src":"22229:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6379,"nodeType":"RevertStatement","src":"22222:48:20"}]}}]},"documentation":{"id":6358,"nodeType":"StructuredDocumentation","src":"21746:312:20","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":6383,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:20","nodeType":"FunctionDefinition","parameters":{"id":6361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6360,"mutability":"mutable","name":"value","nameLocation":"22088:5:20","nodeType":"VariableDeclaration","scope":6383,"src":"22081:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6359,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:20"},"returnParameters":{"id":6364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6363,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:20","nodeType":"VariableDeclaration","scope":6383,"src":"22118:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":6362,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:20","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:20"},"scope":6996,"src":"22063:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6408,"nodeType":"Block","src":"22684:150:20","statements":[{"expression":{"id":6396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6391,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6389,"src":"22694:10:20","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6394,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6386,"src":"22714:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":6392,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:20","typeDescriptions":{}}},"id":6395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:20","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":6397,"nodeType":"ExpressionStatement","src":"22694:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6398,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6389,"src":"22734:10:20","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6399,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6386,"src":"22748:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6407,"nodeType":"IfStatement","src":"22730:98:20","trueBody":{"id":6406,"nodeType":"Block","src":"22755:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":6402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:20","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":6403,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6386,"src":"22811:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6401,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5253,"src":"22776:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6405,"nodeType":"RevertStatement","src":"22769:48:20"}]}}]},"documentation":{"id":6384,"nodeType":"StructuredDocumentation","src":"22293:312:20","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":6409,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:20","nodeType":"FunctionDefinition","parameters":{"id":6387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6386,"mutability":"mutable","name":"value","nameLocation":"22635:5:20","nodeType":"VariableDeclaration","scope":6409,"src":"22628:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6385,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:20"},"returnParameters":{"id":6390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6389,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:20","nodeType":"VariableDeclaration","scope":6409,"src":"22665:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":6388,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:20","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:20"},"scope":6996,"src":"22610:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6434,"nodeType":"Block","src":"23231:150:20","statements":[{"expression":{"id":6422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6417,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6415,"src":"23241:10:20","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6420,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6412,"src":"23261:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6419,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":6418,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:20","typeDescriptions":{}}},"id":6421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:20","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":6423,"nodeType":"ExpressionStatement","src":"23241:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6424,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6415,"src":"23281:10:20","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6425,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6412,"src":"23295:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6433,"nodeType":"IfStatement","src":"23277:98:20","trueBody":{"id":6432,"nodeType":"Block","src":"23302:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":6428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:20","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":6429,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6412,"src":"23358:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6427,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5253,"src":"23323:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6431,"nodeType":"RevertStatement","src":"23316:48:20"}]}}]},"documentation":{"id":6410,"nodeType":"StructuredDocumentation","src":"22840:312:20","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":6435,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:20","nodeType":"FunctionDefinition","parameters":{"id":6413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6412,"mutability":"mutable","name":"value","nameLocation":"23182:5:20","nodeType":"VariableDeclaration","scope":6435,"src":"23175:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6411,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:20"},"returnParameters":{"id":6416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6415,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:20","nodeType":"VariableDeclaration","scope":6435,"src":"23212:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":6414,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:20","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:20"},"scope":6996,"src":"23157:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6460,"nodeType":"Block","src":"23778:150:20","statements":[{"expression":{"id":6448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6443,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6441,"src":"23788:10:20","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6446,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6438,"src":"23808:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6445,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":6444,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:20","typeDescriptions":{}}},"id":6447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:20","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":6449,"nodeType":"ExpressionStatement","src":"23788:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6450,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6441,"src":"23828:10:20","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6451,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6438,"src":"23842:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6459,"nodeType":"IfStatement","src":"23824:98:20","trueBody":{"id":6458,"nodeType":"Block","src":"23849:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":6454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:20","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":6455,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6438,"src":"23905:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6453,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5253,"src":"23870:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6457,"nodeType":"RevertStatement","src":"23863:48:20"}]}}]},"documentation":{"id":6436,"nodeType":"StructuredDocumentation","src":"23387:312:20","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":6461,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:20","nodeType":"FunctionDefinition","parameters":{"id":6439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6438,"mutability":"mutable","name":"value","nameLocation":"23729:5:20","nodeType":"VariableDeclaration","scope":6461,"src":"23722:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6437,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:20"},"returnParameters":{"id":6442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6441,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:20","nodeType":"VariableDeclaration","scope":6461,"src":"23759:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":6440,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:20","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:20"},"scope":6996,"src":"23704:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6486,"nodeType":"Block","src":"24325:150:20","statements":[{"expression":{"id":6474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6469,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6467,"src":"24335:10:20","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6472,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6464,"src":"24355:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6471,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":6470,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:20","typeDescriptions":{}}},"id":6473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:20","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":6475,"nodeType":"ExpressionStatement","src":"24335:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6476,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6467,"src":"24375:10:20","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6477,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6464,"src":"24389:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6485,"nodeType":"IfStatement","src":"24371:98:20","trueBody":{"id":6484,"nodeType":"Block","src":"24396:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":6480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:20","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":6481,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6464,"src":"24452:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6479,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5253,"src":"24417:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6483,"nodeType":"RevertStatement","src":"24410:48:20"}]}}]},"documentation":{"id":6462,"nodeType":"StructuredDocumentation","src":"23934:312:20","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":6487,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:20","nodeType":"FunctionDefinition","parameters":{"id":6465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6464,"mutability":"mutable","name":"value","nameLocation":"24276:5:20","nodeType":"VariableDeclaration","scope":6487,"src":"24269:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6463,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:20"},"returnParameters":{"id":6468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6467,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:20","nodeType":"VariableDeclaration","scope":6487,"src":"24306:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":6466,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:20","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:20"},"scope":6996,"src":"24251:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6512,"nodeType":"Block","src":"24872:150:20","statements":[{"expression":{"id":6500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6495,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6493,"src":"24882:10:20","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6498,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6490,"src":"24902:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6497,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":6496,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:20","typeDescriptions":{}}},"id":6499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:20","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":6501,"nodeType":"ExpressionStatement","src":"24882:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6502,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6493,"src":"24922:10:20","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6503,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6490,"src":"24936:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6511,"nodeType":"IfStatement","src":"24918:98:20","trueBody":{"id":6510,"nodeType":"Block","src":"24943:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":6506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:20","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":6507,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6490,"src":"24999:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6505,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5253,"src":"24964:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6509,"nodeType":"RevertStatement","src":"24957:48:20"}]}}]},"documentation":{"id":6488,"nodeType":"StructuredDocumentation","src":"24481:312:20","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":6513,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:20","nodeType":"FunctionDefinition","parameters":{"id":6491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6490,"mutability":"mutable","name":"value","nameLocation":"24823:5:20","nodeType":"VariableDeclaration","scope":6513,"src":"24816:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6489,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:20"},"returnParameters":{"id":6494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6493,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:20","nodeType":"VariableDeclaration","scope":6513,"src":"24853:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":6492,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:20","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:20"},"scope":6996,"src":"24798:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6538,"nodeType":"Block","src":"25419:150:20","statements":[{"expression":{"id":6526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6521,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6519,"src":"25429:10:20","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6524,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6516,"src":"25449:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6523,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":6522,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:20","typeDescriptions":{}}},"id":6525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:20","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":6527,"nodeType":"ExpressionStatement","src":"25429:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6528,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6519,"src":"25469:10:20","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6529,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6516,"src":"25483:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6537,"nodeType":"IfStatement","src":"25465:98:20","trueBody":{"id":6536,"nodeType":"Block","src":"25490:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":6532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:20","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":6533,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6516,"src":"25546:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6531,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5253,"src":"25511:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6535,"nodeType":"RevertStatement","src":"25504:48:20"}]}}]},"documentation":{"id":6514,"nodeType":"StructuredDocumentation","src":"25028:312:20","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":6539,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:20","nodeType":"FunctionDefinition","parameters":{"id":6517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6516,"mutability":"mutable","name":"value","nameLocation":"25370:5:20","nodeType":"VariableDeclaration","scope":6539,"src":"25363:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6515,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:20"},"returnParameters":{"id":6520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6519,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:20","nodeType":"VariableDeclaration","scope":6539,"src":"25400:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":6518,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:20","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:20"},"scope":6996,"src":"25345:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6564,"nodeType":"Block","src":"25966:150:20","statements":[{"expression":{"id":6552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6547,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6545,"src":"25976:10:20","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6550,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6542,"src":"25996:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6549,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":6548,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:20","typeDescriptions":{}}},"id":6551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:20","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":6553,"nodeType":"ExpressionStatement","src":"25976:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6554,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6545,"src":"26016:10:20","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6555,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6542,"src":"26030:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6563,"nodeType":"IfStatement","src":"26012:98:20","trueBody":{"id":6562,"nodeType":"Block","src":"26037:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":6558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:20","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":6559,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6542,"src":"26093:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6557,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5253,"src":"26058:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6561,"nodeType":"RevertStatement","src":"26051:48:20"}]}}]},"documentation":{"id":6540,"nodeType":"StructuredDocumentation","src":"25575:312:20","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":6565,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:20","nodeType":"FunctionDefinition","parameters":{"id":6543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6542,"mutability":"mutable","name":"value","nameLocation":"25917:5:20","nodeType":"VariableDeclaration","scope":6565,"src":"25910:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6541,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:20"},"returnParameters":{"id":6546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6545,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:20","nodeType":"VariableDeclaration","scope":6565,"src":"25947:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":6544,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:20","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:20"},"scope":6996,"src":"25892:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6590,"nodeType":"Block","src":"26513:150:20","statements":[{"expression":{"id":6578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6573,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6571,"src":"26523:10:20","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6576,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6568,"src":"26543:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6575,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":6574,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:20","typeDescriptions":{}}},"id":6577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:20","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":6579,"nodeType":"ExpressionStatement","src":"26523:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6580,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6571,"src":"26563:10:20","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6581,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6568,"src":"26577:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6589,"nodeType":"IfStatement","src":"26559:98:20","trueBody":{"id":6588,"nodeType":"Block","src":"26584:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":6584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:20","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":6585,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6568,"src":"26640:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6583,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5253,"src":"26605:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6587,"nodeType":"RevertStatement","src":"26598:48:20"}]}}]},"documentation":{"id":6566,"nodeType":"StructuredDocumentation","src":"26122:312:20","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":6591,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:20","nodeType":"FunctionDefinition","parameters":{"id":6569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6568,"mutability":"mutable","name":"value","nameLocation":"26464:5:20","nodeType":"VariableDeclaration","scope":6591,"src":"26457:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6567,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:20"},"returnParameters":{"id":6572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6571,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:20","nodeType":"VariableDeclaration","scope":6591,"src":"26494:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":6570,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:20","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:20"},"scope":6996,"src":"26439:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6616,"nodeType":"Block","src":"27060:150:20","statements":[{"expression":{"id":6604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6599,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6597,"src":"27070:10:20","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6602,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6594,"src":"27090:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6601,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":6600,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:20","typeDescriptions":{}}},"id":6603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:20","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":6605,"nodeType":"ExpressionStatement","src":"27070:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6606,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6597,"src":"27110:10:20","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6607,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6594,"src":"27124:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6615,"nodeType":"IfStatement","src":"27106:98:20","trueBody":{"id":6614,"nodeType":"Block","src":"27131:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":6610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:20","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":6611,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6594,"src":"27187:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6609,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5253,"src":"27152:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6613,"nodeType":"RevertStatement","src":"27145:48:20"}]}}]},"documentation":{"id":6592,"nodeType":"StructuredDocumentation","src":"26669:312:20","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":6617,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:20","nodeType":"FunctionDefinition","parameters":{"id":6595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6594,"mutability":"mutable","name":"value","nameLocation":"27011:5:20","nodeType":"VariableDeclaration","scope":6617,"src":"27004:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6593,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:20"},"returnParameters":{"id":6598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6597,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:20","nodeType":"VariableDeclaration","scope":6617,"src":"27041:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":6596,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:20","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:20"},"scope":6996,"src":"26986:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6642,"nodeType":"Block","src":"27607:150:20","statements":[{"expression":{"id":6630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6625,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6623,"src":"27617:10:20","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6628,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6620,"src":"27637:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6627,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":6626,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:20","typeDescriptions":{}}},"id":6629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:20","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":6631,"nodeType":"ExpressionStatement","src":"27617:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6632,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6623,"src":"27657:10:20","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6633,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6620,"src":"27671:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6641,"nodeType":"IfStatement","src":"27653:98:20","trueBody":{"id":6640,"nodeType":"Block","src":"27678:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":6636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:20","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":6637,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6620,"src":"27734:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6635,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5253,"src":"27699:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6639,"nodeType":"RevertStatement","src":"27692:48:20"}]}}]},"documentation":{"id":6618,"nodeType":"StructuredDocumentation","src":"27216:312:20","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":6643,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:20","nodeType":"FunctionDefinition","parameters":{"id":6621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6620,"mutability":"mutable","name":"value","nameLocation":"27558:5:20","nodeType":"VariableDeclaration","scope":6643,"src":"27551:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6619,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:20"},"returnParameters":{"id":6624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6623,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:20","nodeType":"VariableDeclaration","scope":6643,"src":"27588:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":6622,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:20","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:20"},"scope":6996,"src":"27533:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6668,"nodeType":"Block","src":"28147:148:20","statements":[{"expression":{"id":6656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6651,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6649,"src":"28157:10:20","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6654,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6646,"src":"28176:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6653,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":6652,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:20","typeDescriptions":{}}},"id":6655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:20","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":6657,"nodeType":"ExpressionStatement","src":"28157:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6658,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6649,"src":"28196:10:20","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6659,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6646,"src":"28210:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6667,"nodeType":"IfStatement","src":"28192:97:20","trueBody":{"id":6666,"nodeType":"Block","src":"28217:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":6662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:20","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":6663,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6646,"src":"28272:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6661,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5253,"src":"28238:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6665,"nodeType":"RevertStatement","src":"28231:47:20"}]}}]},"documentation":{"id":6644,"nodeType":"StructuredDocumentation","src":"27763:307:20","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":6669,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:20","nodeType":"FunctionDefinition","parameters":{"id":6647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6646,"mutability":"mutable","name":"value","nameLocation":"28099:5:20","nodeType":"VariableDeclaration","scope":6669,"src":"28092:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6645,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:20"},"returnParameters":{"id":6650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6649,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:20","nodeType":"VariableDeclaration","scope":6669,"src":"28129:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":6648,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:20","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:20"},"scope":6996,"src":"28075:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6694,"nodeType":"Block","src":"28685:148:20","statements":[{"expression":{"id":6682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6677,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6675,"src":"28695:10:20","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6680,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6672,"src":"28714:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6679,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":6678,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:20","typeDescriptions":{}}},"id":6681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:20","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":6683,"nodeType":"ExpressionStatement","src":"28695:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6684,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6675,"src":"28734:10:20","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6685,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6672,"src":"28748:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6693,"nodeType":"IfStatement","src":"28730:97:20","trueBody":{"id":6692,"nodeType":"Block","src":"28755:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":6688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:20","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":6689,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6672,"src":"28810:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6687,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5253,"src":"28776:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6691,"nodeType":"RevertStatement","src":"28769:47:20"}]}}]},"documentation":{"id":6670,"nodeType":"StructuredDocumentation","src":"28301:307:20","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":6695,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:20","nodeType":"FunctionDefinition","parameters":{"id":6673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6672,"mutability":"mutable","name":"value","nameLocation":"28637:5:20","nodeType":"VariableDeclaration","scope":6695,"src":"28630:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6671,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:20"},"returnParameters":{"id":6676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6675,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:20","nodeType":"VariableDeclaration","scope":6695,"src":"28667:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":6674,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:20","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:20"},"scope":6996,"src":"28613:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6720,"nodeType":"Block","src":"29223:148:20","statements":[{"expression":{"id":6708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6703,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6701,"src":"29233:10:20","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6706,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6698,"src":"29252:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6705,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":6704,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:20","typeDescriptions":{}}},"id":6707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:20","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":6709,"nodeType":"ExpressionStatement","src":"29233:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6710,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6701,"src":"29272:10:20","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6711,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6698,"src":"29286:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6719,"nodeType":"IfStatement","src":"29268:97:20","trueBody":{"id":6718,"nodeType":"Block","src":"29293:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":6714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:20","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":6715,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6698,"src":"29348:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6713,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5253,"src":"29314:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6717,"nodeType":"RevertStatement","src":"29307:47:20"}]}}]},"documentation":{"id":6696,"nodeType":"StructuredDocumentation","src":"28839:307:20","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":6721,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:20","nodeType":"FunctionDefinition","parameters":{"id":6699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6698,"mutability":"mutable","name":"value","nameLocation":"29175:5:20","nodeType":"VariableDeclaration","scope":6721,"src":"29168:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6697,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:20"},"returnParameters":{"id":6702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6701,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:20","nodeType":"VariableDeclaration","scope":6721,"src":"29205:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":6700,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:20","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:20"},"scope":6996,"src":"29151:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6746,"nodeType":"Block","src":"29761:148:20","statements":[{"expression":{"id":6734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6729,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6727,"src":"29771:10:20","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6732,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6724,"src":"29790:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6731,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":6730,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:20","typeDescriptions":{}}},"id":6733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:20","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":6735,"nodeType":"ExpressionStatement","src":"29771:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6736,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6727,"src":"29810:10:20","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6737,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6724,"src":"29824:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6745,"nodeType":"IfStatement","src":"29806:97:20","trueBody":{"id":6744,"nodeType":"Block","src":"29831:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":6740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:20","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":6741,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6724,"src":"29886:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6739,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5253,"src":"29852:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6743,"nodeType":"RevertStatement","src":"29845:47:20"}]}}]},"documentation":{"id":6722,"nodeType":"StructuredDocumentation","src":"29377:307:20","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":6747,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:20","nodeType":"FunctionDefinition","parameters":{"id":6725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6724,"mutability":"mutable","name":"value","nameLocation":"29713:5:20","nodeType":"VariableDeclaration","scope":6747,"src":"29706:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6723,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:20"},"returnParameters":{"id":6728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6727,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:20","nodeType":"VariableDeclaration","scope":6747,"src":"29743:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":6726,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:20","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:20"},"scope":6996,"src":"29689:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6772,"nodeType":"Block","src":"30299:148:20","statements":[{"expression":{"id":6760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6755,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6753,"src":"30309:10:20","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6758,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6750,"src":"30328:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6757,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":6756,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:20","typeDescriptions":{}}},"id":6759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:20","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":6761,"nodeType":"ExpressionStatement","src":"30309:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6762,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6753,"src":"30348:10:20","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6763,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6750,"src":"30362:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6771,"nodeType":"IfStatement","src":"30344:97:20","trueBody":{"id":6770,"nodeType":"Block","src":"30369:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":6766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:20","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":6767,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6750,"src":"30424:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6765,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5253,"src":"30390:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6769,"nodeType":"RevertStatement","src":"30383:47:20"}]}}]},"documentation":{"id":6748,"nodeType":"StructuredDocumentation","src":"29915:307:20","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":6773,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:20","nodeType":"FunctionDefinition","parameters":{"id":6751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6750,"mutability":"mutable","name":"value","nameLocation":"30251:5:20","nodeType":"VariableDeclaration","scope":6773,"src":"30244:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6749,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:20"},"returnParameters":{"id":6754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6753,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:20","nodeType":"VariableDeclaration","scope":6773,"src":"30281:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":6752,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:20","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:20"},"scope":6996,"src":"30227:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6798,"nodeType":"Block","src":"30837:148:20","statements":[{"expression":{"id":6786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6781,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6779,"src":"30847:10:20","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6784,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6776,"src":"30866:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6783,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":6782,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:20","typeDescriptions":{}}},"id":6785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:20","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":6787,"nodeType":"ExpressionStatement","src":"30847:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6788,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6779,"src":"30886:10:20","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6789,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6776,"src":"30900:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6797,"nodeType":"IfStatement","src":"30882:97:20","trueBody":{"id":6796,"nodeType":"Block","src":"30907:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":6792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:20","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":6793,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6776,"src":"30962:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6791,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5253,"src":"30928:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6795,"nodeType":"RevertStatement","src":"30921:47:20"}]}}]},"documentation":{"id":6774,"nodeType":"StructuredDocumentation","src":"30453:307:20","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":6799,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:20","nodeType":"FunctionDefinition","parameters":{"id":6777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6776,"mutability":"mutable","name":"value","nameLocation":"30789:5:20","nodeType":"VariableDeclaration","scope":6799,"src":"30782:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6775,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:20"},"returnParameters":{"id":6780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6779,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:20","nodeType":"VariableDeclaration","scope":6799,"src":"30819:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":6778,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:20","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:20"},"scope":6996,"src":"30765:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6824,"nodeType":"Block","src":"31375:148:20","statements":[{"expression":{"id":6812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6807,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6805,"src":"31385:10:20","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6810,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6802,"src":"31404:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6809,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":6808,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:20","typeDescriptions":{}}},"id":6811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:20","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":6813,"nodeType":"ExpressionStatement","src":"31385:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6814,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6805,"src":"31424:10:20","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6815,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6802,"src":"31438:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6823,"nodeType":"IfStatement","src":"31420:97:20","trueBody":{"id":6822,"nodeType":"Block","src":"31445:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":6818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:20","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":6819,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6802,"src":"31500:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6817,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5253,"src":"31466:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6821,"nodeType":"RevertStatement","src":"31459:47:20"}]}}]},"documentation":{"id":6800,"nodeType":"StructuredDocumentation","src":"30991:307:20","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":6825,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:20","nodeType":"FunctionDefinition","parameters":{"id":6803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6802,"mutability":"mutable","name":"value","nameLocation":"31327:5:20","nodeType":"VariableDeclaration","scope":6825,"src":"31320:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6801,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:20"},"returnParameters":{"id":6806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6805,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:20","nodeType":"VariableDeclaration","scope":6825,"src":"31357:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":6804,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:20","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:20"},"scope":6996,"src":"31303:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6850,"nodeType":"Block","src":"31913:148:20","statements":[{"expression":{"id":6838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6833,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6831,"src":"31923:10:20","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6836,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6828,"src":"31942:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6835,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":6834,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:20","typeDescriptions":{}}},"id":6837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:20","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":6839,"nodeType":"ExpressionStatement","src":"31923:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6840,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6831,"src":"31962:10:20","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6841,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6828,"src":"31976:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6849,"nodeType":"IfStatement","src":"31958:97:20","trueBody":{"id":6848,"nodeType":"Block","src":"31983:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":6844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:20","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":6845,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6828,"src":"32038:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6843,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5253,"src":"32004:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6847,"nodeType":"RevertStatement","src":"31997:47:20"}]}}]},"documentation":{"id":6826,"nodeType":"StructuredDocumentation","src":"31529:307:20","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":6851,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:20","nodeType":"FunctionDefinition","parameters":{"id":6829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6828,"mutability":"mutable","name":"value","nameLocation":"31865:5:20","nodeType":"VariableDeclaration","scope":6851,"src":"31858:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6827,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:20"},"returnParameters":{"id":6832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6831,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:20","nodeType":"VariableDeclaration","scope":6851,"src":"31895:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":6830,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:20","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:20"},"scope":6996,"src":"31841:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6876,"nodeType":"Block","src":"32451:148:20","statements":[{"expression":{"id":6864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6859,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6857,"src":"32461:10:20","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6862,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6854,"src":"32480:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6861,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":6860,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:20","typeDescriptions":{}}},"id":6863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:20","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":6865,"nodeType":"ExpressionStatement","src":"32461:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6866,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6857,"src":"32500:10:20","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6867,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6854,"src":"32514:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6875,"nodeType":"IfStatement","src":"32496:97:20","trueBody":{"id":6874,"nodeType":"Block","src":"32521:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":6870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":6871,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6854,"src":"32576:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6869,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5253,"src":"32542:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6873,"nodeType":"RevertStatement","src":"32535:47:20"}]}}]},"documentation":{"id":6852,"nodeType":"StructuredDocumentation","src":"32067:307:20","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":6877,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:20","nodeType":"FunctionDefinition","parameters":{"id":6855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6854,"mutability":"mutable","name":"value","nameLocation":"32403:5:20","nodeType":"VariableDeclaration","scope":6877,"src":"32396:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6853,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:20"},"returnParameters":{"id":6858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6857,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:20","nodeType":"VariableDeclaration","scope":6877,"src":"32433:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":6856,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:20","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:20"},"scope":6996,"src":"32379:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6902,"nodeType":"Block","src":"32989:148:20","statements":[{"expression":{"id":6890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6885,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6883,"src":"32999:10:20","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6888,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6880,"src":"33018:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6887,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":6886,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:20","typeDescriptions":{}}},"id":6889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:20","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":6891,"nodeType":"ExpressionStatement","src":"32999:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6892,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6883,"src":"33038:10:20","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6893,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6880,"src":"33052:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6901,"nodeType":"IfStatement","src":"33034:97:20","trueBody":{"id":6900,"nodeType":"Block","src":"33059:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":6896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:20","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":6897,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6880,"src":"33114:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6895,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5253,"src":"33080:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6899,"nodeType":"RevertStatement","src":"33073:47:20"}]}}]},"documentation":{"id":6878,"nodeType":"StructuredDocumentation","src":"32605:307:20","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":6903,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:20","nodeType":"FunctionDefinition","parameters":{"id":6881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6880,"mutability":"mutable","name":"value","nameLocation":"32941:5:20","nodeType":"VariableDeclaration","scope":6903,"src":"32934:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6879,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:20"},"returnParameters":{"id":6884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6883,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:20","nodeType":"VariableDeclaration","scope":6903,"src":"32971:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":6882,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:20","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:20"},"scope":6996,"src":"32917:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6928,"nodeType":"Block","src":"33527:148:20","statements":[{"expression":{"id":6916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6911,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6909,"src":"33537:10:20","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6914,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6906,"src":"33556:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6913,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":6912,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:20","typeDescriptions":{}}},"id":6915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:20","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":6917,"nodeType":"ExpressionStatement","src":"33537:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6918,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6909,"src":"33576:10:20","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6919,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6906,"src":"33590:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6927,"nodeType":"IfStatement","src":"33572:97:20","trueBody":{"id":6926,"nodeType":"Block","src":"33597:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":6922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":6923,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6906,"src":"33652:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6921,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5253,"src":"33618:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6925,"nodeType":"RevertStatement","src":"33611:47:20"}]}}]},"documentation":{"id":6904,"nodeType":"StructuredDocumentation","src":"33143:307:20","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":6929,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:20","nodeType":"FunctionDefinition","parameters":{"id":6907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6906,"mutability":"mutable","name":"value","nameLocation":"33479:5:20","nodeType":"VariableDeclaration","scope":6929,"src":"33472:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6905,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:20"},"returnParameters":{"id":6910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6909,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:20","nodeType":"VariableDeclaration","scope":6929,"src":"33509:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":6908,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:20","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:20"},"scope":6996,"src":"33455:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6954,"nodeType":"Block","src":"34058:146:20","statements":[{"expression":{"id":6942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6937,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6935,"src":"34068:10:20","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6940,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6932,"src":"34086:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6939,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":6938,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:20","typeDescriptions":{}}},"id":6941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:20","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":6943,"nodeType":"ExpressionStatement","src":"34068:24:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6944,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6935,"src":"34106:10:20","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6945,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6932,"src":"34120:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6953,"nodeType":"IfStatement","src":"34102:96:20","trueBody":{"id":6952,"nodeType":"Block","src":"34127:71:20","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":6948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:20","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":6949,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6932,"src":"34181:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6947,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5253,"src":"34148:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6951,"nodeType":"RevertStatement","src":"34141:46:20"}]}}]},"documentation":{"id":6930,"nodeType":"StructuredDocumentation","src":"33681:302:20","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":6955,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:20","nodeType":"FunctionDefinition","parameters":{"id":6933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6932,"mutability":"mutable","name":"value","nameLocation":"34011:5:20","nodeType":"VariableDeclaration","scope":6955,"src":"34004:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6931,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:20"},"returnParameters":{"id":6936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6935,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:20","nodeType":"VariableDeclaration","scope":6955,"src":"34041:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":6934,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:20","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:20"},"scope":6996,"src":"33988:216:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6984,"nodeType":"Block","src":"34444:250:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6963,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6958,"src":"34557:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":6968,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6967,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":6966,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":6970,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:20","memberName":"max","nodeType":"MemberAccess","src":"34573:16:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6965,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6964,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:20","typeDescriptions":{}}},"id":6971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6978,"nodeType":"IfStatement","src":"34553:105:20","trueBody":{"id":6977,"nodeType":"Block","src":"34592:66:20","statements":[{"errorCall":{"arguments":[{"id":6974,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6958,"src":"34641:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6973,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5258,"src":"34613:27:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":6975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6976,"nodeType":"RevertStatement","src":"34606:41:20"}]}},{"expression":{"arguments":[{"id":6981,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6958,"src":"34681:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6980,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6979,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:20","typeDescriptions":{}}},"id":6982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6962,"id":6983,"nodeType":"Return","src":"34667:20:20"}]},"documentation":{"id":6956,"nodeType":"StructuredDocumentation","src":"34210:165:20","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":6985,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:20","nodeType":"FunctionDefinition","parameters":{"id":6959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6958,"mutability":"mutable","name":"value","nameLocation":"34406:5:20","nodeType":"VariableDeclaration","scope":6985,"src":"34398:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6957,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:20"},"returnParameters":{"id":6962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6961,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6985,"src":"34436:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6960,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:20"},"scope":6996,"src":"34380:314:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6994,"nodeType":"Block","src":"34853:87:20","statements":[{"AST":{"nodeType":"YulBlock","src":"34888:46:20","statements":[{"nodeType":"YulAssignment","src":"34902:22:20","value":{"arguments":[{"arguments":[{"name":"b","nodeType":"YulIdentifier","src":"34921:1:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34914:6:20"},"nodeType":"YulFunctionCall","src":"34914:9:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34907:6:20"},"nodeType":"YulFunctionCall","src":"34907:17:20"},"variableNames":[{"name":"u","nodeType":"YulIdentifier","src":"34902:1:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6988,"isOffset":false,"isSlot":false,"src":"34921:1:20","valueSize":1},{"declaration":6991,"isOffset":false,"isSlot":false,"src":"34902:1:20","valueSize":1}],"flags":["memory-safe"],"id":6993,"nodeType":"InlineAssembly","src":"34863:71:20"}]},"documentation":{"id":6986,"nodeType":"StructuredDocumentation","src":"34700:90:20","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":6995,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:20","nodeType":"FunctionDefinition","parameters":{"id":6989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6988,"mutability":"mutable","name":"b","nameLocation":"34816:1:20","nodeType":"VariableDeclaration","scope":6995,"src":"34811:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6987,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:20"},"returnParameters":{"id":6992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6991,"mutability":"mutable","name":"u","nameLocation":"34850:1:20","nodeType":"VariableDeclaration","scope":6995,"src":"34842:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6990,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:20"},"scope":6996,"src":"34795:145:20","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6997,"src":"769:34173:20","usedErrors":[5241,5246,5253,5258],"usedEvents":[]}],"src":"192:34751:20"},"id":20},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[6996],"SignedMath":[7140]},"id":7141,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6998,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:21"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":7000,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7141,"sourceUnit":6997,"src":"135:40:21","symbolAliases":[{"foreign":{"id":6999,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6996,"src":"143:8:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":7001,"nodeType":"StructuredDocumentation","src":"177:80:21","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":7140,"linearizedBaseContracts":[7140],"name":"SignedMath","nameLocation":"266:10:21","nodeType":"ContractDefinition","nodes":[{"body":{"id":7030,"nodeType":"Block","src":"746:215:21","statements":[{"id":7029,"nodeType":"UncheckedBlock","src":"756:199:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7013,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7008,"src":"894:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7014,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7006,"src":"900:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7015,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7008,"src":"904:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7017,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":7022,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7004,"src":"932:9:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7020,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6996,"src":"916:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6996_$","typeString":"type(library SafeCast)"}},"id":7021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6995,"src":"916:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7019,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7018,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:21","typeDescriptions":{}}},"id":7024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7026,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7012,"id":7028,"nodeType":"Return","src":"887:57:21"}]}]},"documentation":{"id":7002,"nodeType":"StructuredDocumentation","src":"283:374:21","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":7031,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:21","nodeType":"FunctionDefinition","parameters":{"id":7009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7004,"mutability":"mutable","name":"condition","nameLocation":"684:9:21","nodeType":"VariableDeclaration","scope":7031,"src":"679:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7003,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7006,"mutability":"mutable","name":"a","nameLocation":"702:1:21","nodeType":"VariableDeclaration","scope":7031,"src":"695:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7005,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7008,"mutability":"mutable","name":"b","nameLocation":"712:1:21","nodeType":"VariableDeclaration","scope":7031,"src":"705:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7007,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:21"},"returnParameters":{"id":7012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7011,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7031,"src":"738:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7010,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:21"},"scope":7140,"src":"662:299:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7049,"nodeType":"Block","src":"1102:44:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7042,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7034,"src":"1127:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":7043,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7036,"src":"1131:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":7045,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7034,"src":"1134:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":7046,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7036,"src":"1137:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7041,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7031,"src":"1119:7:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":7047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7040,"id":7048,"nodeType":"Return","src":"1112:27:21"}]},"documentation":{"id":7032,"nodeType":"StructuredDocumentation","src":"967:66:21","text":" @dev Returns the largest of two signed numbers."},"id":7050,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:21","nodeType":"FunctionDefinition","parameters":{"id":7037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7034,"mutability":"mutable","name":"a","nameLocation":"1058:1:21","nodeType":"VariableDeclaration","scope":7050,"src":"1051:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7033,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7036,"mutability":"mutable","name":"b","nameLocation":"1068:1:21","nodeType":"VariableDeclaration","scope":7050,"src":"1061:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7035,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:21"},"returnParameters":{"id":7040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7039,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7050,"src":"1094:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7038,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:21"},"scope":7140,"src":"1038:108:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7068,"nodeType":"Block","src":"1288:44:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7061,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7053,"src":"1313:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7062,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7055,"src":"1317:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":7064,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7053,"src":"1320:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":7065,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7055,"src":"1323:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7060,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7031,"src":"1305:7:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":7066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7059,"id":7067,"nodeType":"Return","src":"1298:27:21"}]},"documentation":{"id":7051,"nodeType":"StructuredDocumentation","src":"1152:67:21","text":" @dev Returns the smallest of two signed numbers."},"id":7069,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:21","nodeType":"FunctionDefinition","parameters":{"id":7056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7053,"mutability":"mutable","name":"a","nameLocation":"1244:1:21","nodeType":"VariableDeclaration","scope":7069,"src":"1237:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7052,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7055,"mutability":"mutable","name":"b","nameLocation":"1254:1:21","nodeType":"VariableDeclaration","scope":7069,"src":"1247:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7054,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:21"},"returnParameters":{"id":7059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7058,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7069,"src":"1280:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7057,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:21"},"scope":7140,"src":"1224:108:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7112,"nodeType":"Block","src":"1537:162:21","statements":[{"assignments":[7080],"declarations":[{"constant":false,"id":7080,"mutability":"mutable","name":"x","nameLocation":"1606:1:21","nodeType":"VariableDeclaration","scope":7112,"src":"1599:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7079,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":7093,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7081,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7072,"src":"1611:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":7082,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7074,"src":"1615:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7084,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7085,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7072,"src":"1622:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7086,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7074,"src":"1626:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7088,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":7089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7091,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:21"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7094,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7080,"src":"1651:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7099,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7080,"src":"1671:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7098,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7097,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:21","typeDescriptions":{}}},"id":7100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":7101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:21","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7096,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7095,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:21","typeDescriptions":{}}},"id":7103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7104,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7072,"src":"1685:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7105,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7074,"src":"1689:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7107,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7109,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7078,"id":7111,"nodeType":"Return","src":"1644:48:21"}]},"documentation":{"id":7070,"nodeType":"StructuredDocumentation","src":"1338:126:21","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":7113,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:21","nodeType":"FunctionDefinition","parameters":{"id":7075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7072,"mutability":"mutable","name":"a","nameLocation":"1493:1:21","nodeType":"VariableDeclaration","scope":7113,"src":"1486:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7071,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7074,"mutability":"mutable","name":"b","nameLocation":"1503:1:21","nodeType":"VariableDeclaration","scope":7113,"src":"1496:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7073,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:21"},"returnParameters":{"id":7078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7077,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7113,"src":"1529:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7076,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:21"},"scope":7140,"src":"1469:230:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7138,"nodeType":"Block","src":"1843:767:21","statements":[{"id":7137,"nodeType":"UncheckedBlock","src":"1853:751:21","statements":[{"assignments":[7122],"declarations":[{"constant":false,"id":7122,"mutability":"mutable","name":"mask","nameLocation":"2424:4:21","nodeType":"VariableDeclaration","scope":7137,"src":"2417:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7121,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":7126,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7123,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7116,"src":"2431:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":7124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:21","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7129,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7116,"src":"2576:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":7130,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7122,"src":"2580:4:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7132,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7133,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7122,"src":"2588:4:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7128,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7127,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:21","typeDescriptions":{}}},"id":7135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7120,"id":7136,"nodeType":"Return","src":"2560:33:21"}]}]},"documentation":{"id":7114,"nodeType":"StructuredDocumentation","src":"1705:78:21","text":" @dev Returns the absolute unsigned value of a signed value."},"id":7139,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:21","nodeType":"FunctionDefinition","parameters":{"id":7117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7116,"mutability":"mutable","name":"n","nameLocation":"1808:1:21","nodeType":"VariableDeclaration","scope":7139,"src":"1801:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7115,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:21"},"returnParameters":{"id":7120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7119,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7139,"src":"1834:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7118,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:21"},"scope":7140,"src":"1788:822:21","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":7141,"src":"258:2354:21","usedErrors":[],"usedEvents":[]}],"src":"109:2504:21"},"id":21},"contracts/AutismMedicalSystemSimple.sol":{"ast":{"absolutePath":"contracts/AutismMedicalSystemSimple.sol","exportedSymbols":{"AccessControl":[296],"AutismMedicalSystemSimple":[8349],"Context":[2051],"ERC165":[3598],"ERC721":[1653],"ERC721URIStorage":[1916],"ERC721Utils":[2021],"IAccessControl":[379],"IERC165":[3610],"IERC4906":[555],"IERC721":[1770],"IERC721Errors":[649],"IERC721Metadata":[1944],"ReentrancyGuard":[2172],"Strings":[3574]},"id":8350,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7142,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:22"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"@openzeppelin/contracts/token/ERC721/ERC721.sol","id":7143,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8350,"sourceUnit":1654,"src":"58:57:22","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","file":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","id":7144,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8350,"sourceUnit":1917,"src":"116:78:22","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","file":"@openzeppelin/contracts/access/AccessControl.sol","id":7145,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8350,"sourceUnit":297,"src":"195:58:22","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":7146,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8350,"sourceUnit":2173,"src":"254:59:22","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":7148,"name":"ERC721","nameLocations":["538:6:22"],"nodeType":"IdentifierPath","referencedDeclaration":1653,"src":"538:6:22"},"id":7149,"nodeType":"InheritanceSpecifier","src":"538:6:22"},{"baseName":{"id":7150,"name":"ERC721URIStorage","nameLocations":["546:16:22"],"nodeType":"IdentifierPath","referencedDeclaration":1916,"src":"546:16:22"},"id":7151,"nodeType":"InheritanceSpecifier","src":"546:16:22"},{"baseName":{"id":7152,"name":"AccessControl","nameLocations":["564:13:22"],"nodeType":"IdentifierPath","referencedDeclaration":296,"src":"564:13:22"},"id":7153,"nodeType":"InheritanceSpecifier","src":"564:13:22"},{"baseName":{"id":7154,"name":"ReentrancyGuard","nameLocations":["579:15:22"],"nodeType":"IdentifierPath","referencedDeclaration":2172,"src":"579:15:22"},"id":7155,"nodeType":"InheritanceSpecifier","src":"579:15:22"}],"canonicalName":"AutismMedicalSystemSimple","contractDependencies":[],"contractKind":"contract","documentation":{"id":7147,"nodeType":"StructuredDocumentation","src":"315:184:22","text":" @title AutismMedicalSystemSimple\n @dev Simplified autism evaluation management system for testing\n Core functionality: Upload evaluations, track diagnosis, manage access"},"fullyImplemented":true,"id":8349,"linearizedBaseContracts":[8349,2172,296,1916,1653,649,1944,555,1770,3598,3610,379,2051],"name":"AutismMedicalSystemSimple","nameLocation":"509:25:22","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"b752a74b","id":7160,"mutability":"constant","name":"INSURANCE_ROLE","nameLocation":"625:14:22","nodeType":"VariableDeclaration","scope":8349,"src":"601:68:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7156,"name":"bytes32","nodeType":"ElementaryTypeName","src":"601:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"494e535552414e43455f524f4c45","id":7158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"652:16:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_fec7cd74e5c65b641d49ecc2e89f646c7c0bcae85dc50f9616bf9c798cedda8b","typeString":"literal_string \"INSURANCE_ROLE\""},"value":"INSURANCE_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_fec7cd74e5c65b641d49ecc2e89f646c7c0bcae85dc50f9616bf9c798cedda8b","typeString":"literal_string \"INSURANCE_ROLE\""}],"id":7157,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"642:9:22","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"642:27:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"f6ba6678","id":7165,"mutability":"constant","name":"HOSPITAL_ROLE","nameLocation":"699:13:22","nodeType":"VariableDeclaration","scope":8349,"src":"675:66:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7161,"name":"bytes32","nodeType":"ElementaryTypeName","src":"675:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"484f53504954414c5f524f4c45","id":7163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"725:15:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_c8f5b4140cca307cd927e59cbeea8291bffeee228fc677f0fa059aef7b4dd8d5","typeString":"literal_string \"HOSPITAL_ROLE\""},"value":"HOSPITAL_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c8f5b4140cca307cd927e59cbeea8291bffeee228fc677f0fa059aef7b4dd8d5","typeString":"literal_string \"HOSPITAL_ROLE\""}],"id":7162,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"715:9:22","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"715:26:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"30d0ea31","id":7170,"mutability":"constant","name":"EVALUATOR_ROLE","nameLocation":"771:14:22","nodeType":"VariableDeclaration","scope":8349,"src":"747:68:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7166,"name":"bytes32","nodeType":"ElementaryTypeName","src":"747:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"4556414c5541544f525f524f4c45","id":7168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"798:16:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_4848aa3d2c0568bab3ca9720f91818ee0957e95426fa0627cc4809e2e5ed8be0","typeString":"literal_string \"EVALUATOR_ROLE\""},"value":"EVALUATOR_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_4848aa3d2c0568bab3ca9720f91818ee0957e95426fa0627cc4809e2e5ed8be0","typeString":"literal_string \"EVALUATOR_ROLE\""}],"id":7167,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"788:9:22","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"788:27:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":false,"id":7172,"mutability":"mutable","name":"_tokenIdCounter","nameLocation":"838:15:22","nodeType":"VariableDeclaration","scope":8349,"src":"822:31:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7171,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"canonicalName":"AutismMedicalSystemSimple.EvaluationType","id":7181,"members":[{"id":7173,"name":"ADOS","nameLocation":"934:4:22","nodeType":"EnumValue","src":"934:4:22"},{"id":7174,"name":"ADIR","nameLocation":"1000:4:22","nodeType":"EnumValue","src":"1000:4:22"},{"id":7175,"name":"CARS","nameLocation":"1063:4:22","nodeType":"EnumValue","src":"1063:4:22"},{"id":7176,"name":"MCHAT","nameLocation":"1120:5:22","nodeType":"EnumValue","src":"1120:5:22"},{"id":7177,"name":"GARS","nameLocation":"1189:4:22","nodeType":"EnumValue","src":"1189:4:22"},{"id":7178,"name":"SRS","nameLocation":"1244:3:22","nodeType":"EnumValue","src":"1244:3:22"},{"id":7179,"name":"ABC","nameLocation":"1299:3:22","nodeType":"EnumValue","src":"1299:3:22"},{"id":7180,"name":"ASRS","nameLocation":"1352:4:22","nodeType":"EnumValue","src":"1352:4:22"}],"name":"EvaluationType","nameLocation":"909:14:22","nodeType":"EnumDefinition","src":"904:502:22"},{"canonicalName":"AutismMedicalSystemSimple.SeverityLevel","id":7186,"members":[{"id":7182,"name":"None","nameLocation":"1482:4:22","nodeType":"EnumValue","src":"1482:4:22"},{"id":7183,"name":"Level1_RequiringSupport","nameLocation":"1496:23:22","nodeType":"EnumValue","src":"1496:23:22"},{"id":7184,"name":"Level2_RequiringSubstantialSupport","nameLocation":"1529:34:22","nodeType":"EnumValue","src":"1529:34:22"},{"id":7185,"name":"Level3_RequiringVerySubstantialSupport","nameLocation":"1573:38:22","nodeType":"EnumValue","src":"1573:38:22"}],"name":"SeverityLevel","nameLocation":"1458:13:22","nodeType":"EnumDefinition","src":"1453:164:22"},{"canonicalName":"AutismMedicalSystemSimple.InsuranceInfo","id":7199,"members":[{"constant":false,"id":7188,"mutability":"mutable","name":"insuranceProvider","nameLocation":"1661:17:22","nodeType":"VariableDeclaration","scope":7199,"src":"1654:24:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":7187,"name":"string","nodeType":"ElementaryTypeName","src":"1654:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7190,"mutability":"mutable","name":"policyNumber","nameLocation":"1726:12:22","nodeType":"VariableDeclaration","scope":7199,"src":"1719:19:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":7189,"name":"string","nodeType":"ElementaryTypeName","src":"1719:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7192,"mutability":"mutable","name":"memberID","nameLocation":"1792:8:22","nodeType":"VariableDeclaration","scope":7199,"src":"1785:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":7191,"name":"string","nodeType":"ElementaryTypeName","src":"1785:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7194,"mutability":"mutable","name":"insuranceXRPL","nameLocation":"1844:13:22","nodeType":"VariableDeclaration","scope":7199,"src":"1837:20:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":7193,"name":"string","nodeType":"ElementaryTypeName","src":"1837:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7196,"mutability":"mutable","name":"coveragePercentage","nameLocation":"1917:18:22","nodeType":"VariableDeclaration","scope":7199,"src":"1909:26:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7195,"name":"uint256","nodeType":"ElementaryTypeName","src":"1909:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7198,"mutability":"mutable","name":"isVerified","nameLocation":"1984:10:22","nodeType":"VariableDeclaration","scope":7199,"src":"1979:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7197,"name":"bool","nodeType":"ElementaryTypeName","src":"1979:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"InsuranceInfo","nameLocation":"1630:13:22","nodeType":"StructDefinition","scope":8349,"src":"1623:425:22","visibility":"public"},{"canonicalName":"AutismMedicalSystemSimple.AutismEvaluation","id":7228,"members":[{"constant":false,"id":7201,"mutability":"mutable","name":"tokenId","nameLocation":"2096:7:22","nodeType":"VariableDeclaration","scope":7228,"src":"2088:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7200,"name":"uint256","nodeType":"ElementaryTypeName","src":"2088:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7203,"mutability":"mutable","name":"patient","nameLocation":"2121:7:22","nodeType":"VariableDeclaration","scope":7228,"src":"2113:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7202,"name":"address","nodeType":"ElementaryTypeName","src":"2113:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7205,"mutability":"mutable","name":"evaluator","nameLocation":"2146:9:22","nodeType":"VariableDeclaration","scope":7228,"src":"2138:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7204,"name":"address","nodeType":"ElementaryTypeName","src":"2138:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7207,"mutability":"mutable","name":"fileHash","nameLocation":"2227:8:22","nodeType":"VariableDeclaration","scope":7228,"src":"2219:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7206,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2219:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7209,"mutability":"mutable","name":"fileLocation","nameLocation":"2289:12:22","nodeType":"VariableDeclaration","scope":7228,"src":"2282:19:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":7208,"name":"string","nodeType":"ElementaryTypeName","src":"2282:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7211,"mutability":"mutable","name":"encryptedKey","nameLocation":"2350:12:22","nodeType":"VariableDeclaration","scope":7228,"src":"2342:20:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7210,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2342:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7214,"mutability":"mutable","name":"evaluationType","nameLocation":"2421:14:22","nodeType":"VariableDeclaration","scope":7228,"src":"2406:29:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_EvaluationType_$7181","typeString":"enum AutismMedicalSystemSimple.EvaluationType"},"typeName":{"id":7213,"nodeType":"UserDefinedTypeName","pathNode":{"id":7212,"name":"EvaluationType","nameLocations":["2406:14:22"],"nodeType":"IdentifierPath","referencedDeclaration":7181,"src":"2406:14:22"},"referencedDeclaration":7181,"src":"2406:14:22","typeDescriptions":{"typeIdentifier":"t_enum$_EvaluationType_$7181","typeString":"enum AutismMedicalSystemSimple.EvaluationType"}},"visibility":"internal"},{"constant":false,"id":7216,"mutability":"mutable","name":"evaluationDate","nameLocation":"2453:14:22","nodeType":"VariableDeclaration","scope":7228,"src":"2445:22:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7215,"name":"uint256","nodeType":"ElementaryTypeName","src":"2445:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7218,"mutability":"mutable","name":"uploadDate","nameLocation":"2485:10:22","nodeType":"VariableDeclaration","scope":7228,"src":"2477:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7217,"name":"uint256","nodeType":"ElementaryTypeName","src":"2477:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7220,"mutability":"mutable","name":"isPaidByInsurance","nameLocation":"2510:17:22","nodeType":"VariableDeclaration","scope":7228,"src":"2505:22:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7219,"name":"bool","nodeType":"ElementaryTypeName","src":"2505:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7222,"mutability":"mutable","name":"insurancePaymentTx","nameLocation":"2544:18:22","nodeType":"VariableDeclaration","scope":7228,"src":"2537:25:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":7221,"name":"string","nodeType":"ElementaryTypeName","src":"2537:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7224,"mutability":"mutable","name":"evaluationCostUSD","nameLocation":"2610:17:22","nodeType":"VariableDeclaration","scope":7228,"src":"2602:25:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7223,"name":"uint256","nodeType":"ElementaryTypeName","src":"2602:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7227,"mutability":"mutable","name":"insurance","nameLocation":"2651:9:22","nodeType":"VariableDeclaration","scope":7228,"src":"2637:23:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_InsuranceInfo_$7199_storage_ptr","typeString":"struct AutismMedicalSystemSimple.InsuranceInfo"},"typeName":{"id":7226,"nodeType":"UserDefinedTypeName","pathNode":{"id":7225,"name":"InsuranceInfo","nameLocations":["2637:13:22"],"nodeType":"IdentifierPath","referencedDeclaration":7199,"src":"2637:13:22"},"referencedDeclaration":7199,"src":"2637:13:22","typeDescriptions":{"typeIdentifier":"t_struct$_InsuranceInfo_$7199_storage_ptr","typeString":"struct AutismMedicalSystemSimple.InsuranceInfo"}},"visibility":"internal"}],"name":"AutismEvaluation","nameLocation":"2061:16:22","nodeType":"StructDefinition","scope":8349,"src":"2054:613:22","visibility":"public"},{"canonicalName":"AutismMedicalSystemSimple.DiagnosisRecord","id":7240,"members":[{"constant":false,"id":7231,"mutability":"mutable","name":"currentLevel","nameLocation":"2720:12:22","nodeType":"VariableDeclaration","scope":7240,"src":"2706:26:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_SeverityLevel_$7186","typeString":"enum AutismMedicalSystemSimple.SeverityLevel"},"typeName":{"id":7230,"nodeType":"UserDefinedTypeName","pathNode":{"id":7229,"name":"SeverityLevel","nameLocations":["2706:13:22"],"nodeType":"IdentifierPath","referencedDeclaration":7186,"src":"2706:13:22"},"referencedDeclaration":7186,"src":"2706:13:22","typeDescriptions":{"typeIdentifier":"t_enum$_SeverityLevel_$7186","typeString":"enum AutismMedicalSystemSimple.SeverityLevel"}},"visibility":"internal"},{"constant":false,"id":7233,"mutability":"mutable","name":"firstDiagnosisDate","nameLocation":"2750:18:22","nodeType":"VariableDeclaration","scope":7240,"src":"2742:26:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7232,"name":"uint256","nodeType":"ElementaryTypeName","src":"2742:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7235,"mutability":"mutable","name":"lastUpdateDate","nameLocation":"2786:14:22","nodeType":"VariableDeclaration","scope":7240,"src":"2778:22:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7234,"name":"uint256","nodeType":"ElementaryTypeName","src":"2778:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7237,"mutability":"mutable","name":"primaryDiagnosis","nameLocation":"2817:16:22","nodeType":"VariableDeclaration","scope":7240,"src":"2810:23:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":7236,"name":"string","nodeType":"ElementaryTypeName","src":"2810:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7239,"mutability":"mutable","name":"totalEvaluations","nameLocation":"2894:16:22","nodeType":"VariableDeclaration","scope":7240,"src":"2886:24:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7238,"name":"uint256","nodeType":"ElementaryTypeName","src":"2886:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"DiagnosisRecord","nameLocation":"2680:15:22","nodeType":"StructDefinition","scope":8349,"src":"2673:244:22","visibility":"public"},{"canonicalName":"AutismMedicalSystemSimple.AccessRecord","id":7249,"members":[{"constant":false,"id":7242,"mutability":"mutable","name":"accessor","nameLocation":"2961:8:22","nodeType":"VariableDeclaration","scope":7249,"src":"2953:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7241,"name":"address","nodeType":"ElementaryTypeName","src":"2953:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7244,"mutability":"mutable","name":"accessTime","nameLocation":"3036:10:22","nodeType":"VariableDeclaration","scope":7249,"src":"3028:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7243,"name":"uint256","nodeType":"ElementaryTypeName","src":"3028:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7246,"mutability":"mutable","name":"purpose","nameLocation":"3063:7:22","nodeType":"VariableDeclaration","scope":7249,"src":"3056:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":7245,"name":"string","nodeType":"ElementaryTypeName","src":"3056:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7248,"mutability":"mutable","name":"isPaid","nameLocation":"3122:6:22","nodeType":"VariableDeclaration","scope":7249,"src":"3117:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7247,"name":"bool","nodeType":"ElementaryTypeName","src":"3117:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"AccessRecord","nameLocation":"2930:12:22","nodeType":"StructDefinition","scope":8349,"src":"2923:263:22","visibility":"public"},{"canonicalName":"AutismMedicalSystemSimple.Bill","id":7268,"members":[{"constant":false,"id":7251,"mutability":"mutable","name":"billId","nameLocation":"3222:6:22","nodeType":"VariableDeclaration","scope":7268,"src":"3214:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7250,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3214:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7253,"mutability":"mutable","name":"evaluationTokenId","nameLocation":"3246:17:22","nodeType":"VariableDeclaration","scope":7268,"src":"3238:25:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7252,"name":"uint256","nodeType":"ElementaryTypeName","src":"3238:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7255,"mutability":"mutable","name":"hospital","nameLocation":"3281:8:22","nodeType":"VariableDeclaration","scope":7268,"src":"3273:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7254,"name":"address","nodeType":"ElementaryTypeName","src":"3273:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7257,"mutability":"mutable","name":"patient","nameLocation":"3307:7:22","nodeType":"VariableDeclaration","scope":7268,"src":"3299:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7256,"name":"address","nodeType":"ElementaryTypeName","src":"3299:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7259,"mutability":"mutable","name":"amountUSD","nameLocation":"3332:9:22","nodeType":"VariableDeclaration","scope":7268,"src":"3324:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7258,"name":"uint256","nodeType":"ElementaryTypeName","src":"3324:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7261,"mutability":"mutable","name":"insurancePortion","nameLocation":"3359:16:22","nodeType":"VariableDeclaration","scope":7268,"src":"3351:24:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7260,"name":"uint256","nodeType":"ElementaryTypeName","src":"3351:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7263,"mutability":"mutable","name":"patientPortion","nameLocation":"3428:14:22","nodeType":"VariableDeclaration","scope":7268,"src":"3420:22:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7262,"name":"uint256","nodeType":"ElementaryTypeName","src":"3420:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7265,"mutability":"mutable","name":"isPaid","nameLocation":"3491:6:22","nodeType":"VariableDeclaration","scope":7268,"src":"3486:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7264,"name":"bool","nodeType":"ElementaryTypeName","src":"3486:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7267,"mutability":"mutable","name":"createdAt","nameLocation":"3515:9:22","nodeType":"VariableDeclaration","scope":7268,"src":"3507:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7266,"name":"uint256","nodeType":"ElementaryTypeName","src":"3507:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Bill","nameLocation":"3199:4:22","nodeType":"StructDefinition","scope":8349,"src":"3192:339:22","visibility":"public"},{"constant":false,"functionSelector":"33c63b17","id":7273,"mutability":"mutable","name":"evaluations","nameLocation":"3603:11:22","nodeType":"VariableDeclaration","scope":8349,"src":"3559:55:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_AutismEvaluation_$7228_storage_$","typeString":"mapping(uint256 => struct AutismMedicalSystemSimple.AutismEvaluation)"},"typeName":{"id":7272,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7269,"name":"uint256","nodeType":"ElementaryTypeName","src":"3567:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3559:36:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_AutismEvaluation_$7228_storage_$","typeString":"mapping(uint256 => struct AutismMedicalSystemSimple.AutismEvaluation)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7271,"nodeType":"UserDefinedTypeName","pathNode":{"id":7270,"name":"AutismEvaluation","nameLocations":["3578:16:22"],"nodeType":"IdentifierPath","referencedDeclaration":7228,"src":"3578:16:22"},"referencedDeclaration":7228,"src":"3578:16:22","typeDescriptions":{"typeIdentifier":"t_struct$_AutismEvaluation_$7228_storage_ptr","typeString":"struct AutismMedicalSystemSimple.AutismEvaluation"}}},"visibility":"public"},{"constant":false,"functionSelector":"eda31369","id":7278,"mutability":"mutable","name":"patientDiagnosis","nameLocation":"3663:16:22","nodeType":"VariableDeclaration","scope":8349,"src":"3620:59:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_DiagnosisRecord_$7240_storage_$","typeString":"mapping(address => struct AutismMedicalSystemSimple.DiagnosisRecord)"},"typeName":{"id":7277,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7274,"name":"address","nodeType":"ElementaryTypeName","src":"3628:7:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"3620:35:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_DiagnosisRecord_$7240_storage_$","typeString":"mapping(address => struct AutismMedicalSystemSimple.DiagnosisRecord)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7276,"nodeType":"UserDefinedTypeName","pathNode":{"id":7275,"name":"DiagnosisRecord","nameLocations":["3639:15:22"],"nodeType":"IdentifierPath","referencedDeclaration":7240,"src":"3639:15:22"},"referencedDeclaration":7240,"src":"3639:15:22","typeDescriptions":{"typeIdentifier":"t_struct$_DiagnosisRecord_$7240_storage_ptr","typeString":"struct AutismMedicalSystemSimple.DiagnosisRecord"}}},"visibility":"public"},{"constant":false,"functionSelector":"e3c40e1a","id":7284,"mutability":"mutable","name":"accessHistory","nameLocation":"3727:13:22","nodeType":"VariableDeclaration","scope":8349,"src":"3685:55:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_AccessRecord_$7249_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct AutismMedicalSystemSimple.AccessRecord[])"},"typeName":{"id":7283,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7279,"name":"uint256","nodeType":"ElementaryTypeName","src":"3693:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3685:34:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_AccessRecord_$7249_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct AutismMedicalSystemSimple.AccessRecord[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":7281,"nodeType":"UserDefinedTypeName","pathNode":{"id":7280,"name":"AccessRecord","nameLocations":["3704:12:22"],"nodeType":"IdentifierPath","referencedDeclaration":7249,"src":"3704:12:22"},"referencedDeclaration":7249,"src":"3704:12:22","typeDescriptions":{"typeIdentifier":"t_struct$_AccessRecord_$7249_storage_ptr","typeString":"struct AutismMedicalSystemSimple.AccessRecord"}},"id":7282,"nodeType":"ArrayTypeName","src":"3704:14:22","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AccessRecord_$7249_storage_$dyn_storage_ptr","typeString":"struct AutismMedicalSystemSimple.AccessRecord[]"}}},"visibility":"public"},{"constant":false,"functionSelector":"9e061452","id":7290,"mutability":"mutable","name":"hasPaidAccess","nameLocation":"3798:13:22","nodeType":"VariableDeclaration","scope":8349,"src":"3746:65:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(address => bool))"},"typeName":{"id":7289,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7285,"name":"uint256","nodeType":"ElementaryTypeName","src":"3754:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3746:44:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7288,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7286,"name":"address","nodeType":"ElementaryTypeName","src":"3773:7:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"3765:24:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7287,"name":"bool","nodeType":"ElementaryTypeName","src":"3784:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"public"},{"constant":false,"functionSelector":"fc82c0ef","id":7295,"mutability":"mutable","name":"medicalBills","nameLocation":"3849:12:22","nodeType":"VariableDeclaration","scope":8349,"src":"3817:44:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Bill_$7268_storage_$","typeString":"mapping(bytes32 => struct AutismMedicalSystemSimple.Bill)"},"typeName":{"id":7294,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7291,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3825:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"3817:24:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Bill_$7268_storage_$","typeString":"mapping(bytes32 => struct AutismMedicalSystemSimple.Bill)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7293,"nodeType":"UserDefinedTypeName","pathNode":{"id":7292,"name":"Bill","nameLocations":["3836:4:22"],"nodeType":"IdentifierPath","referencedDeclaration":7268,"src":"3836:4:22"},"referencedDeclaration":7268,"src":"3836:4:22","typeDescriptions":{"typeIdentifier":"t_struct$_Bill_$7268_storage_ptr","typeString":"struct AutismMedicalSystemSimple.Bill"}}},"visibility":"public"},{"constant":false,"functionSelector":"05f047df","id":7300,"mutability":"mutable","name":"patientBills","nameLocation":"3904:12:22","nodeType":"VariableDeclaration","scope":8349,"src":"3867:49:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_bytes32_$dyn_storage_$","typeString":"mapping(address => bytes32[])"},"typeName":{"id":7299,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7296,"name":"address","nodeType":"ElementaryTypeName","src":"3875:7:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"3867:29:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_bytes32_$dyn_storage_$","typeString":"mapping(address => bytes32[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":7297,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3886:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7298,"nodeType":"ArrayTypeName","src":"3886:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"visibility":"public"},{"constant":false,"functionSelector":"edaef905","id":7304,"mutability":"mutable","name":"verifiedInsuranceProviders","nameLocation":"3953:26:22","nodeType":"VariableDeclaration","scope":8349,"src":"3922:57:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bool_$","typeString":"mapping(string => bool)"},"typeName":{"id":7303,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7301,"name":"string","nodeType":"ElementaryTypeName","src":"3930:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"nodeType":"Mapping","src":"3922:23:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bool_$","typeString":"mapping(string => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7302,"name":"bool","nodeType":"ElementaryTypeName","src":"3940:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"functionSelector":"04345c93","id":7306,"mutability":"mutable","name":"totalEvaluations","nameLocation":"4019:16:22","nodeType":"VariableDeclaration","scope":8349,"src":"4004:31:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7305,"name":"uint256","nodeType":"ElementaryTypeName","src":"4004:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"30b5abd7","id":7308,"mutability":"mutable","name":"totalInsurancePayments","nameLocation":"4056:22:22","nodeType":"VariableDeclaration","scope":8349,"src":"4041:37:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7307,"name":"uint256","nodeType":"ElementaryTypeName","src":"4041:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"b8cd16b4","id":7310,"mutability":"mutable","name":"totalDiagnosedPatients","nameLocation":"4099:22:22","nodeType":"VariableDeclaration","scope":8349,"src":"4084:37:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7309,"name":"uint256","nodeType":"ElementaryTypeName","src":"4084:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"anonymous":false,"eventSelector":"931f7af5fd41db155c97c737c3100c1540d9fd948a408a7bd0db82e7a3f90f11","id":7321,"name":"EvaluationUploaded","nameLocation":"4148:18:22","nodeType":"EventDefinition","parameters":{"id":7320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7312,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"4192:7:22","nodeType":"VariableDeclaration","scope":7321,"src":"4176:23:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7311,"name":"uint256","nodeType":"ElementaryTypeName","src":"4176:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7314,"indexed":true,"mutability":"mutable","name":"patient","nameLocation":"4225:7:22","nodeType":"VariableDeclaration","scope":7321,"src":"4209:23:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7313,"name":"address","nodeType":"ElementaryTypeName","src":"4209:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7317,"indexed":false,"mutability":"mutable","name":"evaluationType","nameLocation":"4257:14:22","nodeType":"VariableDeclaration","scope":7321,"src":"4242:29:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_EvaluationType_$7181","typeString":"enum AutismMedicalSystemSimple.EvaluationType"},"typeName":{"id":7316,"nodeType":"UserDefinedTypeName","pathNode":{"id":7315,"name":"EvaluationType","nameLocations":["4242:14:22"],"nodeType":"IdentifierPath","referencedDeclaration":7181,"src":"4242:14:22"},"referencedDeclaration":7181,"src":"4242:14:22","typeDescriptions":{"typeIdentifier":"t_enum$_EvaluationType_$7181","typeString":"enum AutismMedicalSystemSimple.EvaluationType"}},"visibility":"internal"},{"constant":false,"id":7319,"indexed":false,"mutability":"mutable","name":"paidByInsurance","nameLocation":"4286:15:22","nodeType":"VariableDeclaration","scope":7321,"src":"4281:20:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7318,"name":"bool","nodeType":"ElementaryTypeName","src":"4281:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4166:141:22"},"src":"4142:166:22"},{"anonymous":false,"eventSelector":"c2687b4cf2e8fb805e48c095a786345c2953850fb19620e5618cea5412dc227f","id":7331,"name":"InsurancePaymentProcessed","nameLocation":"4320:25:22","nodeType":"EventDefinition","parameters":{"id":7330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7323,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"4371:7:22","nodeType":"VariableDeclaration","scope":7331,"src":"4355:23:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7322,"name":"uint256","nodeType":"ElementaryTypeName","src":"4355:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7325,"indexed":false,"mutability":"mutable","name":"insuranceProvider","nameLocation":"4395:17:22","nodeType":"VariableDeclaration","scope":7331,"src":"4388:24:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7324,"name":"string","nodeType":"ElementaryTypeName","src":"4388:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7327,"indexed":false,"mutability":"mutable","name":"xrplTxHash","nameLocation":"4429:10:22","nodeType":"VariableDeclaration","scope":7331,"src":"4422:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7326,"name":"string","nodeType":"ElementaryTypeName","src":"4422:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7329,"indexed":false,"mutability":"mutable","name":"amountUSD","nameLocation":"4457:9:22","nodeType":"VariableDeclaration","scope":7331,"src":"4449:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7328,"name":"uint256","nodeType":"ElementaryTypeName","src":"4449:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4345:127:22"},"src":"4314:159:22"},{"anonymous":false,"eventSelector":"16d577c4c96cf9d9d1a1ca8421248118615f2dbc5789728c0b6bc7dfbc619424","id":7341,"name":"FileAccessGranted","nameLocation":"4485:17:22","nodeType":"EventDefinition","parameters":{"id":7340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7333,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"4528:7:22","nodeType":"VariableDeclaration","scope":7341,"src":"4512:23:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7332,"name":"uint256","nodeType":"ElementaryTypeName","src":"4512:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7335,"indexed":true,"mutability":"mutable","name":"accessor","nameLocation":"4561:8:22","nodeType":"VariableDeclaration","scope":7341,"src":"4545:24:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7334,"name":"address","nodeType":"ElementaryTypeName","src":"4545:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7337,"indexed":false,"mutability":"mutable","name":"purpose","nameLocation":"4586:7:22","nodeType":"VariableDeclaration","scope":7341,"src":"4579:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7336,"name":"string","nodeType":"ElementaryTypeName","src":"4579:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7339,"indexed":false,"mutability":"mutable","name":"requiresPayment","nameLocation":"4608:15:22","nodeType":"VariableDeclaration","scope":7341,"src":"4603:20:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7338,"name":"bool","nodeType":"ElementaryTypeName","src":"4603:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4502:127:22"},"src":"4479:151:22"},{"anonymous":false,"eventSelector":"32a639b5e81d2a5d0d4621d6d8f19e4dec31f1a08746258aacd388c40caeb66c","id":7353,"name":"BillCreated","nameLocation":"4642:11:22","nodeType":"EventDefinition","parameters":{"id":7352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7343,"indexed":true,"mutability":"mutable","name":"billId","nameLocation":"4679:6:22","nodeType":"VariableDeclaration","scope":7353,"src":"4663:22:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7342,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4663:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7345,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"4711:7:22","nodeType":"VariableDeclaration","scope":7353,"src":"4695:23:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7344,"name":"uint256","nodeType":"ElementaryTypeName","src":"4695:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7347,"indexed":true,"mutability":"mutable","name":"patient","nameLocation":"4744:7:22","nodeType":"VariableDeclaration","scope":7353,"src":"4728:23:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7346,"name":"address","nodeType":"ElementaryTypeName","src":"4728:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7349,"indexed":false,"mutability":"mutable","name":"totalAmount","nameLocation":"4769:11:22","nodeType":"VariableDeclaration","scope":7353,"src":"4761:19:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7348,"name":"uint256","nodeType":"ElementaryTypeName","src":"4761:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7351,"indexed":false,"mutability":"mutable","name":"insurancePortion","nameLocation":"4798:16:22","nodeType":"VariableDeclaration","scope":7353,"src":"4790:24:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7350,"name":"uint256","nodeType":"ElementaryTypeName","src":"4790:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4653:167:22"},"src":"4636:185:22"},{"anonymous":false,"eventSelector":"398865b44291ccf794af9023bfee116248ee709c8c101e69961c2bea10255fc0","id":7362,"name":"DiagnosisUpdated","nameLocation":"4833:16:22","nodeType":"EventDefinition","parameters":{"id":7361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7355,"indexed":true,"mutability":"mutable","name":"patient","nameLocation":"4875:7:22","nodeType":"VariableDeclaration","scope":7362,"src":"4859:23:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7354,"name":"address","nodeType":"ElementaryTypeName","src":"4859:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7358,"indexed":false,"mutability":"mutable","name":"newLevel","nameLocation":"4906:8:22","nodeType":"VariableDeclaration","scope":7362,"src":"4892:22:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_SeverityLevel_$7186","typeString":"enum AutismMedicalSystemSimple.SeverityLevel"},"typeName":{"id":7357,"nodeType":"UserDefinedTypeName","pathNode":{"id":7356,"name":"SeverityLevel","nameLocations":["4892:13:22"],"nodeType":"IdentifierPath","referencedDeclaration":7186,"src":"4892:13:22"},"referencedDeclaration":7186,"src":"4892:13:22","typeDescriptions":{"typeIdentifier":"t_enum$_SeverityLevel_$7186","typeString":"enum AutismMedicalSystemSimple.SeverityLevel"}},"visibility":"internal"},{"constant":false,"id":7360,"indexed":false,"mutability":"mutable","name":"evaluationTokenId","nameLocation":"4932:17:22","nodeType":"VariableDeclaration","scope":7362,"src":"4924:25:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7359,"name":"uint256","nodeType":"ElementaryTypeName","src":"4924:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4849:106:22"},"src":"4827:129:22"},{"body":{"id":7399,"nodeType":"Block","src":"5015:365:22","statements":[{"expression":{"arguments":[{"id":7370,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"5036:18:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":7371,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5056:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5060:6:22","memberName":"sender","nodeType":"MemberAccess","src":"5056:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7369,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"5025:10:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":7373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5025:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7374,"nodeType":"ExpressionStatement","src":"5025:42:22"},{"expression":{"id":7379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7375,"name":"verifiedInsuranceProviders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7304,"src":"5135:26:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bool_$","typeString":"mapping(string memory => bool)"}},"id":7377,"indexExpression":{"hexValue":"426c75652043726f737320426c756520536869656c64","id":7376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5162:24:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3ef0e044cf0495b956381b7cb69e34411257c62f595b2bdb631559bc93281d9","typeString":"literal_string \"Blue Cross Blue Shield\""},"value":"Blue Cross Blue Shield"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5135:52:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":7378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5190:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5135:59:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7380,"nodeType":"ExpressionStatement","src":"5135:59:22"},{"expression":{"id":7385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7381,"name":"verifiedInsuranceProviders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7304,"src":"5204:26:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bool_$","typeString":"mapping(string memory => bool)"}},"id":7383,"indexExpression":{"hexValue":"4165746e61","id":7382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5231:7:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_5e374597cb86bdcccf6178050472ea841ee050a819e5b1be263088bba079a8f5","typeString":"literal_string \"Aetna\""},"value":"Aetna"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5204:35:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":7384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5242:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5204:42:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7386,"nodeType":"ExpressionStatement","src":"5204:42:22"},{"expression":{"id":7391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7387,"name":"verifiedInsuranceProviders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7304,"src":"5256:26:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bool_$","typeString":"mapping(string memory => bool)"}},"id":7389,"indexExpression":{"hexValue":"556e697465644865616c746863617265","id":7388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5283:18:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_85bea0cc7f9421c1cae72cf0c23a9264fa0797de633671b360a6437d100d3088","typeString":"literal_string \"UnitedHealthcare\""},"value":"UnitedHealthcare"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5256:46:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":7390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5305:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5256:53:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7392,"nodeType":"ExpressionStatement","src":"5256:53:22"},{"expression":{"id":7397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7393,"name":"verifiedInsuranceProviders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7304,"src":"5319:26:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bool_$","typeString":"mapping(string memory => bool)"}},"id":7395,"indexExpression":{"hexValue":"5465737420496e737572616e636520436f","id":7394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5346:19:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_37b404871a1bc52626a7bfc67aae83eb244065c4775ecbb2490fbedb9554ea1f","typeString":"literal_string \"Test Insurance Co\""},"value":"Test Insurance Co"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5319:47:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":7396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5369:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5319:54:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7398,"nodeType":"ExpressionStatement","src":"5319:54:22"}]},"id":7400,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"41757469736d204576616c756174696f6e204e4654","id":7365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4983:23:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_04b7a3a45fdd1b094e12c4e3afcc27c530df98a2bace9fd6a531904a82980f5c","typeString":"literal_string \"Autism Evaluation NFT\""},"value":"Autism Evaluation NFT"},{"hexValue":"41454e","id":7366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5008:5:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_7446d2232b92c8f4a5a81a0a31c8bdd2f2aa1a96ac180d83e09d7f14563bfde1","typeString":"literal_string \"AEN\""},"value":"AEN"}],"id":7367,"kind":"baseConstructorSpecifier","modifierName":{"id":7364,"name":"ERC721","nameLocations":["4976:6:22"],"nodeType":"IdentifierPath","referencedDeclaration":1653,"src":"4976:6:22"},"nodeType":"ModifierInvocation","src":"4976:38:22"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":7363,"nodeType":"ParameterList","parameters":[],"src":"4973:2:22"},"returnParameters":{"id":7368,"nodeType":"ParameterList","parameters":[],"src":"5015:0:22"},"scope":8349,"src":"4962:418:22","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7589,"nodeType":"Block","src":"5808:1647:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"expression":{"id":7427,"name":"insurance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7404,"src":"5872:9:22","typeDescriptions":{"typeIdentifier":"t_struct$_InsuranceInfo_$7199_memory_ptr","typeString":"struct AutismMedicalSystemSimple.InsuranceInfo memory"}},"id":7428,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5882:17:22","memberName":"insuranceProvider","nodeType":"MemberAccess","referencedDeclaration":7188,"src":"5872:27:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7426,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5866:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":7425,"name":"bytes","nodeType":"ElementaryTypeName","src":"5866:5:22","typeDescriptions":{}}},"id":7429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5866:34:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":7430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5901:6:22","memberName":"length","nodeType":"MemberAccess","src":"5866:41:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5910:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5866:45:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420696e737572616e6365","id":7433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5913:19:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_40c3d0dcf30225b44b0b86c09c1674ef2c21a8a0007175bc28129d638c6ea066","typeString":"literal_string \"Invalid insurance\""},"value":"Invalid insurance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_40c3d0dcf30225b44b0b86c09c1674ef2c21a8a0007175bc28129d638c6ea066","typeString":"literal_string \"Invalid insurance\""}],"id":7424,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5858:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5858:75:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7435,"nodeType":"ExpressionStatement","src":"5858:75:22"},{"expression":{"arguments":[{"baseExpression":{"id":7437,"name":"verifiedInsuranceProviders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7304,"src":"5951:26:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bool_$","typeString":"mapping(string memory => bool)"}},"id":7440,"indexExpression":{"expression":{"id":7438,"name":"insurance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7404,"src":"5978:9:22","typeDescriptions":{"typeIdentifier":"t_struct$_InsuranceInfo_$7199_memory_ptr","typeString":"struct AutismMedicalSystemSimple.InsuranceInfo memory"}},"id":7439,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5988:17:22","memberName":"insuranceProvider","nodeType":"MemberAccess","referencedDeclaration":7188,"src":"5978:27:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5951:55:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e737572616e6365206e6f74207665726966696564","id":7441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6008:24:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_355c5bda332c1a91556e38a6eb968e2ef9aec2e973fc0f1fbfee677399f5d735","typeString":"literal_string \"Insurance not verified\""},"value":"Insurance not verified"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_355c5bda332c1a91556e38a6eb968e2ef9aec2e973fc0f1fbfee677399f5d735","typeString":"literal_string \"Insurance not verified\""}],"id":7436,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5943:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5943:90:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7443,"nodeType":"ExpressionStatement","src":"5943:90:22"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":7447,"name":"insurancePaymentTxHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7417,"src":"6144:22:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7446,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6138:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":7445,"name":"bytes","nodeType":"ElementaryTypeName","src":"6138:5:22","typeDescriptions":{}}},"id":7448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6138:29:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":7449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6168:6:22","memberName":"length","nodeType":"MemberAccess","src":"6138:36:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6177:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6138:40:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e737572616e6365207061796d656e742068617368207265717569726564","id":7452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6180:33:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_03b56162b0dc1322842d4bb57186452146d3ac0abfc81c1e6d8e70a5bbdeb7d1","typeString":"literal_string \"Insurance payment hash required\""},"value":"Insurance payment hash required"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_03b56162b0dc1322842d4bb57186452146d3ac0abfc81c1e6d8e70a5bbdeb7d1","typeString":"literal_string \"Insurance payment hash required\""}],"id":7444,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6130:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6130:84:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7454,"nodeType":"ExpressionStatement","src":"6130:84:22"},{"expression":{"id":7458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7455,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7422,"src":"6245:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6255:17:22","subExpression":{"id":7456,"name":"_tokenIdCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7172,"src":"6255:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6245:27:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7459,"nodeType":"ExpressionStatement","src":"6245:27:22"},{"expression":{"arguments":[{"expression":{"id":7461,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6292:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6296:6:22","memberName":"sender","nodeType":"MemberAccess","src":"6292:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7463,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7422,"src":"6304:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7460,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[1331,1361],"referencedDeclaration":1331,"src":"6282:9:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":7464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6282:30:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7465,"nodeType":"ExpressionStatement","src":"6282:30:22"},{"assignments":[7468],"declarations":[{"constant":false,"id":7468,"mutability":"mutable","name":"eval","nameLocation":"6381:4:22","nodeType":"VariableDeclaration","scope":7589,"src":"6356:29:22","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AutismEvaluation_$7228_storage_ptr","typeString":"struct AutismMedicalSystemSimple.AutismEvaluation"},"typeName":{"id":7467,"nodeType":"UserDefinedTypeName","pathNode":{"id":7466,"name":"AutismEvaluation","nameLocations":["6356:16:22"],"nodeType":"IdentifierPath","referencedDeclaration":7228,"src":"6356:16:22"},"referencedDeclaration":7228,"src":"6356:16:22","typeDescriptions":{"typeIdentifier":"t_struct$_AutismEvaluation_$7228_storage_ptr","typeString":"struct AutismMedicalSystemSimple.AutismEvaluation"}},"visibility":"internal"}],"id":7472,"initialValue":{"baseExpression":{"id":7469,"name":"evaluations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7273,"src":"6388:11:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_AutismEvaluation_$7228_storage_$","typeString":"mapping(uint256 => struct AutismMedicalSystemSimple.AutismEvaluation storage ref)"}},"id":7471,"indexExpression":{"id":7470,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7422,"src":"6400:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6388:20:22","typeDescriptions":{"typeIdentifier":"t_struct$_AutismEvaluation_$7228_storage","typeString":"struct AutismMedicalSystemSimple.AutismEvaluation storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6356:52:22"},{"expression":{"id":7477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7473,"name":"eval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7468,"src":"6418:4:22","typeDescriptions":{"typeIdentifier":"t_struct$_AutismEvaluation_$7228_storage_ptr","typeString":"struct AutismMedicalSystemSimple.AutismEvaluation storage pointer"}},"id":7475,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6423:7:22","memberName":"tokenId","nodeType":"MemberAccess","referencedDeclaration":7201,"src":"6418:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7476,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7422,"src":"6433:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6418:22:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7478,"nodeType":"ExpressionStatement","src":"6418:22:22"},{"expression":{"id":7484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7479,"name":"eval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7468,"src":"6450:4:22","typeDescriptions":{"typeIdentifier":"t_struct$_AutismEvaluation_$7228_storage_ptr","typeString":"struct AutismMedicalSystemSimple.AutismEvaluation storage pointer"}},"id":7481,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6455:7:22","memberName":"patient","nodeType":"MemberAccess","referencedDeclaration":7203,"src":"6450:12:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":7482,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6465:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6469:6:22","memberName":"sender","nodeType":"MemberAccess","src":"6465:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6450:25:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7485,"nodeType":"ExpressionStatement","src":"6450:25:22"},{"expression":{"id":7490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7486,"name":"eval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7468,"src":"6485:4:22","typeDescriptions":{"typeIdentifier":"t_struct$_AutismEvaluation_$7228_storage_ptr","typeString":"struct AutismMedicalSystemSimple.AutismEvaluation storage pointer"}},"id":7488,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6490:8:22","memberName":"fileHash","nodeType":"MemberAccess","referencedDeclaration":7207,"src":"6485:13:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7489,"name":"fileHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7406,"src":"6501:8:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6485:24:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7491,"nodeType":"ExpressionStatement","src":"6485:24:22"},{"expression":{"id":7496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7492,"name":"eval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7468,"src":"6519:4:22","typeDescriptions":{"typeIdentifier":"t_struct$_AutismEvaluation_$7228_storage_ptr","typeString":"struct AutismMedicalSystemSimple.AutismEvaluation storage pointer"}},"id":7494,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6524:12:22","memberName":"fileLocation","nodeType":"MemberAccess","referencedDeclaration":7209,"src":"6519:17:22","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7495,"name":"fileLocation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7408,"src":"6539:12:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"6519:32:22","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":7497,"nodeType":"ExpressionStatement","src":"6519:32:22"},{"expression":{"id":7502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7498,"name":"eval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7468,"src":"6561:4:22","typeDescriptions":{"typeIdentifier":"t_struct$_AutismEvaluation_$7228_storage_ptr","typeString":"struct AutismMedicalSystemSimple.AutismEvaluation storage pointer"}},"id":7500,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6566:12:22","memberName":"encryptedKey","nodeType":"MemberAccess","referencedDeclaration":7211,"src":"6561:17:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7501,"name":"encryptedKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7410,"src":"6581:12:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6561:32:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7503,"nodeType":"ExpressionStatement","src":"6561:32:22"},{"expression":{"id":7508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7504,"name":"eval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7468,"src":"6603:4:22","typeDescriptions":{"typeIdentifier":"t_struct$_AutismEvaluation_$7228_storage_ptr","typeString":"struct AutismMedicalSystemSimple.AutismEvaluation storage pointer"}},"id":7506,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6608:14:22","memberName":"evaluationType","nodeType":"MemberAccess","referencedDeclaration":7214,"src":"6603:19:22","typeDescriptions":{"typeIdentifier":"t_enum$_EvaluationType_$7181","typeString":"enum AutismMedicalSystemSimple.EvaluationType"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7507,"name":"evaluationType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7413,"src":"6625:14:22","typeDescriptions":{"typeIdentifier":"t_enum$_EvaluationType_$7181","typeString":"enum AutismMedicalSystemSimple.EvaluationType"}},"src":"6603:36:22","typeDescriptions":{"typeIdentifier":"t_enum$_EvaluationType_$7181","typeString":"enum AutismMedicalSystemSimple.EvaluationType"}},"id":7509,"nodeType":"ExpressionStatement","src":"6603:36:22"},{"expression":{"id":7515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7510,"name":"eval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7468,"src":"6649:4:22","typeDescriptions":{"typeIdentifier":"t_struct$_AutismEvaluation_$7228_storage_ptr","typeString":"struct AutismMedicalSystemSimple.AutismEvaluation storage pointer"}},"id":7512,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6654:14:22","memberName":"evaluationDate","nodeType":"MemberAccess","referencedDeclaration":7216,"src":"6649:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":7513,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6671:5:22","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6677:9:22","memberName":"timestamp","nodeType":"MemberAccess","src":"6671:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6649:37:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7516,"nodeType":"ExpressionStatement","src":"6649:37:22"},{"expression":{"id":7522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7517,"name":"eval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7468,"src":"6696:4:22","typeDescriptions":{"typeIdentifier":"t_struct$_AutismEvaluation_$7228_storage_ptr","typeString":"struct AutismMedicalSystemSimple.AutismEvaluation storage pointer"}},"id":7519,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6701:10:22","memberName":"uploadDate","nodeType":"MemberAccess","referencedDeclaration":7218,"src":"6696:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":7520,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6714:5:22","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6720:9:22","memberName":"timestamp","nodeType":"MemberAccess","src":"6714:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6696:33:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7523,"nodeType":"ExpressionStatement","src":"6696:33:22"},{"expression":{"id":7528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7524,"name":"eval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7468,"src":"6739:4:22","typeDescriptions":{"typeIdentifier":"t_struct$_AutismEvaluation_$7228_storage_ptr","typeString":"struct AutismMedicalSystemSimple.AutismEvaluation storage pointer"}},"id":7526,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6744:17:22","memberName":"isPaidByInsurance","nodeType":"MemberAccess","referencedDeclaration":7220,"src":"6739:22:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":7527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6764:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6739:29:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7529,"nodeType":"ExpressionStatement","src":"6739:29:22"},{"expression":{"id":7534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7530,"name":"eval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7468,"src":"6778:4:22","typeDescriptions":{"typeIdentifier":"t_struct$_AutismEvaluation_$7228_storage_ptr","typeString":"struct AutismMedicalSystemSimple.AutismEvaluation storage pointer"}},"id":7532,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6783:18:22","memberName":"insurancePaymentTx","nodeType":"MemberAccess","referencedDeclaration":7222,"src":"6778:23:22","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7533,"name":"insurancePaymentTxHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7417,"src":"6804:22:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"6778:48:22","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":7535,"nodeType":"ExpressionStatement","src":"6778:48:22"},{"expression":{"id":7540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7536,"name":"eval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7468,"src":"6836:4:22","typeDescriptions":{"typeIdentifier":"t_struct$_AutismEvaluation_$7228_storage_ptr","typeString":"struct AutismMedicalSystemSimple.AutismEvaluation storage pointer"}},"id":7538,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6841:17:22","memberName":"evaluationCostUSD","nodeType":"MemberAccess","referencedDeclaration":7224,"src":"6836:22:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7539,"name":"evaluationCostUSD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7415,"src":"6861:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6836:42:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7541,"nodeType":"ExpressionStatement","src":"6836:42:22"},{"expression":{"id":7546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7542,"name":"eval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7468,"src":"6888:4:22","typeDescriptions":{"typeIdentifier":"t_struct$_AutismEvaluation_$7228_storage_ptr","typeString":"struct AutismMedicalSystemSimple.AutismEvaluation storage pointer"}},"id":7544,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6893:9:22","memberName":"insurance","nodeType":"MemberAccess","referencedDeclaration":7227,"src":"6888:14:22","typeDescriptions":{"typeIdentifier":"t_struct$_InsuranceInfo_$7199_storage","typeString":"struct AutismMedicalSystemSimple.InsuranceInfo storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7545,"name":"insurance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7404,"src":"6905:9:22","typeDescriptions":{"typeIdentifier":"t_struct$_InsuranceInfo_$7199_memory_ptr","typeString":"struct AutismMedicalSystemSimple.InsuranceInfo memory"}},"src":"6888:26:22","typeDescriptions":{"typeIdentifier":"t_struct$_InsuranceInfo_$7199_storage","typeString":"struct AutismMedicalSystemSimple.InsuranceInfo storage ref"}},"id":7547,"nodeType":"ExpressionStatement","src":"6888:26:22"},{"expression":{"id":7557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":7548,"name":"hasPaidAccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7290,"src":"6962:13:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(address => bool))"}},"id":7554,"indexExpression":{"id":7549,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7422,"src":"6976:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6962:22:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":7555,"indexExpression":{"arguments":[{"id":7552,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"6993:4:22","typeDescriptions":{"typeIdentifier":"t_contract$_AutismMedicalSystemSimple_$8349","typeString":"contract AutismMedicalSystemSimple"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AutismMedicalSystemSimple_$8349","typeString":"contract AutismMedicalSystemSimple"}],"id":7551,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6985:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7550,"name":"address","nodeType":"ElementaryTypeName","src":"6985:7:22","typeDescriptions":{}}},"id":7553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6985:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6962:37:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":7556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7002:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6962:44:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7558,"nodeType":"ExpressionStatement","src":"6962:44:22"},{"expression":{"arguments":[{"expression":{"id":7560,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7084:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7088:6:22","memberName":"sender","nodeType":"MemberAccess","src":"7084:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7562,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7422,"src":"7096:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7559,"name":"_updatePatientDiagnosis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8157,"src":"7060:23:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":7563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7060:44:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7564,"nodeType":"ExpressionStatement","src":"7060:44:22"},{"expression":{"id":7566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7115:18:22","subExpression":{"id":7565,"name":"totalEvaluations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7306,"src":"7115:16:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7567,"nodeType":"ExpressionStatement","src":"7115:18:22"},{"expression":{"id":7569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7143:24:22","subExpression":{"id":7568,"name":"totalInsurancePayments","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7308,"src":"7143:22:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7570,"nodeType":"ExpressionStatement","src":"7143:24:22"},{"eventCall":{"arguments":[{"id":7572,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7422,"src":"7202:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7573,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7211:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7215:6:22","memberName":"sender","nodeType":"MemberAccess","src":"7211:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7575,"name":"evaluationType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7413,"src":"7223:14:22","typeDescriptions":{"typeIdentifier":"t_enum$_EvaluationType_$7181","typeString":"enum AutismMedicalSystemSimple.EvaluationType"}},{"hexValue":"74727565","id":7576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7239:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_EvaluationType_$7181","typeString":"enum AutismMedicalSystemSimple.EvaluationType"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":7571,"name":"EvaluationUploaded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7321,"src":"7183:18:22","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_enum$_EvaluationType_$7181_$_t_bool_$returns$__$","typeString":"function (uint256,address,enum AutismMedicalSystemSimple.EvaluationType,bool)"}},"id":7577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7183:61:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7578,"nodeType":"EmitStatement","src":"7178:66:22"},{"eventCall":{"arguments":[{"id":7580,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7422,"src":"7298:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7581,"name":"insurance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7404,"src":"7319:9:22","typeDescriptions":{"typeIdentifier":"t_struct$_InsuranceInfo_$7199_memory_ptr","typeString":"struct AutismMedicalSystemSimple.InsuranceInfo memory"}},"id":7582,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7329:17:22","memberName":"insuranceProvider","nodeType":"MemberAccess","referencedDeclaration":7188,"src":"7319:27:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":7583,"name":"insurancePaymentTxHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7417,"src":"7360:22:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":7584,"name":"evaluationCostUSD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7415,"src":"7396:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7579,"name":"InsurancePaymentProcessed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7331,"src":"7259:25:22","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (uint256,string memory,string memory,uint256)"}},"id":7585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7259:164:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7586,"nodeType":"EmitStatement","src":"7254:169:22"},{"expression":{"id":7587,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7422,"src":"7441:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7423,"id":7588,"nodeType":"Return","src":"7434:14:22"}]},"documentation":{"id":7401,"nodeType":"StructuredDocumentation","src":"5386:72:22","text":" @dev FLOW 1: Upload evaluation with insurance payment"},"functionSelector":"c0e8224a","id":7590,"implemented":true,"kind":"function","modifiers":[{"id":7420,"kind":"modifierInvocation","modifierName":{"id":7419,"name":"nonReentrant","nameLocations":["5769:12:22"],"nodeType":"IdentifierPath","referencedDeclaration":2136,"src":"5769:12:22"},"nodeType":"ModifierInvocation","src":"5769:12:22"}],"name":"uploadEvaluationWithInsurance","nameLocation":"5472:29:22","nodeType":"FunctionDefinition","parameters":{"id":7418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7404,"mutability":"mutable","name":"insurance","nameLocation":"5532:9:22","nodeType":"VariableDeclaration","scope":7590,"src":"5511:30:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_InsuranceInfo_$7199_memory_ptr","typeString":"struct AutismMedicalSystemSimple.InsuranceInfo"},"typeName":{"id":7403,"nodeType":"UserDefinedTypeName","pathNode":{"id":7402,"name":"InsuranceInfo","nameLocations":["5511:13:22"],"nodeType":"IdentifierPath","referencedDeclaration":7199,"src":"5511:13:22"},"referencedDeclaration":7199,"src":"5511:13:22","typeDescriptions":{"typeIdentifier":"t_struct$_InsuranceInfo_$7199_storage_ptr","typeString":"struct AutismMedicalSystemSimple.InsuranceInfo"}},"visibility":"internal"},{"constant":false,"id":7406,"mutability":"mutable","name":"fileHash","nameLocation":"5559:8:22","nodeType":"VariableDeclaration","scope":7590,"src":"5551:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7405,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5551:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7408,"mutability":"mutable","name":"fileLocation","nameLocation":"5591:12:22","nodeType":"VariableDeclaration","scope":7590,"src":"5577:26:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7407,"name":"string","nodeType":"ElementaryTypeName","src":"5577:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7410,"mutability":"mutable","name":"encryptedKey","nameLocation":"5621:12:22","nodeType":"VariableDeclaration","scope":7590,"src":"5613:20:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7409,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5613:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7413,"mutability":"mutable","name":"evaluationType","nameLocation":"5658:14:22","nodeType":"VariableDeclaration","scope":7590,"src":"5643:29:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_EvaluationType_$7181","typeString":"enum AutismMedicalSystemSimple.EvaluationType"},"typeName":{"id":7412,"nodeType":"UserDefinedTypeName","pathNode":{"id":7411,"name":"EvaluationType","nameLocations":["5643:14:22"],"nodeType":"IdentifierPath","referencedDeclaration":7181,"src":"5643:14:22"},"referencedDeclaration":7181,"src":"5643:14:22","typeDescriptions":{"typeIdentifier":"t_enum$_EvaluationType_$7181","typeString":"enum AutismMedicalSystemSimple.EvaluationType"}},"visibility":"internal"},{"constant":false,"id":7415,"mutability":"mutable","name":"evaluationCostUSD","nameLocation":"5690:17:22","nodeType":"VariableDeclaration","scope":7590,"src":"5682:25:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7414,"name":"uint256","nodeType":"ElementaryTypeName","src":"5682:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7417,"mutability":"mutable","name":"insurancePaymentTxHash","nameLocation":"5731:22:22","nodeType":"VariableDeclaration","scope":7590,"src":"5717:36:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7416,"name":"string","nodeType":"ElementaryTypeName","src":"5717:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5501:258:22"},"returnParameters":{"id":7423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7422,"mutability":"mutable","name":"tokenId","nameLocation":"5799:7:22","nodeType":"VariableDeclaration","scope":7590,"src":"5791:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7421,"name":"uint256","nodeType":"ElementaryTypeName","src":"5791:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5790:17:22"},"scope":8349,"src":"5463:1992:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7708,"nodeType":"Block","src":"7769:1038:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7608,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7593,"src":"7796:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7607,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[8171],"referencedDeclaration":8171,"src":"7787:8:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":7609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7787:17:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7816:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7611,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7808:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7610,"name":"address","nodeType":"ElementaryTypeName","src":"7808:7:22","typeDescriptions":{}}},"id":7613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7808:10:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7787:31:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e20646f6573206e6f74206578697374","id":7615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7820:22:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726","typeString":"literal_string \"Token does not exist\""},"value":"Token does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726","typeString":"literal_string \"Token does not exist\""}],"id":7606,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7779:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7779:64:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7617,"nodeType":"ExpressionStatement","src":"7779:64:22"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7620,"name":"HOSPITAL_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7165,"src":"7882:13:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":7621,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7897:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7901:6:22","memberName":"sender","nodeType":"MemberAccess","src":"7897:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7619,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"7874:7:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":7623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7874:34:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":7625,"name":"INSURANCE_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7160,"src":"7932:14:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":7626,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7948:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7952:6:22","memberName":"sender","nodeType":"MemberAccess","src":"7948:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7624,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"7924:7:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":7628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7924:35:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7874:85:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420617574686f72697a6564","id":7630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7973:16:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36","typeString":"literal_string \"Not authorized\""},"value":"Not authorized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36","typeString":"literal_string \"Not authorized\""}],"id":7618,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7853:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7853:146:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7632,"nodeType":"ExpressionStatement","src":"7853:146:22"},{"assignments":[7635],"declarations":[{"constant":false,"id":7635,"mutability":"mutable","name":"eval","nameLocation":"8035:4:22","nodeType":"VariableDeclaration","scope":7708,"src":"8010:29:22","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AutismEvaluation_$7228_storage_ptr","typeString":"struct AutismMedicalSystemSimple.AutismEvaluation"},"typeName":{"id":7634,"nodeType":"UserDefinedTypeName","pathNode":{"id":7633,"name":"AutismEvaluation","nameLocations":["8010:16:22"],"nodeType":"IdentifierPath","referencedDeclaration":7228,"src":"8010:16:22"},"referencedDeclaration":7228,"src":"8010:16:22","typeDescriptions":{"typeIdentifier":"t_struct$_AutismEvaluation_$7228_storage_ptr","typeString":"struct AutismMedicalSystemSimple.AutismEvaluation"}},"visibility":"internal"}],"id":7639,"initialValue":{"baseExpression":{"id":7636,"name":"evaluations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7273,"src":"8042:11:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_AutismEvaluation_$7228_storage_$","typeString":"mapping(uint256 => struct AutismMedicalSystemSimple.AutismEvaluation storage ref)"}},"id":7638,"indexExpression":{"id":7637,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7593,"src":"8054:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8042:20:22","typeDescriptions":{"typeIdentifier":"t_struct$_AutismEvaluation_$7228_storage","typeString":"struct AutismMedicalSystemSimple.AutismEvaluation storage ref"}},"nodeType":"VariableDeclarationStatement","src":"8010:52:22"},{"assignments":[7641],"declarations":[{"constant":false,"id":7641,"mutability":"mutable","name":"alreadyPaid","nameLocation":"8145:11:22","nodeType":"VariableDeclaration","scope":7708,"src":"8140:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7640,"name":"bool","nodeType":"ElementaryTypeName","src":"8140:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":7651,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7642,"name":"eval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7635,"src":"8159:4:22","typeDescriptions":{"typeIdentifier":"t_struct$_AutismEvaluation_$7228_storage_ptr","typeString":"struct AutismMedicalSystemSimple.AutismEvaluation storage pointer"}},"id":7643,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8164:17:22","memberName":"isPaidByInsurance","nodeType":"MemberAccess","referencedDeclaration":7220,"src":"8159:22:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"baseExpression":{"baseExpression":{"id":7644,"name":"hasPaidAccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7290,"src":"8185:13:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(address => bool))"}},"id":7646,"indexExpression":{"id":7645,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7593,"src":"8199:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8185:22:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":7649,"indexExpression":{"expression":{"id":7647,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8208:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8212:6:22","memberName":"sender","nodeType":"MemberAccess","src":"8208:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8185:34:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8159:60:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"8140:79:22"},{"condition":{"id":7653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8234:12:22","subExpression":{"id":7652,"name":"alreadyPaid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7641,"src":"8235:11:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7664,"nodeType":"IfStatement","src":"8230:99:22","trueBody":{"id":7663,"nodeType":"Block","src":"8248:81:22","statements":[{"expression":{"id":7656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7654,"name":"requiresPayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7604,"src":"8262:15:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":7655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8280:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"8262:22:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7657,"nodeType":"ExpressionStatement","src":"8262:22:22"},{"expression":{"components":[{"hexValue":"","id":7658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8306:2:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},{"hexValue":"30","id":7659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8310:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"74727565","id":7660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8313:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"id":7661,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"8305:13:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_$_t_rational_0_by_1_$_t_bool_$","typeString":"tuple(literal_string \"\",int_const 0,bool)"}},"functionReturnParameters":7605,"id":7662,"nodeType":"Return","src":"8298:20:22"}]}},{"expression":{"id":7672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":7665,"name":"hasPaidAccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7290,"src":"8363:13:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(address => bool))"}},"id":7669,"indexExpression":{"id":7666,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7593,"src":"8377:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8363:22:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":7670,"indexExpression":{"expression":{"id":7667,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8386:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8390:6:22","memberName":"sender","nodeType":"MemberAccess","src":"8386:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8363:34:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":7671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8400:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"8363:41:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7673,"nodeType":"ExpressionStatement","src":"8363:41:22"},{"assignments":[7676],"declarations":[{"constant":false,"id":7676,"mutability":"mutable","name":"record","nameLocation":"8457:6:22","nodeType":"VariableDeclaration","scope":7708,"src":"8437:26:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_AccessRecord_$7249_memory_ptr","typeString":"struct AutismMedicalSystemSimple.AccessRecord"},"typeName":{"id":7675,"nodeType":"UserDefinedTypeName","pathNode":{"id":7674,"name":"AccessRecord","nameLocations":["8437:12:22"],"nodeType":"IdentifierPath","referencedDeclaration":7249,"src":"8437:12:22"},"referencedDeclaration":7249,"src":"8437:12:22","typeDescriptions":{"typeIdentifier":"t_struct$_AccessRecord_$7249_storage_ptr","typeString":"struct AutismMedicalSystemSimple.AccessRecord"}},"visibility":"internal"}],"id":7685,"initialValue":{"arguments":[{"expression":{"id":7678,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8503:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8507:6:22","memberName":"sender","nodeType":"MemberAccess","src":"8503:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":7680,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"8539:5:22","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8545:9:22","memberName":"timestamp","nodeType":"MemberAccess","src":"8539:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7682,"name":"purpose","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7595,"src":"8577:7:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"74727565","id":7683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8606:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":7677,"name":"AccessRecord","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7249,"src":"8466:12:22","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_AccessRecord_$7249_storage_ptr_$","typeString":"type(struct AutismMedicalSystemSimple.AccessRecord storage pointer)"}},"id":7684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["8493:8:22","8527:10:22","8568:7:22","8598:6:22"],"names":["accessor","accessTime","purpose","isPaid"],"nodeType":"FunctionCall","src":"8466:155:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AccessRecord_$7249_memory_ptr","typeString":"struct AutismMedicalSystemSimple.AccessRecord memory"}},"nodeType":"VariableDeclarationStatement","src":"8437:184:22"},{"expression":{"arguments":[{"id":7690,"name":"record","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7676,"src":"8660:6:22","typeDescriptions":{"typeIdentifier":"t_struct$_AccessRecord_$7249_memory_ptr","typeString":"struct AutismMedicalSystemSimple.AccessRecord memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_AccessRecord_$7249_memory_ptr","typeString":"struct AutismMedicalSystemSimple.AccessRecord memory"}],"expression":{"baseExpression":{"id":7686,"name":"accessHistory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7284,"src":"8632:13:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_AccessRecord_$7249_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct AutismMedicalSystemSimple.AccessRecord storage ref[] storage ref)"}},"id":7688,"indexExpression":{"id":7687,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7593,"src":"8646:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8632:22:22","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AccessRecord_$7249_storage_$dyn_storage","typeString":"struct AutismMedicalSystemSimple.AccessRecord storage ref[] storage ref"}},"id":7689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8655:4:22","memberName":"push","nodeType":"MemberAccess","src":"8632:27:22","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_AccessRecord_$7249_storage_$dyn_storage_ptr_$_t_struct$_AccessRecord_$7249_storage_$returns$__$attached_to$_t_array$_t_struct$_AccessRecord_$7249_storage_$dyn_storage_ptr_$","typeString":"function (struct AutismMedicalSystemSimple.AccessRecord storage ref[] storage pointer,struct AutismMedicalSystemSimple.AccessRecord storage ref)"}},"id":7691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8632:35:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7692,"nodeType":"ExpressionStatement","src":"8632:35:22"},{"eventCall":{"arguments":[{"id":7694,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7593,"src":"8701:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7695,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8710:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8714:6:22","memberName":"sender","nodeType":"MemberAccess","src":"8710:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7697,"name":"purpose","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7595,"src":"8722:7:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"66616c7365","id":7698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8731:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":7693,"name":"FileAccessGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7341,"src":"8683:17:22","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_string_memory_ptr_$_t_bool_$returns$__$","typeString":"function (uint256,address,string memory,bool)"}},"id":7699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8683:54:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7700,"nodeType":"EmitStatement","src":"8678:59:22"},{"expression":{"components":[{"expression":{"id":7701,"name":"eval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7635,"src":"8756:4:22","typeDescriptions":{"typeIdentifier":"t_struct$_AutismEvaluation_$7228_storage_ptr","typeString":"struct AutismMedicalSystemSimple.AutismEvaluation storage pointer"}},"id":7702,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8761:12:22","memberName":"fileLocation","nodeType":"MemberAccess","referencedDeclaration":7209,"src":"8756:17:22","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"expression":{"id":7703,"name":"eval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7635,"src":"8775:4:22","typeDescriptions":{"typeIdentifier":"t_struct$_AutismEvaluation_$7228_storage_ptr","typeString":"struct AutismMedicalSystemSimple.AutismEvaluation storage pointer"}},"id":7704,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8780:12:22","memberName":"encryptedKey","nodeType":"MemberAccess","referencedDeclaration":7211,"src":"8775:17:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"hexValue":"66616c7365","id":7705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8794:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"id":7706,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8755:45:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_string_storage_$_t_bytes32_$_t_bool_$","typeString":"tuple(string storage ref,bytes32,bool)"}},"functionReturnParameters":7605,"id":7707,"nodeType":"Return","src":"8748:52:22"}]},"documentation":{"id":7591,"nodeType":"StructuredDocumentation","src":"7461:78:22","text":" @dev FLOW 2: Hospital/Insurance can check and download file"},"functionSelector":"4d6cac7a","id":7709,"implemented":true,"kind":"function","modifiers":[{"id":7598,"kind":"modifierInvocation","modifierName":{"id":7597,"name":"nonReentrant","nameLocations":["7645:12:22"],"nodeType":"IdentifierPath","referencedDeclaration":2136,"src":"7645:12:22"},"nodeType":"ModifierInvocation","src":"7645:12:22"}],"name":"accessEvaluationFile","nameLocation":"7553:20:22","nodeType":"FunctionDefinition","parameters":{"id":7596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7593,"mutability":"mutable","name":"tokenId","nameLocation":"7591:7:22","nodeType":"VariableDeclaration","scope":7709,"src":"7583:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7592,"name":"uint256","nodeType":"ElementaryTypeName","src":"7583:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7595,"mutability":"mutable","name":"purpose","nameLocation":"7622:7:22","nodeType":"VariableDeclaration","scope":7709,"src":"7608:21:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7594,"name":"string","nodeType":"ElementaryTypeName","src":"7608:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7573:62:22"},"returnParameters":{"id":7605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7600,"mutability":"mutable","name":"fileLocation","nameLocation":"7690:12:22","nodeType":"VariableDeclaration","scope":7709,"src":"7676:26:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7599,"name":"string","nodeType":"ElementaryTypeName","src":"7676:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7602,"mutability":"mutable","name":"encryptedKey","nameLocation":"7720:12:22","nodeType":"VariableDeclaration","scope":7709,"src":"7712:20:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7601,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7712:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7604,"mutability":"mutable","name":"requiresPayment","nameLocation":"7747:15:22","nodeType":"VariableDeclaration","scope":7709,"src":"7742:20:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7603,"name":"bool","nodeType":"ElementaryTypeName","src":"7742:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7666:102:22"},"scope":8349,"src":"7544:1263:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7863,"nodeType":"Block","src":"9094:1315:22","statements":[{"expression":{"arguments":[{"arguments":[{"id":7725,"name":"HOSPITAL_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7165,"src":"9120:13:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":7726,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9135:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9139:6:22","memberName":"sender","nodeType":"MemberAccess","src":"9135:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7724,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"9112:7:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":7728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9112:34:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f74206120686f73706974616c","id":7729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9148:16:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_e83b59861188c031e6b87a8f8944f0aa55c1a0f7b324e5d8f61b545253a4c3f7","typeString":"literal_string \"Not a hospital\""},"value":"Not a hospital"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e83b59861188c031e6b87a8f8944f0aa55c1a0f7b324e5d8f61b545253a4c3f7","typeString":"literal_string \"Not a hospital\""}],"id":7723,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9104:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9104:61:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7731,"nodeType":"ExpressionStatement","src":"9104:61:22"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7734,"name":"evaluationTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7712,"src":"9192:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7733,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[8171],"referencedDeclaration":8171,"src":"9183:8:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":7735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9183:27:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9222:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7737,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9214:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7736,"name":"address","nodeType":"ElementaryTypeName","src":"9214:7:22","typeDescriptions":{}}},"id":7739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9214:10:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9183:41:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206576616c756174696f6e","id":7741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9226:20:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_11dcf9f8e62255365880033e6504fcf152d79d40c6f737eb6eba5912f9a92da3","typeString":"literal_string \"Invalid evaluation\""},"value":"Invalid evaluation"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_11dcf9f8e62255365880033e6504fcf152d79d40c6f737eb6eba5912f9a92da3","typeString":"literal_string \"Invalid evaluation\""}],"id":7732,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9175:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9175:72:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7743,"nodeType":"ExpressionStatement","src":"9175:72:22"},{"assignments":[7746],"declarations":[{"constant":false,"id":7746,"mutability":"mutable","name":"eval","nameLocation":"9283:4:22","nodeType":"VariableDeclaration","scope":7863,"src":"9258:29:22","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AutismEvaluation_$7228_storage_ptr","typeString":"struct AutismMedicalSystemSimple.AutismEvaluation"},"typeName":{"id":7745,"nodeType":"UserDefinedTypeName","pathNode":{"id":7744,"name":"AutismEvaluation","nameLocations":["9258:16:22"],"nodeType":"IdentifierPath","referencedDeclaration":7228,"src":"9258:16:22"},"referencedDeclaration":7228,"src":"9258:16:22","typeDescriptions":{"typeIdentifier":"t_struct$_AutismEvaluation_$7228_storage_ptr","typeString":"struct AutismMedicalSystemSimple.AutismEvaluation"}},"visibility":"internal"}],"id":7750,"initialValue":{"baseExpression":{"id":7747,"name":"evaluations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7273,"src":"9290:11:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_AutismEvaluation_$7228_storage_$","typeString":"mapping(uint256 => struct AutismMedicalSystemSimple.AutismEvaluation storage ref)"}},"id":7749,"indexExpression":{"id":7748,"name":"evaluationTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7712,"src":"9302:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9290:30:22","typeDescriptions":{"typeIdentifier":"t_struct$_AutismEvaluation_$7228_storage","typeString":"struct AutismMedicalSystemSimple.AutismEvaluation storage ref"}},"nodeType":"VariableDeclarationStatement","src":"9258:62:22"},{"assignments":[7752],"declarations":[{"constant":false,"id":7752,"mutability":"mutable","name":"coverageAmount","nameLocation":"9392:14:22","nodeType":"VariableDeclaration","scope":7863,"src":"9384:22:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7751,"name":"uint256","nodeType":"ElementaryTypeName","src":"9384:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7761,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7753,"name":"serviceAmountUSD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7714,"src":"9410:16:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"expression":{"id":7754,"name":"eval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7746,"src":"9429:4:22","typeDescriptions":{"typeIdentifier":"t_struct$_AutismEvaluation_$7228_storage_ptr","typeString":"struct AutismMedicalSystemSimple.AutismEvaluation storage pointer"}},"id":7755,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9434:9:22","memberName":"insurance","nodeType":"MemberAccess","referencedDeclaration":7227,"src":"9429:14:22","typeDescriptions":{"typeIdentifier":"t_struct$_InsuranceInfo_$7199_storage","typeString":"struct AutismMedicalSystemSimple.InsuranceInfo storage ref"}},"id":7756,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9444:18:22","memberName":"coveragePercentage","nodeType":"MemberAccess","referencedDeclaration":7196,"src":"9429:33:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9410:52:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7758,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9409:54:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":7759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9466:3:22","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"9409:60:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9384:85:22"},{"assignments":[7763],"declarations":[{"constant":false,"id":7763,"mutability":"mutable","name":"insurancePays","nameLocation":"9487:13:22","nodeType":"VariableDeclaration","scope":7863,"src":"9479:21:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7762,"name":"uint256","nodeType":"ElementaryTypeName","src":"9479:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7765,"initialValue":{"id":7764,"name":"coverageAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7752,"src":"9503:14:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9479:38:22"},{"assignments":[7767],"declarations":[{"constant":false,"id":7767,"mutability":"mutable","name":"patientPays","nameLocation":"9535:11:22","nodeType":"VariableDeclaration","scope":7863,"src":"9527:19:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7766,"name":"uint256","nodeType":"ElementaryTypeName","src":"9527:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7771,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7768,"name":"serviceAmountUSD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7714,"src":"9549:16:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":7769,"name":"coverageAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7752,"src":"9568:14:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9549:33:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9527:55:22"},{"expression":{"id":7784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7772,"name":"billId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7721,"src":"9616:6:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":7776,"name":"evaluationTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7712,"src":"9665:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7777,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9696:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9700:6:22","memberName":"sender","nodeType":"MemberAccess","src":"9696:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7779,"name":"serviceAmountUSD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7714,"src":"9720:16:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7780,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"9750:5:22","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9756:9:22","memberName":"timestamp","nodeType":"MemberAccess","src":"9750:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7774,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"9635:3:22","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7775,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9639:12:22","memberName":"encodePacked","nodeType":"MemberAccess","src":"9635:16:22","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9635:140:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7773,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"9625:9:22","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9625:151:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"9616:160:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7785,"nodeType":"ExpressionStatement","src":"9616:160:22"},{"assignments":[7788],"declarations":[{"constant":false,"id":7788,"mutability":"mutable","name":"bill","nameLocation":"9800:4:22","nodeType":"VariableDeclaration","scope":7863,"src":"9787:17:22","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bill_$7268_storage_ptr","typeString":"struct AutismMedicalSystemSimple.Bill"},"typeName":{"id":7787,"nodeType":"UserDefinedTypeName","pathNode":{"id":7786,"name":"Bill","nameLocations":["9787:4:22"],"nodeType":"IdentifierPath","referencedDeclaration":7268,"src":"9787:4:22"},"referencedDeclaration":7268,"src":"9787:4:22","typeDescriptions":{"typeIdentifier":"t_struct$_Bill_$7268_storage_ptr","typeString":"struct AutismMedicalSystemSimple.Bill"}},"visibility":"internal"}],"id":7792,"initialValue":{"baseExpression":{"id":7789,"name":"medicalBills","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7295,"src":"9807:12:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Bill_$7268_storage_$","typeString":"mapping(bytes32 => struct AutismMedicalSystemSimple.Bill storage ref)"}},"id":7791,"indexExpression":{"id":7790,"name":"billId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7721,"src":"9820:6:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9807:20:22","typeDescriptions":{"typeIdentifier":"t_struct$_Bill_$7268_storage","typeString":"struct AutismMedicalSystemSimple.Bill storage ref"}},"nodeType":"VariableDeclarationStatement","src":"9787:40:22"},{"expression":{"id":7797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7793,"name":"bill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7788,"src":"9837:4:22","typeDescriptions":{"typeIdentifier":"t_struct$_Bill_$7268_storage_ptr","typeString":"struct AutismMedicalSystemSimple.Bill storage pointer"}},"id":7795,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9842:6:22","memberName":"billId","nodeType":"MemberAccess","referencedDeclaration":7251,"src":"9837:11:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7796,"name":"billId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7721,"src":"9851:6:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"9837:20:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7798,"nodeType":"ExpressionStatement","src":"9837:20:22"},{"expression":{"id":7803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7799,"name":"bill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7788,"src":"9867:4:22","typeDescriptions":{"typeIdentifier":"t_struct$_Bill_$7268_storage_ptr","typeString":"struct AutismMedicalSystemSimple.Bill storage pointer"}},"id":7801,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9872:17:22","memberName":"evaluationTokenId","nodeType":"MemberAccess","referencedDeclaration":7253,"src":"9867:22:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7802,"name":"evaluationTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7712,"src":"9892:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9867:42:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7804,"nodeType":"ExpressionStatement","src":"9867:42:22"},{"expression":{"id":7810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7805,"name":"bill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7788,"src":"9919:4:22","typeDescriptions":{"typeIdentifier":"t_struct$_Bill_$7268_storage_ptr","typeString":"struct AutismMedicalSystemSimple.Bill storage pointer"}},"id":7807,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9924:8:22","memberName":"hospital","nodeType":"MemberAccess","referencedDeclaration":7255,"src":"9919:13:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":7808,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9935:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9939:6:22","memberName":"sender","nodeType":"MemberAccess","src":"9935:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9919:26:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7811,"nodeType":"ExpressionStatement","src":"9919:26:22"},{"expression":{"id":7817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7812,"name":"bill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7788,"src":"9955:4:22","typeDescriptions":{"typeIdentifier":"t_struct$_Bill_$7268_storage_ptr","typeString":"struct AutismMedicalSystemSimple.Bill storage pointer"}},"id":7814,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9960:7:22","memberName":"patient","nodeType":"MemberAccess","referencedDeclaration":7257,"src":"9955:12:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":7815,"name":"eval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7746,"src":"9970:4:22","typeDescriptions":{"typeIdentifier":"t_struct$_AutismEvaluation_$7228_storage_ptr","typeString":"struct AutismMedicalSystemSimple.AutismEvaluation storage pointer"}},"id":7816,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9975:7:22","memberName":"patient","nodeType":"MemberAccess","referencedDeclaration":7203,"src":"9970:12:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9955:27:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7818,"nodeType":"ExpressionStatement","src":"9955:27:22"},{"expression":{"id":7823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7819,"name":"bill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7788,"src":"9992:4:22","typeDescriptions":{"typeIdentifier":"t_struct$_Bill_$7268_storage_ptr","typeString":"struct AutismMedicalSystemSimple.Bill storage pointer"}},"id":7821,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9997:9:22","memberName":"amountUSD","nodeType":"MemberAccess","referencedDeclaration":7259,"src":"9992:14:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7822,"name":"serviceAmountUSD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7714,"src":"10009:16:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9992:33:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7824,"nodeType":"ExpressionStatement","src":"9992:33:22"},{"expression":{"id":7829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7825,"name":"bill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7788,"src":"10035:4:22","typeDescriptions":{"typeIdentifier":"t_struct$_Bill_$7268_storage_ptr","typeString":"struct AutismMedicalSystemSimple.Bill storage pointer"}},"id":7827,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"10040:16:22","memberName":"insurancePortion","nodeType":"MemberAccess","referencedDeclaration":7261,"src":"10035:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7828,"name":"insurancePays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7763,"src":"10059:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10035:37:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7830,"nodeType":"ExpressionStatement","src":"10035:37:22"},{"expression":{"id":7835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7831,"name":"bill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7788,"src":"10082:4:22","typeDescriptions":{"typeIdentifier":"t_struct$_Bill_$7268_storage_ptr","typeString":"struct AutismMedicalSystemSimple.Bill storage pointer"}},"id":7833,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"10087:14:22","memberName":"patientPortion","nodeType":"MemberAccess","referencedDeclaration":7263,"src":"10082:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7834,"name":"patientPays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7767,"src":"10104:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10082:33:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7836,"nodeType":"ExpressionStatement","src":"10082:33:22"},{"expression":{"id":7842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7837,"name":"bill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7788,"src":"10125:4:22","typeDescriptions":{"typeIdentifier":"t_struct$_Bill_$7268_storage_ptr","typeString":"struct AutismMedicalSystemSimple.Bill storage pointer"}},"id":7839,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"10130:9:22","memberName":"createdAt","nodeType":"MemberAccess","referencedDeclaration":7267,"src":"10125:14:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":7840,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"10142:5:22","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10148:9:22","memberName":"timestamp","nodeType":"MemberAccess","src":"10142:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10125:32:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7843,"nodeType":"ExpressionStatement","src":"10125:32:22"},{"expression":{"arguments":[{"id":7849,"name":"billId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7721,"src":"10200:6:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"baseExpression":{"id":7844,"name":"patientBills","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7300,"src":"10168:12:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_bytes32_$dyn_storage_$","typeString":"mapping(address => bytes32[] storage ref)"}},"id":7847,"indexExpression":{"expression":{"id":7845,"name":"eval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7746,"src":"10181:4:22","typeDescriptions":{"typeIdentifier":"t_struct$_AutismEvaluation_$7228_storage_ptr","typeString":"struct AutismMedicalSystemSimple.AutismEvaluation storage pointer"}},"id":7846,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10186:7:22","memberName":"patient","nodeType":"MemberAccess","referencedDeclaration":7203,"src":"10181:12:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10168:26:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":7848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10195:4:22","memberName":"push","nodeType":"MemberAccess","src":"10168:31:22","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer,bytes32)"}},"id":7850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10168:39:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7851,"nodeType":"ExpressionStatement","src":"10168:39:22"},{"eventCall":{"arguments":[{"id":7853,"name":"billId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7721,"src":"10248:6:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7854,"name":"evaluationTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7712,"src":"10268:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7855,"name":"eval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7746,"src":"10299:4:22","typeDescriptions":{"typeIdentifier":"t_struct$_AutismEvaluation_$7228_storage_ptr","typeString":"struct AutismMedicalSystemSimple.AutismEvaluation storage pointer"}},"id":7856,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10304:7:22","memberName":"patient","nodeType":"MemberAccess","referencedDeclaration":7203,"src":"10299:12:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7857,"name":"serviceAmountUSD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7714,"src":"10325:16:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7858,"name":"insurancePays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7763,"src":"10355:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7852,"name":"BillCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7353,"src":"10223:11:22","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (bytes32,uint256,address,uint256,uint256)"}},"id":7859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10223:155:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7860,"nodeType":"EmitStatement","src":"10218:160:22"},{"expression":{"id":7861,"name":"billId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7721,"src":"10396:6:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":7722,"id":7862,"nodeType":"Return","src":"10389:13:22"}]},"documentation":{"id":7710,"nodeType":"StructuredDocumentation","src":"8813:75:22","text":" @dev FLOW 3: Hospital can bill patient through insurance"},"functionSelector":"cc8d4701","id":7864,"implemented":true,"kind":"function","modifiers":[{"id":7719,"kind":"modifierInvocation","modifierName":{"id":7718,"name":"nonReentrant","nameLocations":["9056:12:22"],"nodeType":"IdentifierPath","referencedDeclaration":2136,"src":"9056:12:22"},"nodeType":"ModifierInvocation","src":"9056:12:22"}],"name":"billPatientThroughInsurance","nameLocation":"8902:27:22","nodeType":"FunctionDefinition","parameters":{"id":7717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7712,"mutability":"mutable","name":"evaluationTokenId","nameLocation":"8947:17:22","nodeType":"VariableDeclaration","scope":7864,"src":"8939:25:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7711,"name":"uint256","nodeType":"ElementaryTypeName","src":"8939:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7714,"mutability":"mutable","name":"serviceAmountUSD","nameLocation":"8982:16:22","nodeType":"VariableDeclaration","scope":7864,"src":"8974:24:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7713,"name":"uint256","nodeType":"ElementaryTypeName","src":"8974:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7716,"mutability":"mutable","name":"serviceDescription","nameLocation":"9022:18:22","nodeType":"VariableDeclaration","scope":7864,"src":"9008:32:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7715,"name":"string","nodeType":"ElementaryTypeName","src":"9008:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8929:117:22"},"returnParameters":{"id":7722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7721,"mutability":"mutable","name":"billId","nameLocation":"9086:6:22","nodeType":"VariableDeclaration","scope":7864,"src":"9078:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7720,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9078:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9077:16:22"},"scope":8349,"src":"8893:1516:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7951,"nodeType":"Block","src":"10659:719:22","statements":[{"expression":{"arguments":[{"arguments":[{"id":7879,"name":"EVALUATOR_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7170,"src":"10685:14:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":7880,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10701:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10705:6:22","memberName":"sender","nodeType":"MemberAccess","src":"10701:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7878,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"10677:7:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":7882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10677:35:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420617574686f72697a6564206576616c7561746f72","id":7883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10714:26:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_4bb721fc4b02cf8658bfd3d22381f6c262d3cb2daac601973c0b81f302ac41b2","typeString":"literal_string \"Not authorized evaluator\""},"value":"Not authorized evaluator"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4bb721fc4b02cf8658bfd3d22381f6c262d3cb2daac601973c0b81f302ac41b2","typeString":"literal_string \"Not authorized evaluator\""}],"id":7877,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10669:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10669:72:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7885,"nodeType":"ExpressionStatement","src":"10669:72:22"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7888,"name":"evaluationTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7869,"src":"10768:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7887,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[8171],"referencedDeclaration":8171,"src":"10759:8:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":7889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10759:27:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10798:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7891,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10790:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7890,"name":"address","nodeType":"ElementaryTypeName","src":"10790:7:22","typeDescriptions":{}}},"id":7893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10790:10:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10759:41:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206576616c756174696f6e","id":7895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10802:20:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_11dcf9f8e62255365880033e6504fcf152d79d40c6f737eb6eba5912f9a92da3","typeString":"literal_string \"Invalid evaluation\""},"value":"Invalid evaluation"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_11dcf9f8e62255365880033e6504fcf152d79d40c6f737eb6eba5912f9a92da3","typeString":"literal_string \"Invalid evaluation\""}],"id":7886,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10751:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10751:72:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7897,"nodeType":"ExpressionStatement","src":"10751:72:22"},{"assignments":[7900],"declarations":[{"constant":false,"id":7900,"mutability":"mutable","name":"diagnosis","nameLocation":"10858:9:22","nodeType":"VariableDeclaration","scope":7951,"src":"10834:33:22","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_DiagnosisRecord_$7240_storage_ptr","typeString":"struct AutismMedicalSystemSimple.DiagnosisRecord"},"typeName":{"id":7899,"nodeType":"UserDefinedTypeName","pathNode":{"id":7898,"name":"DiagnosisRecord","nameLocations":["10834:15:22"],"nodeType":"IdentifierPath","referencedDeclaration":7240,"src":"10834:15:22"},"referencedDeclaration":7240,"src":"10834:15:22","typeDescriptions":{"typeIdentifier":"t_struct$_DiagnosisRecord_$7240_storage_ptr","typeString":"struct AutismMedicalSystemSimple.DiagnosisRecord"}},"visibility":"internal"}],"id":7904,"initialValue":{"baseExpression":{"id":7901,"name":"patientDiagnosis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7278,"src":"10870:16:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_DiagnosisRecord_$7240_storage_$","typeString":"mapping(address => struct AutismMedicalSystemSimple.DiagnosisRecord storage ref)"}},"id":7903,"indexExpression":{"id":7902,"name":"patient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7867,"src":"10887:7:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10870:25:22","typeDescriptions":{"typeIdentifier":"t_struct$_DiagnosisRecord_$7240_storage","typeString":"struct AutismMedicalSystemSimple.DiagnosisRecord storage ref"}},"nodeType":"VariableDeclarationStatement","src":"10834:61:22"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7905,"name":"diagnosis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7900,"src":"10937:9:22","typeDescriptions":{"typeIdentifier":"t_struct$_DiagnosisRecord_$7240_storage_ptr","typeString":"struct AutismMedicalSystemSimple.DiagnosisRecord storage pointer"}},"id":7906,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10947:18:22","memberName":"firstDiagnosisDate","nodeType":"MemberAccess","referencedDeclaration":7233,"src":"10937:28:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10969:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10937:33:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7920,"nodeType":"IfStatement","src":"10933:148:22","trueBody":{"id":7919,"nodeType":"Block","src":"10972:109:22","statements":[{"expression":{"id":7914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7909,"name":"diagnosis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7900,"src":"10986:9:22","typeDescriptions":{"typeIdentifier":"t_struct$_DiagnosisRecord_$7240_storage_ptr","typeString":"struct AutismMedicalSystemSimple.DiagnosisRecord storage pointer"}},"id":7911,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"10996:18:22","memberName":"firstDiagnosisDate","nodeType":"MemberAccess","referencedDeclaration":7233,"src":"10986:28:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":7912,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"11017:5:22","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11023:9:22","memberName":"timestamp","nodeType":"MemberAccess","src":"11017:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10986:46:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7915,"nodeType":"ExpressionStatement","src":"10986:46:22"},{"expression":{"id":7917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"11046:24:22","subExpression":{"id":7916,"name":"totalDiagnosedPatients","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7310,"src":"11046:22:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7918,"nodeType":"ExpressionStatement","src":"11046:24:22"}]}},{"expression":{"id":7925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7921,"name":"diagnosis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7900,"src":"11123:9:22","typeDescriptions":{"typeIdentifier":"t_struct$_DiagnosisRecord_$7240_storage_ptr","typeString":"struct AutismMedicalSystemSimple.DiagnosisRecord storage pointer"}},"id":7923,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11133:12:22","memberName":"currentLevel","nodeType":"MemberAccess","referencedDeclaration":7231,"src":"11123:22:22","typeDescriptions":{"typeIdentifier":"t_enum$_SeverityLevel_$7186","typeString":"enum AutismMedicalSystemSimple.SeverityLevel"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7924,"name":"newLevel","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7872,"src":"11148:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_SeverityLevel_$7186","typeString":"enum AutismMedicalSystemSimple.SeverityLevel"}},"src":"11123:33:22","typeDescriptions":{"typeIdentifier":"t_enum$_SeverityLevel_$7186","typeString":"enum AutismMedicalSystemSimple.SeverityLevel"}},"id":7926,"nodeType":"ExpressionStatement","src":"11123:33:22"},{"expression":{"id":7932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7927,"name":"diagnosis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7900,"src":"11166:9:22","typeDescriptions":{"typeIdentifier":"t_struct$_DiagnosisRecord_$7240_storage_ptr","typeString":"struct AutismMedicalSystemSimple.DiagnosisRecord storage pointer"}},"id":7929,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11176:14:22","memberName":"lastUpdateDate","nodeType":"MemberAccess","referencedDeclaration":7235,"src":"11166:24:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":7930,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"11193:5:22","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11199:9:22","memberName":"timestamp","nodeType":"MemberAccess","src":"11193:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11166:42:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7933,"nodeType":"ExpressionStatement","src":"11166:42:22"},{"expression":{"id":7938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7934,"name":"diagnosis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7900,"src":"11218:9:22","typeDescriptions":{"typeIdentifier":"t_struct$_DiagnosisRecord_$7240_storage_ptr","typeString":"struct AutismMedicalSystemSimple.DiagnosisRecord storage pointer"}},"id":7936,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11228:16:22","memberName":"primaryDiagnosis","nodeType":"MemberAccess","referencedDeclaration":7237,"src":"11218:26:22","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7937,"name":"primaryDiagnosis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7874,"src":"11247:16:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"11218:45:22","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":7939,"nodeType":"ExpressionStatement","src":"11218:45:22"},{"expression":{"id":7943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"11273:28:22","subExpression":{"expression":{"id":7940,"name":"diagnosis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7900,"src":"11273:9:22","typeDescriptions":{"typeIdentifier":"t_struct$_DiagnosisRecord_$7240_storage_ptr","typeString":"struct AutismMedicalSystemSimple.DiagnosisRecord storage pointer"}},"id":7942,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11283:16:22","memberName":"totalEvaluations","nodeType":"MemberAccess","referencedDeclaration":7239,"src":"11273:26:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7944,"nodeType":"ExpressionStatement","src":"11273:28:22"},{"eventCall":{"arguments":[{"id":7946,"name":"patient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7867,"src":"11334:7:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7947,"name":"newLevel","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7872,"src":"11343:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_SeverityLevel_$7186","typeString":"enum AutismMedicalSystemSimple.SeverityLevel"}},{"id":7948,"name":"evaluationTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7869,"src":"11353:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_SeverityLevel_$7186","typeString":"enum AutismMedicalSystemSimple.SeverityLevel"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7945,"name":"DiagnosisUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7362,"src":"11317:16:22","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_enum$_SeverityLevel_$7186_$_t_uint256_$returns$__$","typeString":"function (address,enum AutismMedicalSystemSimple.SeverityLevel,uint256)"}},"id":7949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11317:54:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7950,"nodeType":"EmitStatement","src":"11312:59:22"}]},"documentation":{"id":7865,"nodeType":"StructuredDocumentation","src":"10415:67:22","text":" @dev FLOW 4: Track diagnosis history for patient"},"functionSelector":"4668bf10","id":7952,"implemented":true,"kind":"function","modifiers":[],"name":"updateDiagnosis","nameLocation":"10496:15:22","nodeType":"FunctionDefinition","parameters":{"id":7875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7867,"mutability":"mutable","name":"patient","nameLocation":"10529:7:22","nodeType":"VariableDeclaration","scope":7952,"src":"10521:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7866,"name":"address","nodeType":"ElementaryTypeName","src":"10521:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7869,"mutability":"mutable","name":"evaluationTokenId","nameLocation":"10554:17:22","nodeType":"VariableDeclaration","scope":7952,"src":"10546:25:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7868,"name":"uint256","nodeType":"ElementaryTypeName","src":"10546:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7872,"mutability":"mutable","name":"newLevel","nameLocation":"10595:8:22","nodeType":"VariableDeclaration","scope":7952,"src":"10581:22:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_SeverityLevel_$7186","typeString":"enum AutismMedicalSystemSimple.SeverityLevel"},"typeName":{"id":7871,"nodeType":"UserDefinedTypeName","pathNode":{"id":7870,"name":"SeverityLevel","nameLocations":["10581:13:22"],"nodeType":"IdentifierPath","referencedDeclaration":7186,"src":"10581:13:22"},"referencedDeclaration":7186,"src":"10581:13:22","typeDescriptions":{"typeIdentifier":"t_enum$_SeverityLevel_$7186","typeString":"enum AutismMedicalSystemSimple.SeverityLevel"}},"visibility":"internal"},{"constant":false,"id":7874,"mutability":"mutable","name":"primaryDiagnosis","nameLocation":"10627:16:22","nodeType":"VariableDeclaration","scope":7952,"src":"10613:30:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7873,"name":"string","nodeType":"ElementaryTypeName","src":"10613:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10511:138:22"},"returnParameters":{"id":7876,"nodeType":"ParameterList","parameters":[],"src":"10659:0:22"},"scope":8349,"src":"10487:891:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7988,"nodeType":"Block","src":"11688:301:22","statements":[{"assignments":[7971],"declarations":[{"constant":false,"id":7971,"mutability":"mutable","name":"diagnosis","nameLocation":"11722:9:22","nodeType":"VariableDeclaration","scope":7988,"src":"11698:33:22","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_DiagnosisRecord_$7240_storage_ptr","typeString":"struct AutismMedicalSystemSimple.DiagnosisRecord"},"typeName":{"id":7970,"nodeType":"UserDefinedTypeName","pathNode":{"id":7969,"name":"DiagnosisRecord","nameLocations":["11698:15:22"],"nodeType":"IdentifierPath","referencedDeclaration":7240,"src":"11698:15:22"},"referencedDeclaration":7240,"src":"11698:15:22","typeDescriptions":{"typeIdentifier":"t_struct$_DiagnosisRecord_$7240_storage_ptr","typeString":"struct AutismMedicalSystemSimple.DiagnosisRecord"}},"visibility":"internal"}],"id":7975,"initialValue":{"baseExpression":{"id":7972,"name":"patientDiagnosis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7278,"src":"11734:16:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_DiagnosisRecord_$7240_storage_$","typeString":"mapping(address => struct AutismMedicalSystemSimple.DiagnosisRecord storage ref)"}},"id":7974,"indexExpression":{"id":7973,"name":"patient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7955,"src":"11751:7:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11734:25:22","typeDescriptions":{"typeIdentifier":"t_struct$_DiagnosisRecord_$7240_storage","typeString":"struct AutismMedicalSystemSimple.DiagnosisRecord storage ref"}},"nodeType":"VariableDeclarationStatement","src":"11698:61:22"},{"expression":{"components":[{"expression":{"id":7976,"name":"diagnosis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7971,"src":"11790:9:22","typeDescriptions":{"typeIdentifier":"t_struct$_DiagnosisRecord_$7240_storage_ptr","typeString":"struct AutismMedicalSystemSimple.DiagnosisRecord storage pointer"}},"id":7977,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11800:12:22","memberName":"currentLevel","nodeType":"MemberAccess","referencedDeclaration":7231,"src":"11790:22:22","typeDescriptions":{"typeIdentifier":"t_enum$_SeverityLevel_$7186","typeString":"enum AutismMedicalSystemSimple.SeverityLevel"}},{"expression":{"id":7978,"name":"diagnosis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7971,"src":"11826:9:22","typeDescriptions":{"typeIdentifier":"t_struct$_DiagnosisRecord_$7240_storage_ptr","typeString":"struct AutismMedicalSystemSimple.DiagnosisRecord storage pointer"}},"id":7979,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11836:18:22","memberName":"firstDiagnosisDate","nodeType":"MemberAccess","referencedDeclaration":7233,"src":"11826:28:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7980,"name":"diagnosis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7971,"src":"11868:9:22","typeDescriptions":{"typeIdentifier":"t_struct$_DiagnosisRecord_$7240_storage_ptr","typeString":"struct AutismMedicalSystemSimple.DiagnosisRecord storage pointer"}},"id":7981,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11878:14:22","memberName":"lastUpdateDate","nodeType":"MemberAccess","referencedDeclaration":7235,"src":"11868:24:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7982,"name":"diagnosis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7971,"src":"11906:9:22","typeDescriptions":{"typeIdentifier":"t_struct$_DiagnosisRecord_$7240_storage_ptr","typeString":"struct AutismMedicalSystemSimple.DiagnosisRecord storage pointer"}},"id":7983,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11916:16:22","memberName":"primaryDiagnosis","nodeType":"MemberAccess","referencedDeclaration":7237,"src":"11906:26:22","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"expression":{"id":7984,"name":"diagnosis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7971,"src":"11946:9:22","typeDescriptions":{"typeIdentifier":"t_struct$_DiagnosisRecord_$7240_storage_ptr","typeString":"struct AutismMedicalSystemSimple.DiagnosisRecord storage pointer"}},"id":7985,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11956:16:22","memberName":"totalEvaluations","nodeType":"MemberAccess","referencedDeclaration":7239,"src":"11946:26:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7986,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11776:206:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_enum$_SeverityLevel_$7186_$_t_uint256_$_t_uint256_$_t_string_storage_$_t_uint256_$","typeString":"tuple(enum AutismMedicalSystemSimple.SeverityLevel,uint256,uint256,string storage ref,uint256)"}},"functionReturnParameters":7968,"id":7987,"nodeType":"Return","src":"11769:213:22"}]},"documentation":{"id":7953,"nodeType":"StructuredDocumentation","src":"11384:52:22","text":" @dev Get patient diagnosis record"},"functionSelector":"8577fee7","id":7989,"implemented":true,"kind":"function","modifiers":[],"name":"getPatientDiagnosis","nameLocation":"11450:19:22","nodeType":"FunctionDefinition","parameters":{"id":7956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7955,"mutability":"mutable","name":"patient","nameLocation":"11478:7:22","nodeType":"VariableDeclaration","scope":7989,"src":"11470:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7954,"name":"address","nodeType":"ElementaryTypeName","src":"11470:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11469:17:22"},"returnParameters":{"id":7968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7959,"mutability":"mutable","name":"currentLevel","nameLocation":"11533:12:22","nodeType":"VariableDeclaration","scope":7989,"src":"11519:26:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_SeverityLevel_$7186","typeString":"enum AutismMedicalSystemSimple.SeverityLevel"},"typeName":{"id":7958,"nodeType":"UserDefinedTypeName","pathNode":{"id":7957,"name":"SeverityLevel","nameLocations":["11519:13:22"],"nodeType":"IdentifierPath","referencedDeclaration":7186,"src":"11519:13:22"},"referencedDeclaration":7186,"src":"11519:13:22","typeDescriptions":{"typeIdentifier":"t_enum$_SeverityLevel_$7186","typeString":"enum AutismMedicalSystemSimple.SeverityLevel"}},"visibility":"internal"},{"constant":false,"id":7961,"mutability":"mutable","name":"firstDiagnosisDate","nameLocation":"11563:18:22","nodeType":"VariableDeclaration","scope":7989,"src":"11555:26:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7960,"name":"uint256","nodeType":"ElementaryTypeName","src":"11555:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7963,"mutability":"mutable","name":"lastUpdateDate","nameLocation":"11599:14:22","nodeType":"VariableDeclaration","scope":7989,"src":"11591:22:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7962,"name":"uint256","nodeType":"ElementaryTypeName","src":"11591:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7965,"mutability":"mutable","name":"primaryDiagnosis","nameLocation":"11637:16:22","nodeType":"VariableDeclaration","scope":7989,"src":"11623:30:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7964,"name":"string","nodeType":"ElementaryTypeName","src":"11623:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7967,"mutability":"mutable","name":"totalEvals","nameLocation":"11671:10:22","nodeType":"VariableDeclaration","scope":7989,"src":"11663:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7966,"name":"uint256","nodeType":"ElementaryTypeName","src":"11663:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11509:178:22"},"scope":8349,"src":"11441:548:22","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":8038,"nodeType":"Block","src":"12284:345:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":8008,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7992,"src":"12311:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8007,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[8171],"referencedDeclaration":8171,"src":"12302:8:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":8009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12302:17:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":8012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12331:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8011,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12323:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8010,"name":"address","nodeType":"ElementaryTypeName","src":"12323:7:22","typeDescriptions":{}}},"id":8013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12323:10:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12302:31:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e20646f6573206e6f74206578697374","id":8015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12335:22:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726","typeString":"literal_string \"Token does not exist\""},"value":"Token does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726","typeString":"literal_string \"Token does not exist\""}],"id":8006,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12294:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12294:64:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8017,"nodeType":"ExpressionStatement","src":"12294:64:22"},{"assignments":[8020],"declarations":[{"constant":false,"id":8020,"mutability":"mutable","name":"eval","nameLocation":"12393:4:22","nodeType":"VariableDeclaration","scope":8038,"src":"12368:29:22","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AutismEvaluation_$7228_storage_ptr","typeString":"struct AutismMedicalSystemSimple.AutismEvaluation"},"typeName":{"id":8019,"nodeType":"UserDefinedTypeName","pathNode":{"id":8018,"name":"AutismEvaluation","nameLocations":["12368:16:22"],"nodeType":"IdentifierPath","referencedDeclaration":7228,"src":"12368:16:22"},"referencedDeclaration":7228,"src":"12368:16:22","typeDescriptions":{"typeIdentifier":"t_struct$_AutismEvaluation_$7228_storage_ptr","typeString":"struct AutismMedicalSystemSimple.AutismEvaluation"}},"visibility":"internal"}],"id":8024,"initialValue":{"baseExpression":{"id":8021,"name":"evaluations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7273,"src":"12400:11:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_AutismEvaluation_$7228_storage_$","typeString":"mapping(uint256 => struct AutismMedicalSystemSimple.AutismEvaluation storage ref)"}},"id":8023,"indexExpression":{"id":8022,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7992,"src":"12412:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12400:20:22","typeDescriptions":{"typeIdentifier":"t_struct$_AutismEvaluation_$7228_storage","typeString":"struct AutismMedicalSystemSimple.AutismEvaluation storage ref"}},"nodeType":"VariableDeclarationStatement","src":"12368:52:22"},{"expression":{"components":[{"expression":{"id":8025,"name":"eval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8020,"src":"12452:4:22","typeDescriptions":{"typeIdentifier":"t_struct$_AutismEvaluation_$7228_storage_ptr","typeString":"struct AutismMedicalSystemSimple.AutismEvaluation storage pointer"}},"id":8026,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12457:7:22","memberName":"patient","nodeType":"MemberAccess","referencedDeclaration":7203,"src":"12452:12:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":8027,"name":"eval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8020,"src":"12478:4:22","typeDescriptions":{"typeIdentifier":"t_struct$_AutismEvaluation_$7228_storage_ptr","typeString":"struct AutismMedicalSystemSimple.AutismEvaluation storage pointer"}},"id":8028,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12483:14:22","memberName":"evaluationType","nodeType":"MemberAccess","referencedDeclaration":7214,"src":"12478:19:22","typeDescriptions":{"typeIdentifier":"t_enum$_EvaluationType_$7181","typeString":"enum AutismMedicalSystemSimple.EvaluationType"}},{"expression":{"id":8029,"name":"eval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8020,"src":"12511:4:22","typeDescriptions":{"typeIdentifier":"t_struct$_AutismEvaluation_$7228_storage_ptr","typeString":"struct AutismMedicalSystemSimple.AutismEvaluation storage pointer"}},"id":8030,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12516:14:22","memberName":"evaluationDate","nodeType":"MemberAccess","referencedDeclaration":7216,"src":"12511:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":8031,"name":"eval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8020,"src":"12544:4:22","typeDescriptions":{"typeIdentifier":"t_struct$_AutismEvaluation_$7228_storage_ptr","typeString":"struct AutismMedicalSystemSimple.AutismEvaluation storage pointer"}},"id":8032,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12549:17:22","memberName":"isPaidByInsurance","nodeType":"MemberAccess","referencedDeclaration":7220,"src":"12544:22:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"expression":{"id":8033,"name":"eval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8020,"src":"12580:4:22","typeDescriptions":{"typeIdentifier":"t_struct$_AutismEvaluation_$7228_storage_ptr","typeString":"struct AutismMedicalSystemSimple.AutismEvaluation storage pointer"}},"id":8034,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12585:9:22","memberName":"insurance","nodeType":"MemberAccess","referencedDeclaration":7227,"src":"12580:14:22","typeDescriptions":{"typeIdentifier":"t_struct$_InsuranceInfo_$7199_storage","typeString":"struct AutismMedicalSystemSimple.InsuranceInfo storage ref"}},"id":8035,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12595:17:22","memberName":"insuranceProvider","nodeType":"MemberAccess","referencedDeclaration":7188,"src":"12580:32:22","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"id":8036,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12438:184:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_EvaluationType_$7181_$_t_uint256_$_t_bool_$_t_string_storage_$","typeString":"tuple(address,enum AutismMedicalSystemSimple.EvaluationType,uint256,bool,string storage ref)"}},"functionReturnParameters":8005,"id":8037,"nodeType":"Return","src":"12431:191:22"}]},"documentation":{"id":7990,"nodeType":"StructuredDocumentation","src":"11995:46:22","text":" @dev Get evaluation details"},"functionSelector":"c23d4c85","id":8039,"implemented":true,"kind":"function","modifiers":[],"name":"getEvaluation","nameLocation":"12055:13:22","nodeType":"FunctionDefinition","parameters":{"id":7993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7992,"mutability":"mutable","name":"tokenId","nameLocation":"12077:7:22","nodeType":"VariableDeclaration","scope":8039,"src":"12069:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7991,"name":"uint256","nodeType":"ElementaryTypeName","src":"12069:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12068:17:22"},"returnParameters":{"id":8005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7995,"mutability":"mutable","name":"patient","nameLocation":"12126:7:22","nodeType":"VariableDeclaration","scope":8039,"src":"12118:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7994,"name":"address","nodeType":"ElementaryTypeName","src":"12118:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7998,"mutability":"mutable","name":"evaluationType","nameLocation":"12158:14:22","nodeType":"VariableDeclaration","scope":8039,"src":"12143:29:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_EvaluationType_$7181","typeString":"enum AutismMedicalSystemSimple.EvaluationType"},"typeName":{"id":7997,"nodeType":"UserDefinedTypeName","pathNode":{"id":7996,"name":"EvaluationType","nameLocations":["12143:14:22"],"nodeType":"IdentifierPath","referencedDeclaration":7181,"src":"12143:14:22"},"referencedDeclaration":7181,"src":"12143:14:22","typeDescriptions":{"typeIdentifier":"t_enum$_EvaluationType_$7181","typeString":"enum AutismMedicalSystemSimple.EvaluationType"}},"visibility":"internal"},{"constant":false,"id":8000,"mutability":"mutable","name":"evaluationDate","nameLocation":"12190:14:22","nodeType":"VariableDeclaration","scope":8039,"src":"12182:22:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7999,"name":"uint256","nodeType":"ElementaryTypeName","src":"12182:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8002,"mutability":"mutable","name":"isPaidByInsurance","nameLocation":"12219:17:22","nodeType":"VariableDeclaration","scope":8039,"src":"12214:22:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8001,"name":"bool","nodeType":"ElementaryTypeName","src":"12214:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8004,"mutability":"mutable","name":"insuranceProvider","nameLocation":"12260:17:22","nodeType":"VariableDeclaration","scope":8039,"src":"12246:31:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8003,"name":"string","nodeType":"ElementaryTypeName","src":"12246:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"12108:175:22"},"scope":8349,"src":"12046:583:22","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":8053,"nodeType":"Block","src":"12789:46:22","statements":[{"expression":{"baseExpression":{"id":8049,"name":"accessHistory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7284,"src":"12806:13:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_AccessRecord_$7249_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct AutismMedicalSystemSimple.AccessRecord storage ref[] storage ref)"}},"id":8051,"indexExpression":{"id":8050,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8042,"src":"12820:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12806:22:22","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AccessRecord_$7249_storage_$dyn_storage","typeString":"struct AutismMedicalSystemSimple.AccessRecord storage ref[] storage ref"}},"functionReturnParameters":8048,"id":8052,"nodeType":"Return","src":"12799:29:22"}]},"documentation":{"id":8040,"nodeType":"StructuredDocumentation","src":"12635:60:22","text":" @dev Get access history for an evaluation"},"functionSelector":"f2cec6ee","id":8054,"implemented":true,"kind":"function","modifiers":[],"name":"getAccessHistory","nameLocation":"12709:16:22","nodeType":"FunctionDefinition","parameters":{"id":8043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8042,"mutability":"mutable","name":"tokenId","nameLocation":"12734:7:22","nodeType":"VariableDeclaration","scope":8054,"src":"12726:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8041,"name":"uint256","nodeType":"ElementaryTypeName","src":"12726:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12725:17:22"},"returnParameters":{"id":8048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8047,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8054,"src":"12766:21:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AccessRecord_$7249_memory_ptr_$dyn_memory_ptr","typeString":"struct AutismMedicalSystemSimple.AccessRecord[]"},"typeName":{"baseType":{"id":8045,"nodeType":"UserDefinedTypeName","pathNode":{"id":8044,"name":"AccessRecord","nameLocations":["12766:12:22"],"nodeType":"IdentifierPath","referencedDeclaration":7249,"src":"12766:12:22"},"referencedDeclaration":7249,"src":"12766:12:22","typeDescriptions":{"typeIdentifier":"t_struct$_AccessRecord_$7249_storage_ptr","typeString":"struct AutismMedicalSystemSimple.AccessRecord"}},"id":8046,"nodeType":"ArrayTypeName","src":"12766:14:22","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AccessRecord_$7249_storage_$dyn_storage_ptr","typeString":"struct AutismMedicalSystemSimple.AccessRecord[]"}},"visibility":"internal"}],"src":"12765:23:22"},"scope":8349,"src":"12700:135:22","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":8067,"nodeType":"Block","src":"12980:45:22","statements":[{"expression":{"baseExpression":{"id":8063,"name":"patientBills","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7300,"src":"12997:12:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_bytes32_$dyn_storage_$","typeString":"mapping(address => bytes32[] storage ref)"}},"id":8065,"indexExpression":{"id":8064,"name":"patient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8057,"src":"13010:7:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12997:21:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"functionReturnParameters":8062,"id":8066,"nodeType":"Return","src":"12990:28:22"}]},"documentation":{"id":8055,"nodeType":"StructuredDocumentation","src":"12841:51:22","text":" @dev Get patient's medical bills"},"functionSelector":"f41b30f3","id":8068,"implemented":true,"kind":"function","modifiers":[],"name":"getPatientBills","nameLocation":"12906:15:22","nodeType":"FunctionDefinition","parameters":{"id":8058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8057,"mutability":"mutable","name":"patient","nameLocation":"12930:7:22","nodeType":"VariableDeclaration","scope":8068,"src":"12922:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8056,"name":"address","nodeType":"ElementaryTypeName","src":"12922:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12921:17:22"},"returnParameters":{"id":8062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8061,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8068,"src":"12962:16:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":8059,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12962:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":8060,"nodeType":"ArrayTypeName","src":"12962:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"12961:18:22"},"scope":8349,"src":"12897:128:22","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":8116,"nodeType":"Block","src":"13160:283:22","statements":[{"assignments":[8078],"declarations":[{"constant":false,"id":8078,"mutability":"mutable","name":"bill","nameLocation":"13183:4:22","nodeType":"VariableDeclaration","scope":8116,"src":"13170:17:22","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bill_$7268_storage_ptr","typeString":"struct AutismMedicalSystemSimple.Bill"},"typeName":{"id":8077,"nodeType":"UserDefinedTypeName","pathNode":{"id":8076,"name":"Bill","nameLocations":["13170:4:22"],"nodeType":"IdentifierPath","referencedDeclaration":7268,"src":"13170:4:22"},"referencedDeclaration":7268,"src":"13170:4:22","typeDescriptions":{"typeIdentifier":"t_struct$_Bill_$7268_storage_ptr","typeString":"struct AutismMedicalSystemSimple.Bill"}},"visibility":"internal"}],"id":8082,"initialValue":{"baseExpression":{"id":8079,"name":"medicalBills","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7295,"src":"13190:12:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Bill_$7268_storage_$","typeString":"mapping(bytes32 => struct AutismMedicalSystemSimple.Bill storage ref)"}},"id":8081,"indexExpression":{"id":8080,"name":"billId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8071,"src":"13203:6:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13190:20:22","typeDescriptions":{"typeIdentifier":"t_struct$_Bill_$7268_storage","typeString":"struct AutismMedicalSystemSimple.Bill storage ref"}},"nodeType":"VariableDeclarationStatement","src":"13170:40:22"},{"expression":{"arguments":[{"id":8086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"13228:12:22","subExpression":{"expression":{"id":8084,"name":"bill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8078,"src":"13229:4:22","typeDescriptions":{"typeIdentifier":"t_struct$_Bill_$7268_storage_ptr","typeString":"struct AutismMedicalSystemSimple.Bill storage pointer"}},"id":8085,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13234:6:22","memberName":"isPaid","nodeType":"MemberAccess","referencedDeclaration":7265,"src":"13229:11:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"42696c6c20616c72656164792070616964","id":8087,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13242:19:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_9127feae84f50ba061700d6b70693255825cf5ddee8cf59a413005d2a7921be9","typeString":"literal_string \"Bill already paid\""},"value":"Bill already paid"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9127feae84f50ba061700d6b70693255825cf5ddee8cf59a413005d2a7921be9","typeString":"literal_string \"Bill already paid\""}],"id":8083,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13220:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13220:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8089,"nodeType":"ExpressionStatement","src":"13220:42:22"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8091,"name":"bill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8078,"src":"13280:4:22","typeDescriptions":{"typeIdentifier":"t_struct$_Bill_$7268_storage_ptr","typeString":"struct AutismMedicalSystemSimple.Bill storage pointer"}},"id":8092,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13285:7:22","memberName":"patient","nodeType":"MemberAccess","referencedDeclaration":7257,"src":"13280:12:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":8093,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13296:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13300:6:22","memberName":"sender","nodeType":"MemberAccess","src":"13296:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13280:26:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f742062696c6c206f776e6572","id":8096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13308:16:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_a371d34425552149dc4398b18c7181ef004ff4c04ea4c0e426ebd6fe25cdc6e4","typeString":"literal_string \"Not bill owner\""},"value":"Not bill owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a371d34425552149dc4398b18c7181ef004ff4c04ea4c0e426ebd6fe25cdc6e4","typeString":"literal_string \"Not bill owner\""}],"id":8090,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13272:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13272:53:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8098,"nodeType":"ExpressionStatement","src":"13272:53:22"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":8102,"name":"xrplPaymentTx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8073,"src":"13349:13:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":8101,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13343:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":8100,"name":"bytes","nodeType":"ElementaryTypeName","src":"13343:5:22","typeDescriptions":{}}},"id":8103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13343:20:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":8104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13364:6:22","memberName":"length","nodeType":"MemberAccess","src":"13343:27:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13373:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13343:31:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061796d656e74207472616e73616374696f6e207265717569726564","id":8107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13376:30:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_4f9c535a088ec5ff4e3375c9b3be360868c365461262557c1dbba5c0c3f2c097","typeString":"literal_string \"Payment transaction required\""},"value":"Payment transaction required"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4f9c535a088ec5ff4e3375c9b3be360868c365461262557c1dbba5c0c3f2c097","typeString":"literal_string \"Payment transaction required\""}],"id":8099,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13335:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13335:72:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8109,"nodeType":"ExpressionStatement","src":"13335:72:22"},{"expression":{"id":8114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8110,"name":"bill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8078,"src":"13418:4:22","typeDescriptions":{"typeIdentifier":"t_struct$_Bill_$7268_storage_ptr","typeString":"struct AutismMedicalSystemSimple.Bill storage pointer"}},"id":8112,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"13423:6:22","memberName":"isPaid","nodeType":"MemberAccess","referencedDeclaration":7265,"src":"13418:11:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":8113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13432:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"13418:18:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8115,"nodeType":"ExpressionStatement","src":"13418:18:22"}]},"documentation":{"id":8069,"nodeType":"StructuredDocumentation","src":"13031:53:22","text":" @dev Pay medical bill (simplified)"},"functionSelector":"a8c6faa5","id":8117,"implemented":true,"kind":"function","modifiers":[],"name":"payBill","nameLocation":"13098:7:22","nodeType":"FunctionDefinition","parameters":{"id":8074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8071,"mutability":"mutable","name":"billId","nameLocation":"13114:6:22","nodeType":"VariableDeclaration","scope":8117,"src":"13106:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8070,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13106:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":8073,"mutability":"mutable","name":"xrplPaymentTx","nameLocation":"13136:13:22","nodeType":"VariableDeclaration","scope":8117,"src":"13122:27:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8072,"name":"string","nodeType":"ElementaryTypeName","src":"13122:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13105:45:22"},"returnParameters":{"id":8075,"nodeType":"ParameterList","parameters":[],"src":"13160:0:22"},"scope":8349,"src":"13089:354:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8156,"nodeType":"Block","src":"13552:289:22","statements":[{"assignments":[8126],"declarations":[{"constant":false,"id":8126,"mutability":"mutable","name":"diagnosis","nameLocation":"13586:9:22","nodeType":"VariableDeclaration","scope":8156,"src":"13562:33:22","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_DiagnosisRecord_$7240_storage_ptr","typeString":"struct AutismMedicalSystemSimple.DiagnosisRecord"},"typeName":{"id":8125,"nodeType":"UserDefinedTypeName","pathNode":{"id":8124,"name":"DiagnosisRecord","nameLocations":["13562:15:22"],"nodeType":"IdentifierPath","referencedDeclaration":7240,"src":"13562:15:22"},"referencedDeclaration":7240,"src":"13562:15:22","typeDescriptions":{"typeIdentifier":"t_struct$_DiagnosisRecord_$7240_storage_ptr","typeString":"struct AutismMedicalSystemSimple.DiagnosisRecord"}},"visibility":"internal"}],"id":8130,"initialValue":{"baseExpression":{"id":8127,"name":"patientDiagnosis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7278,"src":"13598:16:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_DiagnosisRecord_$7240_storage_$","typeString":"mapping(address => struct AutismMedicalSystemSimple.DiagnosisRecord storage ref)"}},"id":8129,"indexExpression":{"id":8128,"name":"patient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8119,"src":"13615:7:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13598:25:22","typeDescriptions":{"typeIdentifier":"t_struct$_DiagnosisRecord_$7240_storage","typeString":"struct AutismMedicalSystemSimple.DiagnosisRecord storage ref"}},"nodeType":"VariableDeclarationStatement","src":"13562:61:22"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8131,"name":"diagnosis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8126,"src":"13638:9:22","typeDescriptions":{"typeIdentifier":"t_struct$_DiagnosisRecord_$7240_storage_ptr","typeString":"struct AutismMedicalSystemSimple.DiagnosisRecord storage pointer"}},"id":8132,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13648:18:22","memberName":"firstDiagnosisDate","nodeType":"MemberAccess","referencedDeclaration":7233,"src":"13638:28:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13670:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13638:33:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8143,"nodeType":"IfStatement","src":"13634:110:22","trueBody":{"id":8142,"nodeType":"Block","src":"13673:71:22","statements":[{"expression":{"id":8140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8135,"name":"diagnosis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8126,"src":"13687:9:22","typeDescriptions":{"typeIdentifier":"t_struct$_DiagnosisRecord_$7240_storage_ptr","typeString":"struct AutismMedicalSystemSimple.DiagnosisRecord storage pointer"}},"id":8137,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"13697:18:22","memberName":"firstDiagnosisDate","nodeType":"MemberAccess","referencedDeclaration":7233,"src":"13687:28:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":8138,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"13718:5:22","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13724:9:22","memberName":"timestamp","nodeType":"MemberAccess","src":"13718:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13687:46:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8141,"nodeType":"ExpressionStatement","src":"13687:46:22"}]}},{"expression":{"id":8149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8144,"name":"diagnosis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8126,"src":"13754:9:22","typeDescriptions":{"typeIdentifier":"t_struct$_DiagnosisRecord_$7240_storage_ptr","typeString":"struct AutismMedicalSystemSimple.DiagnosisRecord storage pointer"}},"id":8146,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"13764:14:22","memberName":"lastUpdateDate","nodeType":"MemberAccess","referencedDeclaration":7235,"src":"13754:24:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":8147,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"13781:5:22","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13787:9:22","memberName":"timestamp","nodeType":"MemberAccess","src":"13781:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13754:42:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8150,"nodeType":"ExpressionStatement","src":"13754:42:22"},{"expression":{"id":8154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"13806:28:22","subExpression":{"expression":{"id":8151,"name":"diagnosis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8126,"src":"13806:9:22","typeDescriptions":{"typeIdentifier":"t_struct$_DiagnosisRecord_$7240_storage_ptr","typeString":"struct AutismMedicalSystemSimple.DiagnosisRecord storage pointer"}},"id":8153,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"13816:16:22","memberName":"totalEvaluations","nodeType":"MemberAccess","referencedDeclaration":7239,"src":"13806:26:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8155,"nodeType":"ExpressionStatement","src":"13806:28:22"}]},"id":8157,"implemented":true,"kind":"function","modifiers":[],"name":"_updatePatientDiagnosis","nameLocation":"13485:23:22","nodeType":"FunctionDefinition","parameters":{"id":8122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8119,"mutability":"mutable","name":"patient","nameLocation":"13517:7:22","nodeType":"VariableDeclaration","scope":8157,"src":"13509:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8118,"name":"address","nodeType":"ElementaryTypeName","src":"13509:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8121,"mutability":"mutable","name":"tokenId","nameLocation":"13534:7:22","nodeType":"VariableDeclaration","scope":8157,"src":"13526:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8120,"name":"uint256","nodeType":"ElementaryTypeName","src":"13526:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13508:34:22"},"returnParameters":{"id":8123,"nodeType":"ParameterList","parameters":[],"src":"13552:0:22"},"scope":8349,"src":"13476:365:22","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1074],"body":{"id":8170,"nodeType":"Block","src":"13923:52:22","statements":[{"expression":{"expression":{"baseExpression":{"id":8165,"name":"evaluations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7273,"src":"13940:11:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_AutismEvaluation_$7228_storage_$","typeString":"mapping(uint256 => struct AutismMedicalSystemSimple.AutismEvaluation storage ref)"}},"id":8167,"indexExpression":{"id":8166,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8159,"src":"13952:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13940:20:22","typeDescriptions":{"typeIdentifier":"t_struct$_AutismEvaluation_$7228_storage","typeString":"struct AutismMedicalSystemSimple.AutismEvaluation storage ref"}},"id":8168,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13961:7:22","memberName":"patient","nodeType":"MemberAccess","referencedDeclaration":7203,"src":"13940:28:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":8164,"id":8169,"nodeType":"Return","src":"13933:35:22"}]},"id":8171,"implemented":true,"kind":"function","modifiers":[],"name":"_ownerOf","nameLocation":"13856:8:22","nodeType":"FunctionDefinition","overrides":{"id":8161,"nodeType":"OverrideSpecifier","overrides":[],"src":"13896:8:22"},"parameters":{"id":8160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8159,"mutability":"mutable","name":"tokenId","nameLocation":"13873:7:22","nodeType":"VariableDeclaration","scope":8171,"src":"13865:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8158,"name":"uint256","nodeType":"ElementaryTypeName","src":"13865:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13864:17:22"},"returnParameters":{"id":8164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8163,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8171,"src":"13914:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8162,"name":"address","nodeType":"ElementaryTypeName","src":"13914:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13913:9:22"},"scope":8349,"src":"13847:128:22","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8185,"nodeType":"Block","src":"14097:60:22","statements":[{"expression":{"id":8183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8179,"name":"verifiedInsuranceProviders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7304,"src":"14107:26:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bool_$","typeString":"mapping(string memory => bool)"}},"id":8181,"indexExpression":{"id":8180,"name":"provider","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8173,"src":"14134:8:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14107:36:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":8182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14146:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"14107:43:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8184,"nodeType":"ExpressionStatement","src":"14107:43:22"}]},"functionSelector":"dab6c121","id":8186,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":8176,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"14077:18:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":8177,"kind":"modifierInvocation","modifierName":{"id":8175,"name":"onlyRole","nameLocations":["14068:8:22"],"nodeType":"IdentifierPath","referencedDeclaration":41,"src":"14068:8:22"},"nodeType":"ModifierInvocation","src":"14068:28:22"}],"name":"addVerifiedInsurance","nameLocation":"14014:20:22","nodeType":"FunctionDefinition","parameters":{"id":8174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8173,"mutability":"mutable","name":"provider","nameLocation":"14049:8:22","nodeType":"VariableDeclaration","scope":8186,"src":"14035:22:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8172,"name":"string","nodeType":"ElementaryTypeName","src":"14035:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14034:24:22"},"returnParameters":{"id":8178,"nodeType":"ParameterList","parameters":[],"src":"14097:0:22"},"scope":8349,"src":"14005:152:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[148],"body":{"id":8202,"nodeType":"Block","src":"14258:42:22","statements":[{"expression":{"arguments":[{"id":8198,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8188,"src":"14279:4:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":8199,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8190,"src":"14285:7:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":8197,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"14268:10:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":8200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14268:25:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8201,"nodeType":"ExpressionStatement","src":"14268:25:22"}]},"functionSelector":"2f2ff15d","id":8203,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":8194,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"14238:18:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":8195,"kind":"modifierInvocation","modifierName":{"id":8193,"name":"onlyRole","nameLocations":["14229:8:22"],"nodeType":"IdentifierPath","referencedDeclaration":41,"src":"14229:8:22"},"nodeType":"ModifierInvocation","src":"14229:28:22"}],"name":"grantRole","nameLocation":"14172:9:22","nodeType":"FunctionDefinition","overrides":{"id":8192,"nodeType":"OverrideSpecifier","overrides":[],"src":"14220:8:22"},"parameters":{"id":8191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8188,"mutability":"mutable","name":"role","nameLocation":"14190:4:22","nodeType":"VariableDeclaration","scope":8203,"src":"14182:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8187,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14182:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":8190,"mutability":"mutable","name":"account","nameLocation":"14204:7:22","nodeType":"VariableDeclaration","scope":8203,"src":"14196:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8189,"name":"address","nodeType":"ElementaryTypeName","src":"14196:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14181:31:22"},"returnParameters":{"id":8196,"nodeType":"ParameterList","parameters":[],"src":"14258:0:22"},"scope":8349,"src":"14163:137:22","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8270,"nodeType":"Block","src":"14414:293:22","statements":[{"assignments":[8213],"declarations":[{"constant":false,"id":8213,"mutability":"mutable","name":"types","nameLocation":"14440:5:22","nodeType":"VariableDeclaration","scope":8270,"src":"14424:21:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":8211,"name":"string","nodeType":"ElementaryTypeName","src":"14424:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":8212,"nodeType":"ArrayTypeName","src":"14424:8:22","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"id":8219,"initialValue":{"arguments":[{"hexValue":"38","id":8217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14461:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"}],"id":8216,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"14448:12:22","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (string memory[] memory)"},"typeName":{"baseType":{"id":8214,"name":"string","nodeType":"ElementaryTypeName","src":"14452:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":8215,"nodeType":"ArrayTypeName","src":"14452:8:22","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}}},"id":8218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14448:15:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"14424:39:22"},{"expression":{"id":8224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8220,"name":"types","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8213,"src":"14473:5:22","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":8222,"indexExpression":{"hexValue":"30","id":8221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14479:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14473:8:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"41444f53","id":8223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14484:6:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_3b96a3cbbaf098764fb6ccbc4f8dfb49cb92ab615e167ea6199bd9936bf3e149","typeString":"literal_string \"ADOS\""},"value":"ADOS"},"src":"14473:17:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":8225,"nodeType":"ExpressionStatement","src":"14473:17:22"},{"expression":{"id":8230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8226,"name":"types","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8213,"src":"14500:5:22","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":8228,"indexExpression":{"hexValue":"31","id":8227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14506:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14500:8:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"41444952","id":8229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14511:6:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_9f2ec65b44890ac915f4d6cbd70c8f07941671c651e5310903234b9729c4ec16","typeString":"literal_string \"ADIR\""},"value":"ADIR"},"src":"14500:17:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":8231,"nodeType":"ExpressionStatement","src":"14500:17:22"},{"expression":{"id":8236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8232,"name":"types","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8213,"src":"14527:5:22","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":8234,"indexExpression":{"hexValue":"32","id":8233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14533:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14527:8:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"43415253","id":8235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14538:6:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_e547e18255c6c2609a30f975871157bf42d682f2a3d70f40ff3c74ab34776ce8","typeString":"literal_string \"CARS\""},"value":"CARS"},"src":"14527:17:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":8237,"nodeType":"ExpressionStatement","src":"14527:17:22"},{"expression":{"id":8242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8238,"name":"types","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8213,"src":"14554:5:22","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":8240,"indexExpression":{"hexValue":"33","id":8239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14560:1:22","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14554:8:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"4d43484154","id":8241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14565:7:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_5b4c53c5df2a4a07788ba35ef2caf51daa0c2bb52172bf67ac785fde506d99e8","typeString":"literal_string \"MCHAT\""},"value":"MCHAT"},"src":"14554:18:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":8243,"nodeType":"ExpressionStatement","src":"14554:18:22"},{"expression":{"id":8248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8244,"name":"types","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8213,"src":"14582:5:22","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":8246,"indexExpression":{"hexValue":"34","id":8245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14588:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14582:8:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"47415253","id":8247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14593:6:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_0a08808ff2331808cec46220890629ef4ced9d3c3f14eaf8c2f9b19267ec4787","typeString":"literal_string \"GARS\""},"value":"GARS"},"src":"14582:17:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":8249,"nodeType":"ExpressionStatement","src":"14582:17:22"},{"expression":{"id":8254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8250,"name":"types","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8213,"src":"14609:5:22","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":8252,"indexExpression":{"hexValue":"35","id":8251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14615:1:22","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14609:8:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"535253","id":8253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14620:5:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_64bd5f6fbe82a7cda4379c689b08daf6e022a9f066ed52229476138e8e400b43","typeString":"literal_string \"SRS\""},"value":"SRS"},"src":"14609:16:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":8255,"nodeType":"ExpressionStatement","src":"14609:16:22"},{"expression":{"id":8260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8256,"name":"types","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8213,"src":"14635:5:22","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":8258,"indexExpression":{"hexValue":"36","id":8257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14641:1:22","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14635:8:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"414243","id":8259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14646:5:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_e1629b9dda060bb30c7908346f6af189c16773fa148d3366701fbaa35d54f3c8","typeString":"literal_string \"ABC\""},"value":"ABC"},"src":"14635:16:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":8261,"nodeType":"ExpressionStatement","src":"14635:16:22"},{"expression":{"id":8266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8262,"name":"types","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8213,"src":"14661:5:22","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":8264,"indexExpression":{"hexValue":"37","id":8263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14667:1:22","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14661:8:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"41535253","id":8265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14672:6:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_c52d5a47d5c74ec77ef3dc4b1267f51f4da96608521b575e66cda8efcd319d4c","typeString":"literal_string \"ASRS\""},"value":"ASRS"},"src":"14661:17:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":8267,"nodeType":"ExpressionStatement","src":"14661:17:22"},{"expression":{"id":8268,"name":"types","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8213,"src":"14695:5:22","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"functionReturnParameters":8208,"id":8269,"nodeType":"Return","src":"14688:12:22"}]},"functionSelector":"e58da742","id":8271,"implemented":true,"kind":"function","modifiers":[],"name":"getEvaluationTypes","nameLocation":"14353:18:22","nodeType":"FunctionDefinition","parameters":{"id":8204,"nodeType":"ParameterList","parameters":[],"src":"14371:2:22"},"returnParameters":{"id":8208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8207,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8271,"src":"14397:15:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":8205,"name":"string","nodeType":"ElementaryTypeName","src":"14397:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":8206,"nodeType":"ArrayTypeName","src":"14397:8:22","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"14396:17:22"},"scope":8349,"src":"14344:363:22","stateMutability":"pure","virtual":false,"visibility":"external"},{"body":{"id":8314,"nodeType":"Block","src":"14809:275:22","statements":[{"assignments":[8281],"declarations":[{"constant":false,"id":8281,"mutability":"mutable","name":"levels","nameLocation":"14835:6:22","nodeType":"VariableDeclaration","scope":8314,"src":"14819:22:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":8279,"name":"string","nodeType":"ElementaryTypeName","src":"14819:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":8280,"nodeType":"ArrayTypeName","src":"14819:8:22","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"id":8287,"initialValue":{"arguments":[{"hexValue":"34","id":8285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14857:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}],"id":8284,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"14844:12:22","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (string memory[] memory)"},"typeName":{"baseType":{"id":8282,"name":"string","nodeType":"ElementaryTypeName","src":"14848:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":8283,"nodeType":"ArrayTypeName","src":"14848:8:22","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}}},"id":8286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14844:15:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"14819:40:22"},{"expression":{"id":8292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8288,"name":"levels","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8281,"src":"14869:6:22","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":8290,"indexExpression":{"hexValue":"30","id":8289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14876:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14869:9:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"4e6f6e65","id":8291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14881:6:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_8dfce459feaf97691d19cf3eb6893df6359803fdb7503df5d8cce17ab890999d","typeString":"literal_string \"None\""},"value":"None"},"src":"14869:18:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":8293,"nodeType":"ExpressionStatement","src":"14869:18:22"},{"expression":{"id":8298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8294,"name":"levels","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8281,"src":"14897:6:22","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":8296,"indexExpression":{"hexValue":"31","id":8295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14904:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14897:9:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"4c6576656c315f526571756972696e67537570706f7274","id":8297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14909:25:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_20189e9ec76441fb01d6d104e7bf6ce8f2b72aa9677a9259b8d63b92041c6bf0","typeString":"literal_string \"Level1_RequiringSupport\""},"value":"Level1_RequiringSupport"},"src":"14897:37:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":8299,"nodeType":"ExpressionStatement","src":"14897:37:22"},{"expression":{"id":8304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8300,"name":"levels","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8281,"src":"14944:6:22","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":8302,"indexExpression":{"hexValue":"32","id":8301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14951:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14944:9:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"4c6576656c325f526571756972696e675375627374616e7469616c537570706f7274","id":8303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14956:36:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_19f6c12187af7ccfd204b7b6867b2de04e3e1d51cfb1e41b8d30f8cd6922a19d","typeString":"literal_string \"Level2_RequiringSubstantialSupport\""},"value":"Level2_RequiringSubstantialSupport"},"src":"14944:48:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":8305,"nodeType":"ExpressionStatement","src":"14944:48:22"},{"expression":{"id":8310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8306,"name":"levels","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8281,"src":"15002:6:22","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":8308,"indexExpression":{"hexValue":"33","id":8307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15009:1:22","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15002:9:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"4c6576656c335f526571756972696e67566572795375627374616e7469616c537570706f7274","id":8309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15014:40:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_ce83b6e7bc04345eb2a883562860c0fd225487cda9ad300130e3846b0eb8ccaf","typeString":"literal_string \"Level3_RequiringVerySubstantialSupport\""},"value":"Level3_RequiringVerySubstantialSupport"},"src":"15002:52:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":8311,"nodeType":"ExpressionStatement","src":"15002:52:22"},{"expression":{"id":8312,"name":"levels","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8281,"src":"15071:6:22","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"functionReturnParameters":8276,"id":8313,"nodeType":"Return","src":"15064:13:22"}]},"functionSelector":"37a13153","id":8315,"implemented":true,"kind":"function","modifiers":[],"name":"getSeverityLevels","nameLocation":"14749:17:22","nodeType":"FunctionDefinition","parameters":{"id":8272,"nodeType":"ParameterList","parameters":[],"src":"14766:2:22"},"returnParameters":{"id":8276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8275,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8315,"src":"14792:15:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":8273,"name":"string","nodeType":"ElementaryTypeName","src":"14792:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":8274,"nodeType":"ArrayTypeName","src":"14792:8:22","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"14791:17:22"},"scope":8349,"src":"14740:344:22","stateMutability":"pure","virtual":false,"visibility":"external"},{"baseFunctions":[892,1896],"body":{"id":8330,"nodeType":"Block","src":"15222:47:22","statements":[{"expression":{"arguments":[{"id":8327,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8317,"src":"15254:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8325,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"15239:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AutismMedicalSystemSimple_$8349_$","typeString":"type(contract super AutismMedicalSystemSimple)"}},"id":8326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15245:8:22","memberName":"tokenURI","nodeType":"MemberAccess","referencedDeclaration":1896,"src":"15239:14:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) view returns (string memory)"}},"id":8328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15239:23:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":8324,"id":8329,"nodeType":"Return","src":"15232:30:22"}]},"functionSelector":"c87b56dd","id":8331,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"15125:8:22","nodeType":"FunctionDefinition","overrides":{"id":8321,"nodeType":"OverrideSpecifier","overrides":[{"id":8319,"name":"ERC721","nameLocations":["15172:6:22"],"nodeType":"IdentifierPath","referencedDeclaration":1653,"src":"15172:6:22"},{"id":8320,"name":"ERC721URIStorage","nameLocations":["15180:16:22"],"nodeType":"IdentifierPath","referencedDeclaration":1916,"src":"15180:16:22"}],"src":"15163:34:22"},"parameters":{"id":8318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8317,"mutability":"mutable","name":"tokenId","nameLocation":"15142:7:22","nodeType":"VariableDeclaration","scope":8331,"src":"15134:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8316,"name":"uint256","nodeType":"ElementaryTypeName","src":"15134:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15133:17:22"},"returnParameters":{"id":8324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8323,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8331,"src":"15207:13:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8322,"name":"string","nodeType":"ElementaryTypeName","src":"15207:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"15206:15:22"},"scope":8349,"src":"15116:153:22","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[63,797,1839],"body":{"id":8347,"nodeType":"Block","src":"15399:60:22","statements":[{"expression":{"arguments":[{"id":8344,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8333,"src":"15440:11:22","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":8342,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"15416:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AutismMedicalSystemSimple_$8349_$","typeString":"type(contract super AutismMedicalSystemSimple)"}},"id":8343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15422:17:22","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":63,"src":"15416:23:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":8345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15416:36:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":8341,"id":8346,"nodeType":"Return","src":"15409:43:22"}]},"functionSelector":"01ffc9a7","id":8348,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"15284:17:22","nodeType":"FunctionDefinition","overrides":{"id":8338,"nodeType":"OverrideSpecifier","overrides":[{"id":8335,"name":"ERC721","nameLocations":["15343:6:22"],"nodeType":"IdentifierPath","referencedDeclaration":1653,"src":"15343:6:22"},{"id":8336,"name":"AccessControl","nameLocations":["15351:13:22"],"nodeType":"IdentifierPath","referencedDeclaration":296,"src":"15351:13:22"},{"id":8337,"name":"ERC721URIStorage","nameLocations":["15366:16:22"],"nodeType":"IdentifierPath","referencedDeclaration":1916,"src":"15366:16:22"}],"src":"15334:49:22"},"parameters":{"id":8334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8333,"mutability":"mutable","name":"interfaceId","nameLocation":"15309:11:22","nodeType":"VariableDeclaration","scope":8348,"src":"15302:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":8332,"name":"bytes4","nodeType":"ElementaryTypeName","src":"15302:6:22","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"15301:20:22"},"returnParameters":{"id":8341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8340,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8348,"src":"15393:4:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8339,"name":"bool","nodeType":"ElementaryTypeName","src":"15393:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15392:6:22"},"scope":8349,"src":"15275:184:22","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":8350,"src":"500:14961:22","usedErrors":[306,309,607,612,621,626,631,638,643,648,2117],"usedEvents":[318,327,336,547,554,1669,1678,1687,7321,7331,7341,7353,7362]}],"src":"32:15429:22"},"id":22},"contracts/MedicalRecordToken.sol":{"ast":{"absolutePath":"contracts/MedicalRecordToken.sol","exportedSymbols":{"Context":[2051],"ERC165":[3598],"ERC721":[1653],"ERC721URIStorage":[1916],"ERC721Utils":[2021],"IERC165":[3610],"IERC4906":[555],"IERC721":[1770],"IERC721Errors":[649],"IERC721Metadata":[1944],"MedicalRecordToken":[8964],"Ownable":[527],"Strings":[3574]},"id":8965,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8351,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:23"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"@openzeppelin/contracts/token/ERC721/ERC721.sol","id":8352,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8965,"sourceUnit":1654,"src":"58:57:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","file":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","id":8353,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8965,"sourceUnit":1917,"src":"116:78:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":8354,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8965,"sourceUnit":528,"src":"195:52:23","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":8356,"name":"ERC721","nameLocations":["478:6:23"],"nodeType":"IdentifierPath","referencedDeclaration":1653,"src":"478:6:23"},"id":8357,"nodeType":"InheritanceSpecifier","src":"478:6:23"},{"baseName":{"id":8358,"name":"ERC721URIStorage","nameLocations":["486:16:23"],"nodeType":"IdentifierPath","referencedDeclaration":1916,"src":"486:16:23"},"id":8359,"nodeType":"InheritanceSpecifier","src":"486:16:23"},{"baseName":{"id":8360,"name":"Ownable","nameLocations":["504:7:23"],"nodeType":"IdentifierPath","referencedDeclaration":527,"src":"504:7:23"},"id":8361,"nodeType":"InheritanceSpecifier","src":"504:7:23"}],"canonicalName":"MedicalRecordToken","contractDependencies":[],"contractKind":"contract","documentation":{"id":8355,"nodeType":"StructuredDocumentation","src":"248:198:23","text":" @title MedicalRecordToken\n @dev ERC-721 token for medical record ownership and access control on Flare Costen2\n Each token represents a medical evaluation with metadata stored on IPFS"},"fullyImplemented":true,"id":8964,"linearizedBaseContracts":[8964,527,1916,1653,649,1944,555,1770,3598,3610,2051],"name":"MedicalRecordToken","nameLocation":"456:18:23","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8363,"mutability":"mutable","name":"_tokenIdCounter","nameLocation":"534:15:23","nodeType":"VariableDeclaration","scope":8964,"src":"518:31:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8362,"name":"uint256","nodeType":"ElementaryTypeName","src":"518:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"canonicalName":"MedicalRecordToken.MedicalRecord","id":8379,"members":[{"constant":false,"id":8365,"mutability":"mutable","name":"fileHash","nameLocation":"595:8:23","nodeType":"VariableDeclaration","scope":8379,"src":"587:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8364,"name":"bytes32","nodeType":"ElementaryTypeName","src":"587:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":8367,"mutability":"mutable","name":"patientAddress","nameLocation":"667:14:23","nodeType":"VariableDeclaration","scope":8379,"src":"659:22:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8366,"name":"address","nodeType":"ElementaryTypeName","src":"659:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8369,"mutability":"mutable","name":"createdAt","nameLocation":"731:9:23","nodeType":"VariableDeclaration","scope":8379,"src":"723:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8368,"name":"uint256","nodeType":"ElementaryTypeName","src":"723:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8371,"mutability":"mutable","name":"evaluationType","nameLocation":"798:14:23","nodeType":"VariableDeclaration","scope":8379,"src":"791:21:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":8370,"name":"string","nodeType":"ElementaryTypeName","src":"791:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8373,"mutability":"mutable","name":"isActive","nameLocation":"874:8:23","nodeType":"VariableDeclaration","scope":8379,"src":"869:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8372,"name":"bool","nodeType":"ElementaryTypeName","src":"869:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8378,"mutability":"mutable","name":"accessPermissions","nameLocation":"979:17:23","nodeType":"VariableDeclaration","scope":8379,"src":"942:54:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_AccessPermission_$8390_storage_$","typeString":"mapping(address => struct MedicalRecordToken.AccessPermission)"},"typeName":{"id":8377,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8374,"name":"address","nodeType":"ElementaryTypeName","src":"950:7:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"942:36:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_AccessPermission_$8390_storage_$","typeString":"mapping(address => struct MedicalRecordToken.AccessPermission)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8376,"nodeType":"UserDefinedTypeName","pathNode":{"id":8375,"name":"AccessPermission","nameLocations":["961:16:23"],"nodeType":"IdentifierPath","referencedDeclaration":8390,"src":"961:16:23"},"referencedDeclaration":8390,"src":"961:16:23","typeDescriptions":{"typeIdentifier":"t_struct$_AccessPermission_$8390_storage_ptr","typeString":"struct MedicalRecordToken.AccessPermission"}}},"visibility":"internal"}],"name":"MedicalRecord","nameLocation":"563:13:23","nodeType":"StructDefinition","scope":8964,"src":"556:478:23","visibility":"public"},{"canonicalName":"MedicalRecordToken.AccessPermission","id":8390,"members":[{"constant":false,"id":8381,"mutability":"mutable","name":"hasAccess","nameLocation":"1079:9:23","nodeType":"VariableDeclaration","scope":8390,"src":"1074:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8380,"name":"bool","nodeType":"ElementaryTypeName","src":"1074:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8383,"mutability":"mutable","name":"grantedAt","nameLocation":"1149:9:23","nodeType":"VariableDeclaration","scope":8390,"src":"1141:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8382,"name":"uint256","nodeType":"ElementaryTypeName","src":"1141:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8385,"mutability":"mutable","name":"expiresAt","nameLocation":"1212:9:23","nodeType":"VariableDeclaration","scope":8390,"src":"1204:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8384,"name":"uint256","nodeType":"ElementaryTypeName","src":"1204:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8387,"mutability":"mutable","name":"paymentAmount","nameLocation":"1271:13:23","nodeType":"VariableDeclaration","scope":8390,"src":"1263:21:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8386,"name":"uint256","nodeType":"ElementaryTypeName","src":"1263:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8389,"mutability":"mutable","name":"xrplTransactionHash","nameLocation":"1342:19:23","nodeType":"VariableDeclaration","scope":8390,"src":"1334:27:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8388,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1334:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"AccessPermission","nameLocation":"1047:16:23","nodeType":"StructDefinition","scope":8964,"src":"1040:361:23","visibility":"public"},{"constant":false,"functionSelector":"7564a13c","id":8395,"mutability":"mutable","name":"medicalRecords","nameLocation":"1448:14:23","nodeType":"VariableDeclaration","scope":8964,"src":"1407:55:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_MedicalRecord_$8379_storage_$","typeString":"mapping(uint256 => struct MedicalRecordToken.MedicalRecord)"},"typeName":{"id":8394,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8391,"name":"uint256","nodeType":"ElementaryTypeName","src":"1415:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1407:33:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_MedicalRecord_$8379_storage_$","typeString":"mapping(uint256 => struct MedicalRecordToken.MedicalRecord)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8393,"nodeType":"UserDefinedTypeName","pathNode":{"id":8392,"name":"MedicalRecord","nameLocations":["1426:13:23"],"nodeType":"IdentifierPath","referencedDeclaration":8379,"src":"1426:13:23"},"referencedDeclaration":8379,"src":"1426:13:23","typeDescriptions":{"typeIdentifier":"t_struct$_MedicalRecord_$8379_storage_ptr","typeString":"struct MedicalRecordToken.MedicalRecord"}}},"visibility":"public"},{"constant":false,"functionSelector":"f8e89a6d","id":8399,"mutability":"mutable","name":"fileHashToTokenId","nameLocation":"1503:17:23","nodeType":"VariableDeclaration","scope":8964,"src":"1468:52:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"typeName":{"id":8398,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8396,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1476:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1468:27:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8397,"name":"uint256","nodeType":"ElementaryTypeName","src":"1487:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"12d533d7","id":8404,"mutability":"mutable","name":"patientTokens","nameLocation":"1592:13:23","nodeType":"VariableDeclaration","scope":8964,"src":"1555:50:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[])"},"typeName":{"id":8403,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8400,"name":"address","nodeType":"ElementaryTypeName","src":"1563:7:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1555:29:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":8401,"name":"uint256","nodeType":"ElementaryTypeName","src":"1574:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8402,"nodeType":"ArrayTypeName","src":"1574:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"visibility":"public"},{"constant":true,"functionSelector":"801c406b","id":8407,"mutability":"constant","name":"ACCESS_COST","nameLocation":"1699:11:23","nodeType":"VariableDeclaration","scope":8964,"src":"1675:46:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8405,"name":"uint256","nodeType":"ElementaryTypeName","src":"1675:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3135","id":8406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1713:8:23","subdenomination":"ether","typeDescriptions":{"typeIdentifier":"t_rational_15000000000000000000_by_1","typeString":"int_const 15000000000000000000"},"value":"15"},"visibility":"public"},{"anonymous":false,"eventSelector":"e515738f44373f4a32d59dd2ca9b175e1f973006ec48ff1c4f0e9c22eec4755d","id":8417,"name":"MedicalRecordMinted","nameLocation":"1766:19:23","nodeType":"EventDefinition","parameters":{"id":8416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8409,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"1811:7:23","nodeType":"VariableDeclaration","scope":8417,"src":"1795:23:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8408,"name":"uint256","nodeType":"ElementaryTypeName","src":"1795:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8411,"indexed":true,"mutability":"mutable","name":"patient","nameLocation":"1844:7:23","nodeType":"VariableDeclaration","scope":8417,"src":"1828:23:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8410,"name":"address","nodeType":"ElementaryTypeName","src":"1828:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8413,"indexed":false,"mutability":"mutable","name":"fileHash","nameLocation":"1869:8:23","nodeType":"VariableDeclaration","scope":8417,"src":"1861:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8412,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1861:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":8415,"indexed":false,"mutability":"mutable","name":"evaluationType","nameLocation":"1894:14:23","nodeType":"VariableDeclaration","scope":8417,"src":"1887:21:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8414,"name":"string","nodeType":"ElementaryTypeName","src":"1887:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1785:129:23"},"src":"1760:155:23"},{"anonymous":false,"eventSelector":"32ff77c011cfe95aff186e69119a183ae2ccbd94ab6fa78aa919441baa49dc2d","id":8427,"name":"AccessGranted","nameLocation":"1927:13:23","nodeType":"EventDefinition","parameters":{"id":8426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8419,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"1966:7:23","nodeType":"VariableDeclaration","scope":8427,"src":"1950:23:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8418,"name":"uint256","nodeType":"ElementaryTypeName","src":"1950:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8421,"indexed":true,"mutability":"mutable","name":"hospital","nameLocation":"1999:8:23","nodeType":"VariableDeclaration","scope":8427,"src":"1983:24:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8420,"name":"address","nodeType":"ElementaryTypeName","src":"1983:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8423,"indexed":false,"mutability":"mutable","name":"expiresAt","nameLocation":"2025:9:23","nodeType":"VariableDeclaration","scope":8427,"src":"2017:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8422,"name":"uint256","nodeType":"ElementaryTypeName","src":"2017:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8425,"indexed":false,"mutability":"mutable","name":"xrplTransactionHash","nameLocation":"2052:19:23","nodeType":"VariableDeclaration","scope":8427,"src":"2044:27:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8424,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2044:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1940:137:23"},"src":"1921:157:23"},{"anonymous":false,"eventSelector":"125883b94692baebecad9f111ed97ffa626523bbbadc6b0ef85ee1b56b9e52d5","id":8433,"name":"AccessRevoked","nameLocation":"2090:13:23","nodeType":"EventDefinition","parameters":{"id":8432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8429,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"2129:7:23","nodeType":"VariableDeclaration","scope":8433,"src":"2113:23:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8428,"name":"uint256","nodeType":"ElementaryTypeName","src":"2113:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8431,"indexed":true,"mutability":"mutable","name":"hospital","nameLocation":"2162:8:23","nodeType":"VariableDeclaration","scope":8433,"src":"2146:24:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8430,"name":"address","nodeType":"ElementaryTypeName","src":"2146:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2103:73:23"},"src":"2084:93:23"},{"body":{"id":8445,"nodeType":"Block","src":"2277:2:23","statements":[]},"id":8446,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"4d65646963616c205265636f726420546f6b656e","id":8438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2224:22:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_d1e1c4adb5b1f1d6ee09fd65f0224338d140b9b8ed7f9db396f0e5a827cfd3bb","typeString":"literal_string \"Medical Record Token\""},"value":"Medical Record Token"},{"hexValue":"4d5254","id":8439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2248:5:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_ed2db9432d20d18b1efff425a1c07043283c2943c22ea746adadedd22faa019e","typeString":"literal_string \"MRT\""},"value":"MRT"}],"id":8440,"kind":"baseConstructorSpecifier","modifierName":{"id":8437,"name":"ERC721","nameLocations":["2217:6:23"],"nodeType":"IdentifierPath","referencedDeclaration":1653,"src":"2217:6:23"},"nodeType":"ModifierInvocation","src":"2217:37:23"},{"arguments":[{"id":8442,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8435,"src":"2263:12:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":8443,"kind":"baseConstructorSpecifier","modifierName":{"id":8441,"name":"Ownable","nameLocations":["2255:7:23"],"nodeType":"IdentifierPath","referencedDeclaration":527,"src":"2255:7:23"},"nodeType":"ModifierInvocation","src":"2255:21:23"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":8436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8435,"mutability":"mutable","name":"initialOwner","nameLocation":"2203:12:23","nodeType":"VariableDeclaration","scope":8446,"src":"2195:20:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8434,"name":"address","nodeType":"ElementaryTypeName","src":"2195:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2194:22:23"},"returnParameters":{"id":8444,"nodeType":"ParameterList","parameters":[],"src":"2277:0:23"},"scope":8964,"src":"2183:96:23","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8558,"nodeType":"Block","src":"2732:767:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":8463,"name":"fileHashToTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8399,"src":"2750:17:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":8465,"indexExpression":{"id":8464,"name":"fileHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8451,"src":"2768:8:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2750:27:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2781:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2750:32:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d65646963616c207265636f726420616c726561647920657869737473","id":8468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2784:31:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_ea7063d2c5924cbb69a84dddc40b0a8e893a912b3a7babb8c9dcb7606148a6da","typeString":"literal_string \"Medical record already exists\""},"value":"Medical record already exists"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ea7063d2c5924cbb69a84dddc40b0a8e893a912b3a7babb8c9dcb7606148a6da","typeString":"literal_string \"Medical record already exists\""}],"id":8462,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2742:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2742:74:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8470,"nodeType":"ExpressionStatement","src":"2742:74:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8472,"name":"patient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8449,"src":"2834:7:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":8475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2853:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8474,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2845:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8473,"name":"address","nodeType":"ElementaryTypeName","src":"2845:7:23","typeDescriptions":{}}},"id":8476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2845:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2834:21:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642070617469656e742061646472657373","id":8478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2857:25:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_33c473c2e2093856cbe26752e819a40ac1e4e430d9421ac16799c34433450e7a","typeString":"literal_string \"Invalid patient address\""},"value":"Invalid patient address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_33c473c2e2093856cbe26752e819a40ac1e4e430d9421ac16799c34433450e7a","typeString":"literal_string \"Invalid patient address\""}],"id":8471,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2826:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2826:57:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8480,"nodeType":"ExpressionStatement","src":"2826:57:23"},{"assignments":[8482],"declarations":[{"constant":false,"id":8482,"mutability":"mutable","name":"tokenId","nameLocation":"2902:7:23","nodeType":"VariableDeclaration","scope":8558,"src":"2894:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8481,"name":"uint256","nodeType":"ElementaryTypeName","src":"2894:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8484,"initialValue":{"id":8483,"name":"_tokenIdCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8363,"src":"2912:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2894:33:23"},{"expression":{"id":8486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2937:17:23","subExpression":{"id":8485,"name":"_tokenIdCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8363,"src":"2937:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8487,"nodeType":"ExpressionStatement","src":"2937:17:23"},{"expression":{"arguments":[{"id":8489,"name":"patient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8449,"src":"2975:7:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8490,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8482,"src":"2984:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8488,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[1331,1361],"referencedDeclaration":1331,"src":"2965:9:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":8491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2965:27:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8492,"nodeType":"ExpressionStatement","src":"2965:27:23"},{"expression":{"arguments":[{"id":8494,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8482,"src":"3015:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8495,"name":"uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8453,"src":"3024:3:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":8493,"name":"_setTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"3002:12:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory)"}},"id":8496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3002:26:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8497,"nodeType":"ExpressionStatement","src":"3002:26:23"},{"assignments":[8500],"declarations":[{"constant":false,"id":8500,"mutability":"mutable","name":"record","nameLocation":"3061:6:23","nodeType":"VariableDeclaration","scope":8558,"src":"3039:28:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_MedicalRecord_$8379_storage_ptr","typeString":"struct MedicalRecordToken.MedicalRecord"},"typeName":{"id":8499,"nodeType":"UserDefinedTypeName","pathNode":{"id":8498,"name":"MedicalRecord","nameLocations":["3039:13:23"],"nodeType":"IdentifierPath","referencedDeclaration":8379,"src":"3039:13:23"},"referencedDeclaration":8379,"src":"3039:13:23","typeDescriptions":{"typeIdentifier":"t_struct$_MedicalRecord_$8379_storage_ptr","typeString":"struct MedicalRecordToken.MedicalRecord"}},"visibility":"internal"}],"id":8504,"initialValue":{"baseExpression":{"id":8501,"name":"medicalRecords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8395,"src":"3070:14:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_MedicalRecord_$8379_storage_$","typeString":"mapping(uint256 => struct MedicalRecordToken.MedicalRecord storage ref)"}},"id":8503,"indexExpression":{"id":8502,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8482,"src":"3085:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3070:23:23","typeDescriptions":{"typeIdentifier":"t_struct$_MedicalRecord_$8379_storage","typeString":"struct MedicalRecordToken.MedicalRecord storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3039:54:23"},{"expression":{"id":8509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8505,"name":"record","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8500,"src":"3103:6:23","typeDescriptions":{"typeIdentifier":"t_struct$_MedicalRecord_$8379_storage_ptr","typeString":"struct MedicalRecordToken.MedicalRecord storage pointer"}},"id":8507,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3110:8:23","memberName":"fileHash","nodeType":"MemberAccess","referencedDeclaration":8365,"src":"3103:15:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8508,"name":"fileHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8451,"src":"3121:8:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3103:26:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":8510,"nodeType":"ExpressionStatement","src":"3103:26:23"},{"expression":{"id":8515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8511,"name":"record","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8500,"src":"3139:6:23","typeDescriptions":{"typeIdentifier":"t_struct$_MedicalRecord_$8379_storage_ptr","typeString":"struct MedicalRecordToken.MedicalRecord storage pointer"}},"id":8513,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3146:14:23","memberName":"patientAddress","nodeType":"MemberAccess","referencedDeclaration":8367,"src":"3139:21:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8514,"name":"patient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8449,"src":"3163:7:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3139:31:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8516,"nodeType":"ExpressionStatement","src":"3139:31:23"},{"expression":{"id":8522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8517,"name":"record","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8500,"src":"3180:6:23","typeDescriptions":{"typeIdentifier":"t_struct$_MedicalRecord_$8379_storage_ptr","typeString":"struct MedicalRecordToken.MedicalRecord storage pointer"}},"id":8519,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3187:9:23","memberName":"createdAt","nodeType":"MemberAccess","referencedDeclaration":8369,"src":"3180:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":8520,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3199:5:23","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3205:9:23","memberName":"timestamp","nodeType":"MemberAccess","src":"3199:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3180:34:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8523,"nodeType":"ExpressionStatement","src":"3180:34:23"},{"expression":{"id":8528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8524,"name":"record","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8500,"src":"3224:6:23","typeDescriptions":{"typeIdentifier":"t_struct$_MedicalRecord_$8379_storage_ptr","typeString":"struct MedicalRecordToken.MedicalRecord storage pointer"}},"id":8526,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3231:14:23","memberName":"evaluationType","nodeType":"MemberAccess","referencedDeclaration":8371,"src":"3224:21:23","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8527,"name":"evaluationType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8455,"src":"3248:14:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3224:38:23","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":8529,"nodeType":"ExpressionStatement","src":"3224:38:23"},{"expression":{"id":8534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8530,"name":"record","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8500,"src":"3272:6:23","typeDescriptions":{"typeIdentifier":"t_struct$_MedicalRecord_$8379_storage_ptr","typeString":"struct MedicalRecordToken.MedicalRecord storage pointer"}},"id":8532,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3279:8:23","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":8373,"src":"3272:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":8533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3290:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3272:22:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8535,"nodeType":"ExpressionStatement","src":"3272:22:23"},{"expression":{"id":8540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8536,"name":"fileHashToTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8399,"src":"3305:17:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":8538,"indexExpression":{"id":8537,"name":"fileHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8451,"src":"3323:8:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3305:27:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8539,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8482,"src":"3335:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3305:37:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8541,"nodeType":"ExpressionStatement","src":"3305:37:23"},{"expression":{"arguments":[{"id":8546,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8482,"src":"3380:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":8542,"name":"patientTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8404,"src":"3352:13:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":8544,"indexExpression":{"id":8543,"name":"patient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8449,"src":"3366:7:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3352:22:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":8545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3375:4:23","memberName":"push","nodeType":"MemberAccess","src":"3352:27:23","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":8547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3352:36:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8548,"nodeType":"ExpressionStatement","src":"3352:36:23"},{"eventCall":{"arguments":[{"id":8550,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8482,"src":"3424:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8551,"name":"patient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8449,"src":"3433:7:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8552,"name":"fileHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8451,"src":"3442:8:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":8553,"name":"evaluationType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8455,"src":"3452:14:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":8549,"name":"MedicalRecordMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8417,"src":"3404:19:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_bytes32_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,address,bytes32,string memory)"}},"id":8554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3404:63:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8555,"nodeType":"EmitStatement","src":"3399:68:23"},{"expression":{"id":8556,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8482,"src":"3485:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8461,"id":8557,"nodeType":"Return","src":"3478:14:23"}]},"documentation":{"id":8447,"nodeType":"StructuredDocumentation","src":"2285:258:23","text":" @dev Mint a new medical record token\n @param patient The patient's address\n @param fileHash SHA-256 hash of the medical file\n @param uri IPFS URI containing metadata\n @param evaluationType Type of medical evaluation"},"functionSelector":"dcef1e1e","id":8559,"implemented":true,"kind":"function","modifiers":[{"id":8458,"kind":"modifierInvocation","modifierName":{"id":8457,"name":"onlyOwner","nameLocations":["2704:9:23"],"nodeType":"IdentifierPath","referencedDeclaration":438,"src":"2704:9:23"},"nodeType":"ModifierInvocation","src":"2704:9:23"}],"name":"mintMedicalRecord","nameLocation":"2557:17:23","nodeType":"FunctionDefinition","parameters":{"id":8456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8449,"mutability":"mutable","name":"patient","nameLocation":"2592:7:23","nodeType":"VariableDeclaration","scope":8559,"src":"2584:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8448,"name":"address","nodeType":"ElementaryTypeName","src":"2584:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8451,"mutability":"mutable","name":"fileHash","nameLocation":"2617:8:23","nodeType":"VariableDeclaration","scope":8559,"src":"2609:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8450,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2609:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":8453,"mutability":"mutable","name":"uri","nameLocation":"2649:3:23","nodeType":"VariableDeclaration","scope":8559,"src":"2635:17:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8452,"name":"string","nodeType":"ElementaryTypeName","src":"2635:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8455,"mutability":"mutable","name":"evaluationType","nameLocation":"2676:14:23","nodeType":"VariableDeclaration","scope":8559,"src":"2662:28:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8454,"name":"string","nodeType":"ElementaryTypeName","src":"2662:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2574:122:23"},"returnParameters":{"id":8461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8460,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8559,"src":"2723:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8459,"name":"uint256","nodeType":"ElementaryTypeName","src":"2723:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2722:9:23"},"scope":8964,"src":"2548:951:23","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8660,"nodeType":"Block","src":"3962:730:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":8575,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8562,"src":"3989:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8574,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1074,"src":"3980:8:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":8576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3980:17:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":8579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4009:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8578,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4001:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8577,"name":"address","nodeType":"ElementaryTypeName","src":"4001:7:23","typeDescriptions":{}}},"id":8580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4001:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3980:31:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e20646f6573206e6f74206578697374","id":8582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4013:22:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726","typeString":"literal_string \"Token does not exist\""},"value":"Token does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726","typeString":"literal_string \"Token does not exist\""}],"id":8573,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3972:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3972:64:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8584,"nodeType":"ExpressionStatement","src":"3972:64:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8586,"name":"hospital","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8564,"src":"4054:8:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":8589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4074:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8588,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4066:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8587,"name":"address","nodeType":"ElementaryTypeName","src":"4066:7:23","typeDescriptions":{}}},"id":8590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4066:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4054:22:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420686f73706974616c2061646472657373","id":8592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4078:26:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_4b5c3fff8a7470fb7d3cb5a2c825606d65a273a4198bebb9e861ea888af21bb0","typeString":"literal_string \"Invalid hospital address\""},"value":"Invalid hospital address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4b5c3fff8a7470fb7d3cb5a2c825606d65a273a4198bebb9e861ea888af21bb0","typeString":"literal_string \"Invalid hospital address\""}],"id":8585,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4046:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4046:59:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8594,"nodeType":"ExpressionStatement","src":"4046:59:23"},{"expression":{"arguments":[{"expression":{"baseExpression":{"id":8596,"name":"medicalRecords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8395,"src":"4123:14:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_MedicalRecord_$8379_storage_$","typeString":"mapping(uint256 => struct MedicalRecordToken.MedicalRecord storage ref)"}},"id":8598,"indexExpression":{"id":8597,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8562,"src":"4138:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4123:23:23","typeDescriptions":{"typeIdentifier":"t_struct$_MedicalRecord_$8379_storage","typeString":"struct MedicalRecordToken.MedicalRecord storage ref"}},"id":8599,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4147:8:23","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":8373,"src":"4123:32:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d65646963616c207265636f726420697320696e616374697665","id":8600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4157:28:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_dcfb34f5fb0cab85164bfd0483e42a37b0410302e0991467efe4d343903bf0d7","typeString":"literal_string \"Medical record is inactive\""},"value":"Medical record is inactive"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dcfb34f5fb0cab85164bfd0483e42a37b0410302e0991467efe4d343903bf0d7","typeString":"literal_string \"Medical record is inactive\""}],"id":8595,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4115:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4115:71:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8602,"nodeType":"ExpressionStatement","src":"4115:71:23"},{"assignments":[8605],"declarations":[{"constant":false,"id":8605,"mutability":"mutable","name":"record","nameLocation":"4219:6:23","nodeType":"VariableDeclaration","scope":8660,"src":"4197:28:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_MedicalRecord_$8379_storage_ptr","typeString":"struct MedicalRecordToken.MedicalRecord"},"typeName":{"id":8604,"nodeType":"UserDefinedTypeName","pathNode":{"id":8603,"name":"MedicalRecord","nameLocations":["4197:13:23"],"nodeType":"IdentifierPath","referencedDeclaration":8379,"src":"4197:13:23"},"referencedDeclaration":8379,"src":"4197:13:23","typeDescriptions":{"typeIdentifier":"t_struct$_MedicalRecord_$8379_storage_ptr","typeString":"struct MedicalRecordToken.MedicalRecord"}},"visibility":"internal"}],"id":8609,"initialValue":{"baseExpression":{"id":8606,"name":"medicalRecords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8395,"src":"4228:14:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_MedicalRecord_$8379_storage_$","typeString":"mapping(uint256 => struct MedicalRecordToken.MedicalRecord storage ref)"}},"id":8608,"indexExpression":{"id":8607,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8562,"src":"4243:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4228:23:23","typeDescriptions":{"typeIdentifier":"t_struct$_MedicalRecord_$8379_storage","typeString":"struct MedicalRecordToken.MedicalRecord storage ref"}},"nodeType":"VariableDeclarationStatement","src":"4197:54:23"},{"assignments":[8612],"declarations":[{"constant":false,"id":8612,"mutability":"mutable","name":"permission","nameLocation":"4286:10:23","nodeType":"VariableDeclaration","scope":8660,"src":"4261:35:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessPermission_$8390_storage_ptr","typeString":"struct MedicalRecordToken.AccessPermission"},"typeName":{"id":8611,"nodeType":"UserDefinedTypeName","pathNode":{"id":8610,"name":"AccessPermission","nameLocations":["4261:16:23"],"nodeType":"IdentifierPath","referencedDeclaration":8390,"src":"4261:16:23"},"referencedDeclaration":8390,"src":"4261:16:23","typeDescriptions":{"typeIdentifier":"t_struct$_AccessPermission_$8390_storage_ptr","typeString":"struct MedicalRecordToken.AccessPermission"}},"visibility":"internal"}],"id":8617,"initialValue":{"baseExpression":{"expression":{"id":8613,"name":"record","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8605,"src":"4299:6:23","typeDescriptions":{"typeIdentifier":"t_struct$_MedicalRecord_$8379_storage_ptr","typeString":"struct MedicalRecordToken.MedicalRecord storage pointer"}},"id":8614,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4306:17:23","memberName":"accessPermissions","nodeType":"MemberAccess","referencedDeclaration":8378,"src":"4299:24:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_AccessPermission_$8390_storage_$","typeString":"mapping(address => struct MedicalRecordToken.AccessPermission storage ref)"}},"id":8616,"indexExpression":{"id":8615,"name":"hospital","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8564,"src":"4324:8:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4299:34:23","typeDescriptions":{"typeIdentifier":"t_struct$_AccessPermission_$8390_storage","typeString":"struct MedicalRecordToken.AccessPermission storage ref"}},"nodeType":"VariableDeclarationStatement","src":"4261:72:23"},{"expression":{"id":8622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8618,"name":"permission","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8612,"src":"4344:10:23","typeDescriptions":{"typeIdentifier":"t_struct$_AccessPermission_$8390_storage_ptr","typeString":"struct MedicalRecordToken.AccessPermission storage pointer"}},"id":8620,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4355:9:23","memberName":"hasAccess","nodeType":"MemberAccess","referencedDeclaration":8381,"src":"4344:20:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":8621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4367:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"4344:27:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8623,"nodeType":"ExpressionStatement","src":"4344:27:23"},{"expression":{"id":8629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8624,"name":"permission","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8612,"src":"4381:10:23","typeDescriptions":{"typeIdentifier":"t_struct$_AccessPermission_$8390_storage_ptr","typeString":"struct MedicalRecordToken.AccessPermission storage pointer"}},"id":8626,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4392:9:23","memberName":"grantedAt","nodeType":"MemberAccess","referencedDeclaration":8383,"src":"4381:20:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":8627,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4404:5:23","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4410:9:23","memberName":"timestamp","nodeType":"MemberAccess","src":"4404:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4381:38:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8630,"nodeType":"ExpressionStatement","src":"4381:38:23"},{"expression":{"id":8638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8631,"name":"permission","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8612,"src":"4429:10:23","typeDescriptions":{"typeIdentifier":"t_struct$_AccessPermission_$8390_storage_ptr","typeString":"struct MedicalRecordToken.AccessPermission storage pointer"}},"id":8633,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4440:9:23","memberName":"expiresAt","nodeType":"MemberAccess","referencedDeclaration":8385,"src":"4429:20:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8634,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4452:5:23","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4458:9:23","memberName":"timestamp","nodeType":"MemberAccess","src":"4452:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":8636,"name":"accessDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8568,"src":"4470:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4452:32:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4429:55:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8639,"nodeType":"ExpressionStatement","src":"4429:55:23"},{"expression":{"id":8644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8640,"name":"permission","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8612,"src":"4494:10:23","typeDescriptions":{"typeIdentifier":"t_struct$_AccessPermission_$8390_storage_ptr","typeString":"struct MedicalRecordToken.AccessPermission storage pointer"}},"id":8642,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4505:13:23","memberName":"paymentAmount","nodeType":"MemberAccess","referencedDeclaration":8387,"src":"4494:24:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8643,"name":"ACCESS_COST","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8407,"src":"4521:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4494:38:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8645,"nodeType":"ExpressionStatement","src":"4494:38:23"},{"expression":{"id":8650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8646,"name":"permission","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8612,"src":"4542:10:23","typeDescriptions":{"typeIdentifier":"t_struct$_AccessPermission_$8390_storage_ptr","typeString":"struct MedicalRecordToken.AccessPermission storage pointer"}},"id":8648,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4553:19:23","memberName":"xrplTransactionHash","nodeType":"MemberAccess","referencedDeclaration":8389,"src":"4542:30:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8649,"name":"xrplTransactionHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8566,"src":"4575:19:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4542:52:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":8651,"nodeType":"ExpressionStatement","src":"4542:52:23"},{"eventCall":{"arguments":[{"id":8653,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8562,"src":"4624:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8654,"name":"hospital","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8564,"src":"4633:8:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":8655,"name":"permission","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8612,"src":"4643:10:23","typeDescriptions":{"typeIdentifier":"t_struct$_AccessPermission_$8390_storage_ptr","typeString":"struct MedicalRecordToken.AccessPermission storage pointer"}},"id":8656,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4654:9:23","memberName":"expiresAt","nodeType":"MemberAccess","referencedDeclaration":8385,"src":"4643:20:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8657,"name":"xrplTransactionHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8566,"src":"4665:19:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":8652,"name":"AccessGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8427,"src":"4610:13:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_bytes32_$returns$__$","typeString":"function (uint256,address,uint256,bytes32)"}},"id":8658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4610:75:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8659,"nodeType":"EmitStatement","src":"4605:80:23"}]},"documentation":{"id":8560,"nodeType":"StructuredDocumentation","src":"3505:288:23","text":" @dev Grant access to a hospital after payment verification\n @param tokenId Medical record token ID\n @param hospital Hospital's address\n @param xrplTransactionHash XRPL payment transaction hash\n @param accessDuration Duration of access in seconds"},"functionSelector":"7b4a1ae7","id":8661,"implemented":true,"kind":"function","modifiers":[{"id":8571,"kind":"modifierInvocation","modifierName":{"id":8570,"name":"onlyOwner","nameLocations":["3952:9:23"],"nodeType":"IdentifierPath","referencedDeclaration":438,"src":"3952:9:23"},"nodeType":"ModifierInvocation","src":"3952:9:23"}],"name":"grantAccess","nameLocation":"3807:11:23","nodeType":"FunctionDefinition","parameters":{"id":8569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8562,"mutability":"mutable","name":"tokenId","nameLocation":"3836:7:23","nodeType":"VariableDeclaration","scope":8661,"src":"3828:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8561,"name":"uint256","nodeType":"ElementaryTypeName","src":"3828:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8564,"mutability":"mutable","name":"hospital","nameLocation":"3861:8:23","nodeType":"VariableDeclaration","scope":8661,"src":"3853:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8563,"name":"address","nodeType":"ElementaryTypeName","src":"3853:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8566,"mutability":"mutable","name":"xrplTransactionHash","nameLocation":"3887:19:23","nodeType":"VariableDeclaration","scope":8661,"src":"3879:27:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8565,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3879:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":8568,"mutability":"mutable","name":"accessDuration","nameLocation":"3924:14:23","nodeType":"VariableDeclaration","scope":8661,"src":"3916:22:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8567,"name":"uint256","nodeType":"ElementaryTypeName","src":"3916:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3818:126:23"},"returnParameters":{"id":8572,"nodeType":"ParameterList","parameters":[],"src":"3962:0:23"},"scope":8964,"src":"3798:894:23","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8708,"nodeType":"Block","src":"4957:306:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":8672,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8664,"src":"4980:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8671,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1074,"src":"4971:8:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":8673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4971:17:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":8676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5000:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8675,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4992:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8674,"name":"address","nodeType":"ElementaryTypeName","src":"4992:7:23","typeDescriptions":{}}},"id":8677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4992:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4971:31:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":8683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5006:33:23","subExpression":{"expression":{"baseExpression":{"id":8679,"name":"medicalRecords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8395,"src":"5007:14:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_MedicalRecord_$8379_storage_$","typeString":"mapping(uint256 => struct MedicalRecordToken.MedicalRecord storage ref)"}},"id":8681,"indexExpression":{"id":8680,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8664,"src":"5022:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5007:23:23","typeDescriptions":{"typeIdentifier":"t_struct$_MedicalRecord_$8379_storage","typeString":"struct MedicalRecordToken.MedicalRecord storage ref"}},"id":8682,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5031:8:23","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":8373,"src":"5007:32:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4971:68:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8688,"nodeType":"IfStatement","src":"4967:111:23","trueBody":{"id":8687,"nodeType":"Block","src":"5041:37:23","statements":[{"expression":{"hexValue":"66616c7365","id":8685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5062:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":8670,"id":8686,"nodeType":"Return","src":"5055:12:23"}]}},{"assignments":[8691],"declarations":[{"constant":false,"id":8691,"mutability":"mutable","name":"permission","nameLocation":"5113:10:23","nodeType":"VariableDeclaration","scope":8708,"src":"5088:35:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessPermission_$8390_storage_ptr","typeString":"struct MedicalRecordToken.AccessPermission"},"typeName":{"id":8690,"nodeType":"UserDefinedTypeName","pathNode":{"id":8689,"name":"AccessPermission","nameLocations":["5088:16:23"],"nodeType":"IdentifierPath","referencedDeclaration":8390,"src":"5088:16:23"},"referencedDeclaration":8390,"src":"5088:16:23","typeDescriptions":{"typeIdentifier":"t_struct$_AccessPermission_$8390_storage_ptr","typeString":"struct MedicalRecordToken.AccessPermission"}},"visibility":"internal"}],"id":8698,"initialValue":{"baseExpression":{"expression":{"baseExpression":{"id":8692,"name":"medicalRecords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8395,"src":"5126:14:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_MedicalRecord_$8379_storage_$","typeString":"mapping(uint256 => struct MedicalRecordToken.MedicalRecord storage ref)"}},"id":8694,"indexExpression":{"id":8693,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8664,"src":"5141:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5126:23:23","typeDescriptions":{"typeIdentifier":"t_struct$_MedicalRecord_$8379_storage","typeString":"struct MedicalRecordToken.MedicalRecord storage ref"}},"id":8695,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5150:17:23","memberName":"accessPermissions","nodeType":"MemberAccess","referencedDeclaration":8378,"src":"5126:41:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_AccessPermission_$8390_storage_$","typeString":"mapping(address => struct MedicalRecordToken.AccessPermission storage ref)"}},"id":8697,"indexExpression":{"id":8696,"name":"hospital","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8666,"src":"5168:8:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5126:51:23","typeDescriptions":{"typeIdentifier":"t_struct$_AccessPermission_$8390_storage","typeString":"struct MedicalRecordToken.AccessPermission storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5088:89:23"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8699,"name":"permission","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8691,"src":"5194:10:23","typeDescriptions":{"typeIdentifier":"t_struct$_AccessPermission_$8390_storage_ptr","typeString":"struct MedicalRecordToken.AccessPermission storage pointer"}},"id":8700,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5205:9:23","memberName":"hasAccess","nodeType":"MemberAccess","referencedDeclaration":8381,"src":"5194:20:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8701,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5218:5:23","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5224:9:23","memberName":"timestamp","nodeType":"MemberAccess","src":"5218:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":8703,"name":"permission","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8691,"src":"5236:10:23","typeDescriptions":{"typeIdentifier":"t_struct$_AccessPermission_$8390_storage_ptr","typeString":"struct MedicalRecordToken.AccessPermission storage pointer"}},"id":8704,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5247:9:23","memberName":"expiresAt","nodeType":"MemberAccess","referencedDeclaration":8385,"src":"5236:20:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5218:38:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5194:62:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":8670,"id":8707,"nodeType":"Return","src":"5187:69:23"}]},"documentation":{"id":8662,"nodeType":"StructuredDocumentation","src":"4698:168:23","text":" @dev Check if a hospital has valid access to a medical record\n @param tokenId Medical record token ID\n @param hospital Hospital's address"},"functionSelector":"d504d37a","id":8709,"implemented":true,"kind":"function","modifiers":[],"name":"hasValidAccess","nameLocation":"4880:14:23","nodeType":"FunctionDefinition","parameters":{"id":8667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8664,"mutability":"mutable","name":"tokenId","nameLocation":"4903:7:23","nodeType":"VariableDeclaration","scope":8709,"src":"4895:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8663,"name":"uint256","nodeType":"ElementaryTypeName","src":"4895:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8666,"mutability":"mutable","name":"hospital","nameLocation":"4920:8:23","nodeType":"VariableDeclaration","scope":8709,"src":"4912:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8665,"name":"address","nodeType":"ElementaryTypeName","src":"4912:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4894:35:23"},"returnParameters":{"id":8670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8669,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8709,"src":"4951:4:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8668,"name":"bool","nodeType":"ElementaryTypeName","src":"4951:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4950:6:23"},"scope":8964,"src":"4871:392:23","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":8756,"nodeType":"Block","src":"5586:331:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":8727,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8712,"src":"5613:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8726,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1074,"src":"5604:8:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":8728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5604:17:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":8731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5633:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8730,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5625:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8729,"name":"address","nodeType":"ElementaryTypeName","src":"5625:7:23","typeDescriptions":{}}},"id":8732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5625:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5604:31:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e20646f6573206e6f74206578697374","id":8734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5637:22:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726","typeString":"literal_string \"Token does not exist\""},"value":"Token does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726","typeString":"literal_string \"Token does not exist\""}],"id":8725,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5596:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5596:64:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8736,"nodeType":"ExpressionStatement","src":"5596:64:23"},{"assignments":[8739],"declarations":[{"constant":false,"id":8739,"mutability":"mutable","name":"record","nameLocation":"5693:6:23","nodeType":"VariableDeclaration","scope":8756,"src":"5671:28:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_MedicalRecord_$8379_storage_ptr","typeString":"struct MedicalRecordToken.MedicalRecord"},"typeName":{"id":8738,"nodeType":"UserDefinedTypeName","pathNode":{"id":8737,"name":"MedicalRecord","nameLocations":["5671:13:23"],"nodeType":"IdentifierPath","referencedDeclaration":8379,"src":"5671:13:23"},"referencedDeclaration":8379,"src":"5671:13:23","typeDescriptions":{"typeIdentifier":"t_struct$_MedicalRecord_$8379_storage_ptr","typeString":"struct MedicalRecordToken.MedicalRecord"}},"visibility":"internal"}],"id":8743,"initialValue":{"baseExpression":{"id":8740,"name":"medicalRecords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8395,"src":"5702:14:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_MedicalRecord_$8379_storage_$","typeString":"mapping(uint256 => struct MedicalRecordToken.MedicalRecord storage ref)"}},"id":8742,"indexExpression":{"id":8741,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8712,"src":"5717:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5702:23:23","typeDescriptions":{"typeIdentifier":"t_struct$_MedicalRecord_$8379_storage","typeString":"struct MedicalRecordToken.MedicalRecord storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5671:54:23"},{"expression":{"components":[{"expression":{"id":8744,"name":"record","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8739,"src":"5756:6:23","typeDescriptions":{"typeIdentifier":"t_struct$_MedicalRecord_$8379_storage_ptr","typeString":"struct MedicalRecordToken.MedicalRecord storage pointer"}},"id":8745,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5763:8:23","memberName":"fileHash","nodeType":"MemberAccess","referencedDeclaration":8365,"src":"5756:15:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":8746,"name":"record","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8739,"src":"5785:6:23","typeDescriptions":{"typeIdentifier":"t_struct$_MedicalRecord_$8379_storage_ptr","typeString":"struct MedicalRecordToken.MedicalRecord storage pointer"}},"id":8747,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5792:14:23","memberName":"patientAddress","nodeType":"MemberAccess","referencedDeclaration":8367,"src":"5785:21:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":8748,"name":"record","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8739,"src":"5820:6:23","typeDescriptions":{"typeIdentifier":"t_struct$_MedicalRecord_$8379_storage_ptr","typeString":"struct MedicalRecordToken.MedicalRecord storage pointer"}},"id":8749,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5827:9:23","memberName":"createdAt","nodeType":"MemberAccess","referencedDeclaration":8369,"src":"5820:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":8750,"name":"record","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8739,"src":"5850:6:23","typeDescriptions":{"typeIdentifier":"t_struct$_MedicalRecord_$8379_storage_ptr","typeString":"struct MedicalRecordToken.MedicalRecord storage pointer"}},"id":8751,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5857:14:23","memberName":"evaluationType","nodeType":"MemberAccess","referencedDeclaration":8371,"src":"5850:21:23","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"expression":{"id":8752,"name":"record","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8739,"src":"5885:6:23","typeDescriptions":{"typeIdentifier":"t_struct$_MedicalRecord_$8379_storage_ptr","typeString":"struct MedicalRecordToken.MedicalRecord storage pointer"}},"id":8753,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5892:8:23","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":8373,"src":"5885:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":8754,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5742:168:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes32_$_t_address_$_t_uint256_$_t_string_storage_$_t_bool_$","typeString":"tuple(bytes32,address,uint256,string storage ref,bool)"}},"functionReturnParameters":8724,"id":8755,"nodeType":"Return","src":"5735:175:23"}]},"documentation":{"id":8710,"nodeType":"StructuredDocumentation","src":"5269:96:23","text":" @dev Get medical record details\n @param tokenId Medical record token ID"},"functionSelector":"0c388722","id":8757,"implemented":true,"kind":"function","modifiers":[],"name":"getMedicalRecord","nameLocation":"5379:16:23","nodeType":"FunctionDefinition","parameters":{"id":8713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8712,"mutability":"mutable","name":"tokenId","nameLocation":"5404:7:23","nodeType":"VariableDeclaration","scope":8757,"src":"5396:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8711,"name":"uint256","nodeType":"ElementaryTypeName","src":"5396:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5395:17:23"},"returnParameters":{"id":8724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8715,"mutability":"mutable","name":"fileHash","nameLocation":"5451:8:23","nodeType":"VariableDeclaration","scope":8757,"src":"5443:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8714,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5443:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":8717,"mutability":"mutable","name":"patientAddress","nameLocation":"5477:14:23","nodeType":"VariableDeclaration","scope":8757,"src":"5469:22:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8716,"name":"address","nodeType":"ElementaryTypeName","src":"5469:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8719,"mutability":"mutable","name":"createdAt","nameLocation":"5509:9:23","nodeType":"VariableDeclaration","scope":8757,"src":"5501:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8718,"name":"uint256","nodeType":"ElementaryTypeName","src":"5501:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8721,"mutability":"mutable","name":"evaluationType","nameLocation":"5542:14:23","nodeType":"VariableDeclaration","scope":8757,"src":"5528:28:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8720,"name":"string","nodeType":"ElementaryTypeName","src":"5528:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8723,"mutability":"mutable","name":"isActive","nameLocation":"5571:8:23","nodeType":"VariableDeclaration","scope":8757,"src":"5566:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8722,"name":"bool","nodeType":"ElementaryTypeName","src":"5566:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5433:152:23"},"scope":8964,"src":"5370:547:23","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":8809,"nodeType":"Block","src":"6321:392:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":8777,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8760,"src":"6348:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8776,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1074,"src":"6339:8:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":8778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6339:17:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":8781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6368:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8780,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6360:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8779,"name":"address","nodeType":"ElementaryTypeName","src":"6360:7:23","typeDescriptions":{}}},"id":8782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6360:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6339:31:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e20646f6573206e6f74206578697374","id":8784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6372:22:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726","typeString":"literal_string \"Token does not exist\""},"value":"Token does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726","typeString":"literal_string \"Token does not exist\""}],"id":8775,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6331:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6331:64:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8786,"nodeType":"ExpressionStatement","src":"6331:64:23"},{"assignments":[8789],"declarations":[{"constant":false,"id":8789,"mutability":"mutable","name":"permission","nameLocation":"6431:10:23","nodeType":"VariableDeclaration","scope":8809,"src":"6406:35:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessPermission_$8390_storage_ptr","typeString":"struct MedicalRecordToken.AccessPermission"},"typeName":{"id":8788,"nodeType":"UserDefinedTypeName","pathNode":{"id":8787,"name":"AccessPermission","nameLocations":["6406:16:23"],"nodeType":"IdentifierPath","referencedDeclaration":8390,"src":"6406:16:23"},"referencedDeclaration":8390,"src":"6406:16:23","typeDescriptions":{"typeIdentifier":"t_struct$_AccessPermission_$8390_storage_ptr","typeString":"struct MedicalRecordToken.AccessPermission"}},"visibility":"internal"}],"id":8796,"initialValue":{"baseExpression":{"expression":{"baseExpression":{"id":8790,"name":"medicalRecords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8395,"src":"6444:14:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_MedicalRecord_$8379_storage_$","typeString":"mapping(uint256 => struct MedicalRecordToken.MedicalRecord storage ref)"}},"id":8792,"indexExpression":{"id":8791,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8760,"src":"6459:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6444:23:23","typeDescriptions":{"typeIdentifier":"t_struct$_MedicalRecord_$8379_storage","typeString":"struct MedicalRecordToken.MedicalRecord storage ref"}},"id":8793,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6468:17:23","memberName":"accessPermissions","nodeType":"MemberAccess","referencedDeclaration":8378,"src":"6444:41:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_AccessPermission_$8390_storage_$","typeString":"mapping(address => struct MedicalRecordToken.AccessPermission storage ref)"}},"id":8795,"indexExpression":{"id":8794,"name":"hospital","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8762,"src":"6486:8:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6444:51:23","typeDescriptions":{"typeIdentifier":"t_struct$_AccessPermission_$8390_storage","typeString":"struct MedicalRecordToken.AccessPermission storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6406:89:23"},{"expression":{"components":[{"expression":{"id":8797,"name":"permission","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8789,"src":"6526:10:23","typeDescriptions":{"typeIdentifier":"t_struct$_AccessPermission_$8390_storage_ptr","typeString":"struct MedicalRecordToken.AccessPermission storage pointer"}},"id":8798,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6537:9:23","memberName":"hasAccess","nodeType":"MemberAccess","referencedDeclaration":8381,"src":"6526:20:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":8799,"name":"permission","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8789,"src":"6560:10:23","typeDescriptions":{"typeIdentifier":"t_struct$_AccessPermission_$8390_storage_ptr","typeString":"struct MedicalRecordToken.AccessPermission storage pointer"}},"id":8800,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6571:9:23","memberName":"grantedAt","nodeType":"MemberAccess","referencedDeclaration":8383,"src":"6560:20:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":8801,"name":"permission","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8789,"src":"6594:10:23","typeDescriptions":{"typeIdentifier":"t_struct$_AccessPermission_$8390_storage_ptr","typeString":"struct MedicalRecordToken.AccessPermission storage pointer"}},"id":8802,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6605:9:23","memberName":"expiresAt","nodeType":"MemberAccess","referencedDeclaration":8385,"src":"6594:20:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":8803,"name":"permission","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8789,"src":"6628:10:23","typeDescriptions":{"typeIdentifier":"t_struct$_AccessPermission_$8390_storage_ptr","typeString":"struct MedicalRecordToken.AccessPermission storage pointer"}},"id":8804,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6639:13:23","memberName":"paymentAmount","nodeType":"MemberAccess","referencedDeclaration":8387,"src":"6628:24:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":8805,"name":"permission","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8789,"src":"6666:10:23","typeDescriptions":{"typeIdentifier":"t_struct$_AccessPermission_$8390_storage_ptr","typeString":"struct MedicalRecordToken.AccessPermission storage pointer"}},"id":8806,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6677:19:23","memberName":"xrplTransactionHash","nodeType":"MemberAccess","referencedDeclaration":8389,"src":"6666:30:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":8807,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6512:194:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bytes32_$","typeString":"tuple(bool,uint256,uint256,uint256,bytes32)"}},"functionReturnParameters":8774,"id":8808,"nodeType":"Return","src":"6505:201:23"}]},"documentation":{"id":8758,"nodeType":"StructuredDocumentation","src":"5923:156:23","text":" @dev Get access permission details for a hospital\n @param tokenId Medical record token ID\n @param hospital Hospital's address"},"functionSelector":"4db65851","id":8810,"implemented":true,"kind":"function","modifiers":[],"name":"getAccessPermission","nameLocation":"6093:19:23","nodeType":"FunctionDefinition","parameters":{"id":8763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8760,"mutability":"mutable","name":"tokenId","nameLocation":"6121:7:23","nodeType":"VariableDeclaration","scope":8810,"src":"6113:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8759,"name":"uint256","nodeType":"ElementaryTypeName","src":"6113:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8762,"mutability":"mutable","name":"hospital","nameLocation":"6138:8:23","nodeType":"VariableDeclaration","scope":8810,"src":"6130:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8761,"name":"address","nodeType":"ElementaryTypeName","src":"6130:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6112:35:23"},"returnParameters":{"id":8774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8765,"mutability":"mutable","name":"hasAccess","nameLocation":"6183:9:23","nodeType":"VariableDeclaration","scope":8810,"src":"6178:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8764,"name":"bool","nodeType":"ElementaryTypeName","src":"6178:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8767,"mutability":"mutable","name":"grantedAt","nameLocation":"6210:9:23","nodeType":"VariableDeclaration","scope":8810,"src":"6202:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8766,"name":"uint256","nodeType":"ElementaryTypeName","src":"6202:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8769,"mutability":"mutable","name":"expiresAt","nameLocation":"6237:9:23","nodeType":"VariableDeclaration","scope":8810,"src":"6229:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8768,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8771,"mutability":"mutable","name":"paymentAmount","nameLocation":"6264:13:23","nodeType":"VariableDeclaration","scope":8810,"src":"6256:21:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8770,"name":"uint256","nodeType":"ElementaryTypeName","src":"6256:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8773,"mutability":"mutable","name":"xrplTransactionHash","nameLocation":"6295:19:23","nodeType":"VariableDeclaration","scope":8810,"src":"6287:27:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8772,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6287:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6168:152:23"},"scope":8964,"src":"6084:629:23","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":8823,"nodeType":"Block","src":"6906:46:23","statements":[{"expression":{"baseExpression":{"id":8819,"name":"patientTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8404,"src":"6923:13:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":8821,"indexExpression":{"id":8820,"name":"patient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8813,"src":"6937:7:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6923:22:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"functionReturnParameters":8818,"id":8822,"nodeType":"Return","src":"6916:29:23"}]},"documentation":{"id":8811,"nodeType":"StructuredDocumentation","src":"6719:100:23","text":" @dev Get all token IDs owned by a patient\n @param patient Patient's address"},"functionSelector":"8681f447","id":8824,"implemented":true,"kind":"function","modifiers":[],"name":"getPatientTokens","nameLocation":"6833:16:23","nodeType":"FunctionDefinition","parameters":{"id":8814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8813,"mutability":"mutable","name":"patient","nameLocation":"6858:7:23","nodeType":"VariableDeclaration","scope":8824,"src":"6850:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8812,"name":"address","nodeType":"ElementaryTypeName","src":"6850:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6849:17:23"},"returnParameters":{"id":8818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8817,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8824,"src":"6888:16:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":8815,"name":"uint256","nodeType":"ElementaryTypeName","src":"6888:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8816,"nodeType":"ArrayTypeName","src":"6888:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6887:18:23"},"scope":8964,"src":"6824:128:23","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":8887,"nodeType":"Block","src":"7167:446:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":8834,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8827,"src":"7194:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8833,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1074,"src":"7185:8:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":8835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7185:17:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":8838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7214:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8837,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7206:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8836,"name":"address","nodeType":"ElementaryTypeName","src":"7206:7:23","typeDescriptions":{}}},"id":8839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7206:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7185:31:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e20646f6573206e6f74206578697374","id":8841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7218:22:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726","typeString":"literal_string \"Token does not exist\""},"value":"Token does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726","typeString":"literal_string \"Token does not exist\""}],"id":8832,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7177:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7177:64:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8843,"nodeType":"ExpressionStatement","src":"7177:64:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8845,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7272:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7276:6:23","memberName":"sender","nodeType":"MemberAccess","src":"7272:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":8847,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"7286:5:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":8848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7286:7:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7272:21:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8850,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7297:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7301:6:23","memberName":"sender","nodeType":"MemberAccess","src":"7297:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"baseExpression":{"id":8852,"name":"medicalRecords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8395,"src":"7311:14:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_MedicalRecord_$8379_storage_$","typeString":"mapping(uint256 => struct MedicalRecordToken.MedicalRecord storage ref)"}},"id":8854,"indexExpression":{"id":8853,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8827,"src":"7326:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7311:23:23","typeDescriptions":{"typeIdentifier":"t_struct$_MedicalRecord_$8379_storage","typeString":"struct MedicalRecordToken.MedicalRecord storage ref"}},"id":8855,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7335:14:23","memberName":"patientAddress","nodeType":"MemberAccess","referencedDeclaration":8367,"src":"7311:38:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7297:52:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7272:77:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420617574686f72697a6564","id":8858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7363:16:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36","typeString":"literal_string \"Not authorized\""},"value":"Not authorized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36","typeString":"literal_string \"Not authorized\""}],"id":8844,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7251:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7251:138:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8860,"nodeType":"ExpressionStatement","src":"7251:138:23"},{"expression":{"id":8869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"expression":{"baseExpression":{"id":8861,"name":"medicalRecords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8395,"src":"7400:14:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_MedicalRecord_$8379_storage_$","typeString":"mapping(uint256 => struct MedicalRecordToken.MedicalRecord storage ref)"}},"id":8863,"indexExpression":{"id":8862,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8827,"src":"7415:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7400:23:23","typeDescriptions":{"typeIdentifier":"t_struct$_MedicalRecord_$8379_storage","typeString":"struct MedicalRecordToken.MedicalRecord storage ref"}},"id":8864,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7424:17:23","memberName":"accessPermissions","nodeType":"MemberAccess","referencedDeclaration":8378,"src":"7400:41:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_AccessPermission_$8390_storage_$","typeString":"mapping(address => struct MedicalRecordToken.AccessPermission storage ref)"}},"id":8866,"indexExpression":{"id":8865,"name":"hospital","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8829,"src":"7442:8:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7400:51:23","typeDescriptions":{"typeIdentifier":"t_struct$_AccessPermission_$8390_storage","typeString":"struct MedicalRecordToken.AccessPermission storage ref"}},"id":8867,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7452:9:23","memberName":"hasAccess","nodeType":"MemberAccess","referencedDeclaration":8381,"src":"7400:61:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":8868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7464:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"7400:69:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8870,"nodeType":"ExpressionStatement","src":"7400:69:23"},{"expression":{"id":8880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"expression":{"baseExpression":{"id":8871,"name":"medicalRecords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8395,"src":"7479:14:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_MedicalRecord_$8379_storage_$","typeString":"mapping(uint256 => struct MedicalRecordToken.MedicalRecord storage ref)"}},"id":8873,"indexExpression":{"id":8872,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8827,"src":"7494:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7479:23:23","typeDescriptions":{"typeIdentifier":"t_struct$_MedicalRecord_$8379_storage","typeString":"struct MedicalRecordToken.MedicalRecord storage ref"}},"id":8874,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7503:17:23","memberName":"accessPermissions","nodeType":"MemberAccess","referencedDeclaration":8378,"src":"7479:41:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_AccessPermission_$8390_storage_$","typeString":"mapping(address => struct MedicalRecordToken.AccessPermission storage ref)"}},"id":8876,"indexExpression":{"id":8875,"name":"hospital","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8829,"src":"7521:8:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7479:51:23","typeDescriptions":{"typeIdentifier":"t_struct$_AccessPermission_$8390_storage","typeString":"struct MedicalRecordToken.AccessPermission storage ref"}},"id":8877,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7531:9:23","memberName":"expiresAt","nodeType":"MemberAccess","referencedDeclaration":8385,"src":"7479:61:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":8878,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"7543:5:23","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7549:9:23","memberName":"timestamp","nodeType":"MemberAccess","src":"7543:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7479:79:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8881,"nodeType":"ExpressionStatement","src":"7479:79:23"},{"eventCall":{"arguments":[{"id":8883,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8827,"src":"7588:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8884,"name":"hospital","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8829,"src":"7597:8:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":8882,"name":"AccessRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8433,"src":"7574:13:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address)"}},"id":8885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7574:32:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8886,"nodeType":"EmitStatement","src":"7569:37:23"}]},"documentation":{"id":8825,"nodeType":"StructuredDocumentation","src":"6958:140:23","text":" @dev Revoke access for a hospital\n @param tokenId Medical record token ID\n @param hospital Hospital's address"},"functionSelector":"d9a5ec1b","id":8888,"implemented":true,"kind":"function","modifiers":[],"name":"revokeAccess","nameLocation":"7112:12:23","nodeType":"FunctionDefinition","parameters":{"id":8830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8827,"mutability":"mutable","name":"tokenId","nameLocation":"7133:7:23","nodeType":"VariableDeclaration","scope":8888,"src":"7125:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8826,"name":"uint256","nodeType":"ElementaryTypeName","src":"7125:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8829,"mutability":"mutable","name":"hospital","nameLocation":"7150:8:23","nodeType":"VariableDeclaration","scope":8888,"src":"7142:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8828,"name":"address","nodeType":"ElementaryTypeName","src":"7142:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7124:35:23"},"returnParameters":{"id":8831,"nodeType":"ParameterList","parameters":[],"src":"7167:0:23"},"scope":8964,"src":"7103:510:23","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8930,"nodeType":"Block","src":"7771:280:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":8896,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8891,"src":"7798:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8895,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1074,"src":"7789:8:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":8897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7789:17:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":8900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7818:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8899,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7810:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8898,"name":"address","nodeType":"ElementaryTypeName","src":"7810:7:23","typeDescriptions":{}}},"id":8901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7810:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7789:31:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e20646f6573206e6f74206578697374","id":8903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7822:22:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726","typeString":"literal_string \"Token does not exist\""},"value":"Token does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726","typeString":"literal_string \"Token does not exist\""}],"id":8894,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7781:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7781:64:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8905,"nodeType":"ExpressionStatement","src":"7781:64:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8907,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7876:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7880:6:23","memberName":"sender","nodeType":"MemberAccess","src":"7876:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":8909,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"7890:5:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":8910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7890:7:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7876:21:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8912,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7901:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7905:6:23","memberName":"sender","nodeType":"MemberAccess","src":"7901:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"baseExpression":{"id":8914,"name":"medicalRecords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8395,"src":"7915:14:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_MedicalRecord_$8379_storage_$","typeString":"mapping(uint256 => struct MedicalRecordToken.MedicalRecord storage ref)"}},"id":8916,"indexExpression":{"id":8915,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8891,"src":"7930:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7915:23:23","typeDescriptions":{"typeIdentifier":"t_struct$_MedicalRecord_$8379_storage","typeString":"struct MedicalRecordToken.MedicalRecord storage ref"}},"id":8917,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7939:14:23","memberName":"patientAddress","nodeType":"MemberAccess","referencedDeclaration":8367,"src":"7915:38:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7901:52:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7876:77:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420617574686f72697a6564","id":8920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7967:16:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36","typeString":"literal_string \"Not authorized\""},"value":"Not authorized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36","typeString":"literal_string \"Not authorized\""}],"id":8906,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7855:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7855:138:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8922,"nodeType":"ExpressionStatement","src":"7855:138:23"},{"expression":{"id":8928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":8923,"name":"medicalRecords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8395,"src":"8004:14:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_MedicalRecord_$8379_storage_$","typeString":"mapping(uint256 => struct MedicalRecordToken.MedicalRecord storage ref)"}},"id":8925,"indexExpression":{"id":8924,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8891,"src":"8019:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8004:23:23","typeDescriptions":{"typeIdentifier":"t_struct$_MedicalRecord_$8379_storage","typeString":"struct MedicalRecordToken.MedicalRecord storage ref"}},"id":8926,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8028:8:23","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":8373,"src":"8004:32:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":8927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8039:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"8004:40:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8929,"nodeType":"ExpressionStatement","src":"8004:40:23"}]},"documentation":{"id":8889,"nodeType":"StructuredDocumentation","src":"7619:97:23","text":" @dev Deactivate a medical record\n @param tokenId Medical record token ID"},"functionSelector":"19c1833f","id":8931,"implemented":true,"kind":"function","modifiers":[],"name":"deactivateRecord","nameLocation":"7730:16:23","nodeType":"FunctionDefinition","parameters":{"id":8892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8891,"mutability":"mutable","name":"tokenId","nameLocation":"7755:7:23","nodeType":"VariableDeclaration","scope":8931,"src":"7747:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8890,"name":"uint256","nodeType":"ElementaryTypeName","src":"7747:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7746:17:23"},"returnParameters":{"id":8893,"nodeType":"ParameterList","parameters":[],"src":"7771:0:23"},"scope":8964,"src":"7721:330:23","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[892,1896],"body":{"id":8946,"nodeType":"Block","src":"8200:47:23","statements":[{"expression":{"arguments":[{"id":8943,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8933,"src":"8232:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8941,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"8217:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_MedicalRecordToken_$8964_$","typeString":"type(contract super MedicalRecordToken)"}},"id":8942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8223:8:23","memberName":"tokenURI","nodeType":"MemberAccess","referencedDeclaration":1896,"src":"8217:14:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) view returns (string memory)"}},"id":8944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8217:23:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":8940,"id":8945,"nodeType":"Return","src":"8210:30:23"}]},"functionSelector":"c87b56dd","id":8947,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"8103:8:23","nodeType":"FunctionDefinition","overrides":{"id":8937,"nodeType":"OverrideSpecifier","overrides":[{"id":8935,"name":"ERC721","nameLocations":["8150:6:23"],"nodeType":"IdentifierPath","referencedDeclaration":1653,"src":"8150:6:23"},{"id":8936,"name":"ERC721URIStorage","nameLocations":["8158:16:23"],"nodeType":"IdentifierPath","referencedDeclaration":1916,"src":"8158:16:23"}],"src":"8141:34:23"},"parameters":{"id":8934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8933,"mutability":"mutable","name":"tokenId","nameLocation":"8120:7:23","nodeType":"VariableDeclaration","scope":8947,"src":"8112:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8932,"name":"uint256","nodeType":"ElementaryTypeName","src":"8112:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8111:17:23"},"returnParameters":{"id":8940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8939,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8947,"src":"8185:13:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8938,"name":"string","nodeType":"ElementaryTypeName","src":"8185:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8184:15:23"},"scope":8964,"src":"8094:153:23","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[797,1839],"body":{"id":8962,"nodeType":"Block","src":"8362:60:23","statements":[{"expression":{"arguments":[{"id":8959,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8949,"src":"8403:11:23","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":8957,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"8379:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_MedicalRecordToken_$8964_$","typeString":"type(contract super MedicalRecordToken)"}},"id":8958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8385:17:23","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":1839,"src":"8379:23:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":8960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8379:36:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":8956,"id":8961,"nodeType":"Return","src":"8372:43:23"}]},"functionSelector":"01ffc9a7","id":8963,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"8262:17:23","nodeType":"FunctionDefinition","overrides":{"id":8953,"nodeType":"OverrideSpecifier","overrides":[{"id":8951,"name":"ERC721","nameLocations":["8321:6:23"],"nodeType":"IdentifierPath","referencedDeclaration":1653,"src":"8321:6:23"},{"id":8952,"name":"ERC721URIStorage","nameLocations":["8329:16:23"],"nodeType":"IdentifierPath","referencedDeclaration":1916,"src":"8329:16:23"}],"src":"8312:34:23"},"parameters":{"id":8950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8949,"mutability":"mutable","name":"interfaceId","nameLocation":"8287:11:23","nodeType":"VariableDeclaration","scope":8963,"src":"8280:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":8948,"name":"bytes4","nodeType":"ElementaryTypeName","src":"8280:6:23","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"8279:20:23"},"returnParameters":{"id":8956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8955,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8963,"src":"8356:4:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8954,"name":"bool","nodeType":"ElementaryTypeName","src":"8356:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8355:6:23"},"scope":8964,"src":"8253:169:23","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":8965,"src":"447:7977:23","usedErrors":[393,398,607,612,621,626,631,638,643,648],"usedEvents":[404,547,554,1669,1678,1687,8417,8427,8433]}],"src":"32:8392:23"},"id":23},"contracts/interfaces/IFlareContracts.sol":{"ast":{"absolutePath":"contracts/interfaces/IFlareContracts.sol","exportedSymbols":{"IFlareContractRegistry":[9063],"IFtsoRegistry":[8988],"ILayerCake":[9031],"IPriceSubmitter":[9048],"IStateConnector":[9016]},"id":9064,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8966,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:24"},{"abstract":false,"baseContracts":[],"canonicalName":"IFtsoRegistry","contractDependencies":[],"contractKind":"interface","documentation":{"id":8967,"nodeType":"StructuredDocumentation","src":"58:90:24","text":" @title IFlareContracts\n @dev Interface definitions for Flare system contracts"},"fullyImplemented":false,"id":8988,"linearizedBaseContracts":[8988],"name":"IFtsoRegistry","nameLocation":"211:13:24","nodeType":"ContractDefinition","nodes":[{"functionSelector":"a69afdc6","id":8978,"implemented":false,"kind":"function","modifiers":[],"name":"getCurrentPriceWithDecimals","nameLocation":"240:27:24","nodeType":"FunctionDefinition","parameters":{"id":8970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8969,"mutability":"mutable","name":"_symbol","nameLocation":"282:7:24","nodeType":"VariableDeclaration","scope":8978,"src":"268:21:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8968,"name":"string","nodeType":"ElementaryTypeName","src":"268:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"267:23:24"},"returnParameters":{"id":8977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8972,"mutability":"mutable","name":"_price","nameLocation":"330:6:24","nodeType":"VariableDeclaration","scope":8978,"src":"322:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8971,"name":"uint256","nodeType":"ElementaryTypeName","src":"322:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8974,"mutability":"mutable","name":"_timestamp","nameLocation":"346:10:24","nodeType":"VariableDeclaration","scope":8978,"src":"338:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8973,"name":"uint256","nodeType":"ElementaryTypeName","src":"338:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8976,"mutability":"mutable","name":"_decimals","nameLocation":"366:9:24","nodeType":"VariableDeclaration","scope":8978,"src":"358:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8975,"name":"uint256","nodeType":"ElementaryTypeName","src":"358:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"321:55:24"},"scope":8988,"src":"231:146:24","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"42a0f243","id":8987,"implemented":false,"kind":"function","modifiers":[],"name":"getCurrentPrice","nameLocation":"392:15:24","nodeType":"FunctionDefinition","parameters":{"id":8981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8980,"mutability":"mutable","name":"_symbol","nameLocation":"422:7:24","nodeType":"VariableDeclaration","scope":8987,"src":"408:21:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8979,"name":"string","nodeType":"ElementaryTypeName","src":"408:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"407:23:24"},"returnParameters":{"id":8986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8983,"mutability":"mutable","name":"_price","nameLocation":"470:6:24","nodeType":"VariableDeclaration","scope":8987,"src":"462:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8982,"name":"uint256","nodeType":"ElementaryTypeName","src":"462:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8985,"mutability":"mutable","name":"_timestamp","nameLocation":"486:10:24","nodeType":"VariableDeclaration","scope":8987,"src":"478:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8984,"name":"uint256","nodeType":"ElementaryTypeName","src":"478:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"461:36:24"},"scope":8988,"src":"383:115:24","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":9064,"src":"201:299:24","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IStateConnector","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":9016,"linearizedBaseContracts":[9016],"name":"IStateConnector","nameLocation":"547:15:24","nodeType":"ContractDefinition","nodes":[{"functionSelector":"6238f354","id":8995,"implemented":false,"kind":"function","modifiers":[],"name":"requestAttestation","nameLocation":"578:18:24","nodeType":"FunctionDefinition","parameters":{"id":8991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8990,"mutability":"mutable","name":"data","nameLocation":"612:4:24","nodeType":"VariableDeclaration","scope":8995,"src":"597:19:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":8989,"name":"bytes","nodeType":"ElementaryTypeName","src":"597:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"596:21:24"},"returnParameters":{"id":8994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8993,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8995,"src":"636:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8992,"name":"bytes32","nodeType":"ElementaryTypeName","src":"636:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"635:9:24"},"scope":9016,"src":"569:76:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"a3112a64","id":9002,"implemented":false,"kind":"function","modifiers":[],"name":"getAttestation","nameLocation":"659:14:24","nodeType":"FunctionDefinition","parameters":{"id":8998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8997,"mutability":"mutable","name":"id","nameLocation":"682:2:24","nodeType":"VariableDeclaration","scope":9002,"src":"674:10:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8996,"name":"bytes32","nodeType":"ElementaryTypeName","src":"674:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"673:12:24"},"returnParameters":{"id":9001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9000,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9002,"src":"709:12:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":8999,"name":"bytes","nodeType":"ElementaryTypeName","src":"709:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"708:14:24"},"scope":9016,"src":"650:73:24","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"5ad350fa","id":9015,"implemented":false,"kind":"function","modifiers":[],"name":"verifyAttestation","nameLocation":"738:17:24","nodeType":"FunctionDefinition","parameters":{"id":9011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9004,"mutability":"mutable","name":"attestationType","nameLocation":"773:15:24","nodeType":"VariableDeclaration","scope":9015,"src":"765:23:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9003,"name":"bytes32","nodeType":"ElementaryTypeName","src":"765:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":9006,"mutability":"mutable","name":"sourceId","nameLocation":"806:8:24","nodeType":"VariableDeclaration","scope":9015,"src":"798:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9005,"name":"bytes32","nodeType":"ElementaryTypeName","src":"798:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":9008,"mutability":"mutable","name":"requestBody","nameLocation":"839:11:24","nodeType":"VariableDeclaration","scope":9015,"src":"824:26:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":9007,"name":"bytes","nodeType":"ElementaryTypeName","src":"824:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":9010,"mutability":"mutable","name":"responseBody","nameLocation":"875:12:24","nodeType":"VariableDeclaration","scope":9015,"src":"860:27:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":9009,"name":"bytes","nodeType":"ElementaryTypeName","src":"860:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"755:138:24"},"returnParameters":{"id":9014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9013,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9015,"src":"917:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9012,"name":"bool","nodeType":"ElementaryTypeName","src":"917:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"916:6:24"},"scope":9016,"src":"729:194:24","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":9064,"src":"537:388:24","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"ILayerCake","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":9031,"linearizedBaseContracts":[9031],"name":"ILayerCake","nameLocation":"986:10:24","nodeType":"ContractDefinition","nodes":[{"functionSelector":"2f7b52cc","id":9023,"implemented":false,"kind":"function","modifiers":[],"name":"sendXRPLTransaction","nameLocation":"1012:19:24","nodeType":"FunctionDefinition","parameters":{"id":9019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9018,"mutability":"mutable","name":"transaction","nameLocation":"1047:11:24","nodeType":"VariableDeclaration","scope":9023,"src":"1032:26:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":9017,"name":"bytes","nodeType":"ElementaryTypeName","src":"1032:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1031:28:24"},"returnParameters":{"id":9022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9021,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9023,"src":"1078:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9020,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1078:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1077:9:24"},"scope":9031,"src":"1003:84:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"999cd9a3","id":9030,"implemented":false,"kind":"function","modifiers":[],"name":"getXRPLAccountInfo","nameLocation":"1101:18:24","nodeType":"FunctionDefinition","parameters":{"id":9026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9025,"mutability":"mutable","name":"xrplAddress","nameLocation":"1136:11:24","nodeType":"VariableDeclaration","scope":9030,"src":"1120:27:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":9024,"name":"string","nodeType":"ElementaryTypeName","src":"1120:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1119:29:24"},"returnParameters":{"id":9029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9028,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9030,"src":"1172:12:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":9027,"name":"bytes","nodeType":"ElementaryTypeName","src":"1172:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1171:14:24"},"scope":9031,"src":"1092:94:24","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":9064,"src":"976:212:24","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IPriceSubmitter","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":9048,"linearizedBaseContracts":[9048],"name":"IPriceSubmitter","nameLocation":"1235:15:24","nodeType":"ContractDefinition","nodes":[{"functionSelector":"8fc6f667","id":9038,"implemented":false,"kind":"function","modifiers":[],"name":"submitHash","nameLocation":"1266:10:24","nodeType":"FunctionDefinition","parameters":{"id":9036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9033,"mutability":"mutable","name":"_epochId","nameLocation":"1285:8:24","nodeType":"VariableDeclaration","scope":9038,"src":"1277:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9032,"name":"uint256","nodeType":"ElementaryTypeName","src":"1277:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9035,"mutability":"mutable","name":"_hash","nameLocation":"1303:5:24","nodeType":"VariableDeclaration","scope":9038,"src":"1295:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9034,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1295:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1276:33:24"},"returnParameters":{"id":9037,"nodeType":"ParameterList","parameters":[],"src":"1318:0:24"},"scope":9048,"src":"1257:62:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"53048c75","id":9047,"implemented":false,"kind":"function","modifiers":[],"name":"revealPrice","nameLocation":"1333:11:24","nodeType":"FunctionDefinition","parameters":{"id":9045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9040,"mutability":"mutable","name":"_epochId","nameLocation":"1353:8:24","nodeType":"VariableDeclaration","scope":9047,"src":"1345:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9039,"name":"uint256","nodeType":"ElementaryTypeName","src":"1345:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9042,"mutability":"mutable","name":"_price","nameLocation":"1371:6:24","nodeType":"VariableDeclaration","scope":9047,"src":"1363:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9041,"name":"uint256","nodeType":"ElementaryTypeName","src":"1363:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9044,"mutability":"mutable","name":"_random","nameLocation":"1387:7:24","nodeType":"VariableDeclaration","scope":9047,"src":"1379:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9043,"name":"uint256","nodeType":"ElementaryTypeName","src":"1379:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1344:51:24"},"returnParameters":{"id":9046,"nodeType":"ParameterList","parameters":[],"src":"1404:0:24"},"scope":9048,"src":"1324:81:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":9064,"src":"1225:182:24","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IFlareContractRegistry","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":9063,"linearizedBaseContracts":[9063],"name":"IFlareContractRegistry","nameLocation":"1457:22:24","nodeType":"ContractDefinition","nodes":[{"functionSelector":"82760fca","id":9055,"implemented":false,"kind":"function","modifiers":[],"name":"getContractAddressByName","nameLocation":"1495:24:24","nodeType":"FunctionDefinition","parameters":{"id":9051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9050,"mutability":"mutable","name":"_name","nameLocation":"1536:5:24","nodeType":"VariableDeclaration","scope":9055,"src":"1520:21:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":9049,"name":"string","nodeType":"ElementaryTypeName","src":"1520:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1519:23:24"},"returnParameters":{"id":9054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9053,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9055,"src":"1566:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9052,"name":"address","nodeType":"ElementaryTypeName","src":"1566:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1565:9:24"},"scope":9063,"src":"1486:89:24","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"159354a2","id":9062,"implemented":false,"kind":"function","modifiers":[],"name":"getContractAddressByHash","nameLocation":"1589:24:24","nodeType":"FunctionDefinition","parameters":{"id":9058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9057,"mutability":"mutable","name":"_nameHash","nameLocation":"1622:9:24","nodeType":"VariableDeclaration","scope":9062,"src":"1614:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9056,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1614:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1613:19:24"},"returnParameters":{"id":9061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9060,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9062,"src":"1656:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9059,"name":"address","nodeType":"ElementaryTypeName","src":"1656:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1655:9:24"},"scope":9063,"src":"1580:85:24","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":9064,"src":"1447:220:24","usedErrors":[],"usedEvents":[]}],"src":"32:1635:24"},"id":24}},"contracts":{"@openzeppelin/contracts/access/AccessControl.sol":{"AccessControl":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x1a6b4f6b7798ab80929d491b89d5427a9b3338c0fd1acd0ba325f69c6f1646af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bb7f346c12a14dc622bc105ce3c47202fbc89f4b153a28a63bb68193297330c\",\"dweb:/ipfs/QmagwF8P3bUBXwdo159ueEnY9dLSvEWwK24kk2op58egwG\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/IAccessControl.sol":{"IAccessControl":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC4906.sol":{"IERC4906":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_toTokenId","type":"uint256"}],"name":"BatchMetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"MetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Metadata Update Extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC4906.sol\":\"IERC4906\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x856ca1885aec23d54da3f2760b5d216d1b28ad20f798000336375a30dbbc1558\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc725c462ccbf284432d3123ab8c9bab24903730cae227ae4945878039d2fe54\",\"dweb:/ipfs/QmdiEVMvm8njp96dm2s4mThYBD74tY59mNP6s7CzKkGHAh\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xca34c490d41c332106d30b657f00dc028532cb6b9fef2b1729670ce476b36bce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef5e7685d50ed8aae2104a7eb2c31ae5a3b508f24fadfa7611f92f819201aee9\",\"dweb:/ipfs/QmYbTD32FPrEfP1hkniQmRxVUWp8GTSqFV1Bhwx1HVirse\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ERC721":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x6ead281d4569c26b3dee7313aefff24add906f3600b57d8aef1255a17d6b34e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aec0f9c9f14f829353663e1946bf0ea00a1771ff6ddb4f7cbe14893397b4b55c\",\"dweb:/ipfs/QmVMR3SdijdM2BpL9Yp3u7Riaxqgs1FnZ1Rfg2CMjKGtVS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xf46268c37522320bb2119a5a394bc5c739a95c0c574c8d08e8c643f4d06e5c76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://517e4b295f35b9947c72ad7379a6089439ece7bb6f4a2ea0a159da13046c039e\",\"dweb:/ipfs/QmZXzkSfLUbvujig3zVbpDHykpHhqLpvQtdiN3B5j4TA3u\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xc2dfdc8fbc8fdb142575c90568e237b809a1feaccff23e32d00131887a08dc36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbc1d283ee77da43d61661b5ba1adeb427d6a6224335494a9a857dce41d9f1d6\",\"dweb:/ipfs/QmTnA35z7XzkxFSRUqB6CGVH1nhmvajwnDNfA5PiKmYuCi\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC-721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC-721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"ERC721URIStorage":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_toTokenId","type":"uint256"}],"name":"BatchMetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"MetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-721 token with storage based token URI management.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":\"ERC721URIStorage\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x856ca1885aec23d54da3f2760b5d216d1b28ad20f798000336375a30dbbc1558\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc725c462ccbf284432d3123ab8c9bab24903730cae227ae4945878039d2fe54\",\"dweb:/ipfs/QmdiEVMvm8njp96dm2s4mThYBD74tY59mNP6s7CzKkGHAh\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xca34c490d41c332106d30b657f00dc028532cb6b9fef2b1729670ce476b36bce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef5e7685d50ed8aae2104a7eb2c31ae5a3b508f24fadfa7611f92f819201aee9\",\"dweb:/ipfs/QmYbTD32FPrEfP1hkniQmRxVUWp8GTSqFV1Bhwx1HVirse\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x6ead281d4569c26b3dee7313aefff24add906f3600b57d8aef1255a17d6b34e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aec0f9c9f14f829353663e1946bf0ea00a1771ff6ddb4f7cbe14893397b4b55c\",\"dweb:/ipfs/QmVMR3SdijdM2BpL9Yp3u7Riaxqgs1FnZ1Rfg2CMjKGtVS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0xb9dc602a845c73d11f1fe38039c0c2cf70fedd2d4afd877c0ed2d0383ffaa232\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59eb46224e996c2f9ecb9a821e65b920c2ecfe9df734613c3df9831de373491c\",\"dweb:/ipfs/QmTsZzJTqRavv64zyaWovcWkUNwfU3uo8uiUjrMFEm8MMj\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xf46268c37522320bb2119a5a394bc5c739a95c0c574c8d08e8c643f4d06e5c76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://517e4b295f35b9947c72ad7379a6089439ece7bb6f4a2ea0a159da13046c039e\",\"dweb:/ipfs/QmZXzkSfLUbvujig3zVbpDHykpHhqLpvQtdiN3B5j4TA3u\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xc2dfdc8fbc8fdb142575c90568e237b809a1feaccff23e32d00131887a08dc36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbc1d283ee77da43d61661b5ba1adeb427d6a6224335494a9a857dce41d9f1d6\",\"dweb:/ipfs/QmTnA35z7XzkxFSRUqB6CGVH1nhmvajwnDNfA5PiKmYuCi\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"IERC721Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xf46268c37522320bb2119a5a394bc5c739a95c0c574c8d08e8c643f4d06e5c76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://517e4b295f35b9947c72ad7379a6089439ece7bb6f4a2ea0a159da13046c039e\",\"dweb:/ipfs/QmZXzkSfLUbvujig3zVbpDHykpHhqLpvQtdiN3B5j4TA3u\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"ERC721Utils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bedc5186332f3f0d5bf6a506dbab4912c55984f091e811dc439d0fee33175d9b64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE 0xDC MLOAD DUP7 CALLER 0x2F EXTCODEHASH 0xD JUMPDEST 0xF6 0xA5 MOD 0xDB 0xAB 0x49 SLT 0xC5 MSIZE DUP5 CREATE SWAP2 0xE8 GT 0xDC NUMBER SWAP14 0xF 0xEE CALLER OR 0x5D SWAP12 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"431:1490:12:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;431:1490:12;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bedc5186332f3f0d5bf6a506dbab4912c55984f091e811dc439d0fee33175d9b64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE 0xDC MLOAD DUP7 CALLER 0x2F EXTCODEHASH 0xD JUMPDEST 0xF6 0xA5 MOD 0xDB 0xAB 0x49 SLT 0xC5 MSIZE DUP5 CREATE SWAP2 0xE8 GT 0xDC NUMBER SWAP14 0xF 0xEE CALLER OR 0x5D SWAP12 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"431:1490:12:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library that provide common ERC-721 utility functions. See https://eips.ethereum.org/EIPS/eip-721[ERC-721]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":\"ERC721Utils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xc2dfdc8fbc8fdb142575c90568e237b809a1feaccff23e32d00131887a08dc36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbc1d283ee77da43d61661b5ba1adeb427d6a6224335494a9a857dce41d9f1d6\",\"dweb:/ipfs/QmTnA35z7XzkxFSRUqB6CGVH1nhmvajwnDNfA5PiKmYuCi\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201ae1761b6a3c5d2458c4708d3276257bae9b475b3c412a0ebb4584fd955181ef64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE 0xE1 PUSH23 0x1B6A3C5D2458C4708D3276257BAE9B475B3C412A0EBB45 DUP5 REVERT SWAP6 MLOAD DUP2 0xEF PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"657:1315:14:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;657:1315:14;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201ae1761b6a3c5d2458c4708d3276257bae9b475b3c412a0ebb4584fd955181ef64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE 0xE1 PUSH23 0x1B6A3C5D2458C4708D3276257BAE9B475B3C412A0EBB45 DUP5 REVERT SWAP6 MLOAD DUP2 0xEF PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"657:1315:14:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"},{"inputs":[],"name":"StringsInvalidAddressFormat","type":"error"},{"inputs":[],"name":"StringsInvalidChar","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b1c86b651b296f4d0a2ef0fd743497384b12e402f602b3c0f834bc25cb2c3df064736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 0xC8 PUSH12 0x651B296F4D0A2EF0FD743497 CODESIZE 0x4B SLT 0xE4 MUL 0xF6 MUL 0xB3 0xC0 0xF8 CALLVALUE 0xBC 0x25 0xCB 0x2C RETURNDATASIZE CREATE PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"297:18982:16:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;297:18982:16;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b1c86b651b296f4d0a2ef0fd743497384b12e402f602b3c0f834bc25cb2c3df064736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 0xC8 PUSH12 0x651B296F4D0A2EF0FD743497 CODESIZE 0x4B SLT 0xE4 MUL 0xF6 MUL 0xB3 0xC0 0xF8 CALLVALUE 0xBC 0x25 0xCB 0x2C RETURNDATASIZE CREATE PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"297:18982:16:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidAddressFormat\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidChar\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}],\"StringsInvalidAddressFormat()\":[{\"details\":\"The string being parsed is not a properly formatted address.\"}],\"StringsInvalidChar()\":[{\"details\":\"The string being parsed contains characters that are not in scope of the given base.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208fcce410fc5cfa45c0c6616aebc7576f43e383fe066bccc2ae83043f7884d82164736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 0xCC 0xE4 LT 0xFC 0x5C STATICCALL GASLIMIT 0xC0 0xC6 PUSH2 0x6AEB 0xC7 JUMPI PUSH16 0x43E383FE066BCCC2AE83043F7884D821 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"281:31863:19:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;281:31863:19;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208fcce410fc5cfa45c0c6616aebc7576f43e383fe066bccc2ae83043f7884d82164736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 0xCC 0xE4 LT 0xFC 0x5C STATICCALL GASLIMIT 0xC0 0xC6 PUSH2 0x6AEB 0xC7 JUMPI PUSH16 0x43E383FE066BCCC2AE83043F7884D821 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"281:31863:19:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e57f6f97354ac8290db535b2e3f293653f51ec40206fa8b2bf9396c18f98af2564736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 PUSH32 0x6F97354AC8290DB535B2E3F293653F51EC40206FA8B2BF9396C18F98AF256473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"769:34173:20:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;769:34173:20;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e57f6f97354ac8290db535b2e3f293653f51ec40206fa8b2bf9396c18f98af2564736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 PUSH32 0x6F97354AC8290DB535B2E3F293653F51EC40206FA8B2BF9396C18F98AF256473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"769:34173:20:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209e65a3f6bb9e28d8169ea079d4b688370f4365b9ed0ac7dd77283f5739bebf8d64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 PUSH6 0xA3F6BB9E28D8 AND SWAP15 LOG0 PUSH26 0xD4B688370F4365B9ED0AC7DD77283F5739BEBF8D64736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"258:2354:21:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;258:2354:21;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209e65a3f6bb9e28d8169ea079d4b688370f4365b9ed0ac7dd77283f5739bebf8d64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 PUSH6 0xA3F6BB9E28D8 AND SWAP15 LOG0 PUSH26 0xD4B688370F4365B9ED0AC7DD77283F5739BEBF8D64736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"258:2354:21:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"contracts/AutismMedicalSystemSimple.sol":{"AutismMedicalSystemSimple":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_toTokenId","type":"uint256"}],"name":"BatchMetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"billId","type":"bytes32"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":true,"internalType":"address","name":"patient","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"insurancePortion","type":"uint256"}],"name":"BillCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"patient","type":"address"},{"indexed":false,"internalType":"enum AutismMedicalSystemSimple.SeverityLevel","name":"newLevel","type":"uint8"},{"indexed":false,"internalType":"uint256","name":"evaluationTokenId","type":"uint256"}],"name":"DiagnosisUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":true,"internalType":"address","name":"patient","type":"address"},{"indexed":false,"internalType":"enum AutismMedicalSystemSimple.EvaluationType","name":"evaluationType","type":"uint8"},{"indexed":false,"internalType":"bool","name":"paidByInsurance","type":"bool"}],"name":"EvaluationUploaded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":true,"internalType":"address","name":"accessor","type":"address"},{"indexed":false,"internalType":"string","name":"purpose","type":"string"},{"indexed":false,"internalType":"bool","name":"requiresPayment","type":"bool"}],"name":"FileAccessGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"string","name":"insuranceProvider","type":"string"},{"indexed":false,"internalType":"string","name":"xrplTxHash","type":"string"},{"indexed":false,"internalType":"uint256","name":"amountUSD","type":"uint256"}],"name":"InsurancePaymentProcessed","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"MetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"EVALUATOR_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"HOSPITAL_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"INSURANCE_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"string","name":"purpose","type":"string"}],"name":"accessEvaluationFile","outputs":[{"internalType":"string","name":"fileLocation","type":"string"},{"internalType":"bytes32","name":"encryptedKey","type":"bytes32"},{"internalType":"bool","name":"requiresPayment","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"accessHistory","outputs":[{"internalType":"address","name":"accessor","type":"address"},{"internalType":"uint256","name":"accessTime","type":"uint256"},{"internalType":"string","name":"purpose","type":"string"},{"internalType":"bool","name":"isPaid","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"provider","type":"string"}],"name":"addVerifiedInsurance","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"evaluationTokenId","type":"uint256"},{"internalType":"uint256","name":"serviceAmountUSD","type":"uint256"},{"internalType":"string","name":"serviceDescription","type":"string"}],"name":"billPatientThroughInsurance","outputs":[{"internalType":"bytes32","name":"billId","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"evaluations","outputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"patient","type":"address"},{"internalType":"address","name":"evaluator","type":"address"},{"internalType":"bytes32","name":"fileHash","type":"bytes32"},{"internalType":"string","name":"fileLocation","type":"string"},{"internalType":"bytes32","name":"encryptedKey","type":"bytes32"},{"internalType":"enum AutismMedicalSystemSimple.EvaluationType","name":"evaluationType","type":"uint8"},{"internalType":"uint256","name":"evaluationDate","type":"uint256"},{"internalType":"uint256","name":"uploadDate","type":"uint256"},{"internalType":"bool","name":"isPaidByInsurance","type":"bool"},{"internalType":"string","name":"insurancePaymentTx","type":"string"},{"internalType":"uint256","name":"evaluationCostUSD","type":"uint256"},{"components":[{"internalType":"string","name":"insuranceProvider","type":"string"},{"internalType":"string","name":"policyNumber","type":"string"},{"internalType":"string","name":"memberID","type":"string"},{"internalType":"string","name":"insuranceXRPL","type":"string"},{"internalType":"uint256","name":"coveragePercentage","type":"uint256"},{"internalType":"bool","name":"isVerified","type":"bool"}],"internalType":"struct AutismMedicalSystemSimple.InsuranceInfo","name":"insurance","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getAccessHistory","outputs":[{"components":[{"internalType":"address","name":"accessor","type":"address"},{"internalType":"uint256","name":"accessTime","type":"uint256"},{"internalType":"string","name":"purpose","type":"string"},{"internalType":"bool","name":"isPaid","type":"bool"}],"internalType":"struct AutismMedicalSystemSimple.AccessRecord[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getEvaluation","outputs":[{"internalType":"address","name":"patient","type":"address"},{"internalType":"enum AutismMedicalSystemSimple.EvaluationType","name":"evaluationType","type":"uint8"},{"internalType":"uint256","name":"evaluationDate","type":"uint256"},{"internalType":"bool","name":"isPaidByInsurance","type":"bool"},{"internalType":"string","name":"insuranceProvider","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getEvaluationTypes","outputs":[{"internalType":"string[]","name":"","type":"string[]"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"patient","type":"address"}],"name":"getPatientBills","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"patient","type":"address"}],"name":"getPatientDiagnosis","outputs":[{"internalType":"enum AutismMedicalSystemSimple.SeverityLevel","name":"currentLevel","type":"uint8"},{"internalType":"uint256","name":"firstDiagnosisDate","type":"uint256"},{"internalType":"uint256","name":"lastUpdateDate","type":"uint256"},{"internalType":"string","name":"primaryDiagnosis","type":"string"},{"internalType":"uint256","name":"totalEvals","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getSeverityLevels","outputs":[{"internalType":"string[]","name":"","type":"string[]"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"address","name":"","type":"address"}],"name":"hasPaidAccess","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"medicalBills","outputs":[{"internalType":"bytes32","name":"billId","type":"bytes32"},{"internalType":"uint256","name":"evaluationTokenId","type":"uint256"},{"internalType":"address","name":"hospital","type":"address"},{"internalType":"address","name":"patient","type":"address"},{"internalType":"uint256","name":"amountUSD","type":"uint256"},{"internalType":"uint256","name":"insurancePortion","type":"uint256"},{"internalType":"uint256","name":"patientPortion","type":"uint256"},{"internalType":"bool","name":"isPaid","type":"bool"},{"internalType":"uint256","name":"createdAt","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"patientBills","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"patientDiagnosis","outputs":[{"internalType":"enum AutismMedicalSystemSimple.SeverityLevel","name":"currentLevel","type":"uint8"},{"internalType":"uint256","name":"firstDiagnosisDate","type":"uint256"},{"internalType":"uint256","name":"lastUpdateDate","type":"uint256"},{"internalType":"string","name":"primaryDiagnosis","type":"string"},{"internalType":"uint256","name":"totalEvaluations","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"billId","type":"bytes32"},{"internalType":"string","name":"xrplPaymentTx","type":"string"}],"name":"payBill","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalDiagnosedPatients","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalEvaluations","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalInsurancePayments","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"patient","type":"address"},{"internalType":"uint256","name":"evaluationTokenId","type":"uint256"},{"internalType":"enum AutismMedicalSystemSimple.SeverityLevel","name":"newLevel","type":"uint8"},{"internalType":"string","name":"primaryDiagnosis","type":"string"}],"name":"updateDiagnosis","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"string","name":"insuranceProvider","type":"string"},{"internalType":"string","name":"policyNumber","type":"string"},{"internalType":"string","name":"memberID","type":"string"},{"internalType":"string","name":"insuranceXRPL","type":"string"},{"internalType":"uint256","name":"coveragePercentage","type":"uint256"},{"internalType":"bool","name":"isVerified","type":"bool"}],"internalType":"struct AutismMedicalSystemSimple.InsuranceInfo","name":"insurance","type":"tuple"},{"internalType":"bytes32","name":"fileHash","type":"bytes32"},{"internalType":"string","name":"fileLocation","type":"string"},{"internalType":"bytes32","name":"encryptedKey","type":"bytes32"},{"internalType":"enum AutismMedicalSystemSimple.EvaluationType","name":"evaluationType","type":"uint8"},{"internalType":"uint256","name":"evaluationCostUSD","type":"uint256"},{"internalType":"string","name":"insurancePaymentTxHash","type":"string"}],"name":"uploadEvaluationWithInsurance","outputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"","type":"string"}],"name":"verifiedInsuranceProviders","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_2125":{"entryPoint":null,"id":2125,"parameterSlots":0,"returnSlots":0},"@_7400":{"entryPoint":null,"id":7400,"parameterSlots":0,"returnSlots":0},"@_766":{"entryPoint":null,"id":766,"parameterSlots":2,"returnSlots":0},"@_grantRole_257":{"entryPoint":384,"id":257,"parameterSlots":2,"returnSlots":1},"@_msgSender_2033":{"entryPoint":null,"id":2033,"parameterSlots":0,"returnSlots":1},"@hasRole_81":{"entryPoint":null,"id":81,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_37b404871a1bc52626a7bfc67aae83eb244065c4775ecbb2490fbedb9554ea1f__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_5e374597cb86bdcccf6178050472ea841ee050a819e5b1be263088bba079a8f5__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_85bea0cc7f9421c1cae72cf0c23a9264fa0797de633671b360a6437d100d3088__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_d3ef0e044cf0495b956381b7cb69e34411257c62f595b2bdb631559bc93281d9__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":645,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":728,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":585,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x41":{"entryPoint":563,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:3815:25","statements":[{"nodeType":"YulBlock","src":"6:3:25","statements":[]},{"body":{"nodeType":"YulBlock","src":"46:95:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"63:1:25","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"70:3:25","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"75:10:25","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"66:3:25"},"nodeType":"YulFunctionCall","src":"66:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56:6:25"},"nodeType":"YulFunctionCall","src":"56:31:25"},"nodeType":"YulExpressionStatement","src":"56:31:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"103:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"106:4:25","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"96:6:25"},"nodeType":"YulFunctionCall","src":"96:15:25"},"nodeType":"YulExpressionStatement","src":"96:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"127:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"130:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"120:6:25"},"nodeType":"YulFunctionCall","src":"120:15:25"},"nodeType":"YulExpressionStatement","src":"120:15:25"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"14:127:25"},{"body":{"nodeType":"YulBlock","src":"201:325:25","statements":[{"nodeType":"YulAssignment","src":"211:22:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"225:1:25","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"228:4:25"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"221:3:25"},"nodeType":"YulFunctionCall","src":"221:12:25"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"211:6:25"}]},{"nodeType":"YulVariableDeclaration","src":"242:38:25","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"272:4:25"},{"kind":"number","nodeType":"YulLiteral","src":"278:1:25","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"268:3:25"},"nodeType":"YulFunctionCall","src":"268:12:25"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"246:18:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"319:31:25","statements":[{"nodeType":"YulAssignment","src":"321:27:25","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"335:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"343:4:25","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"331:3:25"},"nodeType":"YulFunctionCall","src":"331:17:25"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"321:6:25"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"299:18:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"292:6:25"},"nodeType":"YulFunctionCall","src":"292:26:25"},"nodeType":"YulIf","src":"289:61:25"},{"body":{"nodeType":"YulBlock","src":"409:111:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"430:1:25","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"437:3:25","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"442:10:25","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"433:3:25"},"nodeType":"YulFunctionCall","src":"433:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"423:6:25"},"nodeType":"YulFunctionCall","src":"423:31:25"},"nodeType":"YulExpressionStatement","src":"423:31:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"474:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"477:4:25","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"467:6:25"},"nodeType":"YulFunctionCall","src":"467:15:25"},"nodeType":"YulExpressionStatement","src":"467:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"502:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"505:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"495:6:25"},"nodeType":"YulFunctionCall","src":"495:15:25"},"nodeType":"YulExpressionStatement","src":"495:15:25"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"365:18:25"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"388:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"396:2:25","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"385:2:25"},"nodeType":"YulFunctionCall","src":"385:14:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"362:2:25"},"nodeType":"YulFunctionCall","src":"362:38:25"},"nodeType":"YulIf","src":"359:161:25"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"181:4:25","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"190:6:25","type":""}],"src":"146:380:25"},{"body":{"nodeType":"YulBlock","src":"587:65:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"604:1:25","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"607:3:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"597:6:25"},"nodeType":"YulFunctionCall","src":"597:14:25"},"nodeType":"YulExpressionStatement","src":"597:14:25"},{"nodeType":"YulAssignment","src":"620:26:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"638:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"641:4:25","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"628:9:25"},"nodeType":"YulFunctionCall","src":"628:18:25"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"620:4:25"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"570:3:25","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"578:4:25","type":""}],"src":"531:121:25"},{"body":{"nodeType":"YulBlock","src":"738:464:25","statements":[{"body":{"nodeType":"YulBlock","src":"771:425:25","statements":[{"nodeType":"YulVariableDeclaration","src":"785:11:25","value":{"kind":"number","nodeType":"YulLiteral","src":"795:1:25","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"789:2:25","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"816:2:25"},{"name":"array","nodeType":"YulIdentifier","src":"820:5:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"809:6:25"},"nodeType":"YulFunctionCall","src":"809:17:25"},"nodeType":"YulExpressionStatement","src":"809:17:25"},{"nodeType":"YulVariableDeclaration","src":"839:31:25","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"861:2:25"},{"kind":"number","nodeType":"YulLiteral","src":"865:4:25","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"851:9:25"},"nodeType":"YulFunctionCall","src":"851:19:25"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"843:4:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"883:57:25","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"906:4:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"916:1:25","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"923:10:25"},{"kind":"number","nodeType":"YulLiteral","src":"935:2:25","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"919:3:25"},"nodeType":"YulFunctionCall","src":"919:19:25"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"912:3:25"},"nodeType":"YulFunctionCall","src":"912:27:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"902:3:25"},"nodeType":"YulFunctionCall","src":"902:38:25"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"887:11:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"977:23:25","statements":[{"nodeType":"YulAssignment","src":"979:19:25","value":{"name":"data","nodeType":"YulIdentifier","src":"994:4:25"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"979:11:25"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"959:10:25"},{"kind":"number","nodeType":"YulLiteral","src":"971:4:25","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"956:2:25"},"nodeType":"YulFunctionCall","src":"956:20:25"},"nodeType":"YulIf","src":"953:47:25"},{"nodeType":"YulVariableDeclaration","src":"1013:41:25","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1027:4:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1037:1:25","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"1044:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"1049:2:25","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1040:3:25"},"nodeType":"YulFunctionCall","src":"1040:12:25"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1033:3:25"},"nodeType":"YulFunctionCall","src":"1033:20:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1023:3:25"},"nodeType":"YulFunctionCall","src":"1023:31:25"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"1017:2:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1067:24:25","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"1080:11:25"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"1071:5:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"1165:21:25","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1174:5:25"},{"name":"_1","nodeType":"YulIdentifier","src":"1181:2:25"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"1167:6:25"},"nodeType":"YulFunctionCall","src":"1167:17:25"},"nodeType":"YulExpressionStatement","src":"1167:17:25"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1115:5:25"},{"name":"_2","nodeType":"YulIdentifier","src":"1122:2:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1112:2:25"},"nodeType":"YulFunctionCall","src":"1112:13:25"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1126:26:25","statements":[{"nodeType":"YulAssignment","src":"1128:22:25","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1141:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"1148:1:25","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1137:3:25"},"nodeType":"YulFunctionCall","src":"1137:13:25"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"1128:5:25"}]}]},"pre":{"nodeType":"YulBlock","src":"1108:3:25","statements":[]},"src":"1104:82:25"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"754:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"759:2:25","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"751:2:25"},"nodeType":"YulFunctionCall","src":"751:11:25"},"nodeType":"YulIf","src":"748:448:25"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"710:5:25","type":""},{"name":"len","nodeType":"YulTypedName","src":"717:3:25","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"722:10:25","type":""}],"src":"657:545:25"},{"body":{"nodeType":"YulBlock","src":"1292:81:25","statements":[{"nodeType":"YulAssignment","src":"1302:65:25","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1317:4:25"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1335:1:25","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"1338:3:25"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1331:3:25"},"nodeType":"YulFunctionCall","src":"1331:11:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1348:1:25","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1344:3:25"},"nodeType":"YulFunctionCall","src":"1344:6:25"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1327:3:25"},"nodeType":"YulFunctionCall","src":"1327:24:25"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1323:3:25"},"nodeType":"YulFunctionCall","src":"1323:29:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1313:3:25"},"nodeType":"YulFunctionCall","src":"1313:40:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1359:1:25","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"1362:3:25"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1355:3:25"},"nodeType":"YulFunctionCall","src":"1355:11:25"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1310:2:25"},"nodeType":"YulFunctionCall","src":"1310:57:25"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"1302:4:25"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1269:4:25","type":""},{"name":"len","nodeType":"YulTypedName","src":"1275:3:25","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"1283:4:25","type":""}],"src":"1207:166:25"},{"body":{"nodeType":"YulBlock","src":"1474:1256:25","statements":[{"nodeType":"YulVariableDeclaration","src":"1484:24:25","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1504:3:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1498:5:25"},"nodeType":"YulFunctionCall","src":"1498:10:25"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"1488:6:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"1551:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1553:16:25"},"nodeType":"YulFunctionCall","src":"1553:18:25"},"nodeType":"YulExpressionStatement","src":"1553:18:25"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"1523:6:25"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1539:2:25","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"1543:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1535:3:25"},"nodeType":"YulFunctionCall","src":"1535:10:25"},{"kind":"number","nodeType":"YulLiteral","src":"1547:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1531:3:25"},"nodeType":"YulFunctionCall","src":"1531:18:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1520:2:25"},"nodeType":"YulFunctionCall","src":"1520:30:25"},"nodeType":"YulIf","src":"1517:56:25"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"1626:4:25"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"1664:4:25"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"1658:5:25"},"nodeType":"YulFunctionCall","src":"1658:11:25"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"1632:25:25"},"nodeType":"YulFunctionCall","src":"1632:38:25"},{"name":"newLen","nodeType":"YulIdentifier","src":"1672:6:25"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"1582:43:25"},"nodeType":"YulFunctionCall","src":"1582:97:25"},"nodeType":"YulExpressionStatement","src":"1582:97:25"},{"nodeType":"YulVariableDeclaration","src":"1688:18:25","value":{"kind":"number","nodeType":"YulLiteral","src":"1705:1:25","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"1692:9:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1715:23:25","value":{"kind":"number","nodeType":"YulLiteral","src":"1734:4:25","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"1719:11:25","type":""}]},{"nodeType":"YulAssignment","src":"1747:24:25","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"1760:11:25"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"1747:9:25"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"1817:656:25","statements":[{"nodeType":"YulVariableDeclaration","src":"1831:35:25","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"1850:6:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1862:2:25","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1858:3:25"},"nodeType":"YulFunctionCall","src":"1858:7:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1846:3:25"},"nodeType":"YulFunctionCall","src":"1846:20:25"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"1835:7:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1879:49:25","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"1923:4:25"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"1893:29:25"},"nodeType":"YulFunctionCall","src":"1893:35:25"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"1883:6:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1941:10:25","value":{"kind":"number","nodeType":"YulLiteral","src":"1950:1:25","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1945:1:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"2028:172:25","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2053:6:25"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2071:3:25"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"2076:9:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2067:3:25"},"nodeType":"YulFunctionCall","src":"2067:19:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2061:5:25"},"nodeType":"YulFunctionCall","src":"2061:26:25"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2046:6:25"},"nodeType":"YulFunctionCall","src":"2046:42:25"},"nodeType":"YulExpressionStatement","src":"2046:42:25"},{"nodeType":"YulAssignment","src":"2105:24:25","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2119:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"2127:1:25","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2115:3:25"},"nodeType":"YulFunctionCall","src":"2115:14:25"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2105:6:25"}]},{"nodeType":"YulAssignment","src":"2146:40:25","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"2163:9:25"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"2174:11:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2159:3:25"},"nodeType":"YulFunctionCall","src":"2159:27:25"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"2146:9:25"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1975:1:25"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"1978:7:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1972:2:25"},"nodeType":"YulFunctionCall","src":"1972:14:25"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1987:28:25","statements":[{"nodeType":"YulAssignment","src":"1989:24:25","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1998:1:25"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"2001:11:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1994:3:25"},"nodeType":"YulFunctionCall","src":"1994:19:25"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1989:1:25"}]}]},"pre":{"nodeType":"YulBlock","src":"1968:3:25","statements":[]},"src":"1964:236:25"},{"body":{"nodeType":"YulBlock","src":"2248:166:25","statements":[{"nodeType":"YulVariableDeclaration","src":"2266:43:25","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2293:3:25"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"2298:9:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2289:3:25"},"nodeType":"YulFunctionCall","src":"2289:19:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2283:5:25"},"nodeType":"YulFunctionCall","src":"2283:26:25"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"2270:9:25","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2333:6:25"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"2345:9:25"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2372:1:25","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"2375:6:25"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2368:3:25"},"nodeType":"YulFunctionCall","src":"2368:14:25"},{"kind":"number","nodeType":"YulLiteral","src":"2384:3:25","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2364:3:25"},"nodeType":"YulFunctionCall","src":"2364:24:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2394:1:25","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2390:3:25"},"nodeType":"YulFunctionCall","src":"2390:6:25"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2360:3:25"},"nodeType":"YulFunctionCall","src":"2360:37:25"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2356:3:25"},"nodeType":"YulFunctionCall","src":"2356:42:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2341:3:25"},"nodeType":"YulFunctionCall","src":"2341:58:25"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2326:6:25"},"nodeType":"YulFunctionCall","src":"2326:74:25"},"nodeType":"YulExpressionStatement","src":"2326:74:25"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"2219:7:25"},{"name":"newLen","nodeType":"YulIdentifier","src":"2228:6:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2216:2:25"},"nodeType":"YulFunctionCall","src":"2216:19:25"},"nodeType":"YulIf","src":"2213:201:25"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2434:4:25"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2448:1:25","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"2451:6:25"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2444:3:25"},"nodeType":"YulFunctionCall","src":"2444:14:25"},{"kind":"number","nodeType":"YulLiteral","src":"2460:1:25","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2440:3:25"},"nodeType":"YulFunctionCall","src":"2440:22:25"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2427:6:25"},"nodeType":"YulFunctionCall","src":"2427:36:25"},"nodeType":"YulExpressionStatement","src":"2427:36:25"}]},"nodeType":"YulCase","src":"1810:663:25","value":{"kind":"number","nodeType":"YulLiteral","src":"1815:1:25","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"2490:234:25","statements":[{"nodeType":"YulVariableDeclaration","src":"2504:14:25","value":{"kind":"number","nodeType":"YulLiteral","src":"2517:1:25","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"2508:5:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"2553:67:25","statements":[{"nodeType":"YulAssignment","src":"2571:35:25","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2590:3:25"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"2595:9:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2586:3:25"},"nodeType":"YulFunctionCall","src":"2586:19:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2580:5:25"},"nodeType":"YulFunctionCall","src":"2580:26:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2571:5:25"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"2534:6:25"},"nodeType":"YulIf","src":"2531:89:25"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2640:4:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2699:5:25"},{"name":"newLen","nodeType":"YulIdentifier","src":"2706:6:25"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"2646:52:25"},"nodeType":"YulFunctionCall","src":"2646:67:25"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2633:6:25"},"nodeType":"YulFunctionCall","src":"2633:81:25"},"nodeType":"YulExpressionStatement","src":"2633:81:25"}]},"nodeType":"YulCase","src":"2482:242:25","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"1790:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"1798:2:25","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1787:2:25"},"nodeType":"YulFunctionCall","src":"1787:14:25"},"nodeType":"YulSwitch","src":"1780:944:25"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"1459:4:25","type":""},{"name":"src","nodeType":"YulTypedName","src":"1465:3:25","type":""}],"src":"1378:1352:25"},{"body":{"nodeType":"YulBlock","src":"2927:81:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2944:3:25"},{"hexValue":"426c75652043726f737320426c756520536869656c64","kind":"string","nodeType":"YulLiteral","src":"2949:24:25","type":"","value":"Blue Cross Blue Shield"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2937:6:25"},"nodeType":"YulFunctionCall","src":"2937:37:25"},"nodeType":"YulExpressionStatement","src":"2937:37:25"},{"nodeType":"YulAssignment","src":"2983:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2994:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"2999:2:25","type":"","value":"22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2990:3:25"},"nodeType":"YulFunctionCall","src":"2990:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2983:3:25"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_d3ef0e044cf0495b956381b7cb69e34411257c62f595b2bdb631559bc93281d9__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2911:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2919:3:25","type":""}],"src":"2735:273:25"},{"body":{"nodeType":"YulBlock","src":"3205:63:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3222:3:25"},{"hexValue":"4165746e61","kind":"string","nodeType":"YulLiteral","src":"3227:7:25","type":"","value":"Aetna"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3215:6:25"},"nodeType":"YulFunctionCall","src":"3215:20:25"},"nodeType":"YulExpressionStatement","src":"3215:20:25"},{"nodeType":"YulAssignment","src":"3244:18:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3255:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"3260:1:25","type":"","value":"5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3251:3:25"},"nodeType":"YulFunctionCall","src":"3251:11:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3244:3:25"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_5e374597cb86bdcccf6178050472ea841ee050a819e5b1be263088bba079a8f5__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3189:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3197:3:25","type":""}],"src":"3013:255:25"},{"body":{"nodeType":"YulBlock","src":"3465:75:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3482:3:25"},{"hexValue":"556e697465644865616c746863617265","kind":"string","nodeType":"YulLiteral","src":"3487:18:25","type":"","value":"UnitedHealthcare"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3475:6:25"},"nodeType":"YulFunctionCall","src":"3475:31:25"},"nodeType":"YulExpressionStatement","src":"3475:31:25"},{"nodeType":"YulAssignment","src":"3515:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3526:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"3531:2:25","type":"","value":"16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3522:3:25"},"nodeType":"YulFunctionCall","src":"3522:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3515:3:25"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_85bea0cc7f9421c1cae72cf0c23a9264fa0797de633671b360a6437d100d3088__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3449:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3457:3:25","type":""}],"src":"3273:267:25"},{"body":{"nodeType":"YulBlock","src":"3737:76:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3754:3:25"},{"hexValue":"5465737420496e737572616e636520436f","kind":"string","nodeType":"YulLiteral","src":"3759:19:25","type":"","value":"Test Insurance Co"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3747:6:25"},"nodeType":"YulFunctionCall","src":"3747:32:25"},"nodeType":"YulExpressionStatement","src":"3747:32:25"},{"nodeType":"YulAssignment","src":"3788:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3799:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"3804:2:25","type":"","value":"17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3795:3:25"},"nodeType":"YulFunctionCall","src":"3795:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3788:3:25"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_37b404871a1bc52626a7bfc67aae83eb244065c4775ecbb2490fbedb9554ea1f__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3721:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3729:3:25","type":""}],"src":"3545:268:25"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_packed_t_stringliteral_d3ef0e044cf0495b956381b7cb69e34411257c62f595b2bdb631559bc93281d9__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    {\n        mstore(pos, \"Blue Cross Blue Shield\")\n        end := add(pos, 22)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_5e374597cb86bdcccf6178050472ea841ee050a819e5b1be263088bba079a8f5__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    {\n        mstore(pos, \"Aetna\")\n        end := add(pos, 5)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_85bea0cc7f9421c1cae72cf0c23a9264fa0797de633671b360a6437d100d3088__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    {\n        mstore(pos, \"UnitedHealthcare\")\n        end := add(pos, 16)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_37b404871a1bc52626a7bfc67aae83eb244065c4775ecbb2490fbedb9554ea1f__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    {\n        mstore(pos, \"Test Insurance Co\")\n        end := add(pos, 17)\n    }\n}","id":25,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b506040518060400160405280601581526020017f41757469736d204576616c756174696f6e204e465400000000000000000000008152506040518060400160405280600381526020016220a2a760e91b8152508160009081620000759190620002d8565b506001620000848282620002d8565b50506001600855506200009960003362000180565b5060016010604051620000cf907f426c75652043726f737320426c756520536869656c6400000000000000000000815260160190565b90815260408051918290036020018220805493151560ff19948516179055644165746e6160d81b825260106005830181905281519283900360250183208054851660019081179091556f556e697465644865616c74686361726560801b845283820182905282519384900360300184208054861682179055705465737420496e737572616e636520436f60781b845260118401919091529051918290036031019091208054909216179055620003a4565b60008281526007602090815260408083206001600160a01b038516845290915281205460ff16620002295760008381526007602090815260408083206001600160a01b03861684529091529020805460ff19166001179055620001e03390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45060016200022d565b5060005b92915050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200025e57607f821691505b6020821081036200027f57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002d357600081815260208120601f850160051c81016020861015620002ae5750805b601f850160051c820191505b81811015620002cf57828155600101620002ba565b5050505b505050565b81516001600160401b03811115620002f457620002f462000233565b6200030c8162000305845462000249565b8462000285565b602080601f8311600181146200034457600084156200032b5750858301515b600019600386901b1c1916600185901b178555620002cf565b600085815260208120601f198616915b82811015620003755788860151825594840194600190910190840162000354565b5085821015620003945787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b613ad880620003b46000396000f3fe608060405234801561001057600080fd5b50600436106102745760003560e01c80639e06145211610151578063d547741f116100c3578063eda3136911610087578063eda31369146105fa578063edaef9051461060d578063f2cec6ee1461063b578063f41b30f31461065b578063f6ba66781461067b578063fc82c0ef146106a257600080fd5b8063d547741f14610596578063dab6c121146105a9578063e3c40e1a146105bc578063e58da742146105df578063e985e9c5146105e757600080fd5b8063b88d4fde11610115578063b88d4fde1461051d578063b8cd16b414610530578063c0e8224a14610539578063c23d4c851461054c578063c87b56dd14610570578063cc8d47011461058357600080fd5b80639e0614521461049a578063a217fddf146104c8578063a22cb465146104d0578063a8c6faa5146104e3578063b752a74b146104f657600080fd5b806333c63b17116101ea5780634d6cac7a116101ae5780634d6cac7a146104135780636352211e1461043557806370a08231146104485780638577fee71461045b57806391d148541461047f57806395d89b411461049257600080fd5b806333c63b171461039957806336568abe146103c557806337a13153146103d857806342842e0e146103ed5780634668bf101461040057600080fd5b8063095ea7b31161023c578063095ea7b31461030b57806323b872dd14610320578063248a9ca3146103335780632f2ff15d1461035657806330b5abd71461036957806330d0ea311461037257600080fd5b806301ffc9a71461027957806304345c93146102a157806305f047df146102b857806306fdde03146102cb578063081812fc146102e0575b600080fd5b61028c610287366004612de8565b61075d565b60405190151581526020015b60405180910390f35b6102aa60115481565b604051908152602001610298565b6102aa6102c6366004612e21565b61076e565b6102d361079f565b6040516102989190612e9b565b6102f36102ee366004612eae565b610831565b6040516001600160a01b039091168152602001610298565b61031e610319366004612e21565b61085a565b005b61031e61032e366004612ec7565b610869565b6102aa610341366004612eae565b60009081526007602052604090206001015490565b61031e610364366004612f03565b6108f9565b6102aa60125481565b6102aa7f4848aa3d2c0568bab3ca9720f91818ee0957e95426fa0627cc4809e2e5ed8be081565b6103ac6103a7366004612eae565b61090e565b6040516102989d9c9b9a99989796959493929190612fde565b61031e6103d3366004612f03565b610d04565b6103e0610d3c565b604051610298919061308a565b61031e6103fb366004612ec7565b610e71565b61031e61040e3660046131c1565b610e8c565b61042661042136600461322f565b611031565b60405161029893929190613276565b6102f3610443366004612eae565b611340565b6102aa6104563660046132a0565b61134b565b61046e6104693660046132a0565b611393565b6040516102989594939291906132cb565b61028c61048d366004612f03565b611477565b6102d36114a2565b61028c6104a8366004612f03565b600d60209081526000928352604080842090915290825290205460ff1681565b6102aa600081565b61031e6104de366004613319565b6114b1565b61031e6104f136600461322f565b6114bc565b6102aa7ffec7cd74e5c65b641d49ecc2e89f646c7c0bcae85dc50f9616bf9c798cedda8b81565b61031e61052b366004613343565b6115c3565b6102aa60135481565b6102aa6105473660046133c2565b6115db565b61055f61055a366004612eae565b611906565b60405161029895949392919061352d565b6102d361057e366004612eae565b611a41565b6102aa61059136600461356a565b611a4c565b61031e6105a4366004612f03565b611d33565b61031e6105b73660046135ba565b611d58565b6105cf6105ca3660046135ef565b611d99565b6040516102989493929190613611565b6103e0611e78565b61028c6105f536600461364b565b612078565b61046e6106083660046132a0565b6120a6565b61028c61061b3660046135ba565b805160208183018101805160108252928201919093012091525460ff1681565b61064e610649366004612eae565b612163565b6040516102989190613675565b61066e6106693660046132a0565b612299565b604051610298919061370e565b6102aa7fc8f5b4140cca307cd927e59cbeea8291bffeee228fc677f0fa059aef7b4dd8d581565b61070b6106b0366004612eae565b600e60205260009081526040902080546001820154600283015460038401546004850154600586015460068701546007880154600890980154969795966001600160a01b0395861696949095169492939192909160ff169089565b60408051998a5260208a01989098526001600160a01b0396871697890197909752949093166060870152608086019190915260a085015260c0840152151560e083015261010082015261012001610298565b600061076882612305565b92915050565b600f602052816000526040600020818154811061078a57600080fd5b90600052602060002001600091509150505481565b6060600080546107ae90613752565b80601f01602080910402602001604051908101604052809291908181526020018280546107da90613752565b80156108275780601f106107fc57610100808354040283529160200191610827565b820191906000526020600020905b81548152906001019060200180831161080a57829003601f168201915b5050505050905090565b600061083c8261232a565b506000828152600460205260409020546001600160a01b0316610768565b610865828233612362565b5050565b6001600160a01b03821661089857604051633250574960e11b8152600060048201526024015b60405180910390fd5b60006108a583833361236f565b9050836001600160a01b0316816001600160a01b0316146108f3576040516364283d7b60e01b81526001600160a01b038086166004830152602482018490528216604482015260640161088f565b50505050565b600061090481612463565b6108f38383612470565b600a602052600090815260409020805460018201546002830154600384015460048501805494956001600160a01b03948516959390941693919261095190613752565b80601f016020809104026020016040519081016040528092919081815260200182805461097d90613752565b80156109ca5780601f1061099f576101008083540402835291602001916109ca565b820191906000526020600020905b8154815290600101906020018083116109ad57829003601f168201915b50505060058401546006850154600786015460088701546009880154600a890180549899959860ff9586169850939650919493169291610a0990613752565b80601f0160208091040260200160405190810160405280929190818152602001828054610a3590613752565b8015610a825780601f10610a5757610100808354040283529160200191610a82565b820191906000526020600020905b815481529060010190602001808311610a6557829003601f168201915b50505050509080600b01549080600c016040518060c0016040529081600082018054610aad90613752565b80601f0160208091040260200160405190810160405280929190818152602001828054610ad990613752565b8015610b265780601f10610afb57610100808354040283529160200191610b26565b820191906000526020600020905b815481529060010190602001808311610b0957829003601f168201915b50505050508152602001600182018054610b3f90613752565b80601f0160208091040260200160405190810160405280929190818152602001828054610b6b90613752565b8015610bb85780601f10610b8d57610100808354040283529160200191610bb8565b820191906000526020600020905b815481529060010190602001808311610b9b57829003601f168201915b50505050508152602001600282018054610bd190613752565b80601f0160208091040260200160405190810160405280929190818152602001828054610bfd90613752565b8015610c4a5780601f10610c1f57610100808354040283529160200191610c4a565b820191906000526020600020905b815481529060010190602001808311610c2d57829003601f168201915b50505050508152602001600382018054610c6390613752565b80601f0160208091040260200160405190810160405280929190818152602001828054610c8f90613752565b8015610cdc5780601f10610cb157610100808354040283529160200191610cdc565b820191906000526020600020905b815481529060010190602001808311610cbf57829003601f168201915b50505091835250506004820154602082015260059091015460ff16151560409091015290508d565b6001600160a01b0381163314610d2d5760405163334bd91960e11b815260040160405180910390fd5b610d378282612504565b505050565b60408051600480825260a0820190925260609160009190816020015b6060815260200190600190039081610d58579050509050604051806040016040528060048152602001634e6f6e6560e01b81525081600081518110610d9f57610d9f61378c565b60200260200101819052506040518060400160405280601781526020017f4c6576656c315f526571756972696e67537570706f727400000000000000000081525081600181518110610df357610df361378c565b6020026020010181905250604051806060016040528060228152602001613a5b6022913981600281518110610e2a57610e2a61378c565b6020026020010181905250604051806060016040528060268152602001613a7d6026913981600381518110610e6157610e6161378c565b6020908102919091010152919050565b610d37838383604051806020016040528060008152506115c3565b610eb67f4848aa3d2c0568bab3ca9720f91818ee0957e95426fa0627cc4809e2e5ed8be033611477565b610f025760405162461bcd60e51b815260206004820152601860248201527f4e6f7420617574686f72697a6564206576616c7561746f720000000000000000604482015260640161088f565b6000610f0d84612571565b6001600160a01b031603610f585760405162461bcd60e51b815260206004820152601260248201527124b73b30b634b21032bb30b63ab0ba34b7b760711b604482015260640161088f565b6001600160a01b0384166000908152600b602052604081206001810154909103610f985742600182015560138054906000610f92836137b8565b91905055505b80548390829060ff19166001836003811115610fb657610fb6612f2f565b021790555042600282015560038101610fcf8382613817565b50600481018054906000610fe2836137b8565b9190505550846001600160a01b03167f398865b44291ccf794af9023bfee116248ee709c8c101e69961c2bea10255fc084866040516110229291906138d7565b60405180910390a25050505050565b606060008061103e61258f565b600061104986612571565b6001600160a01b0316036110965760405162461bcd60e51b8152602060048201526014602482015273151bdad95b88191bd95cc81b9bdd08195e1a5cdd60621b604482015260640161088f565b6110c07fc8f5b4140cca307cd927e59cbeea8291bffeee228fc677f0fa059aef7b4dd8d533611477565b806110f057506110f07ffec7cd74e5c65b641d49ecc2e89f646c7c0bcae85dc50f9616bf9c798cedda8b33611477565b61112d5760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b604482015260640161088f565b6000858152600a60205260408120600981015490919060ff168061116a57506000878152600d6020908152604080832033845290915290205460ff165b9050806111915750506040805160208101909152600080825290935091506001905061132f565b6000878152600d60209081526040808320338085529083528184208054600160ff1990911681179091558251608081018452918252428285019081528284018c8152606084018390528d8752600c86529386208054808401825590875294909520825160049095020180546001600160a01b0319166001600160a01b039095169490941784559351938301939093555182919060028201906112339082613817565b50606091909101516003909101805460ff1916911515919091179055604051339089907f16d577c4c96cf9d9d1a1ca8421248118615f2dbc5789728c0b6bc7dfbc61942490611286908b906000906138f2565b60405180910390a382600401836005015460008280546112a590613752565b80601f01602080910402602001604051908101604052809291908181526020018280546112d190613752565b801561131e5780601f106112f35761010080835404028352916020019161131e565b820191906000526020600020905b81548152906001019060200180831161130157829003601f168201915b505050505092509550955095505050505b6113396001600855565b9250925092565b60006107688261232a565b60006001600160a01b038216611377576040516322718ad960e21b81526000600482015260240161088f565b506001600160a01b031660009081526003602052604090205490565b6001600160a01b0381166000908152600b602052604081208054600182015460028301546004840154600385018054879687966060968896929560ff90921694909390919082906113e390613752565b80601f016020809104026020016040519081016040528092919081815260200182805461140f90613752565b801561145c5780601f106114315761010080835404028352916020019161145c565b820191906000526020600020905b81548152906001019060200180831161143f57829003601f168201915b50505050509150955095509550955095505091939590929450565b60009182526007602090815260408084206001600160a01b0393909316845291905290205460ff1690565b6060600180546107ae90613752565b6108653383836125b9565b6000828152600e60205260409020600781015460ff16156115135760405162461bcd60e51b8152602060048201526011602482015270109a5b1b08185b1c9958591e481c185a59607a1b604482015260640161088f565b60038101546001600160a01b031633146115605760405162461bcd60e51b815260206004820152600e60248201526d2737ba103134b6361037bbb732b960911b604482015260640161088f565b60008251116115b15760405162461bcd60e51b815260206004820152601c60248201527f5061796d656e74207472616e73616374696f6e20726571756972656400000000604482015260640161088f565b600701805460ff191660011790555050565b6115ce848484610869565b6108f33385858585612658565b60006115e561258f565b8751516116285760405162461bcd60e51b8152602060048201526011602482015270496e76616c696420696e737572616e636560781b604482015260640161088f565b875160405160109161163991613916565b9081526040519081900360200190205460ff166116915760405162461bcd60e51b8152602060048201526016602482015275125b9cdd5c985b98d9481b9bdd081d995c9a599a595960521b604482015260640161088f565b60008251116116e25760405162461bcd60e51b815260206004820152601f60248201527f496e737572616e6365207061796d656e74206861736820726571756972656400604482015260640161088f565b600980549060006116f2836137b8565b9190505590506117023382612783565b6000818152600a602052604090208181556001810180546001600160a01b03191633179055600381018890556004810161173c8882613817565b506005810186905560068101805486919060ff1916600183600781111561176557611765612f2f565b02179055504260078201819055600882015560098101805460ff19166001179055600a81016117948482613817565b50600b810184905588518990600c83019081906117b19082613817565b50602082015160018201906117c69082613817565b50604082015160028201906117db9082613817565b50606082015160038201906117f09082613817565b506080820151600482015560a0909101516005909101805491151560ff199283161790556000838152600d60209081526040808320308452909152902080549091166001179055611841338361279d565b60118054906000611851836137b8565b909155505060128054906000611866836137b8565b9190505550336001600160a01b0316827f931f7af5fd41db155c97c737c3100c1540d9fd948a408a7bd0db82e7a3f90f118760016040516118a8929190613932565b60405180910390a3817fc2687b4cf2e8fb805e48c095a786345c2953850fb19620e5618cea5412dc227f8a6000015185876040516118e89392919061394f565b60405180910390a2506118fb6001600855565b979650505050505050565b600080808060608161191787612571565b6001600160a01b0316036119645760405162461bcd60e51b8152602060048201526014602482015273151bdad95b88191bd95cc81b9bdd08195e1a5cdd60621b604482015260640161088f565b6000868152600a602052604090206001810154600682015460078301546009840154600c850180546001600160a01b039095169460ff948516949092169181906119ad90613752565b80601f01602080910402602001604051908101604052809291908181526020018280546119d990613752565b8015611a265780601f106119fb57610100808354040283529160200191611a26565b820191906000526020600020905b815481529060010190602001808311611a0957829003601f168201915b50505050509050955095509550955095505091939590929450565b6060610768826127ea565b6000611a5661258f565b611a807fc8f5b4140cca307cd927e59cbeea8291bffeee228fc677f0fa059aef7b4dd8d533611477565b611abd5760405162461bcd60e51b815260206004820152600e60248201526d139bdd0818481a1bdcdc1a5d185b60921b604482015260640161088f565b6000611ac885612571565b6001600160a01b031603611b135760405162461bcd60e51b815260206004820152601260248201527124b73b30b634b21032bb30b63ab0ba34b7b760711b604482015260640161088f565b6000848152600a602052604081206010810154909190606490611b369087613985565b611b40919061399c565b9050806000611b4f82886139be565b60408051602081018b90526bffffffffffffffffffffffff193360601b1691810191909152605481018990524260748201529091506094016040516020818303038152906040528051906020012094506000600e60008781526020019081526020016000209050858160000181905550888160010181905550338160020160006101000a8154816001600160a01b0302191690836001600160a01b031602179055508460010160009054906101000a90046001600160a01b03168160030160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550878160040181905550828160050181905550818160060181905550428160080181905550600f60008660010160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020019081526020016000208690806001815401808255809150506001900390600052602060002001600090919091909150558460010160009054906101000a90046001600160a01b03166001600160a01b031689877f32a639b5e81d2a5d0d4621d6d8f19e4dec31f1a08746258aacd388c40caeb66c8b87604051611d15929190918252602082015260400190565b60405180910390a45050505050611d2c6001600855565b9392505050565b600082815260076020526040902060010154611d4e81612463565b6108f38383612504565b6000611d6381612463565b6001601083604051611d759190613916565b908152604051908190036020019020805491151560ff199092169190911790555050565b600c6020528160005260406000208181548110611db557600080fd5b60009182526020909120600490910201805460018201546002830180546001600160a01b03909316955090935090611dec90613752565b80601f0160208091040260200160405190810160405280929190818152602001828054611e1890613752565b8015611e655780601f10611e3a57610100808354040283529160200191611e65565b820191906000526020600020905b815481529060010190602001808311611e4857829003601f168201915b5050506003909301549192505060ff1684565b604080516008808252610120820190925260609160009190816020015b6060815260200190600190039081611e955790505090506040518060400160405280600481526020016341444f5360e01b81525081600081518110611edc57611edc61378c565b60200260200101819052506040518060400160405280600481526020016320a224a960e11b81525081600181518110611f1757611f1761378c565b6020026020010181905250604051806040016040528060048152602001634341525360e01b81525081600281518110611f5257611f5261378c565b6020026020010181905250604051806040016040528060058152602001641350d2105560da1b81525081600381518110611f8e57611f8e61378c565b6020026020010181905250604051806040016040528060048152602001634741525360e01b81525081600481518110611fc957611fc961378c565b60200260200101819052506040518060400160405280600381526020016253525360e81b815250816005815181106120035761200361378c565b60200260200101819052506040518060400160405280600381526020016241424360e81b8152508160068151811061203d5761203d61378c565b6020026020010181905250604051806040016040528060048152602001634153525360e01b81525081600781518110610e6157610e6161378c565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b600b60205260009081526040902080546001820154600283015460038401805460ff9094169492939192916120da90613752565b80601f016020809104026020016040519081016040528092919081815260200182805461210690613752565b80156121535780601f1061212857610100808354040283529160200191612153565b820191906000526020600020905b81548152906001019060200180831161213657829003601f168201915b5050505050908060040154905085565b6060600c6000838152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101561228e576000848152602090819020604080516080810182526004860290920180546001600160a01b03168352600181015493830193909352600283018054929392918401916121eb90613752565b80601f016020809104026020016040519081016040528092919081815260200182805461221790613752565b80156122645780601f1061223957610100808354040283529160200191612264565b820191906000526020600020905b81548152906001019060200180831161224757829003601f168201915b50505091835250506003919091015460ff1615156020918201529082526001929092019101612198565b505050509050919050565b6001600160a01b0381166000908152600f60209081526040918290208054835181840281018401909452808452606093928301828280156122f957602002820191906000526020600020905b8154815260200190600101908083116122e5575b50505050509050919050565b60006001600160e01b03198216637965db0b60e01b14806107685750610768826128fb565b60008061233683612571565b90506001600160a01b03811661076857604051637e27328960e01b81526004810184905260240161088f565b610d378383836001612920565b60008061237b84612571565b90506001600160a01b0383161561239757612397818486612a26565b6001600160a01b038116156123d5576123b4600085600080612920565b6001600160a01b038116600090815260036020526040902080546000190190555b6001600160a01b03851615612404576001600160a01b0385166000908152600360205260409020805460010190555b60008481526002602052604080822080546001600160a01b0319166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b61246d8133612a8a565b50565b600061247c8383611477565b6124fc5760008381526007602090815260408083206001600160a01b03861684529091529020805460ff191660011790556124b43390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4506001610768565b506000610768565b60006125108383611477565b156124fc5760008381526007602090815260408083206001600160a01b0386168085529252808320805460ff1916905551339286917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a4506001610768565b6000908152600a60205260409020600101546001600160a01b031690565b6002600854036125b257604051633ee5aeb560e01b815260040160405180910390fd5b6002600855565b6001600160a01b0382166125eb57604051630b61174360e31b81526001600160a01b038316600482015260240161088f565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0383163b1561277c57604051630a85bd0160e11b81526001600160a01b0384169063150b7a029061269a9088908890879087906004016139d1565b6020604051808303816000875af19250505080156126d5575060408051601f3d908101601f191682019092526126d291810190613a0e565b60015b61273e573d808015612703576040519150601f19603f3d011682016040523d82523d6000602084013e612708565b606091505b50805160000361273657604051633250574960e11b81526001600160a01b038516600482015260240161088f565b805160208201fd5b6001600160e01b03198116630a85bd0160e11b1461277a57604051633250574960e11b81526001600160a01b038516600482015260240161088f565b505b5050505050565b610865828260405180602001604052806000815250612ac3565b6001600160a01b0382166000908152600b6020526040812060018101549091036127c8574260018201555b4260028201556004810180549060006127e0836137b8565b9190505550505050565b60606127f58261232a565b506000828152600660205260408120805461280f90613752565b80601f016020809104026020016040519081016040528092919081815260200182805461283b90613752565b80156128885780601f1061285d57610100808354040283529160200191612888565b820191906000526020600020905b81548152906001019060200180831161286b57829003601f168201915b5050505050905060006128a660408051602081019091526000815290565b905080516000036128b8575092915050565b8151156128ea5780826040516020016128d2929190613a2b565b60405160208183030381529060405292505050919050565b6128f384612adb565b949350505050565b60006001600160e01b03198216632483248360e11b1480610768575061076882612b4f565b808061293457506001600160a01b03821615155b156129f65760006129448461232a565b90506001600160a01b038316158015906129705750826001600160a01b0316816001600160a01b031614155b801561298357506129818184612078565b155b156129ac5760405163a9fbf51f60e01b81526001600160a01b038416600482015260240161088f565b81156129f45783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b5050600090815260046020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b612a31838383612b9f565b610d37576001600160a01b038316612a5f57604051637e27328960e01b81526004810182905260240161088f565b60405163177e802f60e01b81526001600160a01b03831660048201526024810182905260440161088f565b612a948282611477565b6108655760405163e2517d3f60e01b81526001600160a01b03821660048201526024810183905260440161088f565b612acd8383612c02565b610d37336000858585612658565b6060612ae68261232a565b506000612afe60408051602081019091526000815290565b90506000815111612b1e5760405180602001604052806000815250611d2c565b80612b2884612c67565b604051602001612b39929190613a2b565b6040516020818303038152906040529392505050565b60006001600160e01b031982166380ac58cd60e01b1480612b8057506001600160e01b03198216635b5e139f60e01b145b8061076857506301ffc9a760e01b6001600160e01b0319831614610768565b60006001600160a01b038316158015906128f35750826001600160a01b0316846001600160a01b03161480612bd95750612bd98484612078565b806128f35750506000908152600460205260409020546001600160a01b03908116911614919050565b6001600160a01b038216612c2c57604051633250574960e11b81526000600482015260240161088f565b6000612c3a8383600061236f565b90506001600160a01b03811615610d37576040516339e3563760e11b81526000600482015260240161088f565b60606000612c7483612cfa565b600101905060008167ffffffffffffffff811115612c9457612c946130ec565b6040519080825280601f01601f191660200182016040528015612cbe576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084612cc857509392505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310612d395772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310612d65576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310612d8357662386f26fc10000830492506010015b6305f5e1008310612d9b576305f5e100830492506008015b6127108310612daf57612710830492506004015b60648310612dc1576064830492506002015b600a83106107685760010192915050565b6001600160e01b03198116811461246d57600080fd5b600060208284031215612dfa57600080fd5b8135611d2c81612dd2565b80356001600160a01b0381168114612e1c57600080fd5b919050565b60008060408385031215612e3457600080fd5b612e3d83612e05565b946020939093013593505050565b60005b83811015612e66578181015183820152602001612e4e565b50506000910152565b60008151808452612e87816020860160208601612e4b565b601f01601f19169290920160200192915050565b602081526000611d2c6020830184612e6f565b600060208284031215612ec057600080fd5b5035919050565b600080600060608486031215612edc57600080fd5b612ee584612e05565b9250612ef360208501612e05565b9150604084013590509250925092565b60008060408385031215612f1657600080fd5b82359150612f2660208401612e05565b90509250929050565b634e487b7160e01b600052602160045260246000fd5b60088110612f5557612f55612f2f565b9052565b6000815160c08452612f6e60c0850182612e6f565b905060208301518482036020860152612f878282612e6f565b91505060408301518482036040860152612fa18282612e6f565b91505060608301518482036060860152612fbb8282612e6f565b9150506080830151608085015260a0830151151560a08501528091505092915050565b8d81526001600160a01b038d811660208301528c16604082015260006101a08c60608401528060808401526130158184018d612e6f565b90508a60a084015261302a60c084018b612f45565b8860e08401528761010084015261304661012084018815159052565b8281036101408401526130598187612e6f565b9050846101608401528281036101808401526130758185612f59565b9150509e9d5050505050505050505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156130df57603f198886030184526130cd858351612e6f565b945092850192908501906001016130b1565b5092979650505050505050565b634e487b7160e01b600052604160045260246000fd5b60405160c0810167ffffffffffffffff81118282101715613125576131256130ec565b60405290565b600067ffffffffffffffff80841115613146576131466130ec565b604051601f8501601f19908116603f0116810190828211818310171561316e5761316e6130ec565b8160405280935085815286868601111561318757600080fd5b858560208301376000602087830101525050509392505050565b600082601f8301126131b257600080fd5b611d2c8383356020850161312b565b600080600080608085870312156131d757600080fd5b6131e085612e05565b9350602085013592506040850135600481106131fb57600080fd5b9150606085013567ffffffffffffffff81111561321757600080fd5b613223878288016131a1565b91505092959194509250565b6000806040838503121561324257600080fd5b82359150602083013567ffffffffffffffff81111561326057600080fd5b61326c858286016131a1565b9150509250929050565b6060815260006132896060830186612e6f565b602083019490945250901515604090910152919050565b6000602082840312156132b257600080fd5b611d2c82612e05565b60048110612f5557612f55612f2f565b6132d581876132bb565b84602082015283604082015260a0606082015260006132f760a0830185612e6f565b90508260808301529695505050505050565b80358015158114612e1c57600080fd5b6000806040838503121561332c57600080fd5b61333583612e05565b9150612f2660208401613309565b6000806000806080858703121561335957600080fd5b61336285612e05565b935061337060208601612e05565b925060408501359150606085013567ffffffffffffffff81111561339357600080fd5b8501601f810187136133a457600080fd5b6132238782356020840161312b565b803560088110612e1c57600080fd5b600080600080600080600060e0888a0312156133dd57600080fd5b873567ffffffffffffffff808211156133f557600080fd5b9089019060c0828c03121561340957600080fd5b613411613102565b82358281111561342057600080fd5b61342c8d8286016131a1565b82525060208301358281111561344157600080fd5b61344d8d8286016131a1565b60208301525060408301358281111561346557600080fd5b6134718d8286016131a1565b60408301525060608301358281111561348957600080fd5b6134958d8286016131a1565b606083015250608083013560808201526134b160a08401613309565b60a0820152985060208a0135975060408a01359150808211156134d357600080fd5b6134df8b838c016131a1565b965060608a013595506134f460808b016133b3565b945060a08a0135935060c08a013591508082111561351157600080fd5b5061351e8a828b016131a1565b91505092959891949750929550565b6001600160a01b03861681526135466020820186612f45565b836040820152821515606082015260a0608082015260006118fb60a0830184612e6f565b60008060006060848603121561357f57600080fd5b8335925060208401359150604084013567ffffffffffffffff8111156135a457600080fd5b6135b0868287016131a1565b9150509250925092565b6000602082840312156135cc57600080fd5b813567ffffffffffffffff8111156135e357600080fd5b6128f3848285016131a1565b6000806040838503121561360257600080fd5b50508035926020909101359150565b60018060a01b03851681528360208201526080604082015260006136386080830185612e6f565b9050821515606083015295945050505050565b6000806040838503121561365e57600080fd5b61366783612e05565b9150612f2660208401612e05565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b8381101561370057888303603f19018552815180516001600160a01b031684528781015188850152868101516080888601819052906136dd82870182612e6f565b60609384015115159690930195909552509487019492509086019060010161369c565b509098975050505050505050565b6020808252825182820181905260009190848201906040850190845b818110156137465783518352928401929184019160010161372a565b50909695505050505050565b600181811c9082168061376657607f821691505b60208210810361378657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016137ca576137ca6137a2565b5060010190565b601f821115610d3757600081815260208120601f850160051c810160208610156137f85750805b601f850160051c820191505b8181101561277a57828155600101613804565b815167ffffffffffffffff811115613831576138316130ec565b6138458161383f8454613752565b846137d1565b602080601f83116001811461387a57600084156138625750858301515b600019600386901b1c1916600185901b17855561277a565b600085815260208120601f198616915b828110156138a95788860151825594840194600190910190840161388a565b50858210156138c75787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b604081016138e582856132bb565b8260208301529392505050565b6040815260006139056040830185612e6f565b905082151560208301529392505050565b60008251613928818460208701612e4b565b9190910192915050565b604081016139408285612f45565b82151560208301529392505050565b6060815260006139626060830186612e6f565b82810360208401526139748186612e6f565b915050826040830152949350505050565b8082028115828204841417610768576107686137a2565b6000826139b957634e487b7160e01b600052601260045260246000fd5b500490565b81810381811115610768576107686137a2565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090613a0490830184612e6f565b9695505050505050565b600060208284031215613a2057600080fd5b8151611d2c81612dd2565b60008351613a3d818460208801612e4b565b835190830190613a51818360208801612e4b565b0194935050505056fe4c6576656c325f526571756972696e675375627374616e7469616c537570706f72744c6576656c335f526571756972696e67566572795375627374616e7469616c537570706f7274a26469706673582212206ebc2539a16f9d8d03d5ef838a55a02ab13c5b53dca048d6085249222e6d9fa264736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x41757469736D204576616C756174696F6E204E46540000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x20A2A7 PUSH1 0xE9 SHL DUP2 MSTORE POP DUP2 PUSH1 0x0 SWAP1 DUP2 PUSH3 0x75 SWAP2 SWAP1 PUSH3 0x2D8 JUMP JUMPDEST POP PUSH1 0x1 PUSH3 0x84 DUP3 DUP3 PUSH3 0x2D8 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x8 SSTORE POP PUSH3 0x99 PUSH1 0x0 CALLER PUSH3 0x180 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x10 PUSH1 0x40 MLOAD PUSH3 0xCF SWAP1 PUSH32 0x426C75652043726F737320426C756520536869656C6400000000000000000000 DUP2 MSTORE PUSH1 0x16 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB PUSH1 0x20 ADD DUP3 KECCAK256 DUP1 SLOAD SWAP4 ISZERO ISZERO PUSH1 0xFF NOT SWAP5 DUP6 AND OR SWAP1 SSTORE PUSH5 0x4165746E61 PUSH1 0xD8 SHL DUP3 MSTORE PUSH1 0x10 PUSH1 0x5 DUP4 ADD DUP2 SWAP1 MSTORE DUP2 MLOAD SWAP3 DUP4 SWAP1 SUB PUSH1 0x25 ADD DUP4 KECCAK256 DUP1 SLOAD DUP6 AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH16 0x556E697465644865616C746863617265 PUSH1 0x80 SHL DUP5 MSTORE DUP4 DUP3 ADD DUP3 SWAP1 MSTORE DUP3 MLOAD SWAP4 DUP5 SWAP1 SUB PUSH1 0x30 ADD DUP5 KECCAK256 DUP1 SLOAD DUP7 AND DUP3 OR SWAP1 SSTORE PUSH17 0x5465737420496E737572616E636520436F PUSH1 0x78 SHL DUP5 MSTORE PUSH1 0x11 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 MLOAD SWAP2 DUP3 SWAP1 SUB PUSH1 0x31 ADD SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 AND OR SWAP1 SSTORE PUSH3 0x3A4 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH3 0x229 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH3 0x1E0 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH1 0x1 PUSH3 0x22D JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x25E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x27F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x2D3 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x2AE JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x2CF JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x2BA JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x2F4 JUMPI PUSH3 0x2F4 PUSH3 0x233 JUMP JUMPDEST PUSH3 0x30C DUP2 PUSH3 0x305 DUP5 SLOAD PUSH3 0x249 JUMP JUMPDEST DUP5 PUSH3 0x285 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x344 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x32B JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x2CF JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x375 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x354 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x394 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x3AD8 DUP1 PUSH3 0x3B4 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x274 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9E061452 GT PUSH2 0x151 JUMPI DUP1 PUSH4 0xD547741F GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xEDA31369 GT PUSH2 0x87 JUMPI DUP1 PUSH4 0xEDA31369 EQ PUSH2 0x5FA JUMPI DUP1 PUSH4 0xEDAEF905 EQ PUSH2 0x60D JUMPI DUP1 PUSH4 0xF2CEC6EE EQ PUSH2 0x63B JUMPI DUP1 PUSH4 0xF41B30F3 EQ PUSH2 0x65B JUMPI DUP1 PUSH4 0xF6BA6678 EQ PUSH2 0x67B JUMPI DUP1 PUSH4 0xFC82C0EF EQ PUSH2 0x6A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD547741F EQ PUSH2 0x596 JUMPI DUP1 PUSH4 0xDAB6C121 EQ PUSH2 0x5A9 JUMPI DUP1 PUSH4 0xE3C40E1A EQ PUSH2 0x5BC JUMPI DUP1 PUSH4 0xE58DA742 EQ PUSH2 0x5DF JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x5E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x115 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x51D JUMPI DUP1 PUSH4 0xB8CD16B4 EQ PUSH2 0x530 JUMPI DUP1 PUSH4 0xC0E8224A EQ PUSH2 0x539 JUMPI DUP1 PUSH4 0xC23D4C85 EQ PUSH2 0x54C JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x570 JUMPI DUP1 PUSH4 0xCC8D4701 EQ PUSH2 0x583 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9E061452 EQ PUSH2 0x49A JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x4C8 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x4D0 JUMPI DUP1 PUSH4 0xA8C6FAA5 EQ PUSH2 0x4E3 JUMPI DUP1 PUSH4 0xB752A74B EQ PUSH2 0x4F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x33C63B17 GT PUSH2 0x1EA JUMPI DUP1 PUSH4 0x4D6CAC7A GT PUSH2 0x1AE JUMPI DUP1 PUSH4 0x4D6CAC7A EQ PUSH2 0x413 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x435 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x448 JUMPI DUP1 PUSH4 0x8577FEE7 EQ PUSH2 0x45B JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x47F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x492 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x33C63B17 EQ PUSH2 0x399 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x3C5 JUMPI DUP1 PUSH4 0x37A13153 EQ PUSH2 0x3D8 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x3ED JUMPI DUP1 PUSH4 0x4668BF10 EQ PUSH2 0x400 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0x23C JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x30B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x320 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x333 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x356 JUMPI DUP1 PUSH4 0x30B5ABD7 EQ PUSH2 0x369 JUMPI DUP1 PUSH4 0x30D0EA31 EQ PUSH2 0x372 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x279 JUMPI DUP1 PUSH4 0x4345C93 EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0x5F047DF EQ PUSH2 0x2B8 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x2CB JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x2E0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x28C PUSH2 0x287 CALLDATASIZE PUSH1 0x4 PUSH2 0x2DE8 JUMP JUMPDEST PUSH2 0x75D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AA PUSH1 0x11 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x298 JUMP JUMPDEST PUSH2 0x2AA PUSH2 0x2C6 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E21 JUMP JUMPDEST PUSH2 0x76E JUMP JUMPDEST PUSH2 0x2D3 PUSH2 0x79F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x298 SWAP2 SWAP1 PUSH2 0x2E9B JUMP JUMPDEST PUSH2 0x2F3 PUSH2 0x2EE CALLDATASIZE PUSH1 0x4 PUSH2 0x2EAE JUMP JUMPDEST PUSH2 0x831 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x298 JUMP JUMPDEST PUSH2 0x31E PUSH2 0x319 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E21 JUMP JUMPDEST PUSH2 0x85A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x31E PUSH2 0x32E CALLDATASIZE PUSH1 0x4 PUSH2 0x2EC7 JUMP JUMPDEST PUSH2 0x869 JUMP JUMPDEST PUSH2 0x2AA PUSH2 0x341 CALLDATASIZE PUSH1 0x4 PUSH2 0x2EAE JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x31E PUSH2 0x364 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F03 JUMP JUMPDEST PUSH2 0x8F9 JUMP JUMPDEST PUSH2 0x2AA PUSH1 0x12 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2AA PUSH32 0x4848AA3D2C0568BAB3CA9720F91818EE0957E95426FA0627CC4809E2E5ED8BE0 DUP2 JUMP JUMPDEST PUSH2 0x3AC PUSH2 0x3A7 CALLDATASIZE PUSH1 0x4 PUSH2 0x2EAE JUMP JUMPDEST PUSH2 0x90E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x298 SWAP14 SWAP13 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2FDE JUMP JUMPDEST PUSH2 0x31E PUSH2 0x3D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F03 JUMP JUMPDEST PUSH2 0xD04 JUMP JUMPDEST PUSH2 0x3E0 PUSH2 0xD3C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x298 SWAP2 SWAP1 PUSH2 0x308A JUMP JUMPDEST PUSH2 0x31E PUSH2 0x3FB CALLDATASIZE PUSH1 0x4 PUSH2 0x2EC7 JUMP JUMPDEST PUSH2 0xE71 JUMP JUMPDEST PUSH2 0x31E PUSH2 0x40E CALLDATASIZE PUSH1 0x4 PUSH2 0x31C1 JUMP JUMPDEST PUSH2 0xE8C JUMP JUMPDEST PUSH2 0x426 PUSH2 0x421 CALLDATASIZE PUSH1 0x4 PUSH2 0x322F JUMP JUMPDEST PUSH2 0x1031 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x298 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3276 JUMP JUMPDEST PUSH2 0x2F3 PUSH2 0x443 CALLDATASIZE PUSH1 0x4 PUSH2 0x2EAE JUMP JUMPDEST PUSH2 0x1340 JUMP JUMPDEST PUSH2 0x2AA PUSH2 0x456 CALLDATASIZE PUSH1 0x4 PUSH2 0x32A0 JUMP JUMPDEST PUSH2 0x134B JUMP JUMPDEST PUSH2 0x46E PUSH2 0x469 CALLDATASIZE PUSH1 0x4 PUSH2 0x32A0 JUMP JUMPDEST PUSH2 0x1393 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x298 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x32CB JUMP JUMPDEST PUSH2 0x28C PUSH2 0x48D CALLDATASIZE PUSH1 0x4 PUSH2 0x2F03 JUMP JUMPDEST PUSH2 0x1477 JUMP JUMPDEST PUSH2 0x2D3 PUSH2 0x14A2 JUMP JUMPDEST PUSH2 0x28C PUSH2 0x4A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F03 JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x2AA PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x31E PUSH2 0x4DE CALLDATASIZE PUSH1 0x4 PUSH2 0x3319 JUMP JUMPDEST PUSH2 0x14B1 JUMP JUMPDEST PUSH2 0x31E PUSH2 0x4F1 CALLDATASIZE PUSH1 0x4 PUSH2 0x322F JUMP JUMPDEST PUSH2 0x14BC JUMP JUMPDEST PUSH2 0x2AA PUSH32 0xFEC7CD74E5C65B641D49ECC2E89F646C7C0BCAE85DC50F9616BF9C798CEDDA8B DUP2 JUMP JUMPDEST PUSH2 0x31E PUSH2 0x52B CALLDATASIZE PUSH1 0x4 PUSH2 0x3343 JUMP JUMPDEST PUSH2 0x15C3 JUMP JUMPDEST PUSH2 0x2AA PUSH1 0x13 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2AA PUSH2 0x547 CALLDATASIZE PUSH1 0x4 PUSH2 0x33C2 JUMP JUMPDEST PUSH2 0x15DB JUMP JUMPDEST PUSH2 0x55F PUSH2 0x55A CALLDATASIZE PUSH1 0x4 PUSH2 0x2EAE JUMP JUMPDEST PUSH2 0x1906 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x298 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x352D JUMP JUMPDEST PUSH2 0x2D3 PUSH2 0x57E CALLDATASIZE PUSH1 0x4 PUSH2 0x2EAE JUMP JUMPDEST PUSH2 0x1A41 JUMP JUMPDEST PUSH2 0x2AA PUSH2 0x591 CALLDATASIZE PUSH1 0x4 PUSH2 0x356A JUMP JUMPDEST PUSH2 0x1A4C JUMP JUMPDEST PUSH2 0x31E PUSH2 0x5A4 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F03 JUMP JUMPDEST PUSH2 0x1D33 JUMP JUMPDEST PUSH2 0x31E PUSH2 0x5B7 CALLDATASIZE PUSH1 0x4 PUSH2 0x35BA JUMP JUMPDEST PUSH2 0x1D58 JUMP JUMPDEST PUSH2 0x5CF PUSH2 0x5CA CALLDATASIZE PUSH1 0x4 PUSH2 0x35EF JUMP JUMPDEST PUSH2 0x1D99 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x298 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3611 JUMP JUMPDEST PUSH2 0x3E0 PUSH2 0x1E78 JUMP JUMPDEST PUSH2 0x28C PUSH2 0x5F5 CALLDATASIZE PUSH1 0x4 PUSH2 0x364B JUMP JUMPDEST PUSH2 0x2078 JUMP JUMPDEST PUSH2 0x46E PUSH2 0x608 CALLDATASIZE PUSH1 0x4 PUSH2 0x32A0 JUMP JUMPDEST PUSH2 0x20A6 JUMP JUMPDEST PUSH2 0x28C PUSH2 0x61B CALLDATASIZE PUSH1 0x4 PUSH2 0x35BA JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD DUP1 MLOAD PUSH1 0x10 DUP3 MSTORE SWAP3 DUP3 ADD SWAP2 SWAP1 SWAP4 ADD KECCAK256 SWAP2 MSTORE SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x64E PUSH2 0x649 CALLDATASIZE PUSH1 0x4 PUSH2 0x2EAE JUMP JUMPDEST PUSH2 0x2163 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x298 SWAP2 SWAP1 PUSH2 0x3675 JUMP JUMPDEST PUSH2 0x66E PUSH2 0x669 CALLDATASIZE PUSH1 0x4 PUSH2 0x32A0 JUMP JUMPDEST PUSH2 0x2299 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x298 SWAP2 SWAP1 PUSH2 0x370E JUMP JUMPDEST PUSH2 0x2AA PUSH32 0xC8F5B4140CCA307CD927E59CBEEA8291BFFEEE228FC677F0FA059AEF7B4DD8D5 DUP2 JUMP JUMPDEST PUSH2 0x70B PUSH2 0x6B0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2EAE JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x5 DUP7 ADD SLOAD PUSH1 0x6 DUP8 ADD SLOAD PUSH1 0x7 DUP9 ADD SLOAD PUSH1 0x8 SWAP1 SWAP9 ADD SLOAD SWAP7 SWAP8 SWAP6 SWAP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND SWAP7 SWAP5 SWAP1 SWAP6 AND SWAP5 SWAP3 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 PUSH1 0xFF AND SWAP1 DUP10 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP10 DUP11 MSTORE PUSH1 0x20 DUP11 ADD SWAP9 SWAP1 SWAP9 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND SWAP8 DUP10 ADD SWAP8 SWAP1 SWAP8 MSTORE SWAP5 SWAP1 SWAP4 AND PUSH1 0x60 DUP8 ADD MSTORE PUSH1 0x80 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xC0 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x100 DUP3 ADD MSTORE PUSH2 0x120 ADD PUSH2 0x298 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x768 DUP3 PUSH2 0x2305 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x78A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x7AE SWAP1 PUSH2 0x3752 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7DA SWAP1 PUSH2 0x3752 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x827 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7FC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x827 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x80A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x83C DUP3 PUSH2 0x232A JUMP JUMPDEST POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x768 JUMP JUMPDEST PUSH2 0x865 DUP3 DUP3 CALLER PUSH2 0x2362 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x898 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x8A5 DUP4 DUP4 CALLER PUSH2 0x236F JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x8F3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x64283D7B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x88F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x904 DUP2 PUSH2 0x2463 JUMP JUMPDEST PUSH2 0x8F3 DUP4 DUP4 PUSH2 0x2470 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD DUP1 SLOAD SWAP5 SWAP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP6 SWAP4 SWAP1 SWAP5 AND SWAP4 SWAP2 SWAP3 PUSH2 0x951 SWAP1 PUSH2 0x3752 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x97D SWAP1 PUSH2 0x3752 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9CA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x99F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9CA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9AD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x5 DUP5 ADD SLOAD PUSH1 0x6 DUP6 ADD SLOAD PUSH1 0x7 DUP7 ADD SLOAD PUSH1 0x8 DUP8 ADD SLOAD PUSH1 0x9 DUP9 ADD SLOAD PUSH1 0xA DUP10 ADD DUP1 SLOAD SWAP9 SWAP10 SWAP6 SWAP9 PUSH1 0xFF SWAP6 DUP7 AND SWAP9 POP SWAP4 SWAP7 POP SWAP2 SWAP5 SWAP4 AND SWAP3 SWAP2 PUSH2 0xA09 SWAP1 PUSH2 0x3752 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA35 SWAP1 PUSH2 0x3752 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA82 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA57 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA82 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA65 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0xB ADD SLOAD SWAP1 DUP1 PUSH1 0xC ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0xAAD SWAP1 PUSH2 0x3752 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xAD9 SWAP1 PUSH2 0x3752 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB26 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xAFB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB26 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB09 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0xB3F SWAP1 PUSH2 0x3752 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB6B SWAP1 PUSH2 0x3752 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xBB8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB8D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xBB8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB9B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0xBD1 SWAP1 PUSH2 0x3752 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xBFD SWAP1 PUSH2 0x3752 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC4A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC1F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC4A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC2D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD DUP1 SLOAD PUSH2 0xC63 SWAP1 PUSH2 0x3752 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC8F SWAP1 PUSH2 0x3752 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xCDC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xCB1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xCDC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xCBF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x5 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x40 SWAP1 SWAP2 ADD MSTORE SWAP1 POP DUP14 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0xD2D JUMPI PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD37 DUP3 DUP3 PUSH2 0x2504 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x4 DUP1 DUP3 MSTORE PUSH1 0xA0 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xD58 JUMPI SWAP1 POP POP SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0x4E6F6E65 PUSH1 0xE0 SHL DUP2 MSTORE POP DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xD9F JUMPI PUSH2 0xD9F PUSH2 0x378C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x17 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4C6576656C315F526571756972696E67537570706F7274000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xDF3 JUMPI PUSH2 0xDF3 PUSH2 0x378C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3A5B PUSH1 0x22 SWAP2 CODECOPY DUP2 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0xE2A JUMPI PUSH2 0xE2A PUSH2 0x378C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3A7D PUSH1 0x26 SWAP2 CODECOPY DUP2 PUSH1 0x3 DUP2 MLOAD DUP2 LT PUSH2 0xE61 JUMPI PUSH2 0xE61 PUSH2 0x378C JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD37 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x15C3 JUMP JUMPDEST PUSH2 0xEB6 PUSH32 0x4848AA3D2C0568BAB3CA9720F91818EE0957E95426FA0627CC4809E2E5ED8BE0 CALLER PUSH2 0x1477 JUMP JUMPDEST PUSH2 0xF02 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420617574686F72697A6564206576616C7561746F720000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x88F JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF0D DUP5 PUSH2 0x2571 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xF58 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x24B73B30B634B21032BB30B63AB0BA34B7B7 PUSH1 0x71 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x88F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 SWAP2 SUB PUSH2 0xF98 JUMPI TIMESTAMP PUSH1 0x1 DUP3 ADD SSTORE PUSH1 0x13 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0xF92 DUP4 PUSH2 0x37B8 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMPDEST DUP1 SLOAD DUP4 SWAP1 DUP3 SWAP1 PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xFB6 JUMPI PUSH2 0xFB6 PUSH2 0x2F2F JUMP JUMPDEST MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x3 DUP2 ADD PUSH2 0xFCF DUP4 DUP3 PUSH2 0x3817 JUMP JUMPDEST POP PUSH1 0x4 DUP2 ADD DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0xFE2 DUP4 PUSH2 0x37B8 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x398865B44291CCF794AF9023BFEE116248EE709C8C101E69961C2BEA10255FC0 DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1022 SWAP3 SWAP2 SWAP1 PUSH2 0x38D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 PUSH2 0x103E PUSH2 0x258F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1049 DUP7 PUSH2 0x2571 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x1096 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x151BDAD95B88191BD95CC81B9BDD08195E1A5CDD PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x88F JUMP JUMPDEST PUSH2 0x10C0 PUSH32 0xC8F5B4140CCA307CD927E59CBEEA8291BFFEEE228FC677F0FA059AEF7B4DD8D5 CALLER PUSH2 0x1477 JUMP JUMPDEST DUP1 PUSH2 0x10F0 JUMPI POP PUSH2 0x10F0 PUSH32 0xFEC7CD74E5C65B641D49ECC2E89F646C7C0BCAE85DC50F9616BF9C798CEDDA8B CALLER PUSH2 0x1477 JUMP JUMPDEST PUSH2 0x112D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x139BDD08185D5D1A1BDC9A5E9959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x88F JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x9 DUP2 ADD SLOAD SWAP1 SWAP2 SWAP1 PUSH1 0xFF AND DUP1 PUSH2 0x116A JUMPI POP PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP1 POP DUP1 PUSH2 0x1191 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE SWAP1 SWAP4 POP SWAP2 POP PUSH1 0x1 SWAP1 POP PUSH2 0x132F JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE DUP2 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0xFF NOT SWAP1 SWAP2 AND DUP2 OR SWAP1 SWAP2 SSTORE DUP3 MLOAD PUSH1 0x80 DUP2 ADD DUP5 MSTORE SWAP2 DUP3 MSTORE TIMESTAMP DUP3 DUP6 ADD SWAP1 DUP2 MSTORE DUP3 DUP5 ADD DUP13 DUP2 MSTORE PUSH1 0x60 DUP5 ADD DUP4 SWAP1 MSTORE DUP14 DUP8 MSTORE PUSH1 0xC DUP7 MSTORE SWAP4 DUP7 KECCAK256 DUP1 SLOAD DUP1 DUP5 ADD DUP3 SSTORE SWAP1 DUP8 MSTORE SWAP5 SWAP1 SWAP6 KECCAK256 DUP3 MLOAD PUSH1 0x4 SWAP1 SWAP6 MUL ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR DUP5 SSTORE SWAP4 MLOAD SWAP4 DUP4 ADD SWAP4 SWAP1 SWAP4 SSTORE MLOAD DUP3 SWAP2 SWAP1 PUSH1 0x2 DUP3 ADD SWAP1 PUSH2 0x1233 SWAP1 DUP3 PUSH2 0x3817 JUMP JUMPDEST POP PUSH1 0x60 SWAP2 SWAP1 SWAP2 ADD MLOAD PUSH1 0x3 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x40 MLOAD CALLER SWAP1 DUP10 SWAP1 PUSH32 0x16D577C4C96CF9D9D1A1CA8421248118615F2DBC5789728C0B6BC7DFBC619424 SWAP1 PUSH2 0x1286 SWAP1 DUP12 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x38F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP3 PUSH1 0x4 ADD DUP4 PUSH1 0x5 ADD SLOAD PUSH1 0x0 DUP3 DUP1 SLOAD PUSH2 0x12A5 SWAP1 PUSH2 0x3752 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x12D1 SWAP1 PUSH2 0x3752 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x131E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x12F3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x131E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1301 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP3 POP SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP JUMPDEST PUSH2 0x1339 PUSH1 0x1 PUSH1 0x8 SSTORE JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x768 DUP3 PUSH2 0x232A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1377 JUMPI PUSH1 0x40 MLOAD PUSH4 0x22718AD9 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x88F JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x4 DUP5 ADD SLOAD PUSH1 0x3 DUP6 ADD DUP1 SLOAD DUP8 SWAP7 DUP8 SWAP7 PUSH1 0x60 SWAP7 DUP9 SWAP7 SWAP3 SWAP6 PUSH1 0xFF SWAP1 SWAP3 AND SWAP5 SWAP1 SWAP4 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 PUSH2 0x13E3 SWAP1 PUSH2 0x3752 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x140F SWAP1 PUSH2 0x3752 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x145C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1431 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x145C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x143F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP SWAP6 POP SWAP6 POP SWAP6 POP SWAP6 POP SWAP6 POP POP SWAP2 SWAP4 SWAP6 SWAP1 SWAP3 SWAP5 POP JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x7AE SWAP1 PUSH2 0x3752 JUMP JUMPDEST PUSH2 0x865 CALLER DUP4 DUP4 PUSH2 0x25B9 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x7 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1513 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x109A5B1B08185B1C9958591E481C185A59 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x88F JUMP JUMPDEST PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1560 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x2737BA103134B6361037BBB732B9 PUSH1 0x91 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x88F JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT PUSH2 0x15B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5061796D656E74207472616E73616374696F6E20726571756972656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x88F JUMP JUMPDEST PUSH1 0x7 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x15CE DUP5 DUP5 DUP5 PUSH2 0x869 JUMP JUMPDEST PUSH2 0x8F3 CALLER DUP6 DUP6 DUP6 DUP6 PUSH2 0x2658 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15E5 PUSH2 0x258F JUMP JUMPDEST DUP8 MLOAD MLOAD PUSH2 0x1628 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x496E76616C696420696E737572616E6365 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x88F JUMP JUMPDEST DUP8 MLOAD PUSH1 0x40 MLOAD PUSH1 0x10 SWAP2 PUSH2 0x1639 SWAP2 PUSH2 0x3916 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1691 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x125B9CDD5C985B98D9481B9BDD081D995C9A599A5959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x88F JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT PUSH2 0x16E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E737572616E6365207061796D656E74206861736820726571756972656400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x88F JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x16F2 DUP4 PUSH2 0x37B8 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH2 0x1702 CALLER DUP3 PUSH2 0x2783 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH1 0x3 DUP2 ADD DUP9 SWAP1 SSTORE PUSH1 0x4 DUP2 ADD PUSH2 0x173C DUP9 DUP3 PUSH2 0x3817 JUMP JUMPDEST POP PUSH1 0x5 DUP2 ADD DUP7 SWAP1 SSTORE PUSH1 0x6 DUP2 ADD DUP1 SLOAD DUP7 SWAP2 SWAP1 PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x1765 JUMPI PUSH2 0x1765 PUSH2 0x2F2F JUMP JUMPDEST MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0x7 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x8 DUP3 ADD SSTORE PUSH1 0x9 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0xA DUP2 ADD PUSH2 0x1794 DUP5 DUP3 PUSH2 0x3817 JUMP JUMPDEST POP PUSH1 0xB DUP2 ADD DUP5 SWAP1 SSTORE DUP9 MLOAD DUP10 SWAP1 PUSH1 0xC DUP4 ADD SWAP1 DUP2 SWAP1 PUSH2 0x17B1 SWAP1 DUP3 PUSH2 0x3817 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 DUP3 ADD SWAP1 PUSH2 0x17C6 SWAP1 DUP3 PUSH2 0x3817 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x2 DUP3 ADD SWAP1 PUSH2 0x17DB SWAP1 DUP3 PUSH2 0x3817 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x3 DUP3 ADD SWAP1 PUSH2 0x17F0 SWAP1 DUP3 PUSH2 0x3817 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x4 DUP3 ADD SSTORE PUSH1 0xA0 SWAP1 SWAP2 ADD MLOAD PUSH1 0x5 SWAP1 SWAP2 ADD DUP1 SLOAD SWAP2 ISZERO ISZERO PUSH1 0xFF NOT SWAP3 DUP4 AND OR SWAP1 SSTORE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 ADDRESS DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x1841 CALLER DUP4 PUSH2 0x279D JUMP JUMPDEST PUSH1 0x11 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x1851 DUP4 PUSH2 0x37B8 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x12 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x1866 DUP4 PUSH2 0x37B8 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH32 0x931F7AF5FD41DB155C97C737C3100C1540D9FD948A408A7BD0DB82E7A3F90F11 DUP8 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x18A8 SWAP3 SWAP2 SWAP1 PUSH2 0x3932 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP2 PUSH32 0xC2687B4CF2E8FB805E48C095A786345C2953850FB19620E5618CEA5412DC227F DUP11 PUSH1 0x0 ADD MLOAD DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x18E8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x394F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0x18FB PUSH1 0x1 PUSH1 0x8 SSTORE JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH1 0x60 DUP2 PUSH2 0x1917 DUP8 PUSH2 0x2571 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x1964 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x151BDAD95B88191BD95CC81B9BDD08195E1A5CDD PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x88F JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x6 DUP3 ADD SLOAD PUSH1 0x7 DUP4 ADD SLOAD PUSH1 0x9 DUP5 ADD SLOAD PUSH1 0xC DUP6 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND SWAP5 PUSH1 0xFF SWAP5 DUP6 AND SWAP5 SWAP1 SWAP3 AND SWAP2 DUP2 SWAP1 PUSH2 0x19AD SWAP1 PUSH2 0x3752 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x19D9 SWAP1 PUSH2 0x3752 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1A26 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x19FB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1A26 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1A09 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP6 POP SWAP6 POP SWAP6 POP SWAP6 POP SWAP6 POP POP SWAP2 SWAP4 SWAP6 SWAP1 SWAP3 SWAP5 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x768 DUP3 PUSH2 0x27EA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A56 PUSH2 0x258F JUMP JUMPDEST PUSH2 0x1A80 PUSH32 0xC8F5B4140CCA307CD927E59CBEEA8291BFFEEE228FC677F0FA059AEF7B4DD8D5 CALLER PUSH2 0x1477 JUMP JUMPDEST PUSH2 0x1ABD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x139BDD0818481A1BDCDC1A5D185B PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x88F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AC8 DUP6 PUSH2 0x2571 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x1B13 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x24B73B30B634B21032BB30B63AB0BA34B7B7 PUSH1 0x71 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x88F JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x10 DUP2 ADD SLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x64 SWAP1 PUSH2 0x1B36 SWAP1 DUP8 PUSH2 0x3985 JUMP JUMPDEST PUSH2 0x1B40 SWAP2 SWAP1 PUSH2 0x399C JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 PUSH2 0x1B4F DUP3 DUP9 PUSH2 0x39BE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP12 SWAP1 MSTORE PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT CALLER PUSH1 0x60 SHL AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x54 DUP2 ADD DUP10 SWAP1 MSTORE TIMESTAMP PUSH1 0x74 DUP3 ADD MSTORE SWAP1 SWAP2 POP PUSH1 0x94 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP5 POP PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP6 DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP DUP9 DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP CALLER DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP5 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP8 DUP2 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP DUP3 DUP2 PUSH1 0x5 ADD DUP2 SWAP1 SSTORE POP DUP2 DUP2 PUSH1 0x6 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP DUP2 PUSH1 0x8 ADD DUP2 SWAP1 SSTORE POP PUSH1 0xF PUSH1 0x0 DUP7 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP7 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP5 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP10 DUP8 PUSH32 0x32A639B5E81D2A5D0D4621D6D8F19E4DEC31F1A08746258AACD388C40CAEB66C DUP12 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1D15 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP PUSH2 0x1D2C PUSH1 0x1 PUSH1 0x8 SSTORE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x1D4E DUP2 PUSH2 0x2463 JUMP JUMPDEST PUSH2 0x8F3 DUP4 DUP4 PUSH2 0x2504 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D63 DUP2 PUSH2 0x2463 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x10 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1D75 SWAP2 SWAP1 PUSH2 0x3916 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 DUP1 SLOAD SWAP2 ISZERO ISZERO PUSH1 0xFF NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1DB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP6 POP SWAP1 SWAP4 POP SWAP1 PUSH2 0x1DEC SWAP1 PUSH2 0x3752 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1E18 SWAP1 PUSH2 0x3752 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1E65 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1E3A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1E65 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1E48 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 POP POP PUSH1 0xFF AND DUP5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x8 DUP1 DUP3 MSTORE PUSH2 0x120 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1E95 JUMPI SWAP1 POP POP SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0x41444F53 PUSH1 0xE0 SHL DUP2 MSTORE POP DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1EDC JUMPI PUSH2 0x1EDC PUSH2 0x378C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0x20A224A9 PUSH1 0xE1 SHL DUP2 MSTORE POP DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1F17 JUMPI PUSH2 0x1F17 PUSH2 0x378C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0x43415253 PUSH1 0xE0 SHL DUP2 MSTORE POP DUP2 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x1F52 JUMPI PUSH2 0x1F52 PUSH2 0x378C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x1350D21055 PUSH1 0xDA SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 DUP2 MLOAD DUP2 LT PUSH2 0x1F8E JUMPI PUSH2 0x1F8E PUSH2 0x378C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0x47415253 PUSH1 0xE0 SHL DUP2 MSTORE POP DUP2 PUSH1 0x4 DUP2 MLOAD DUP2 LT PUSH2 0x1FC9 JUMPI PUSH2 0x1FC9 PUSH2 0x378C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x535253 PUSH1 0xE8 SHL DUP2 MSTORE POP DUP2 PUSH1 0x5 DUP2 MLOAD DUP2 LT PUSH2 0x2003 JUMPI PUSH2 0x2003 PUSH2 0x378C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x414243 PUSH1 0xE8 SHL DUP2 MSTORE POP DUP2 PUSH1 0x6 DUP2 MLOAD DUP2 LT PUSH2 0x203D JUMPI PUSH2 0x203D PUSH2 0x378C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0x41535253 PUSH1 0xE0 SHL DUP2 MSTORE POP DUP2 PUSH1 0x7 DUP2 MLOAD DUP2 LT PUSH2 0xE61 JUMPI PUSH2 0xE61 PUSH2 0x378C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD DUP1 SLOAD PUSH1 0xFF SWAP1 SWAP5 AND SWAP5 SWAP3 SWAP4 SWAP2 SWAP3 SWAP2 PUSH2 0x20DA SWAP1 PUSH2 0x3752 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2106 SWAP1 PUSH2 0x3752 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2153 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2128 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2153 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2136 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 POP DUP6 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xC PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x228E JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x4 DUP7 MUL SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x1 DUP2 ADD SLOAD SWAP4 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 DUP4 ADD DUP1 SLOAD SWAP3 SWAP4 SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH2 0x21EB SWAP1 PUSH2 0x3752 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2217 SWAP1 PUSH2 0x3752 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2264 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2239 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2264 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2247 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x3 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x20 SWAP2 DUP3 ADD MSTORE SWAP1 DUP3 MSTORE PUSH1 0x1 SWAP3 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x2198 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP4 MLOAD DUP2 DUP5 MUL DUP2 ADD DUP5 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE PUSH1 0x60 SWAP4 SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x22F9 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x22E5 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x768 JUMPI POP PUSH2 0x768 DUP3 PUSH2 0x28FB JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2336 DUP4 PUSH2 0x2571 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x768 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x88F JUMP JUMPDEST PUSH2 0xD37 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x2920 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x237B DUP5 PUSH2 0x2571 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x2397 JUMPI PUSH2 0x2397 DUP2 DUP5 DUP7 PUSH2 0x2A26 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x23D5 JUMPI PUSH2 0x23B4 PUSH1 0x0 DUP6 PUSH1 0x0 DUP1 PUSH2 0x2920 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO PUSH2 0x2404 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP8 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x246D DUP2 CALLER PUSH2 0x2A8A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x247C DUP4 DUP4 PUSH2 0x1477 JUMP JUMPDEST PUSH2 0x24FC JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x24B4 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x768 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x768 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2510 DUP4 DUP4 PUSH2 0x1477 JUMP JUMPDEST ISZERO PUSH2 0x24FC JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP7 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x768 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x8 SLOAD SUB PUSH2 0x25B2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x8 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x25EB JUMPI PUSH1 0x40 MLOAD PUSH4 0xB611743 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x88F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0x277C JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x269A SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x39D1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x26D5 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x26D2 SWAP2 DUP2 ADD SWAP1 PUSH2 0x3A0E JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x273E JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x2703 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2708 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x2736 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x88F JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ PUSH2 0x277A JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x88F JUMP JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x865 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x2AC3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 SWAP2 SUB PUSH2 0x27C8 JUMPI TIMESTAMP PUSH1 0x1 DUP3 ADD SSTORE JUMPDEST TIMESTAMP PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x4 DUP2 ADD DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x27E0 DUP4 PUSH2 0x37B8 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x27F5 DUP3 PUSH2 0x232A JUMP JUMPDEST POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH2 0x280F SWAP1 PUSH2 0x3752 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x283B SWAP1 PUSH2 0x3752 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2888 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x285D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2888 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x286B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x28A6 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x28B8 JUMPI POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x28EA JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x28D2 SWAP3 SWAP2 SWAP1 PUSH2 0x3A2B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x28F3 DUP5 PUSH2 0x2ADB JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x24832483 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x768 JUMPI POP PUSH2 0x768 DUP3 PUSH2 0x2B4F JUMP JUMPDEST DUP1 DUP1 PUSH2 0x2934 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x29F6 JUMPI PUSH1 0x0 PUSH2 0x2944 DUP5 PUSH2 0x232A JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x2970 JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x2983 JUMPI POP PUSH2 0x2981 DUP2 DUP5 PUSH2 0x2078 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x29AC JUMPI PUSH1 0x40 MLOAD PUSH4 0xA9FBF51F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x88F JUMP JUMPDEST DUP2 ISZERO PUSH2 0x29F4 JUMPI DUP4 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x2A31 DUP4 DUP4 DUP4 PUSH2 0x2B9F JUMP JUMPDEST PUSH2 0xD37 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x2A5F JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x88F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x177E802F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x88F JUMP JUMPDEST PUSH2 0x2A94 DUP3 DUP3 PUSH2 0x1477 JUMP JUMPDEST PUSH2 0x865 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x88F JUMP JUMPDEST PUSH2 0x2ACD DUP4 DUP4 PUSH2 0x2C02 JUMP JUMPDEST PUSH2 0xD37 CALLER PUSH1 0x0 DUP6 DUP6 DUP6 PUSH2 0x2658 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2AE6 DUP3 PUSH2 0x232A JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x2AFE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x2B1E JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1D2C JUMP JUMPDEST DUP1 PUSH2 0x2B28 DUP5 PUSH2 0x2C67 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2B39 SWAP3 SWAP2 SWAP1 PUSH2 0x3A2B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x2B80 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x768 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x768 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x28F3 JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x2BD9 JUMPI POP PUSH2 0x2BD9 DUP5 DUP5 PUSH2 0x2078 JUMP JUMPDEST DUP1 PUSH2 0x28F3 JUMPI POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2C2C JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x88F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C3A DUP4 DUP4 PUSH1 0x0 PUSH2 0x236F JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0xD37 JUMPI PUSH1 0x40 MLOAD PUSH4 0x39E35637 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x88F JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x2C74 DUP4 PUSH2 0x2CFA JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2C94 JUMPI PUSH2 0x2C94 PUSH2 0x30EC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2CBE JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH1 0x0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0x2CC8 JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0x2D39 JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x2D65 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x2D83 JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x2D9B JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x2DAF JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x2DC1 JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x768 JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x246D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2DFA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1D2C DUP2 PUSH2 0x2DD2 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2E1C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2E34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2E3D DUP4 PUSH2 0x2E05 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2E66 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2E4E JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x2E87 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x2E4B JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1D2C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2E6F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2EC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2EDC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2EE5 DUP5 PUSH2 0x2E05 JUMP JUMPDEST SWAP3 POP PUSH2 0x2EF3 PUSH1 0x20 DUP6 ADD PUSH2 0x2E05 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2F16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x2F26 PUSH1 0x20 DUP5 ADD PUSH2 0x2E05 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x8 DUP2 LT PUSH2 0x2F55 JUMPI PUSH2 0x2F55 PUSH2 0x2F2F JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH1 0xC0 DUP5 MSTORE PUSH2 0x2F6E PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x2E6F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x2F87 DUP3 DUP3 PUSH2 0x2E6F JUMP JUMPDEST SWAP2 POP POP PUSH1 0x40 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH2 0x2FA1 DUP3 DUP3 PUSH2 0x2E6F JUMP JUMPDEST SWAP2 POP POP PUSH1 0x60 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x2FBB DUP3 DUP3 PUSH2 0x2E6F JUMP JUMPDEST SWAP2 POP POP PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP4 ADD MLOAD ISZERO ISZERO PUSH1 0xA0 DUP6 ADD MSTORE DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP14 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP13 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1A0 DUP13 PUSH1 0x60 DUP5 ADD MSTORE DUP1 PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x3015 DUP2 DUP5 ADD DUP14 PUSH2 0x2E6F JUMP JUMPDEST SWAP1 POP DUP11 PUSH1 0xA0 DUP5 ADD MSTORE PUSH2 0x302A PUSH1 0xC0 DUP5 ADD DUP12 PUSH2 0x2F45 JUMP JUMPDEST DUP9 PUSH1 0xE0 DUP5 ADD MSTORE DUP8 PUSH2 0x100 DUP5 ADD MSTORE PUSH2 0x3046 PUSH2 0x120 DUP5 ADD DUP9 ISZERO ISZERO SWAP1 MSTORE JUMP JUMPDEST DUP3 DUP2 SUB PUSH2 0x140 DUP5 ADD MSTORE PUSH2 0x3059 DUP2 DUP8 PUSH2 0x2E6F JUMP JUMPDEST SWAP1 POP DUP5 PUSH2 0x160 DUP5 ADD MSTORE DUP3 DUP2 SUB PUSH2 0x180 DUP5 ADD MSTORE PUSH2 0x3075 DUP2 DUP6 PUSH2 0x2F59 JUMP JUMPDEST SWAP2 POP POP SWAP15 SWAP14 POP POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 DUP7 ADD SWAP2 POP PUSH1 0x40 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD SWAP3 POP DUP4 DUP8 ADD PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x30DF JUMPI PUSH1 0x3F NOT DUP9 DUP7 SUB ADD DUP5 MSTORE PUSH2 0x30CD DUP6 DUP4 MLOAD PUSH2 0x2E6F JUMP JUMPDEST SWAP5 POP SWAP3 DUP6 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x30B1 JUMP JUMPDEST POP SWAP3 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xC0 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x3125 JUMPI PUSH2 0x3125 PUSH2 0x30EC JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0x3146 JUMPI PUSH2 0x3146 PUSH2 0x30EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x316E JUMPI PUSH2 0x316E PUSH2 0x30EC JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0x3187 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x31B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D2C DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x312B JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x31D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x31E0 DUP6 PUSH2 0x2E05 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH1 0x4 DUP2 LT PUSH2 0x31FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3217 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3223 DUP8 DUP3 DUP9 ADD PUSH2 0x31A1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3242 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3260 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x326C DUP6 DUP3 DUP7 ADD PUSH2 0x31A1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH2 0x3289 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x2E6F JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE POP SWAP1 ISZERO ISZERO PUSH1 0x40 SWAP1 SWAP2 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x32B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D2C DUP3 PUSH2 0x2E05 JUMP JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0x2F55 JUMPI PUSH2 0x2F55 PUSH2 0x2F2F JUMP JUMPDEST PUSH2 0x32D5 DUP2 DUP8 PUSH2 0x32BB JUMP JUMPDEST DUP5 PUSH1 0x20 DUP3 ADD MSTORE DUP4 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x32F7 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x2E6F JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x80 DUP4 ADD MSTORE SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2E1C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x332C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3335 DUP4 PUSH2 0x2E05 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F26 PUSH1 0x20 DUP5 ADD PUSH2 0x3309 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3359 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3362 DUP6 PUSH2 0x2E05 JUMP JUMPDEST SWAP4 POP PUSH2 0x3370 PUSH1 0x20 DUP7 ADD PUSH2 0x2E05 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3393 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x33A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3223 DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x312B JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x8 DUP2 LT PUSH2 0x2E1C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x33DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x33F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP10 ADD SWAP1 PUSH1 0xC0 DUP3 DUP13 SUB SLT ISZERO PUSH2 0x3409 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3411 PUSH2 0x3102 JUMP JUMPDEST DUP3 CALLDATALOAD DUP3 DUP2 GT ISZERO PUSH2 0x3420 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x342C DUP14 DUP3 DUP7 ADD PUSH2 0x31A1 JUMP JUMPDEST DUP3 MSTORE POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP3 DUP2 GT ISZERO PUSH2 0x3441 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x344D DUP14 DUP3 DUP7 ADD PUSH2 0x31A1 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 DUP4 ADD CALLDATALOAD DUP3 DUP2 GT ISZERO PUSH2 0x3465 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3471 DUP14 DUP3 DUP7 ADD PUSH2 0x31A1 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 DUP4 ADD CALLDATALOAD DUP3 DUP2 GT ISZERO PUSH2 0x3489 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3495 DUP14 DUP3 DUP7 ADD PUSH2 0x31A1 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 DUP4 ADD CALLDATALOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH2 0x34B1 PUSH1 0xA0 DUP5 ADD PUSH2 0x3309 JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD MSTORE SWAP9 POP PUSH1 0x20 DUP11 ADD CALLDATALOAD SWAP8 POP PUSH1 0x40 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x34D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x34DF DUP12 DUP4 DUP13 ADD PUSH2 0x31A1 JUMP JUMPDEST SWAP7 POP PUSH1 0x60 DUP11 ADD CALLDATALOAD SWAP6 POP PUSH2 0x34F4 PUSH1 0x80 DUP12 ADD PUSH2 0x33B3 JUMP JUMPDEST SWAP5 POP PUSH1 0xA0 DUP11 ADD CALLDATALOAD SWAP4 POP PUSH1 0xC0 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x3511 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x351E DUP11 DUP3 DUP12 ADD PUSH2 0x31A1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 MSTORE PUSH2 0x3546 PUSH1 0x20 DUP3 ADD DUP7 PUSH2 0x2F45 JUMP JUMPDEST DUP4 PUSH1 0x40 DUP3 ADD MSTORE DUP3 ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x18FB PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x2E6F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x357F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x35A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x35B0 DUP7 DUP3 DUP8 ADD PUSH2 0x31A1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x35CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x35E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x28F3 DUP5 DUP3 DUP6 ADD PUSH2 0x31A1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3602 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x3638 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x2E6F JUMP JUMPDEST SWAP1 POP DUP3 ISZERO ISZERO PUSH1 0x60 DUP4 ADD MSTORE SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x365E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3667 DUP4 PUSH2 0x2E05 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F26 PUSH1 0x20 DUP5 ADD PUSH2 0x2E05 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 SWAP3 POP DUP3 DUP7 ADD SWAP2 POP DUP3 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD DUP5 DUP9 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3700 JUMPI DUP9 DUP4 SUB PUSH1 0x3F NOT ADD DUP6 MSTORE DUP2 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE DUP8 DUP2 ADD MLOAD DUP9 DUP6 ADD MSTORE DUP7 DUP2 ADD MLOAD PUSH1 0x80 DUP9 DUP7 ADD DUP2 SWAP1 MSTORE SWAP1 PUSH2 0x36DD DUP3 DUP8 ADD DUP3 PUSH2 0x2E6F JUMP JUMPDEST PUSH1 0x60 SWAP4 DUP5 ADD MLOAD ISZERO ISZERO SWAP7 SWAP1 SWAP4 ADD SWAP6 SWAP1 SWAP6 MSTORE POP SWAP5 DUP8 ADD SWAP5 SWAP3 POP SWAP1 DUP7 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x369C JUMP JUMPDEST POP SWAP1 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3746 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x372A JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x3766 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x3786 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x37CA JUMPI PUSH2 0x37CA PUSH2 0x37A2 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xD37 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x37F8 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x277A JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x3804 JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3831 JUMPI PUSH2 0x3831 PUSH2 0x30EC JUMP JUMPDEST PUSH2 0x3845 DUP2 PUSH2 0x383F DUP5 SLOAD PUSH2 0x3752 JUMP JUMPDEST DUP5 PUSH2 0x37D1 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x387A JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x3862 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x277A JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x38A9 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x388A JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x38C7 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x40 DUP2 ADD PUSH2 0x38E5 DUP3 DUP6 PUSH2 0x32BB JUMP JUMPDEST DUP3 PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x3905 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2E6F JUMP JUMPDEST SWAP1 POP DUP3 ISZERO ISZERO PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x3928 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x2E4B JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 ADD PUSH2 0x3940 DUP3 DUP6 PUSH2 0x2F45 JUMP JUMPDEST DUP3 ISZERO ISZERO PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH2 0x3962 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x2E6F JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x3974 DUP2 DUP7 PUSH2 0x2E6F JUMP JUMPDEST SWAP2 POP POP DUP3 PUSH1 0x40 DUP4 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x768 JUMPI PUSH2 0x768 PUSH2 0x37A2 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x39B9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x768 JUMPI PUSH2 0x768 PUSH2 0x37A2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x3A04 SWAP1 DUP4 ADD DUP5 PUSH2 0x2E6F JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3A20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1D2C DUP2 PUSH2 0x2DD2 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x3A3D DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x2E4B JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x3A51 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x2E4B JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP INVALID 0x4C PUSH6 0x76656C325F52 PUSH6 0x71756972696E PUSH8 0x5375627374616E74 PUSH10 0x616C537570706F72744C PUSH6 0x76656C335F52 PUSH6 0x71756972696E PUSH8 0x5665727953756273 PUSH21 0x616E7469616C537570706F7274A264697066735822 SLT KECCAK256 PUSH15 0xBC2539A16F9D8D03D5EF838A55A02A 0xB1 EXTCODECOPY JUMPDEST MSTORE8 0xDC LOG0 BASEFEE 0xD6 ADDMOD MSTORE 0x49 0x22 0x2E PUSH14 0x9FA264736F6C6343000814003300 ","sourceMap":"500:14961:22:-:0;;;4962:418;;;;;;;;;;1380:113:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1380:113:7;;;1454:5;1446;:13;;;;;;:::i;:::-;-1:-1:-1;1469:7:7;:17;1479:7;1469;:17;:::i;:::-;-1:-1:-1;;1857:1:15;2061:7;:21;-1:-1:-1;5025:42:22::1;2241:4:0;5056:10:22;5025;:42::i;:::-;;5190:4;5135:26;:52;;;;2949:24:25::0;2937:37;;2999:2;2990:12;;2735:273;5135:52:22::1;::::0;;;::::1;::::0;;;;;;::::1;::::0;;;:59;;;::::1;;-1:-1:-1::0;;5135:59:22;;::::1;;::::0;;-1:-1:-1;;;3215:20:25;;5204:26:22::1;3260:1:25::0;3251:11;;5204:35:22;;;;;;;;;;;;;:42;;;::::1;-1:-1:-1::0;5204:42:22;;::::1;::::0;;;-1:-1:-1;;;3475:31:25;;3522:12;;;5256:46:22;;;;;;;;;;;;;:53;;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;3747:32:25;;3804:2;3795:12;;5319:47:22;;;;;;;;;;;;;;;:54;;;;::::1;;::::0;;500:14961;;6155:316:0;6232:4;2930:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;2930:29:0;;;;;;;;;;;;6248:217;;6291:12;;;;:6;:12;;;;;;;;-1:-1:-1;;;;;6291:29:0;;;;;;;;;:36;;-1:-1:-1;;6291:36:0;6323:4;6291:36;;;6373:12;735:10:13;;656:96;6373:12:0;-1:-1:-1;;;;;6346:40:0;6364:7;-1:-1:-1;;;;;6346:40:0;6358:4;6346:40;;;;;;;;;;-1:-1:-1;6407:4:0;6400:11;;6248:217;-1:-1:-1;6449:5:0;6248:217;6155:316;;;;:::o;14:127:25:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:25;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;748:448;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:25;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:25;;;2580:26;2531:89;-1:-1:-1;;1335:1:25;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:25;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:25;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:25;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:25:o;3545:268::-;500:14961:22;;;;;;"},"deployedBytecode":{"functionDebugData":{"@DEFAULT_ADMIN_ROLE_30":{"entryPoint":null,"id":30,"parameterSlots":0,"returnSlots":0},"@EVALUATOR_ROLE_7170":{"entryPoint":null,"id":7170,"parameterSlots":0,"returnSlots":0},"@HOSPITAL_ROLE_7165":{"entryPoint":null,"id":7165,"parameterSlots":0,"returnSlots":0},"@INSURANCE_ROLE_7160":{"entryPoint":null,"id":7160,"parameterSlots":0,"returnSlots":0},"@_approve_1520":{"entryPoint":9058,"id":1520,"parameterSlots":3,"returnSlots":0},"@_approve_1586":{"entryPoint":10528,"id":1586,"parameterSlots":4,"returnSlots":0},"@_baseURI_901":{"entryPoint":null,"id":901,"parameterSlots":0,"returnSlots":1},"@_checkAuthorized_1160":{"entryPoint":10790,"id":1160,"parameterSlots":3,"returnSlots":0},"@_checkRole_115":{"entryPoint":10890,"id":115,"parameterSlots":2,"returnSlots":0},"@_checkRole_94":{"entryPoint":9315,"id":94,"parameterSlots":1,"returnSlots":0},"@_getApproved_1087":{"entryPoint":null,"id":1087,"parameterSlots":1,"returnSlots":1},"@_grantRole_257":{"entryPoint":9328,"id":257,"parameterSlots":2,"returnSlots":1},"@_isAuthorized_1123":{"entryPoint":11167,"id":1123,"parameterSlots":3,"returnSlots":1},"@_mint_1316":{"entryPoint":11266,"id":1316,"parameterSlots":2,"returnSlots":0},"@_msgSender_2033":{"entryPoint":null,"id":2033,"parameterSlots":0,"returnSlots":1},"@_nonReentrantAfter_2160":{"entryPoint":null,"id":2160,"parameterSlots":0,"returnSlots":0},"@_nonReentrantBefore_2152":{"entryPoint":9615,"id":2152,"parameterSlots":0,"returnSlots":0},"@_ownerOf_8171":{"entryPoint":9585,"id":8171,"parameterSlots":1,"returnSlots":1},"@_requireOwned_1652":{"entryPoint":9002,"id":1652,"parameterSlots":1,"returnSlots":1},"@_revokeRole_295":{"entryPoint":9476,"id":295,"parameterSlots":2,"returnSlots":1},"@_safeMint_1331":{"entryPoint":10115,"id":1331,"parameterSlots":2,"returnSlots":0},"@_safeMint_1361":{"entryPoint":10947,"id":1361,"parameterSlots":3,"returnSlots":0},"@_setApprovalForAll_1623":{"entryPoint":9657,"id":1623,"parameterSlots":3,"returnSlots":0},"@_updatePatientDiagnosis_8157":{"entryPoint":10141,"id":8157,"parameterSlots":2,"returnSlots":0},"@_update_1266":{"entryPoint":9071,"id":1266,"parameterSlots":3,"returnSlots":1},"@accessEvaluationFile_7709":{"entryPoint":4145,"id":7709,"parameterSlots":2,"returnSlots":3},"@accessHistory_7284":{"entryPoint":7577,"id":7284,"parameterSlots":0,"returnSlots":0},"@addVerifiedInsurance_8186":{"entryPoint":7512,"id":8186,"parameterSlots":1,"returnSlots":0},"@approve_917":{"entryPoint":2138,"id":917,"parameterSlots":2,"returnSlots":0},"@balanceOf_825":{"entryPoint":4939,"id":825,"parameterSlots":1,"returnSlots":1},"@billPatientThroughInsurance_7864":{"entryPoint":6732,"id":7864,"parameterSlots":3,"returnSlots":1},"@checkOnERC721Received_2020":{"entryPoint":9816,"id":2020,"parameterSlots":5,"returnSlots":0},"@evaluations_7273":{"entryPoint":2318,"id":7273,"parameterSlots":0,"returnSlots":0},"@getAccessHistory_8054":{"entryPoint":8547,"id":8054,"parameterSlots":1,"returnSlots":1},"@getApproved_934":{"entryPoint":2097,"id":934,"parameterSlots":1,"returnSlots":1},"@getEvaluationTypes_8271":{"entryPoint":7800,"id":8271,"parameterSlots":0,"returnSlots":1},"@getEvaluation_8039":{"entryPoint":6406,"id":8039,"parameterSlots":1,"returnSlots":5},"@getPatientBills_8068":{"entryPoint":8857,"id":8068,"parameterSlots":1,"returnSlots":1},"@getPatientDiagnosis_7989":{"entryPoint":5011,"id":7989,"parameterSlots":1,"returnSlots":5},"@getRoleAdmin_129":{"entryPoint":null,"id":129,"parameterSlots":1,"returnSlots":1},"@getSeverityLevels_8315":{"entryPoint":3388,"id":8315,"parameterSlots":0,"returnSlots":1},"@grantRole_8203":{"entryPoint":2297,"id":8203,"parameterSlots":2,"returnSlots":0},"@hasPaidAccess_7290":{"entryPoint":null,"id":7290,"parameterSlots":0,"returnSlots":0},"@hasRole_81":{"entryPoint":5239,"id":81,"parameterSlots":2,"returnSlots":1},"@isApprovedForAll_967":{"entryPoint":8312,"id":967,"parameterSlots":2,"returnSlots":1},"@log10_5063":{"entryPoint":11514,"id":5063,"parameterSlots":1,"returnSlots":1},"@medicalBills_7295":{"entryPoint":null,"id":7295,"parameterSlots":0,"returnSlots":0},"@name_847":{"entryPoint":1951,"id":847,"parameterSlots":0,"returnSlots":1},"@ownerOf_838":{"entryPoint":4928,"id":838,"parameterSlots":1,"returnSlots":1},"@patientBills_7300":{"entryPoint":1902,"id":7300,"parameterSlots":0,"returnSlots":0},"@patientDiagnosis_7278":{"entryPoint":8358,"id":7278,"parameterSlots":0,"returnSlots":0},"@payBill_8117":{"entryPoint":5308,"id":8117,"parameterSlots":2,"returnSlots":0},"@renounceRole_190":{"entryPoint":3332,"id":190,"parameterSlots":2,"returnSlots":0},"@revokeRole_167":{"entryPoint":7475,"id":167,"parameterSlots":2,"returnSlots":0},"@safeTransferFrom_1031":{"entryPoint":3697,"id":1031,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_1061":{"entryPoint":5571,"id":1061,"parameterSlots":4,"returnSlots":0},"@setApprovalForAll_950":{"entryPoint":5297,"id":950,"parameterSlots":2,"returnSlots":0},"@supportsInterface_1839":{"entryPoint":10491,"id":1839,"parameterSlots":1,"returnSlots":1},"@supportsInterface_3597":{"entryPoint":null,"id":3597,"parameterSlots":1,"returnSlots":1},"@supportsInterface_63":{"entryPoint":8965,"id":63,"parameterSlots":1,"returnSlots":1},"@supportsInterface_797":{"entryPoint":11087,"id":797,"parameterSlots":1,"returnSlots":1},"@supportsInterface_8348":{"entryPoint":1885,"id":8348,"parameterSlots":1,"returnSlots":1},"@symbol_856":{"entryPoint":5282,"id":856,"parameterSlots":0,"returnSlots":1},"@toString_2286":{"entryPoint":11367,"id":2286,"parameterSlots":1,"returnSlots":1},"@tokenURI_1896":{"entryPoint":10218,"id":1896,"parameterSlots":1,"returnSlots":1},"@tokenURI_8331":{"entryPoint":6721,"id":8331,"parameterSlots":1,"returnSlots":1},"@tokenURI_892":{"entryPoint":10971,"id":892,"parameterSlots":1,"returnSlots":1},"@totalDiagnosedPatients_7310":{"entryPoint":null,"id":7310,"parameterSlots":0,"returnSlots":0},"@totalEvaluations_7306":{"entryPoint":null,"id":7306,"parameterSlots":0,"returnSlots":0},"@totalInsurancePayments_7308":{"entryPoint":null,"id":7308,"parameterSlots":0,"returnSlots":0},"@transferFrom_1013":{"entryPoint":2153,"id":1013,"parameterSlots":3,"returnSlots":0},"@updateDiagnosis_7952":{"entryPoint":3724,"id":7952,"parameterSlots":4,"returnSlots":0},"@uploadEvaluationWithInsurance_7590":{"entryPoint":5595,"id":7590,"parameterSlots":7,"returnSlots":1},"@verifiedInsuranceProviders_7304":{"entryPoint":null,"id":7304,"parameterSlots":0,"returnSlots":0},"abi_decode_address":{"entryPoint":11781,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_available_length_string":{"entryPoint":12587,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_bool":{"entryPoint":13065,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_enum_EvaluationType":{"entryPoint":13235,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_string":{"entryPoint":12705,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":12960,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":13899,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":11975,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":13123,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":13081,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":11809,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256t_enum$_SeverityLevel_$7186t_string_memory_ptr":{"entryPoint":12737,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_bytes32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_address":{"entryPoint":12035,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32t_string_memory_ptr":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":11752,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":14862,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptr":{"entryPoint":13754,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_struct$_InsuranceInfo_$7199_memory_ptrt_bytes32t_string_memory_ptrt_bytes32t_enum$_EvaluationType_$7181t_uint256t_string_memory_ptr":{"entryPoint":13250,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_tuple_t_uint256":{"entryPoint":11950,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_string_memory_ptr":{"entryPoint":12847,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_uint256":{"entryPoint":13807,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_uint256t_string_memory_ptr":{"entryPoint":13674,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_enum_EvaluationType":{"entryPoint":12101,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_enum_SeverityLevel":{"entryPoint":12987,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_string":{"entryPoint":11887,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_struct_InsuranceInfo":{"entryPoint":12121,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":14614,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":14891,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_uint256_t_address_t_uint256_t_uint256__to_t_uint256_t_address_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":14801,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_enum$_EvaluationType_$7181_t_uint256_t_bool_t_string_memory_ptr__to_t_address_t_uint8_t_uint256_t_bool_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13613,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_string_memory_ptr_t_bool__to_t_address_t_uint256_t_string_memory_ptr_t_bool__fromStack_reversed":{"entryPoint":13841,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_array$_t_bytes32_$dyn_memory_ptr__to_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":14094,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_string_memory_ptr_$dyn_memory_ptr__to_t_array$_t_string_memory_ptr_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":12426,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_struct$_AccessRecord_$7249_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_AccessRecord_$7249_memory_ptr_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":13941,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint256_t_address_t_address_t_uint256_t_uint256_t_uint256_t_bool_t_uint256__to_t_bytes32_t_uint256_t_address_t_address_t_uint256_t_uint256_t_uint256_t_bool_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":10,"returnSlots":1},"abi_encode_tuple_t_enum$_EvaluationType_$7181_t_bool__to_t_uint8_t_bool__fromStack_reversed":{"entryPoint":14642,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_enum$_SeverityLevel_$7186_t_uint256__to_t_uint8_t_uint256__fromStack_reversed":{"entryPoint":14551,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_enum$_SeverityLevel_$7186_t_uint256_t_uint256_t_string_memory_ptr_t_uint256__to_t_uint8_t_uint256_t_uint256_t_string_memory_ptr_t_uint256__fromStack_reversed":{"entryPoint":13003,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11931,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr_t_bool__to_t_string_memory_ptr_t_bool__fromStack_reversed":{"entryPoint":14578,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr_t_bytes32_t_bool__to_t_string_memory_ptr_t_bytes32_t_bool__fromStack_reversed":{"entryPoint":12918,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_uint256__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256__fromStack_reversed":{"entryPoint":14671,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_stringliteral_03b56162b0dc1322842d4bb57186452146d3ac0abfc81c1e6d8e70a5bbdeb7d1__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_11dcf9f8e62255365880033e6504fcf152d79d40c6f737eb6eba5912f9a92da3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_355c5bda332c1a91556e38a6eb968e2ef9aec2e973fc0f1fbfee677399f5d735__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_40c3d0dcf30225b44b0b86c09c1674ef2c21a8a0007175bc28129d638c6ea066__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4bb721fc4b02cf8658bfd3d22381f6c262d3cb2daac601973c0b81f302ac41b2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4f9c535a088ec5ff4e3375c9b3be360868c365461262557c1dbba5c0c3f2c097__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9127feae84f50ba061700d6b70693255825cf5ddee8cf59a413005d2a7921be9__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a371d34425552149dc4398b18c7181ef004ff4c04ea4c0e426ebd6fe25cdc6e4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e83b59861188c031e6b87a8f8944f0aa55c1a0f7b324e5d8f61b545253a4c3f7__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_address_t_address_t_bytes32_t_string_memory_ptr_t_bytes32_t_enum$_EvaluationType_$7181_t_uint256_t_uint256_t_bool_t_string_memory_ptr_t_uint256_t_struct$_InsuranceInfo_$7199_memory_ptr__to_t_uint256_t_address_t_address_t_bytes32_t_string_memory_ptr_t_bytes32_t_uint8_t_uint256_t_uint256_t_bool_t_string_memory_ptr_t_uint256_t_struct$_InsuranceInfo_$7199_memory_ptr__fromStack_reversed":{"entryPoint":12254,"id":null,"parameterSlots":14,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"allocate_memory":{"entryPoint":12546,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":14748,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":14725,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":14782,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":14289,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":14359,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":11851,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":14162,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"increment_t_uint256":{"entryPoint":14264,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":14242,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":12079,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":14220,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":12524,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_bytes4":{"entryPoint":11730,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:31461:25","statements":[{"nodeType":"YulBlock","src":"6:3:25","statements":[]},{"body":{"nodeType":"YulBlock","src":"58:87:25","statements":[{"body":{"nodeType":"YulBlock","src":"123:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"132:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"135:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"125:6:25"},"nodeType":"YulFunctionCall","src":"125:12:25"},"nodeType":"YulExpressionStatement","src":"125:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"81:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"92:5:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"103:3:25","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"108:10:25","type":"","value":"0xffffffff"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"99:3:25"},"nodeType":"YulFunctionCall","src":"99:20:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"88:3:25"},"nodeType":"YulFunctionCall","src":"88:32:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"78:2:25"},"nodeType":"YulFunctionCall","src":"78:43:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"71:6:25"},"nodeType":"YulFunctionCall","src":"71:51:25"},"nodeType":"YulIf","src":"68:71:25"}]},"name":"validator_revert_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"47:5:25","type":""}],"src":"14:131:25"},{"body":{"nodeType":"YulBlock","src":"219:176:25","statements":[{"body":{"nodeType":"YulBlock","src":"265:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"274:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"277:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"267:6:25"},"nodeType":"YulFunctionCall","src":"267:12:25"},"nodeType":"YulExpressionStatement","src":"267:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"240:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"249:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"236:3:25"},"nodeType":"YulFunctionCall","src":"236:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"261:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"232:3:25"},"nodeType":"YulFunctionCall","src":"232:32:25"},"nodeType":"YulIf","src":"229:52:25"},{"nodeType":"YulVariableDeclaration","src":"290:36:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"316:9:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"303:12:25"},"nodeType":"YulFunctionCall","src":"303:23:25"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"294:5:25","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"359:5:25"}],"functionName":{"name":"validator_revert_bytes4","nodeType":"YulIdentifier","src":"335:23:25"},"nodeType":"YulFunctionCall","src":"335:30:25"},"nodeType":"YulExpressionStatement","src":"335:30:25"},{"nodeType":"YulAssignment","src":"374:15:25","value":{"name":"value","nodeType":"YulIdentifier","src":"384:5:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"374:6:25"}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"185:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"196:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"208:6:25","type":""}],"src":"150:245:25"},{"body":{"nodeType":"YulBlock","src":"441:50:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"458:3:25"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"477:5:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"470:6:25"},"nodeType":"YulFunctionCall","src":"470:13:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"463:6:25"},"nodeType":"YulFunctionCall","src":"463:21:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"451:6:25"},"nodeType":"YulFunctionCall","src":"451:34:25"},"nodeType":"YulExpressionStatement","src":"451:34:25"}]},"name":"abi_encode_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"425:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"432:3:25","type":""}],"src":"400:91:25"},{"body":{"nodeType":"YulBlock","src":"591:92:25","statements":[{"nodeType":"YulAssignment","src":"601:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"613:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"624:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"609:3:25"},"nodeType":"YulFunctionCall","src":"609:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"601:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"643:9:25"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"668:6:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"661:6:25"},"nodeType":"YulFunctionCall","src":"661:14:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"654:6:25"},"nodeType":"YulFunctionCall","src":"654:22:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"636:6:25"},"nodeType":"YulFunctionCall","src":"636:41:25"},"nodeType":"YulExpressionStatement","src":"636:41:25"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"560:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"571:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"582:4:25","type":""}],"src":"496:187:25"},{"body":{"nodeType":"YulBlock","src":"789:76:25","statements":[{"nodeType":"YulAssignment","src":"799:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"811:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"822:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"807:3:25"},"nodeType":"YulFunctionCall","src":"807:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"799:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"841:9:25"},{"name":"value0","nodeType":"YulIdentifier","src":"852:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"834:6:25"},"nodeType":"YulFunctionCall","src":"834:25:25"},"nodeType":"YulExpressionStatement","src":"834:25:25"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"758:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"769:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"780:4:25","type":""}],"src":"688:177:25"},{"body":{"nodeType":"YulBlock","src":"919:124:25","statements":[{"nodeType":"YulAssignment","src":"929:29:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"951:6:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"938:12:25"},"nodeType":"YulFunctionCall","src":"938:20:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"929:5:25"}]},{"body":{"nodeType":"YulBlock","src":"1021:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1030:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1033:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1023:6:25"},"nodeType":"YulFunctionCall","src":"1023:12:25"},"nodeType":"YulExpressionStatement","src":"1023:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"980:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"991:5:25"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1006:3:25","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1011:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1002:3:25"},"nodeType":"YulFunctionCall","src":"1002:11:25"},{"kind":"number","nodeType":"YulLiteral","src":"1015:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"998:3:25"},"nodeType":"YulFunctionCall","src":"998:19:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"987:3:25"},"nodeType":"YulFunctionCall","src":"987:31:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"977:2:25"},"nodeType":"YulFunctionCall","src":"977:42:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"970:6:25"},"nodeType":"YulFunctionCall","src":"970:50:25"},"nodeType":"YulIf","src":"967:70:25"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"898:6:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"909:5:25","type":""}],"src":"870:173:25"},{"body":{"nodeType":"YulBlock","src":"1135:167:25","statements":[{"body":{"nodeType":"YulBlock","src":"1181:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1190:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1193:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1183:6:25"},"nodeType":"YulFunctionCall","src":"1183:12:25"},"nodeType":"YulExpressionStatement","src":"1183:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1156:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"1165:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1152:3:25"},"nodeType":"YulFunctionCall","src":"1152:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"1177:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1148:3:25"},"nodeType":"YulFunctionCall","src":"1148:32:25"},"nodeType":"YulIf","src":"1145:52:25"},{"nodeType":"YulAssignment","src":"1206:39:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1235:9:25"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1216:18:25"},"nodeType":"YulFunctionCall","src":"1216:29:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1206:6:25"}]},{"nodeType":"YulAssignment","src":"1254:42:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1281:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"1292:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1277:3:25"},"nodeType":"YulFunctionCall","src":"1277:18:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1264:12:25"},"nodeType":"YulFunctionCall","src":"1264:32:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1254:6:25"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1093:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1104:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1116:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1124:6:25","type":""}],"src":"1048:254:25"},{"body":{"nodeType":"YulBlock","src":"1408:76:25","statements":[{"nodeType":"YulAssignment","src":"1418:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1430:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"1441:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1426:3:25"},"nodeType":"YulFunctionCall","src":"1426:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1418:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1460:9:25"},{"name":"value0","nodeType":"YulIdentifier","src":"1471:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1453:6:25"},"nodeType":"YulFunctionCall","src":"1453:25:25"},"nodeType":"YulExpressionStatement","src":"1453:25:25"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1377:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1388:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1399:4:25","type":""}],"src":"1307:177:25"},{"body":{"nodeType":"YulBlock","src":"1555:184:25","statements":[{"nodeType":"YulVariableDeclaration","src":"1565:10:25","value":{"kind":"number","nodeType":"YulLiteral","src":"1574:1:25","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1569:1:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"1634:63:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1659:3:25"},{"name":"i","nodeType":"YulIdentifier","src":"1664:1:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1655:3:25"},"nodeType":"YulFunctionCall","src":"1655:11:25"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1678:3:25"},{"name":"i","nodeType":"YulIdentifier","src":"1683:1:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1674:3:25"},"nodeType":"YulFunctionCall","src":"1674:11:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1668:5:25"},"nodeType":"YulFunctionCall","src":"1668:18:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1648:6:25"},"nodeType":"YulFunctionCall","src":"1648:39:25"},"nodeType":"YulExpressionStatement","src":"1648:39:25"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1595:1:25"},{"name":"length","nodeType":"YulIdentifier","src":"1598:6:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1592:2:25"},"nodeType":"YulFunctionCall","src":"1592:13:25"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1606:19:25","statements":[{"nodeType":"YulAssignment","src":"1608:15:25","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1617:1:25"},{"kind":"number","nodeType":"YulLiteral","src":"1620:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1613:3:25"},"nodeType":"YulFunctionCall","src":"1613:10:25"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1608:1:25"}]}]},"pre":{"nodeType":"YulBlock","src":"1588:3:25","statements":[]},"src":"1584:113:25"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1717:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"1722:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1713:3:25"},"nodeType":"YulFunctionCall","src":"1713:16:25"},{"kind":"number","nodeType":"YulLiteral","src":"1731:1:25","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1706:6:25"},"nodeType":"YulFunctionCall","src":"1706:27:25"},"nodeType":"YulExpressionStatement","src":"1706:27:25"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1533:3:25","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1538:3:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"1543:6:25","type":""}],"src":"1489:250:25"},{"body":{"nodeType":"YulBlock","src":"1794:221:25","statements":[{"nodeType":"YulVariableDeclaration","src":"1804:26:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1824:5:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1818:5:25"},"nodeType":"YulFunctionCall","src":"1818:12:25"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1808:6:25","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1846:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"1851:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1839:6:25"},"nodeType":"YulFunctionCall","src":"1839:19:25"},"nodeType":"YulExpressionStatement","src":"1839:19:25"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1906:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"1913:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1902:3:25"},"nodeType":"YulFunctionCall","src":"1902:16:25"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1924:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"1929:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1920:3:25"},"nodeType":"YulFunctionCall","src":"1920:14:25"},{"name":"length","nodeType":"YulIdentifier","src":"1936:6:25"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"1867:34:25"},"nodeType":"YulFunctionCall","src":"1867:76:25"},"nodeType":"YulExpressionStatement","src":"1867:76:25"},{"nodeType":"YulAssignment","src":"1952:57:25","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1967:3:25"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1980:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"1988:2:25","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1976:3:25"},"nodeType":"YulFunctionCall","src":"1976:15:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1997:2:25","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1993:3:25"},"nodeType":"YulFunctionCall","src":"1993:7:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1972:3:25"},"nodeType":"YulFunctionCall","src":"1972:29:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1963:3:25"},"nodeType":"YulFunctionCall","src":"1963:39:25"},{"kind":"number","nodeType":"YulLiteral","src":"2004:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1959:3:25"},"nodeType":"YulFunctionCall","src":"1959:50:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1952:3:25"}]}]},"name":"abi_encode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1771:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1778:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"1786:3:25","type":""}],"src":"1744:271:25"},{"body":{"nodeType":"YulBlock","src":"2141:99:25","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2158:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"2169:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2151:6:25"},"nodeType":"YulFunctionCall","src":"2151:21:25"},"nodeType":"YulExpressionStatement","src":"2151:21:25"},{"nodeType":"YulAssignment","src":"2181:53:25","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2207:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2219:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"2230:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2215:3:25"},"nodeType":"YulFunctionCall","src":"2215:18:25"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"2189:17:25"},"nodeType":"YulFunctionCall","src":"2189:45:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2181:4:25"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2110:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2121:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2132:4:25","type":""}],"src":"2020:220:25"},{"body":{"nodeType":"YulBlock","src":"2315:110:25","statements":[{"body":{"nodeType":"YulBlock","src":"2361:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2370:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2373:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2363:6:25"},"nodeType":"YulFunctionCall","src":"2363:12:25"},"nodeType":"YulExpressionStatement","src":"2363:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2336:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"2345:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2332:3:25"},"nodeType":"YulFunctionCall","src":"2332:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"2357:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2328:3:25"},"nodeType":"YulFunctionCall","src":"2328:32:25"},"nodeType":"YulIf","src":"2325:52:25"},{"nodeType":"YulAssignment","src":"2386:33:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2409:9:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2396:12:25"},"nodeType":"YulFunctionCall","src":"2396:23:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2386:6:25"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2281:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2292:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2304:6:25","type":""}],"src":"2245:180:25"},{"body":{"nodeType":"YulBlock","src":"2474:60:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2491:3:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2500:5:25"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2515:3:25","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2520:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2511:3:25"},"nodeType":"YulFunctionCall","src":"2511:11:25"},{"kind":"number","nodeType":"YulLiteral","src":"2524:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2507:3:25"},"nodeType":"YulFunctionCall","src":"2507:19:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2496:3:25"},"nodeType":"YulFunctionCall","src":"2496:31:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2484:6:25"},"nodeType":"YulFunctionCall","src":"2484:44:25"},"nodeType":"YulExpressionStatement","src":"2484:44:25"}]},"name":"abi_encode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2458:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2465:3:25","type":""}],"src":"2430:104:25"},{"body":{"nodeType":"YulBlock","src":"2640:102:25","statements":[{"nodeType":"YulAssignment","src":"2650:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2662:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"2673:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2658:3:25"},"nodeType":"YulFunctionCall","src":"2658:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2650:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2692:9:25"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2707:6:25"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2723:3:25","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2728:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2719:3:25"},"nodeType":"YulFunctionCall","src":"2719:11:25"},{"kind":"number","nodeType":"YulLiteral","src":"2732:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2715:3:25"},"nodeType":"YulFunctionCall","src":"2715:19:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2703:3:25"},"nodeType":"YulFunctionCall","src":"2703:32:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2685:6:25"},"nodeType":"YulFunctionCall","src":"2685:51:25"},"nodeType":"YulExpressionStatement","src":"2685:51:25"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2609:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2620:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2631:4:25","type":""}],"src":"2539:203:25"},{"body":{"nodeType":"YulBlock","src":"2851:224:25","statements":[{"body":{"nodeType":"YulBlock","src":"2897:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2906:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2909:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2899:6:25"},"nodeType":"YulFunctionCall","src":"2899:12:25"},"nodeType":"YulExpressionStatement","src":"2899:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2872:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"2881:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2868:3:25"},"nodeType":"YulFunctionCall","src":"2868:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"2893:2:25","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2864:3:25"},"nodeType":"YulFunctionCall","src":"2864:32:25"},"nodeType":"YulIf","src":"2861:52:25"},{"nodeType":"YulAssignment","src":"2922:39:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2951:9:25"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2932:18:25"},"nodeType":"YulFunctionCall","src":"2932:29:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2922:6:25"}]},{"nodeType":"YulAssignment","src":"2970:48:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3003:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"3014:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2999:3:25"},"nodeType":"YulFunctionCall","src":"2999:18:25"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2980:18:25"},"nodeType":"YulFunctionCall","src":"2980:38:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2970:6:25"}]},{"nodeType":"YulAssignment","src":"3027:42:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3054:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"3065:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3050:3:25"},"nodeType":"YulFunctionCall","src":"3050:18:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3037:12:25"},"nodeType":"YulFunctionCall","src":"3037:32:25"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3027:6:25"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2801:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2812:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2824:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2832:6:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2840:6:25","type":""}],"src":"2747:328:25"},{"body":{"nodeType":"YulBlock","src":"3150:110:25","statements":[{"body":{"nodeType":"YulBlock","src":"3196:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3205:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3208:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3198:6:25"},"nodeType":"YulFunctionCall","src":"3198:12:25"},"nodeType":"YulExpressionStatement","src":"3198:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3171:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"3180:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3167:3:25"},"nodeType":"YulFunctionCall","src":"3167:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"3192:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3163:3:25"},"nodeType":"YulFunctionCall","src":"3163:32:25"},"nodeType":"YulIf","src":"3160:52:25"},{"nodeType":"YulAssignment","src":"3221:33:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3244:9:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3231:12:25"},"nodeType":"YulFunctionCall","src":"3231:23:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3221:6:25"}]}]},"name":"abi_decode_tuple_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3116:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3127:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3139:6:25","type":""}],"src":"3080:180:25"},{"body":{"nodeType":"YulBlock","src":"3352:167:25","statements":[{"body":{"nodeType":"YulBlock","src":"3398:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3407:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3410:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3400:6:25"},"nodeType":"YulFunctionCall","src":"3400:12:25"},"nodeType":"YulExpressionStatement","src":"3400:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3373:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"3382:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3369:3:25"},"nodeType":"YulFunctionCall","src":"3369:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"3394:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3365:3:25"},"nodeType":"YulFunctionCall","src":"3365:32:25"},"nodeType":"YulIf","src":"3362:52:25"},{"nodeType":"YulAssignment","src":"3423:33:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3446:9:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3433:12:25"},"nodeType":"YulFunctionCall","src":"3433:23:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3423:6:25"}]},{"nodeType":"YulAssignment","src":"3465:48:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3498:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"3509:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3494:3:25"},"nodeType":"YulFunctionCall","src":"3494:18:25"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"3475:18:25"},"nodeType":"YulFunctionCall","src":"3475:38:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3465:6:25"}]}]},"name":"abi_decode_tuple_t_bytes32t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3310:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3321:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3333:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3341:6:25","type":""}],"src":"3265:254:25"},{"body":{"nodeType":"YulBlock","src":"3556:95:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3573:1:25","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3580:3:25","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"3585:10:25","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3576:3:25"},"nodeType":"YulFunctionCall","src":"3576:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3566:6:25"},"nodeType":"YulFunctionCall","src":"3566:31:25"},"nodeType":"YulExpressionStatement","src":"3566:31:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3613:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3616:4:25","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3606:6:25"},"nodeType":"YulFunctionCall","src":"3606:15:25"},"nodeType":"YulExpressionStatement","src":"3606:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3637:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3640:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3630:6:25"},"nodeType":"YulFunctionCall","src":"3630:15:25"},"nodeType":"YulExpressionStatement","src":"3630:15:25"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"3524:127:25"},{"body":{"nodeType":"YulBlock","src":"3712:89:25","statements":[{"body":{"nodeType":"YulBlock","src":"3746:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x21","nodeType":"YulIdentifier","src":"3748:16:25"},"nodeType":"YulFunctionCall","src":"3748:18:25"},"nodeType":"YulExpressionStatement","src":"3748:18:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3735:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"3742:1:25","type":"","value":"8"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3732:2:25"},"nodeType":"YulFunctionCall","src":"3732:12:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3725:6:25"},"nodeType":"YulFunctionCall","src":"3725:20:25"},"nodeType":"YulIf","src":"3722:46:25"},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3784:3:25"},{"name":"value","nodeType":"YulIdentifier","src":"3789:5:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3777:6:25"},"nodeType":"YulFunctionCall","src":"3777:18:25"},"nodeType":"YulExpressionStatement","src":"3777:18:25"}]},"name":"abi_encode_enum_EvaluationType","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3696:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3703:3:25","type":""}],"src":"3656:145:25"},{"body":{"nodeType":"YulBlock","src":"3870:789:25","statements":[{"nodeType":"YulVariableDeclaration","src":"3880:32:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3906:5:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3900:5:25"},"nodeType":"YulFunctionCall","src":"3900:12:25"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"3884:12:25","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3928:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"3933:4:25","type":"","value":"0xc0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3921:6:25"},"nodeType":"YulFunctionCall","src":"3921:17:25"},"nodeType":"YulExpressionStatement","src":"3921:17:25"},{"nodeType":"YulVariableDeclaration","src":"3947:59:25","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"3977:12:25"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3995:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"4000:4:25","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3991:3:25"},"nodeType":"YulFunctionCall","src":"3991:14:25"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"3959:17:25"},"nodeType":"YulFunctionCall","src":"3959:47:25"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"3951:4:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4015:45:25","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4047:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"4054:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4043:3:25"},"nodeType":"YulFunctionCall","src":"4043:16:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4037:5:25"},"nodeType":"YulFunctionCall","src":"4037:23:25"},"variables":[{"name":"memberValue0_1","nodeType":"YulTypedName","src":"4019:14:25","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4080:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"4085:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4076:3:25"},"nodeType":"YulFunctionCall","src":"4076:14:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"4096:4:25"},{"name":"pos","nodeType":"YulIdentifier","src":"4102:3:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4092:3:25"},"nodeType":"YulFunctionCall","src":"4092:14:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4069:6:25"},"nodeType":"YulFunctionCall","src":"4069:38:25"},"nodeType":"YulExpressionStatement","src":"4069:38:25"},{"nodeType":"YulVariableDeclaration","src":"4116:53:25","value":{"arguments":[{"name":"memberValue0_1","nodeType":"YulIdentifier","src":"4148:14:25"},{"name":"tail","nodeType":"YulIdentifier","src":"4164:4:25"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"4130:17:25"},"nodeType":"YulFunctionCall","src":"4130:39:25"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"4120:6:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4178:45:25","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4210:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"4217:4:25","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4206:3:25"},"nodeType":"YulFunctionCall","src":"4206:16:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4200:5:25"},"nodeType":"YulFunctionCall","src":"4200:23:25"},"variables":[{"name":"memberValue0_2","nodeType":"YulTypedName","src":"4182:14:25","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4243:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"4248:4:25","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4239:3:25"},"nodeType":"YulFunctionCall","src":"4239:14:25"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"4259:6:25"},{"name":"pos","nodeType":"YulIdentifier","src":"4267:3:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4255:3:25"},"nodeType":"YulFunctionCall","src":"4255:16:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4232:6:25"},"nodeType":"YulFunctionCall","src":"4232:40:25"},"nodeType":"YulExpressionStatement","src":"4232:40:25"},{"nodeType":"YulVariableDeclaration","src":"4281:55:25","value":{"arguments":[{"name":"memberValue0_2","nodeType":"YulIdentifier","src":"4313:14:25"},{"name":"tail_1","nodeType":"YulIdentifier","src":"4329:6:25"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"4295:17:25"},"nodeType":"YulFunctionCall","src":"4295:41:25"},"variables":[{"name":"tail_2","nodeType":"YulTypedName","src":"4285:6:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4345:45:25","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4377:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"4384:4:25","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4373:3:25"},"nodeType":"YulFunctionCall","src":"4373:16:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4367:5:25"},"nodeType":"YulFunctionCall","src":"4367:23:25"},"variables":[{"name":"memberValue0_3","nodeType":"YulTypedName","src":"4349:14:25","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4410:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"4415:4:25","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4406:3:25"},"nodeType":"YulFunctionCall","src":"4406:14:25"},{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"4426:6:25"},{"name":"pos","nodeType":"YulIdentifier","src":"4434:3:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4422:3:25"},"nodeType":"YulFunctionCall","src":"4422:16:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4399:6:25"},"nodeType":"YulFunctionCall","src":"4399:40:25"},"nodeType":"YulExpressionStatement","src":"4399:40:25"},{"nodeType":"YulVariableDeclaration","src":"4448:55:25","value":{"arguments":[{"name":"memberValue0_3","nodeType":"YulIdentifier","src":"4480:14:25"},{"name":"tail_2","nodeType":"YulIdentifier","src":"4496:6:25"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"4462:17:25"},"nodeType":"YulFunctionCall","src":"4462:41:25"},"variables":[{"name":"tail_3","nodeType":"YulTypedName","src":"4452:6:25","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4523:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"4528:4:25","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4519:3:25"},"nodeType":"YulFunctionCall","src":"4519:14:25"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4545:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"4552:4:25","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4541:3:25"},"nodeType":"YulFunctionCall","src":"4541:16:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4535:5:25"},"nodeType":"YulFunctionCall","src":"4535:23:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4512:6:25"},"nodeType":"YulFunctionCall","src":"4512:47:25"},"nodeType":"YulExpressionStatement","src":"4512:47:25"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4579:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"4584:4:25","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4575:3:25"},"nodeType":"YulFunctionCall","src":"4575:14:25"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4615:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"4622:4:25","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4611:3:25"},"nodeType":"YulFunctionCall","src":"4611:16:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4605:5:25"},"nodeType":"YulFunctionCall","src":"4605:23:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4598:6:25"},"nodeType":"YulFunctionCall","src":"4598:31:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4591:6:25"},"nodeType":"YulFunctionCall","src":"4591:39:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4568:6:25"},"nodeType":"YulFunctionCall","src":"4568:63:25"},"nodeType":"YulExpressionStatement","src":"4568:63:25"},{"nodeType":"YulAssignment","src":"4640:13:25","value":{"name":"tail_3","nodeType":"YulIdentifier","src":"4647:6:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4640:3:25"}]}]},"name":"abi_encode_struct_InsuranceInfo","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3847:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3854:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3862:3:25","type":""}],"src":"3806:853:25"},{"body":{"nodeType":"YulBlock","src":"5217:878:25","statements":[{"nodeType":"YulVariableDeclaration","src":"5227:13:25","value":{"kind":"number","nodeType":"YulLiteral","src":"5237:3:25","type":"","value":"416"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"5231:2:25","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5256:9:25"},{"name":"value0","nodeType":"YulIdentifier","src":"5267:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5249:6:25"},"nodeType":"YulFunctionCall","src":"5249:25:25"},"nodeType":"YulExpressionStatement","src":"5249:25:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5294:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"5305:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5290:3:25"},"nodeType":"YulFunctionCall","src":"5290:18:25"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"5314:6:25"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5330:3:25","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"5335:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5326:3:25"},"nodeType":"YulFunctionCall","src":"5326:11:25"},{"kind":"number","nodeType":"YulLiteral","src":"5339:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5322:3:25"},"nodeType":"YulFunctionCall","src":"5322:19:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5310:3:25"},"nodeType":"YulFunctionCall","src":"5310:32:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5283:6:25"},"nodeType":"YulFunctionCall","src":"5283:60:25"},"nodeType":"YulExpressionStatement","src":"5283:60:25"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"5371:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5383:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"5394:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5379:3:25"},"nodeType":"YulFunctionCall","src":"5379:18:25"}],"functionName":{"name":"abi_encode_address","nodeType":"YulIdentifier","src":"5352:18:25"},"nodeType":"YulFunctionCall","src":"5352:46:25"},"nodeType":"YulExpressionStatement","src":"5352:46:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5418:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"5429:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5414:3:25"},"nodeType":"YulFunctionCall","src":"5414:18:25"},{"name":"value3","nodeType":"YulIdentifier","src":"5434:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5407:6:25"},"nodeType":"YulFunctionCall","src":"5407:34:25"},"nodeType":"YulExpressionStatement","src":"5407:34:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5461:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"5472:3:25","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5457:3:25"},"nodeType":"YulFunctionCall","src":"5457:19:25"},{"name":"_1","nodeType":"YulIdentifier","src":"5478:2:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5450:6:25"},"nodeType":"YulFunctionCall","src":"5450:31:25"},"nodeType":"YulExpressionStatement","src":"5450:31:25"},{"nodeType":"YulVariableDeclaration","src":"5490:59:25","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"5522:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5534:9:25"},{"name":"_1","nodeType":"YulIdentifier","src":"5545:2:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5530:3:25"},"nodeType":"YulFunctionCall","src":"5530:18:25"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"5504:17:25"},"nodeType":"YulFunctionCall","src":"5504:45:25"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"5494:6:25","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5569:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"5580:3:25","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5565:3:25"},"nodeType":"YulFunctionCall","src":"5565:19:25"},{"name":"value5","nodeType":"YulIdentifier","src":"5586:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5558:6:25"},"nodeType":"YulFunctionCall","src":"5558:35:25"},"nodeType":"YulExpressionStatement","src":"5558:35:25"},{"expression":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"5633:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5645:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"5656:3:25","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5641:3:25"},"nodeType":"YulFunctionCall","src":"5641:19:25"}],"functionName":{"name":"abi_encode_enum_EvaluationType","nodeType":"YulIdentifier","src":"5602:30:25"},"nodeType":"YulFunctionCall","src":"5602:59:25"},"nodeType":"YulExpressionStatement","src":"5602:59:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5681:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"5692:3:25","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5677:3:25"},"nodeType":"YulFunctionCall","src":"5677:19:25"},{"name":"value7","nodeType":"YulIdentifier","src":"5698:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5670:6:25"},"nodeType":"YulFunctionCall","src":"5670:35:25"},"nodeType":"YulExpressionStatement","src":"5670:35:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5725:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"5736:3:25","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5721:3:25"},"nodeType":"YulFunctionCall","src":"5721:19:25"},{"name":"value8","nodeType":"YulIdentifier","src":"5742:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5714:6:25"},"nodeType":"YulFunctionCall","src":"5714:35:25"},"nodeType":"YulExpressionStatement","src":"5714:35:25"},{"expression":{"arguments":[{"name":"value9","nodeType":"YulIdentifier","src":"5774:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5786:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"5797:3:25","type":"","value":"288"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5782:3:25"},"nodeType":"YulFunctionCall","src":"5782:19:25"}],"functionName":{"name":"abi_encode_bool","nodeType":"YulIdentifier","src":"5758:15:25"},"nodeType":"YulFunctionCall","src":"5758:44:25"},"nodeType":"YulExpressionStatement","src":"5758:44:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5822:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"5833:3:25","type":"","value":"320"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5818:3:25"},"nodeType":"YulFunctionCall","src":"5818:19:25"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"5843:6:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"5851:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5839:3:25"},"nodeType":"YulFunctionCall","src":"5839:22:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5811:6:25"},"nodeType":"YulFunctionCall","src":"5811:51:25"},"nodeType":"YulExpressionStatement","src":"5811:51:25"},{"nodeType":"YulVariableDeclaration","src":"5871:48:25","value":{"arguments":[{"name":"value10","nodeType":"YulIdentifier","src":"5903:7:25"},{"name":"tail_1","nodeType":"YulIdentifier","src":"5912:6:25"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"5885:17:25"},"nodeType":"YulFunctionCall","src":"5885:34:25"},"variables":[{"name":"tail_2","nodeType":"YulTypedName","src":"5875:6:25","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5939:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"5950:3:25","type":"","value":"352"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5935:3:25"},"nodeType":"YulFunctionCall","src":"5935:19:25"},{"name":"value11","nodeType":"YulIdentifier","src":"5956:7:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5928:6:25"},"nodeType":"YulFunctionCall","src":"5928:36:25"},"nodeType":"YulExpressionStatement","src":"5928:36:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5984:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"5995:3:25","type":"","value":"384"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5980:3:25"},"nodeType":"YulFunctionCall","src":"5980:19:25"},{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"6005:6:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"6013:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6001:3:25"},"nodeType":"YulFunctionCall","src":"6001:22:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5973:6:25"},"nodeType":"YulFunctionCall","src":"5973:51:25"},"nodeType":"YulExpressionStatement","src":"5973:51:25"},{"nodeType":"YulAssignment","src":"6033:56:25","value":{"arguments":[{"name":"value12","nodeType":"YulIdentifier","src":"6073:7:25"},{"name":"tail_2","nodeType":"YulIdentifier","src":"6082:6:25"}],"functionName":{"name":"abi_encode_struct_InsuranceInfo","nodeType":"YulIdentifier","src":"6041:31:25"},"nodeType":"YulFunctionCall","src":"6041:48:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6033:4:25"}]}]},"name":"abi_encode_tuple_t_uint256_t_address_t_address_t_bytes32_t_string_memory_ptr_t_bytes32_t_enum$_EvaluationType_$7181_t_uint256_t_uint256_t_bool_t_string_memory_ptr_t_uint256_t_struct$_InsuranceInfo_$7199_memory_ptr__to_t_uint256_t_address_t_address_t_bytes32_t_string_memory_ptr_t_bytes32_t_uint8_t_uint256_t_uint256_t_bool_t_string_memory_ptr_t_uint256_t_struct$_InsuranceInfo_$7199_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5087:9:25","type":""},{"name":"value12","nodeType":"YulTypedName","src":"5098:7:25","type":""},{"name":"value11","nodeType":"YulTypedName","src":"5107:7:25","type":""},{"name":"value10","nodeType":"YulTypedName","src":"5116:7:25","type":""},{"name":"value9","nodeType":"YulTypedName","src":"5125:6:25","type":""},{"name":"value8","nodeType":"YulTypedName","src":"5133:6:25","type":""},{"name":"value7","nodeType":"YulTypedName","src":"5141:6:25","type":""},{"name":"value6","nodeType":"YulTypedName","src":"5149:6:25","type":""},{"name":"value5","nodeType":"YulTypedName","src":"5157:6:25","type":""},{"name":"value4","nodeType":"YulTypedName","src":"5165:6:25","type":""},{"name":"value3","nodeType":"YulTypedName","src":"5173:6:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5181:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5189:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5197:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5208:4:25","type":""}],"src":"4664:1431:25"},{"body":{"nodeType":"YulBlock","src":"6271:632:25","statements":[{"nodeType":"YulVariableDeclaration","src":"6281:12:25","value":{"kind":"number","nodeType":"YulLiteral","src":"6291:2:25","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"6285:2:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6302:32:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6320:9:25"},{"name":"_1","nodeType":"YulIdentifier","src":"6331:2:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6316:3:25"},"nodeType":"YulFunctionCall","src":"6316:18:25"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"6306:6:25","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6350:9:25"},{"name":"_1","nodeType":"YulIdentifier","src":"6361:2:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6343:6:25"},"nodeType":"YulFunctionCall","src":"6343:21:25"},"nodeType":"YulExpressionStatement","src":"6343:21:25"},{"nodeType":"YulVariableDeclaration","src":"6373:17:25","value":{"name":"tail_1","nodeType":"YulIdentifier","src":"6384:6:25"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"6377:3:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6399:27:25","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6419:6:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6413:5:25"},"nodeType":"YulFunctionCall","src":"6413:13:25"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"6403:6:25","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"6442:6:25"},{"name":"length","nodeType":"YulIdentifier","src":"6450:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6435:6:25"},"nodeType":"YulFunctionCall","src":"6435:22:25"},"nodeType":"YulExpressionStatement","src":"6435:22:25"},{"nodeType":"YulAssignment","src":"6466:25:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6477:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"6488:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6473:3:25"},"nodeType":"YulFunctionCall","src":"6473:18:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6466:3:25"}]},{"nodeType":"YulVariableDeclaration","src":"6500:53:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6522:9:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6537:1:25","type":"","value":"5"},{"name":"length","nodeType":"YulIdentifier","src":"6540:6:25"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6533:3:25"},"nodeType":"YulFunctionCall","src":"6533:14:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6518:3:25"},"nodeType":"YulFunctionCall","src":"6518:30:25"},{"kind":"number","nodeType":"YulLiteral","src":"6550:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6514:3:25"},"nodeType":"YulFunctionCall","src":"6514:39:25"},"variables":[{"name":"tail_2","nodeType":"YulTypedName","src":"6504:6:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6562:29:25","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6580:6:25"},{"name":"_1","nodeType":"YulIdentifier","src":"6588:2:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6576:3:25"},"nodeType":"YulFunctionCall","src":"6576:15:25"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"6566:6:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6600:10:25","value":{"kind":"number","nodeType":"YulLiteral","src":"6609:1:25","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"6604:1:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"6668:206:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6689:3:25"},{"arguments":[{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"6702:6:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"6710:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6698:3:25"},"nodeType":"YulFunctionCall","src":"6698:22:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6726:2:25","type":"","value":"63"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6722:3:25"},"nodeType":"YulFunctionCall","src":"6722:7:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6694:3:25"},"nodeType":"YulFunctionCall","src":"6694:36:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6682:6:25"},"nodeType":"YulFunctionCall","src":"6682:49:25"},"nodeType":"YulExpressionStatement","src":"6682:49:25"},{"nodeType":"YulAssignment","src":"6744:50:25","value":{"arguments":[{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"6778:6:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6772:5:25"},"nodeType":"YulFunctionCall","src":"6772:13:25"},{"name":"tail_2","nodeType":"YulIdentifier","src":"6787:6:25"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"6754:17:25"},"nodeType":"YulFunctionCall","src":"6754:40:25"},"variableNames":[{"name":"tail_2","nodeType":"YulIdentifier","src":"6744:6:25"}]},{"nodeType":"YulAssignment","src":"6807:25:25","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"6821:6:25"},{"name":"_1","nodeType":"YulIdentifier","src":"6829:2:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6817:3:25"},"nodeType":"YulFunctionCall","src":"6817:15:25"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"6807:6:25"}]},{"nodeType":"YulAssignment","src":"6845:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6856:3:25"},{"name":"_1","nodeType":"YulIdentifier","src":"6861:2:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6852:3:25"},"nodeType":"YulFunctionCall","src":"6852:12:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6845:3:25"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6630:1:25"},{"name":"length","nodeType":"YulIdentifier","src":"6633:6:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6627:2:25"},"nodeType":"YulFunctionCall","src":"6627:13:25"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6641:18:25","statements":[{"nodeType":"YulAssignment","src":"6643:14:25","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6652:1:25"},{"kind":"number","nodeType":"YulLiteral","src":"6655:1:25","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6648:3:25"},"nodeType":"YulFunctionCall","src":"6648:9:25"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"6643:1:25"}]}]},"pre":{"nodeType":"YulBlock","src":"6623:3:25","statements":[]},"src":"6619:255:25"},{"nodeType":"YulAssignment","src":"6883:14:25","value":{"name":"tail_2","nodeType":"YulIdentifier","src":"6891:6:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6883:4:25"}]}]},"name":"abi_encode_tuple_t_array$_t_string_memory_ptr_$dyn_memory_ptr__to_t_array$_t_string_memory_ptr_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6240:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6251:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6262:4:25","type":""}],"src":"6100:803:25"},{"body":{"nodeType":"YulBlock","src":"6940:95:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6957:1:25","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6964:3:25","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"6969:10:25","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6960:3:25"},"nodeType":"YulFunctionCall","src":"6960:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6950:6:25"},"nodeType":"YulFunctionCall","src":"6950:31:25"},"nodeType":"YulExpressionStatement","src":"6950:31:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6997:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7000:4:25","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6990:6:25"},"nodeType":"YulFunctionCall","src":"6990:15:25"},"nodeType":"YulExpressionStatement","src":"6990:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7021:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7024:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7014:6:25"},"nodeType":"YulFunctionCall","src":"7014:15:25"},"nodeType":"YulExpressionStatement","src":"7014:15:25"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"6908:127:25"},{"body":{"nodeType":"YulBlock","src":"7081:207:25","statements":[{"nodeType":"YulAssignment","src":"7091:19:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7107:2:25","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7101:5:25"},"nodeType":"YulFunctionCall","src":"7101:9:25"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7091:6:25"}]},{"nodeType":"YulVariableDeclaration","src":"7119:35:25","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7141:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"7149:4:25","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7137:3:25"},"nodeType":"YulFunctionCall","src":"7137:17:25"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"7123:10:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"7229:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7231:16:25"},"nodeType":"YulFunctionCall","src":"7231:18:25"},"nodeType":"YulExpressionStatement","src":"7231:18:25"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7172:10:25"},{"kind":"number","nodeType":"YulLiteral","src":"7184:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7169:2:25"},"nodeType":"YulFunctionCall","src":"7169:34:25"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7208:10:25"},{"name":"memPtr","nodeType":"YulIdentifier","src":"7220:6:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7205:2:25"},"nodeType":"YulFunctionCall","src":"7205:22:25"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7166:2:25"},"nodeType":"YulFunctionCall","src":"7166:62:25"},"nodeType":"YulIf","src":"7163:88:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7267:2:25","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7271:10:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7260:6:25"},"nodeType":"YulFunctionCall","src":"7260:22:25"},"nodeType":"YulExpressionStatement","src":"7260:22:25"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"7070:6:25","type":""}],"src":"7040:248:25"},{"body":{"nodeType":"YulBlock","src":"7368:557:25","statements":[{"nodeType":"YulVariableDeclaration","src":"7378:28:25","value":{"kind":"number","nodeType":"YulLiteral","src":"7388:18:25","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"7382:2:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"7433:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7435:16:25"},"nodeType":"YulFunctionCall","src":"7435:18:25"},"nodeType":"YulExpressionStatement","src":"7435:18:25"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7421:6:25"},{"name":"_1","nodeType":"YulIdentifier","src":"7429:2:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7418:2:25"},"nodeType":"YulFunctionCall","src":"7418:14:25"},"nodeType":"YulIf","src":"7415:40:25"},{"nodeType":"YulVariableDeclaration","src":"7464:17:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7478:2:25","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7474:3:25"},"nodeType":"YulFunctionCall","src":"7474:7:25"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"7468:2:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7490:23:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7510:2:25","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7504:5:25"},"nodeType":"YulFunctionCall","src":"7504:9:25"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"7494:6:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7522:73:25","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7544:6:25"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7568:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"7576:2:25","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7564:3:25"},"nodeType":"YulFunctionCall","src":"7564:15:25"},{"name":"_2","nodeType":"YulIdentifier","src":"7581:2:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7560:3:25"},"nodeType":"YulFunctionCall","src":"7560:24:25"},{"kind":"number","nodeType":"YulLiteral","src":"7586:2:25","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7556:3:25"},"nodeType":"YulFunctionCall","src":"7556:33:25"},{"name":"_2","nodeType":"YulIdentifier","src":"7591:2:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7552:3:25"},"nodeType":"YulFunctionCall","src":"7552:42:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7540:3:25"},"nodeType":"YulFunctionCall","src":"7540:55:25"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"7526:10:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"7654:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7656:16:25"},"nodeType":"YulFunctionCall","src":"7656:18:25"},"nodeType":"YulExpressionStatement","src":"7656:18:25"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7613:10:25"},{"name":"_1","nodeType":"YulIdentifier","src":"7625:2:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7610:2:25"},"nodeType":"YulFunctionCall","src":"7610:18:25"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7633:10:25"},{"name":"memPtr","nodeType":"YulIdentifier","src":"7645:6:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7630:2:25"},"nodeType":"YulFunctionCall","src":"7630:22:25"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7607:2:25"},"nodeType":"YulFunctionCall","src":"7607:46:25"},"nodeType":"YulIf","src":"7604:72:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7692:2:25","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7696:10:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7685:6:25"},"nodeType":"YulFunctionCall","src":"7685:22:25"},"nodeType":"YulExpressionStatement","src":"7685:22:25"},{"nodeType":"YulAssignment","src":"7716:15:25","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"7725:6:25"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"7716:5:25"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7747:6:25"},{"name":"length","nodeType":"YulIdentifier","src":"7755:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7740:6:25"},"nodeType":"YulFunctionCall","src":"7740:22:25"},"nodeType":"YulExpressionStatement","src":"7740:22:25"},{"body":{"nodeType":"YulBlock","src":"7800:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7809:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7812:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7802:6:25"},"nodeType":"YulFunctionCall","src":"7802:12:25"},"nodeType":"YulExpressionStatement","src":"7802:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7781:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"7786:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7777:3:25"},"nodeType":"YulFunctionCall","src":"7777:16:25"},{"name":"end","nodeType":"YulIdentifier","src":"7795:3:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7774:2:25"},"nodeType":"YulFunctionCall","src":"7774:25:25"},"nodeType":"YulIf","src":"7771:45:25"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7842:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"7850:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7838:3:25"},"nodeType":"YulFunctionCall","src":"7838:17:25"},{"name":"src","nodeType":"YulIdentifier","src":"7857:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"7862:6:25"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"7825:12:25"},"nodeType":"YulFunctionCall","src":"7825:44:25"},"nodeType":"YulExpressionStatement","src":"7825:44:25"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7893:6:25"},{"name":"length","nodeType":"YulIdentifier","src":"7901:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7889:3:25"},"nodeType":"YulFunctionCall","src":"7889:19:25"},{"kind":"number","nodeType":"YulLiteral","src":"7910:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7885:3:25"},"nodeType":"YulFunctionCall","src":"7885:30:25"},{"kind":"number","nodeType":"YulLiteral","src":"7917:1:25","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7878:6:25"},"nodeType":"YulFunctionCall","src":"7878:41:25"},"nodeType":"YulExpressionStatement","src":"7878:41:25"}]},"name":"abi_decode_available_length_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"7337:3:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"7342:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"7350:3:25","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"7358:5:25","type":""}],"src":"7293:632:25"},{"body":{"nodeType":"YulBlock","src":"7983:169:25","statements":[{"body":{"nodeType":"YulBlock","src":"8032:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8041:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8044:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8034:6:25"},"nodeType":"YulFunctionCall","src":"8034:12:25"},"nodeType":"YulExpressionStatement","src":"8034:12:25"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8011:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"8019:4:25","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8007:3:25"},"nodeType":"YulFunctionCall","src":"8007:17:25"},{"name":"end","nodeType":"YulIdentifier","src":"8026:3:25"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8003:3:25"},"nodeType":"YulFunctionCall","src":"8003:27:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7996:6:25"},"nodeType":"YulFunctionCall","src":"7996:35:25"},"nodeType":"YulIf","src":"7993:55:25"},{"nodeType":"YulAssignment","src":"8057:89:25","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8105:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"8113:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8101:3:25"},"nodeType":"YulFunctionCall","src":"8101:17:25"},{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8133:6:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8120:12:25"},"nodeType":"YulFunctionCall","src":"8120:20:25"},{"name":"end","nodeType":"YulIdentifier","src":"8142:3:25"}],"functionName":{"name":"abi_decode_available_length_string","nodeType":"YulIdentifier","src":"8066:34:25"},"nodeType":"YulFunctionCall","src":"8066:80:25"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"8057:5:25"}]}]},"name":"abi_decode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"7957:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"7965:3:25","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"7973:5:25","type":""}],"src":"7930:222:25"},{"body":{"nodeType":"YulBlock","src":"8306:478:25","statements":[{"body":{"nodeType":"YulBlock","src":"8353:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8362:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8365:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8355:6:25"},"nodeType":"YulFunctionCall","src":"8355:12:25"},"nodeType":"YulExpressionStatement","src":"8355:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8327:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"8336:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8323:3:25"},"nodeType":"YulFunctionCall","src":"8323:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"8348:3:25","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8319:3:25"},"nodeType":"YulFunctionCall","src":"8319:33:25"},"nodeType":"YulIf","src":"8316:53:25"},{"nodeType":"YulAssignment","src":"8378:39:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8407:9:25"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"8388:18:25"},"nodeType":"YulFunctionCall","src":"8388:29:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8378:6:25"}]},{"nodeType":"YulAssignment","src":"8426:42:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8453:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"8464:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8449:3:25"},"nodeType":"YulFunctionCall","src":"8449:18:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8436:12:25"},"nodeType":"YulFunctionCall","src":"8436:32:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"8426:6:25"}]},{"nodeType":"YulVariableDeclaration","src":"8477:45:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8507:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"8518:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8503:3:25"},"nodeType":"YulFunctionCall","src":"8503:18:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8490:12:25"},"nodeType":"YulFunctionCall","src":"8490:32:25"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"8481:5:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"8555:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8564:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8567:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8557:6:25"},"nodeType":"YulFunctionCall","src":"8557:12:25"},"nodeType":"YulExpressionStatement","src":"8557:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8544:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"8551:1:25","type":"","value":"4"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8541:2:25"},"nodeType":"YulFunctionCall","src":"8541:12:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8534:6:25"},"nodeType":"YulFunctionCall","src":"8534:20:25"},"nodeType":"YulIf","src":"8531:40:25"},{"nodeType":"YulAssignment","src":"8580:15:25","value":{"name":"value","nodeType":"YulIdentifier","src":"8590:5:25"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"8580:6:25"}]},{"nodeType":"YulVariableDeclaration","src":"8604:46:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8635:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"8646:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8631:3:25"},"nodeType":"YulFunctionCall","src":"8631:18:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8618:12:25"},"nodeType":"YulFunctionCall","src":"8618:32:25"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8608:6:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"8693:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8702:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8705:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8695:6:25"},"nodeType":"YulFunctionCall","src":"8695:12:25"},"nodeType":"YulExpressionStatement","src":"8695:12:25"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8665:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"8673:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8662:2:25"},"nodeType":"YulFunctionCall","src":"8662:30:25"},"nodeType":"YulIf","src":"8659:50:25"},{"nodeType":"YulAssignment","src":"8718:60:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8750:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"8761:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8746:3:25"},"nodeType":"YulFunctionCall","src":"8746:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8770:7:25"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"8728:17:25"},"nodeType":"YulFunctionCall","src":"8728:50:25"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"8718:6:25"}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_enum$_SeverityLevel_$7186t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8248:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8259:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8271:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8279:6:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8287:6:25","type":""},{"name":"value3","nodeType":"YulTypedName","src":"8295:6:25","type":""}],"src":"8157:627:25"},{"body":{"nodeType":"YulBlock","src":"8886:293:25","statements":[{"body":{"nodeType":"YulBlock","src":"8932:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8941:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8944:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8934:6:25"},"nodeType":"YulFunctionCall","src":"8934:12:25"},"nodeType":"YulExpressionStatement","src":"8934:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8907:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"8916:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8903:3:25"},"nodeType":"YulFunctionCall","src":"8903:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"8928:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8899:3:25"},"nodeType":"YulFunctionCall","src":"8899:32:25"},"nodeType":"YulIf","src":"8896:52:25"},{"nodeType":"YulAssignment","src":"8957:33:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8980:9:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8967:12:25"},"nodeType":"YulFunctionCall","src":"8967:23:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8957:6:25"}]},{"nodeType":"YulVariableDeclaration","src":"8999:46:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9030:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"9041:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9026:3:25"},"nodeType":"YulFunctionCall","src":"9026:18:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9013:12:25"},"nodeType":"YulFunctionCall","src":"9013:32:25"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9003:6:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"9088:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9097:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9100:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9090:6:25"},"nodeType":"YulFunctionCall","src":"9090:12:25"},"nodeType":"YulExpressionStatement","src":"9090:12:25"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9060:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"9068:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9057:2:25"},"nodeType":"YulFunctionCall","src":"9057:30:25"},"nodeType":"YulIf","src":"9054:50:25"},{"nodeType":"YulAssignment","src":"9113:60:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9145:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"9156:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9141:3:25"},"nodeType":"YulFunctionCall","src":"9141:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9165:7:25"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"9123:17:25"},"nodeType":"YulFunctionCall","src":"9123:50:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"9113:6:25"}]}]},"name":"abi_decode_tuple_t_uint256t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8844:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8855:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8867:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8875:6:25","type":""}],"src":"8789:390:25"},{"body":{"nodeType":"YulBlock","src":"9355:201:25","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9372:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"9383:2:25","type":"","value":"96"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9365:6:25"},"nodeType":"YulFunctionCall","src":"9365:21:25"},"nodeType":"YulExpressionStatement","src":"9365:21:25"},{"nodeType":"YulAssignment","src":"9395:53:25","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9421:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9433:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"9444:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9429:3:25"},"nodeType":"YulFunctionCall","src":"9429:18:25"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"9403:17:25"},"nodeType":"YulFunctionCall","src":"9403:45:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9395:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9468:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"9479:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9464:3:25"},"nodeType":"YulFunctionCall","src":"9464:18:25"},{"name":"value1","nodeType":"YulIdentifier","src":"9484:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9457:6:25"},"nodeType":"YulFunctionCall","src":"9457:34:25"},"nodeType":"YulExpressionStatement","src":"9457:34:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9511:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"9522:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9507:3:25"},"nodeType":"YulFunctionCall","src":"9507:18:25"},{"arguments":[{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"9541:6:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9534:6:25"},"nodeType":"YulFunctionCall","src":"9534:14:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9527:6:25"},"nodeType":"YulFunctionCall","src":"9527:22:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9500:6:25"},"nodeType":"YulFunctionCall","src":"9500:50:25"},"nodeType":"YulExpressionStatement","src":"9500:50:25"}]},"name":"abi_encode_tuple_t_string_memory_ptr_t_bytes32_t_bool__to_t_string_memory_ptr_t_bytes32_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9308:9:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9319:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9327:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9335:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9346:4:25","type":""}],"src":"9184:372:25"},{"body":{"nodeType":"YulBlock","src":"9631:116:25","statements":[{"body":{"nodeType":"YulBlock","src":"9677:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9686:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9689:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9679:6:25"},"nodeType":"YulFunctionCall","src":"9679:12:25"},"nodeType":"YulExpressionStatement","src":"9679:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9652:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"9661:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9648:3:25"},"nodeType":"YulFunctionCall","src":"9648:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"9673:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9644:3:25"},"nodeType":"YulFunctionCall","src":"9644:32:25"},"nodeType":"YulIf","src":"9641:52:25"},{"nodeType":"YulAssignment","src":"9702:39:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9731:9:25"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"9712:18:25"},"nodeType":"YulFunctionCall","src":"9712:29:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9702:6:25"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9597:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9608:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9620:6:25","type":""}],"src":"9561:186:25"},{"body":{"nodeType":"YulBlock","src":"9807:89:25","statements":[{"body":{"nodeType":"YulBlock","src":"9841:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x21","nodeType":"YulIdentifier","src":"9843:16:25"},"nodeType":"YulFunctionCall","src":"9843:18:25"},"nodeType":"YulExpressionStatement","src":"9843:18:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9830:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"9837:1:25","type":"","value":"4"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9827:2:25"},"nodeType":"YulFunctionCall","src":"9827:12:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9820:6:25"},"nodeType":"YulFunctionCall","src":"9820:20:25"},"nodeType":"YulIf","src":"9817:46:25"},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9879:3:25"},{"name":"value","nodeType":"YulIdentifier","src":"9884:5:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9872:6:25"},"nodeType":"YulFunctionCall","src":"9872:18:25"},"nodeType":"YulExpressionStatement","src":"9872:18:25"}]},"name":"abi_encode_enum_SeverityLevel","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9791:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9798:3:25","type":""}],"src":"9752:144:25"},{"body":{"nodeType":"YulBlock","src":"10150:297:25","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10190:6:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"10198:9:25"}],"functionName":{"name":"abi_encode_enum_SeverityLevel","nodeType":"YulIdentifier","src":"10160:29:25"},"nodeType":"YulFunctionCall","src":"10160:48:25"},"nodeType":"YulExpressionStatement","src":"10160:48:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10228:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"10239:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10224:3:25"},"nodeType":"YulFunctionCall","src":"10224:18:25"},{"name":"value1","nodeType":"YulIdentifier","src":"10244:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10217:6:25"},"nodeType":"YulFunctionCall","src":"10217:34:25"},"nodeType":"YulExpressionStatement","src":"10217:34:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10271:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"10282:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10267:3:25"},"nodeType":"YulFunctionCall","src":"10267:18:25"},{"name":"value2","nodeType":"YulIdentifier","src":"10287:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10260:6:25"},"nodeType":"YulFunctionCall","src":"10260:34:25"},"nodeType":"YulExpressionStatement","src":"10260:34:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10314:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"10325:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10310:3:25"},"nodeType":"YulFunctionCall","src":"10310:18:25"},{"kind":"number","nodeType":"YulLiteral","src":"10330:3:25","type":"","value":"160"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10303:6:25"},"nodeType":"YulFunctionCall","src":"10303:31:25"},"nodeType":"YulExpressionStatement","src":"10303:31:25"},{"nodeType":"YulAssignment","src":"10343:54:25","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"10369:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10381:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"10392:3:25","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10377:3:25"},"nodeType":"YulFunctionCall","src":"10377:19:25"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"10351:17:25"},"nodeType":"YulFunctionCall","src":"10351:46:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10343:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10417:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"10428:3:25","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10413:3:25"},"nodeType":"YulFunctionCall","src":"10413:19:25"},{"name":"value4","nodeType":"YulIdentifier","src":"10434:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10406:6:25"},"nodeType":"YulFunctionCall","src":"10406:35:25"},"nodeType":"YulExpressionStatement","src":"10406:35:25"}]},"name":"abi_encode_tuple_t_enum$_SeverityLevel_$7186_t_uint256_t_uint256_t_string_memory_ptr_t_uint256__to_t_uint8_t_uint256_t_uint256_t_string_memory_ptr_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10087:9:25","type":""},{"name":"value4","nodeType":"YulTypedName","src":"10098:6:25","type":""},{"name":"value3","nodeType":"YulTypedName","src":"10106:6:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"10114:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10122:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10130:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10141:4:25","type":""}],"src":"9901:546:25"},{"body":{"nodeType":"YulBlock","src":"10539:167:25","statements":[{"body":{"nodeType":"YulBlock","src":"10585:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10594:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10597:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10587:6:25"},"nodeType":"YulFunctionCall","src":"10587:12:25"},"nodeType":"YulExpressionStatement","src":"10587:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10560:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"10569:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10556:3:25"},"nodeType":"YulFunctionCall","src":"10556:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"10581:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10552:3:25"},"nodeType":"YulFunctionCall","src":"10552:32:25"},"nodeType":"YulIf","src":"10549:52:25"},{"nodeType":"YulAssignment","src":"10610:33:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10633:9:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10620:12:25"},"nodeType":"YulFunctionCall","src":"10620:23:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10610:6:25"}]},{"nodeType":"YulAssignment","src":"10652:48:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10685:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"10696:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10681:3:25"},"nodeType":"YulFunctionCall","src":"10681:18:25"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"10662:18:25"},"nodeType":"YulFunctionCall","src":"10662:38:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"10652:6:25"}]}]},"name":"abi_decode_tuple_t_uint256t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10497:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10508:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10520:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10528:6:25","type":""}],"src":"10452:254:25"},{"body":{"nodeType":"YulBlock","src":"10757:114:25","statements":[{"nodeType":"YulAssignment","src":"10767:29:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10789:6:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10776:12:25"},"nodeType":"YulFunctionCall","src":"10776:20:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"10767:5:25"}]},{"body":{"nodeType":"YulBlock","src":"10849:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10858:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10861:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10851:6:25"},"nodeType":"YulFunctionCall","src":"10851:12:25"},"nodeType":"YulExpressionStatement","src":"10851:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10818:5:25"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10839:5:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10832:6:25"},"nodeType":"YulFunctionCall","src":"10832:13:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10825:6:25"},"nodeType":"YulFunctionCall","src":"10825:21:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"10815:2:25"},"nodeType":"YulFunctionCall","src":"10815:32:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10808:6:25"},"nodeType":"YulFunctionCall","src":"10808:40:25"},"nodeType":"YulIf","src":"10805:60:25"}]},"name":"abi_decode_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"10736:6:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"10747:5:25","type":""}],"src":"10711:160:25"},{"body":{"nodeType":"YulBlock","src":"10960:170:25","statements":[{"body":{"nodeType":"YulBlock","src":"11006:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11015:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11018:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11008:6:25"},"nodeType":"YulFunctionCall","src":"11008:12:25"},"nodeType":"YulExpressionStatement","src":"11008:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10981:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"10990:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10977:3:25"},"nodeType":"YulFunctionCall","src":"10977:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"11002:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10973:3:25"},"nodeType":"YulFunctionCall","src":"10973:32:25"},"nodeType":"YulIf","src":"10970:52:25"},{"nodeType":"YulAssignment","src":"11031:39:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11060:9:25"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"11041:18:25"},"nodeType":"YulFunctionCall","src":"11041:29:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11031:6:25"}]},{"nodeType":"YulAssignment","src":"11079:45:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11109:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"11120:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11105:3:25"},"nodeType":"YulFunctionCall","src":"11105:18:25"}],"functionName":{"name":"abi_decode_bool","nodeType":"YulIdentifier","src":"11089:15:25"},"nodeType":"YulFunctionCall","src":"11089:35:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"11079:6:25"}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10918:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10929:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10941:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10949:6:25","type":""}],"src":"10876:254:25"},{"body":{"nodeType":"YulBlock","src":"11232:293:25","statements":[{"body":{"nodeType":"YulBlock","src":"11278:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11287:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11290:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11280:6:25"},"nodeType":"YulFunctionCall","src":"11280:12:25"},"nodeType":"YulExpressionStatement","src":"11280:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11253:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"11262:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11249:3:25"},"nodeType":"YulFunctionCall","src":"11249:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"11274:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11245:3:25"},"nodeType":"YulFunctionCall","src":"11245:32:25"},"nodeType":"YulIf","src":"11242:52:25"},{"nodeType":"YulAssignment","src":"11303:33:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11326:9:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11313:12:25"},"nodeType":"YulFunctionCall","src":"11313:23:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11303:6:25"}]},{"nodeType":"YulVariableDeclaration","src":"11345:46:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11376:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"11387:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11372:3:25"},"nodeType":"YulFunctionCall","src":"11372:18:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11359:12:25"},"nodeType":"YulFunctionCall","src":"11359:32:25"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11349:6:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"11434:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11443:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11446:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11436:6:25"},"nodeType":"YulFunctionCall","src":"11436:12:25"},"nodeType":"YulExpressionStatement","src":"11436:12:25"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11406:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"11414:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11403:2:25"},"nodeType":"YulFunctionCall","src":"11403:30:25"},"nodeType":"YulIf","src":"11400:50:25"},{"nodeType":"YulAssignment","src":"11459:60:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11491:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"11502:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11487:3:25"},"nodeType":"YulFunctionCall","src":"11487:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11511:7:25"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"11469:17:25"},"nodeType":"YulFunctionCall","src":"11469:50:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"11459:6:25"}]}]},"name":"abi_decode_tuple_t_bytes32t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11190:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11201:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11213:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11221:6:25","type":""}],"src":"11135:390:25"},{"body":{"nodeType":"YulBlock","src":"11660:537:25","statements":[{"body":{"nodeType":"YulBlock","src":"11707:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11716:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11719:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11709:6:25"},"nodeType":"YulFunctionCall","src":"11709:12:25"},"nodeType":"YulExpressionStatement","src":"11709:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11681:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"11690:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11677:3:25"},"nodeType":"YulFunctionCall","src":"11677:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"11702:3:25","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11673:3:25"},"nodeType":"YulFunctionCall","src":"11673:33:25"},"nodeType":"YulIf","src":"11670:53:25"},{"nodeType":"YulAssignment","src":"11732:39:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11761:9:25"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"11742:18:25"},"nodeType":"YulFunctionCall","src":"11742:29:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11732:6:25"}]},{"nodeType":"YulAssignment","src":"11780:48:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11813:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"11824:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11809:3:25"},"nodeType":"YulFunctionCall","src":"11809:18:25"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"11790:18:25"},"nodeType":"YulFunctionCall","src":"11790:38:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"11780:6:25"}]},{"nodeType":"YulAssignment","src":"11837:42:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11864:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"11875:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11860:3:25"},"nodeType":"YulFunctionCall","src":"11860:18:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11847:12:25"},"nodeType":"YulFunctionCall","src":"11847:32:25"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"11837:6:25"}]},{"nodeType":"YulVariableDeclaration","src":"11888:46:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11919:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"11930:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11915:3:25"},"nodeType":"YulFunctionCall","src":"11915:18:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11902:12:25"},"nodeType":"YulFunctionCall","src":"11902:32:25"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11892:6:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"11977:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11986:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11989:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11979:6:25"},"nodeType":"YulFunctionCall","src":"11979:12:25"},"nodeType":"YulExpressionStatement","src":"11979:12:25"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11949:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"11957:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11946:2:25"},"nodeType":"YulFunctionCall","src":"11946:30:25"},"nodeType":"YulIf","src":"11943:50:25"},{"nodeType":"YulVariableDeclaration","src":"12002:32:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12016:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"12027:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12012:3:25"},"nodeType":"YulFunctionCall","src":"12012:22:25"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"12006:2:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"12082:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12091:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12094:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12084:6:25"},"nodeType":"YulFunctionCall","src":"12084:12:25"},"nodeType":"YulExpressionStatement","src":"12084:12:25"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"12061:2:25"},{"kind":"number","nodeType":"YulLiteral","src":"12065:4:25","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12057:3:25"},"nodeType":"YulFunctionCall","src":"12057:13:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12072:7:25"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12053:3:25"},"nodeType":"YulFunctionCall","src":"12053:27:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12046:6:25"},"nodeType":"YulFunctionCall","src":"12046:35:25"},"nodeType":"YulIf","src":"12043:55:25"},{"nodeType":"YulAssignment","src":"12107:84:25","value":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"12156:2:25"},{"kind":"number","nodeType":"YulLiteral","src":"12160:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12152:3:25"},"nodeType":"YulFunctionCall","src":"12152:11:25"},{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"12178:2:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12165:12:25"},"nodeType":"YulFunctionCall","src":"12165:16:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12183:7:25"}],"functionName":{"name":"abi_decode_available_length_string","nodeType":"YulIdentifier","src":"12117:34:25"},"nodeType":"YulFunctionCall","src":"12117:74:25"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"12107:6:25"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11602:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11613:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11625:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11633:6:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11641:6:25","type":""},{"name":"value3","nodeType":"YulTypedName","src":"11649:6:25","type":""}],"src":"11530:667:25"},{"body":{"nodeType":"YulBlock","src":"12263:94:25","statements":[{"nodeType":"YulAssignment","src":"12273:29:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12295:6:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12282:12:25"},"nodeType":"YulFunctionCall","src":"12282:20:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"12273:5:25"}]},{"body":{"nodeType":"YulBlock","src":"12335:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12344:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12347:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12337:6:25"},"nodeType":"YulFunctionCall","src":"12337:12:25"},"nodeType":"YulExpressionStatement","src":"12337:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12324:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"12331:1:25","type":"","value":"8"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"12321:2:25"},"nodeType":"YulFunctionCall","src":"12321:12:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12314:6:25"},"nodeType":"YulFunctionCall","src":"12314:20:25"},"nodeType":"YulIf","src":"12311:40:25"}]},"name":"abi_decode_enum_EvaluationType","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"12242:6:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"12253:5:25","type":""}],"src":"12202:155:25"},{"body":{"nodeType":"YulBlock","src":"12604:1724:25","statements":[{"body":{"nodeType":"YulBlock","src":"12651:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12660:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12663:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12653:6:25"},"nodeType":"YulFunctionCall","src":"12653:12:25"},"nodeType":"YulExpressionStatement","src":"12653:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"12625:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"12634:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12621:3:25"},"nodeType":"YulFunctionCall","src":"12621:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"12646:3:25","type":"","value":"224"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12617:3:25"},"nodeType":"YulFunctionCall","src":"12617:33:25"},"nodeType":"YulIf","src":"12614:53:25"},{"nodeType":"YulVariableDeclaration","src":"12676:37:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12703:9:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12690:12:25"},"nodeType":"YulFunctionCall","src":"12690:23:25"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12680:6:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"12722:28:25","value":{"kind":"number","nodeType":"YulLiteral","src":"12732:18:25","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"12726:2:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"12777:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12786:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12789:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12779:6:25"},"nodeType":"YulFunctionCall","src":"12779:12:25"},"nodeType":"YulExpressionStatement","src":"12779:12:25"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12765:6:25"},{"name":"_1","nodeType":"YulIdentifier","src":"12773:2:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12762:2:25"},"nodeType":"YulFunctionCall","src":"12762:14:25"},"nodeType":"YulIf","src":"12759:34:25"},{"nodeType":"YulVariableDeclaration","src":"12802:32:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12816:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"12827:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12812:3:25"},"nodeType":"YulFunctionCall","src":"12812:22:25"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"12806:2:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"12874:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12883:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12886:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12876:6:25"},"nodeType":"YulFunctionCall","src":"12876:12:25"},"nodeType":"YulExpressionStatement","src":"12876:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"12854:7:25"},{"name":"_2","nodeType":"YulIdentifier","src":"12863:2:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12850:3:25"},"nodeType":"YulFunctionCall","src":"12850:16:25"},{"kind":"number","nodeType":"YulLiteral","src":"12868:4:25","type":"","value":"0xc0"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12846:3:25"},"nodeType":"YulFunctionCall","src":"12846:27:25"},"nodeType":"YulIf","src":"12843:47:25"},{"nodeType":"YulVariableDeclaration","src":"12899:30:25","value":{"arguments":[],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"12912:15:25"},"nodeType":"YulFunctionCall","src":"12912:17:25"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"12903:5:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"12938:32:25","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"12967:2:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12954:12:25"},"nodeType":"YulFunctionCall","src":"12954:16:25"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"12942:8:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"12999:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13008:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13011:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13001:6:25"},"nodeType":"YulFunctionCall","src":"13001:12:25"},"nodeType":"YulExpressionStatement","src":"13001:12:25"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"12985:8:25"},{"name":"_1","nodeType":"YulIdentifier","src":"12995:2:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12982:2:25"},"nodeType":"YulFunctionCall","src":"12982:16:25"},"nodeType":"YulIf","src":"12979:36:25"},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13031:5:25"},{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"13060:2:25"},{"name":"offset_1","nodeType":"YulIdentifier","src":"13064:8:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13056:3:25"},"nodeType":"YulFunctionCall","src":"13056:17:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13075:7:25"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"13038:17:25"},"nodeType":"YulFunctionCall","src":"13038:45:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13024:6:25"},"nodeType":"YulFunctionCall","src":"13024:60:25"},"nodeType":"YulExpressionStatement","src":"13024:60:25"},{"nodeType":"YulVariableDeclaration","src":"13093:41:25","value":{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"13126:2:25"},{"kind":"number","nodeType":"YulLiteral","src":"13130:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13122:3:25"},"nodeType":"YulFunctionCall","src":"13122:11:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13109:12:25"},"nodeType":"YulFunctionCall","src":"13109:25:25"},"variables":[{"name":"offset_2","nodeType":"YulTypedName","src":"13097:8:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"13163:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13172:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13175:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13165:6:25"},"nodeType":"YulFunctionCall","src":"13165:12:25"},"nodeType":"YulExpressionStatement","src":"13165:12:25"}]},"condition":{"arguments":[{"name":"offset_2","nodeType":"YulIdentifier","src":"13149:8:25"},{"name":"_1","nodeType":"YulIdentifier","src":"13159:2:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13146:2:25"},"nodeType":"YulFunctionCall","src":"13146:16:25"},"nodeType":"YulIf","src":"13143:36:25"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13199:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"13206:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13195:3:25"},"nodeType":"YulFunctionCall","src":"13195:14:25"},{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"13233:2:25"},{"name":"offset_2","nodeType":"YulIdentifier","src":"13237:8:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13229:3:25"},"nodeType":"YulFunctionCall","src":"13229:17:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13248:7:25"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"13211:17:25"},"nodeType":"YulFunctionCall","src":"13211:45:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13188:6:25"},"nodeType":"YulFunctionCall","src":"13188:69:25"},"nodeType":"YulExpressionStatement","src":"13188:69:25"},{"nodeType":"YulVariableDeclaration","src":"13266:41:25","value":{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"13299:2:25"},{"kind":"number","nodeType":"YulLiteral","src":"13303:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13295:3:25"},"nodeType":"YulFunctionCall","src":"13295:11:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13282:12:25"},"nodeType":"YulFunctionCall","src":"13282:25:25"},"variables":[{"name":"offset_3","nodeType":"YulTypedName","src":"13270:8:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"13336:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13345:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13348:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13338:6:25"},"nodeType":"YulFunctionCall","src":"13338:12:25"},"nodeType":"YulExpressionStatement","src":"13338:12:25"}]},"condition":{"arguments":[{"name":"offset_3","nodeType":"YulIdentifier","src":"13322:8:25"},{"name":"_1","nodeType":"YulIdentifier","src":"13332:2:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13319:2:25"},"nodeType":"YulFunctionCall","src":"13319:16:25"},"nodeType":"YulIf","src":"13316:36:25"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13372:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"13379:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13368:3:25"},"nodeType":"YulFunctionCall","src":"13368:14:25"},{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"13406:2:25"},{"name":"offset_3","nodeType":"YulIdentifier","src":"13410:8:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13402:3:25"},"nodeType":"YulFunctionCall","src":"13402:17:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13421:7:25"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"13384:17:25"},"nodeType":"YulFunctionCall","src":"13384:45:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13361:6:25"},"nodeType":"YulFunctionCall","src":"13361:69:25"},"nodeType":"YulExpressionStatement","src":"13361:69:25"},{"nodeType":"YulVariableDeclaration","src":"13439:41:25","value":{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"13472:2:25"},{"kind":"number","nodeType":"YulLiteral","src":"13476:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13468:3:25"},"nodeType":"YulFunctionCall","src":"13468:11:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13455:12:25"},"nodeType":"YulFunctionCall","src":"13455:25:25"},"variables":[{"name":"offset_4","nodeType":"YulTypedName","src":"13443:8:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"13509:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13518:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13521:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13511:6:25"},"nodeType":"YulFunctionCall","src":"13511:12:25"},"nodeType":"YulExpressionStatement","src":"13511:12:25"}]},"condition":{"arguments":[{"name":"offset_4","nodeType":"YulIdentifier","src":"13495:8:25"},{"name":"_1","nodeType":"YulIdentifier","src":"13505:2:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13492:2:25"},"nodeType":"YulFunctionCall","src":"13492:16:25"},"nodeType":"YulIf","src":"13489:36:25"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13545:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"13552:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13541:3:25"},"nodeType":"YulFunctionCall","src":"13541:14:25"},{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"13579:2:25"},{"name":"offset_4","nodeType":"YulIdentifier","src":"13583:8:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13575:3:25"},"nodeType":"YulFunctionCall","src":"13575:17:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13594:7:25"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"13557:17:25"},"nodeType":"YulFunctionCall","src":"13557:45:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13534:6:25"},"nodeType":"YulFunctionCall","src":"13534:69:25"},"nodeType":"YulExpressionStatement","src":"13534:69:25"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13623:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"13630:3:25","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13619:3:25"},"nodeType":"YulFunctionCall","src":"13619:15:25"},{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"13653:2:25"},{"kind":"number","nodeType":"YulLiteral","src":"13657:3:25","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13649:3:25"},"nodeType":"YulFunctionCall","src":"13649:12:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13636:12:25"},"nodeType":"YulFunctionCall","src":"13636:26:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13612:6:25"},"nodeType":"YulFunctionCall","src":"13612:51:25"},"nodeType":"YulExpressionStatement","src":"13612:51:25"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13683:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"13690:3:25","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13679:3:25"},"nodeType":"YulFunctionCall","src":"13679:15:25"},{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"13716:2:25"},{"kind":"number","nodeType":"YulLiteral","src":"13720:3:25","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13712:3:25"},"nodeType":"YulFunctionCall","src":"13712:12:25"}],"functionName":{"name":"abi_decode_bool","nodeType":"YulIdentifier","src":"13696:15:25"},"nodeType":"YulFunctionCall","src":"13696:29:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13672:6:25"},"nodeType":"YulFunctionCall","src":"13672:54:25"},"nodeType":"YulExpressionStatement","src":"13672:54:25"},{"nodeType":"YulAssignment","src":"13735:15:25","value":{"name":"value","nodeType":"YulIdentifier","src":"13745:5:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"13735:6:25"}]},{"nodeType":"YulAssignment","src":"13759:42:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13786:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"13797:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13782:3:25"},"nodeType":"YulFunctionCall","src":"13782:18:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13769:12:25"},"nodeType":"YulFunctionCall","src":"13769:32:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"13759:6:25"}]},{"nodeType":"YulVariableDeclaration","src":"13810:48:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13843:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"13854:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13839:3:25"},"nodeType":"YulFunctionCall","src":"13839:18:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13826:12:25"},"nodeType":"YulFunctionCall","src":"13826:32:25"},"variables":[{"name":"offset_5","nodeType":"YulTypedName","src":"13814:8:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"13887:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13896:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13899:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13889:6:25"},"nodeType":"YulFunctionCall","src":"13889:12:25"},"nodeType":"YulExpressionStatement","src":"13889:12:25"}]},"condition":{"arguments":[{"name":"offset_5","nodeType":"YulIdentifier","src":"13873:8:25"},{"name":"_1","nodeType":"YulIdentifier","src":"13883:2:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13870:2:25"},"nodeType":"YulFunctionCall","src":"13870:16:25"},"nodeType":"YulIf","src":"13867:36:25"},{"nodeType":"YulAssignment","src":"13912:62:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13944:9:25"},{"name":"offset_5","nodeType":"YulIdentifier","src":"13955:8:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13940:3:25"},"nodeType":"YulFunctionCall","src":"13940:24:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13966:7:25"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"13922:17:25"},"nodeType":"YulFunctionCall","src":"13922:52:25"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"13912:6:25"}]},{"nodeType":"YulAssignment","src":"13983:42:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14010:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"14021:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14006:3:25"},"nodeType":"YulFunctionCall","src":"14006:18:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13993:12:25"},"nodeType":"YulFunctionCall","src":"13993:32:25"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"13983:6:25"}]},{"nodeType":"YulAssignment","src":"14034:61:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14079:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"14090:3:25","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14075:3:25"},"nodeType":"YulFunctionCall","src":"14075:19:25"}],"functionName":{"name":"abi_decode_enum_EvaluationType","nodeType":"YulIdentifier","src":"14044:30:25"},"nodeType":"YulFunctionCall","src":"14044:51:25"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"14034:6:25"}]},{"nodeType":"YulAssignment","src":"14104:43:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14131:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"14142:3:25","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14127:3:25"},"nodeType":"YulFunctionCall","src":"14127:19:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"14114:12:25"},"nodeType":"YulFunctionCall","src":"14114:33:25"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"14104:6:25"}]},{"nodeType":"YulVariableDeclaration","src":"14156:50:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14189:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"14200:4:25","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14185:3:25"},"nodeType":"YulFunctionCall","src":"14185:20:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"14172:12:25"},"nodeType":"YulFunctionCall","src":"14172:34:25"},"variables":[{"name":"offset_6","nodeType":"YulTypedName","src":"14160:8:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"14235:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14244:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14247:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14237:6:25"},"nodeType":"YulFunctionCall","src":"14237:12:25"},"nodeType":"YulExpressionStatement","src":"14237:12:25"}]},"condition":{"arguments":[{"name":"offset_6","nodeType":"YulIdentifier","src":"14221:8:25"},{"name":"_1","nodeType":"YulIdentifier","src":"14231:2:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14218:2:25"},"nodeType":"YulFunctionCall","src":"14218:16:25"},"nodeType":"YulIf","src":"14215:36:25"},{"nodeType":"YulAssignment","src":"14260:62:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14292:9:25"},{"name":"offset_6","nodeType":"YulIdentifier","src":"14303:8:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14288:3:25"},"nodeType":"YulFunctionCall","src":"14288:24:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14314:7:25"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"14270:17:25"},"nodeType":"YulFunctionCall","src":"14270:52:25"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"14260:6:25"}]}]},"name":"abi_decode_tuple_t_struct$_InsuranceInfo_$7199_memory_ptrt_bytes32t_string_memory_ptrt_bytes32t_enum$_EvaluationType_$7181t_uint256t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12522:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"12533:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"12545:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12553:6:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"12561:6:25","type":""},{"name":"value3","nodeType":"YulTypedName","src":"12569:6:25","type":""},{"name":"value4","nodeType":"YulTypedName","src":"12577:6:25","type":""},{"name":"value5","nodeType":"YulTypedName","src":"12585:6:25","type":""},{"name":"value6","nodeType":"YulTypedName","src":"12593:6:25","type":""}],"src":"12362:1966:25"},{"body":{"nodeType":"YulBlock","src":"14577:340:25","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14594:9:25"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14609:6:25"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14625:3:25","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"14630:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"14621:3:25"},"nodeType":"YulFunctionCall","src":"14621:11:25"},{"kind":"number","nodeType":"YulLiteral","src":"14634:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14617:3:25"},"nodeType":"YulFunctionCall","src":"14617:19:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14605:3:25"},"nodeType":"YulFunctionCall","src":"14605:32:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14587:6:25"},"nodeType":"YulFunctionCall","src":"14587:51:25"},"nodeType":"YulExpressionStatement","src":"14587:51:25"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"14678:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14690:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"14701:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14686:3:25"},"nodeType":"YulFunctionCall","src":"14686:18:25"}],"functionName":{"name":"abi_encode_enum_EvaluationType","nodeType":"YulIdentifier","src":"14647:30:25"},"nodeType":"YulFunctionCall","src":"14647:58:25"},"nodeType":"YulExpressionStatement","src":"14647:58:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14725:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"14736:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14721:3:25"},"nodeType":"YulFunctionCall","src":"14721:18:25"},{"name":"value2","nodeType":"YulIdentifier","src":"14741:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14714:6:25"},"nodeType":"YulFunctionCall","src":"14714:34:25"},"nodeType":"YulExpressionStatement","src":"14714:34:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14768:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"14779:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14764:3:25"},"nodeType":"YulFunctionCall","src":"14764:18:25"},{"arguments":[{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"14798:6:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14791:6:25"},"nodeType":"YulFunctionCall","src":"14791:14:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14784:6:25"},"nodeType":"YulFunctionCall","src":"14784:22:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14757:6:25"},"nodeType":"YulFunctionCall","src":"14757:50:25"},"nodeType":"YulExpressionStatement","src":"14757:50:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14827:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"14838:3:25","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14823:3:25"},"nodeType":"YulFunctionCall","src":"14823:19:25"},{"kind":"number","nodeType":"YulLiteral","src":"14844:3:25","type":"","value":"160"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14816:6:25"},"nodeType":"YulFunctionCall","src":"14816:32:25"},"nodeType":"YulExpressionStatement","src":"14816:32:25"},{"nodeType":"YulAssignment","src":"14857:54:25","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"14883:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14895:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"14906:3:25","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14891:3:25"},"nodeType":"YulFunctionCall","src":"14891:19:25"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"14865:17:25"},"nodeType":"YulFunctionCall","src":"14865:46:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14857:4:25"}]}]},"name":"abi_encode_tuple_t_address_t_enum$_EvaluationType_$7181_t_uint256_t_bool_t_string_memory_ptr__to_t_address_t_uint8_t_uint256_t_bool_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14514:9:25","type":""},{"name":"value4","nodeType":"YulTypedName","src":"14525:6:25","type":""},{"name":"value3","nodeType":"YulTypedName","src":"14533:6:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"14541:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14549:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14557:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14568:4:25","type":""}],"src":"14333:584:25"},{"body":{"nodeType":"YulBlock","src":"15036:344:25","statements":[{"body":{"nodeType":"YulBlock","src":"15082:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15091:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15094:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15084:6:25"},"nodeType":"YulFunctionCall","src":"15084:12:25"},"nodeType":"YulExpressionStatement","src":"15084:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"15057:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"15066:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15053:3:25"},"nodeType":"YulFunctionCall","src":"15053:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"15078:2:25","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"15049:3:25"},"nodeType":"YulFunctionCall","src":"15049:32:25"},"nodeType":"YulIf","src":"15046:52:25"},{"nodeType":"YulAssignment","src":"15107:33:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15130:9:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"15117:12:25"},"nodeType":"YulFunctionCall","src":"15117:23:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"15107:6:25"}]},{"nodeType":"YulAssignment","src":"15149:42:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15176:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"15187:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15172:3:25"},"nodeType":"YulFunctionCall","src":"15172:18:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"15159:12:25"},"nodeType":"YulFunctionCall","src":"15159:32:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"15149:6:25"}]},{"nodeType":"YulVariableDeclaration","src":"15200:46:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15231:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"15242:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15227:3:25"},"nodeType":"YulFunctionCall","src":"15227:18:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"15214:12:25"},"nodeType":"YulFunctionCall","src":"15214:32:25"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15204:6:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"15289:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15298:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15301:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15291:6:25"},"nodeType":"YulFunctionCall","src":"15291:12:25"},"nodeType":"YulExpressionStatement","src":"15291:12:25"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"15261:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"15269:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"15258:2:25"},"nodeType":"YulFunctionCall","src":"15258:30:25"},"nodeType":"YulIf","src":"15255:50:25"},{"nodeType":"YulAssignment","src":"15314:60:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15346:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"15357:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15342:3:25"},"nodeType":"YulFunctionCall","src":"15342:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15366:7:25"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"15324:17:25"},"nodeType":"YulFunctionCall","src":"15324:50:25"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"15314:6:25"}]}]},"name":"abi_decode_tuple_t_uint256t_uint256t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14986:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"14997:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"15009:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15017:6:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"15025:6:25","type":""}],"src":"14922:458:25"},{"body":{"nodeType":"YulBlock","src":"15465:242:25","statements":[{"body":{"nodeType":"YulBlock","src":"15511:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15520:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15523:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15513:6:25"},"nodeType":"YulFunctionCall","src":"15513:12:25"},"nodeType":"YulExpressionStatement","src":"15513:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"15486:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"15495:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15482:3:25"},"nodeType":"YulFunctionCall","src":"15482:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"15507:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"15478:3:25"},"nodeType":"YulFunctionCall","src":"15478:32:25"},"nodeType":"YulIf","src":"15475:52:25"},{"nodeType":"YulVariableDeclaration","src":"15536:37:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15563:9:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"15550:12:25"},"nodeType":"YulFunctionCall","src":"15550:23:25"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15540:6:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"15616:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15625:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15628:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15618:6:25"},"nodeType":"YulFunctionCall","src":"15618:12:25"},"nodeType":"YulExpressionStatement","src":"15618:12:25"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"15588:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"15596:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"15585:2:25"},"nodeType":"YulFunctionCall","src":"15585:30:25"},"nodeType":"YulIf","src":"15582:50:25"},{"nodeType":"YulAssignment","src":"15641:60:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15673:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"15684:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15669:3:25"},"nodeType":"YulFunctionCall","src":"15669:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15693:7:25"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"15651:17:25"},"nodeType":"YulFunctionCall","src":"15651:50:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"15641:6:25"}]}]},"name":"abi_decode_tuple_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15431:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"15442:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"15454:6:25","type":""}],"src":"15385:322:25"},{"body":{"nodeType":"YulBlock","src":"15799:161:25","statements":[{"body":{"nodeType":"YulBlock","src":"15845:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15854:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15857:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15847:6:25"},"nodeType":"YulFunctionCall","src":"15847:12:25"},"nodeType":"YulExpressionStatement","src":"15847:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"15820:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"15829:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15816:3:25"},"nodeType":"YulFunctionCall","src":"15816:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"15841:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"15812:3:25"},"nodeType":"YulFunctionCall","src":"15812:32:25"},"nodeType":"YulIf","src":"15809:52:25"},{"nodeType":"YulAssignment","src":"15870:33:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15893:9:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"15880:12:25"},"nodeType":"YulFunctionCall","src":"15880:23:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"15870:6:25"}]},{"nodeType":"YulAssignment","src":"15912:42:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15939:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"15950:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15935:3:25"},"nodeType":"YulFunctionCall","src":"15935:18:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"15922:12:25"},"nodeType":"YulFunctionCall","src":"15922:32:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"15912:6:25"}]}]},"name":"abi_decode_tuple_t_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15757:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"15768:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"15780:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15788:6:25","type":""}],"src":"15712:248:25"},{"body":{"nodeType":"YulBlock","src":"16164:272:25","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16181:9:25"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16196:6:25"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16212:3:25","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"16217:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"16208:3:25"},"nodeType":"YulFunctionCall","src":"16208:11:25"},{"kind":"number","nodeType":"YulLiteral","src":"16221:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16204:3:25"},"nodeType":"YulFunctionCall","src":"16204:19:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16192:3:25"},"nodeType":"YulFunctionCall","src":"16192:32:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16174:6:25"},"nodeType":"YulFunctionCall","src":"16174:51:25"},"nodeType":"YulExpressionStatement","src":"16174:51:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16245:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"16256:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16241:3:25"},"nodeType":"YulFunctionCall","src":"16241:18:25"},{"name":"value1","nodeType":"YulIdentifier","src":"16261:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16234:6:25"},"nodeType":"YulFunctionCall","src":"16234:34:25"},"nodeType":"YulExpressionStatement","src":"16234:34:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16288:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"16299:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16284:3:25"},"nodeType":"YulFunctionCall","src":"16284:18:25"},{"kind":"number","nodeType":"YulLiteral","src":"16304:3:25","type":"","value":"128"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16277:6:25"},"nodeType":"YulFunctionCall","src":"16277:31:25"},"nodeType":"YulExpressionStatement","src":"16277:31:25"},{"nodeType":"YulAssignment","src":"16317:54:25","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"16343:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16355:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"16366:3:25","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16351:3:25"},"nodeType":"YulFunctionCall","src":"16351:19:25"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"16325:17:25"},"nodeType":"YulFunctionCall","src":"16325:46:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16317:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16391:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"16402:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16387:3:25"},"nodeType":"YulFunctionCall","src":"16387:18:25"},{"arguments":[{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"16421:6:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"16414:6:25"},"nodeType":"YulFunctionCall","src":"16414:14:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"16407:6:25"},"nodeType":"YulFunctionCall","src":"16407:22:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16380:6:25"},"nodeType":"YulFunctionCall","src":"16380:50:25"},"nodeType":"YulExpressionStatement","src":"16380:50:25"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_string_memory_ptr_t_bool__to_t_address_t_uint256_t_string_memory_ptr_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16109:9:25","type":""},{"name":"value3","nodeType":"YulTypedName","src":"16120:6:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"16128:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16136:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16144:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16155:4:25","type":""}],"src":"15965:471:25"},{"body":{"nodeType":"YulBlock","src":"16528:173:25","statements":[{"body":{"nodeType":"YulBlock","src":"16574:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16583:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16586:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16576:6:25"},"nodeType":"YulFunctionCall","src":"16576:12:25"},"nodeType":"YulExpressionStatement","src":"16576:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"16549:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"16558:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16545:3:25"},"nodeType":"YulFunctionCall","src":"16545:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"16570:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"16541:3:25"},"nodeType":"YulFunctionCall","src":"16541:32:25"},"nodeType":"YulIf","src":"16538:52:25"},{"nodeType":"YulAssignment","src":"16599:39:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16628:9:25"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"16609:18:25"},"nodeType":"YulFunctionCall","src":"16609:29:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"16599:6:25"}]},{"nodeType":"YulAssignment","src":"16647:48:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16680:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"16691:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16676:3:25"},"nodeType":"YulFunctionCall","src":"16676:18:25"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"16657:18:25"},"nodeType":"YulFunctionCall","src":"16657:38:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"16647:6:25"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16486:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"16497:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"16509:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16517:6:25","type":""}],"src":"16441:260:25"},{"body":{"nodeType":"YulBlock","src":"16917:1067:25","statements":[{"nodeType":"YulVariableDeclaration","src":"16927:12:25","value":{"kind":"number","nodeType":"YulLiteral","src":"16937:2:25","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"16931:2:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"16948:32:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16966:9:25"},{"name":"_1","nodeType":"YulIdentifier","src":"16977:2:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16962:3:25"},"nodeType":"YulFunctionCall","src":"16962:18:25"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"16952:6:25","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16996:9:25"},{"name":"_1","nodeType":"YulIdentifier","src":"17007:2:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16989:6:25"},"nodeType":"YulFunctionCall","src":"16989:21:25"},"nodeType":"YulExpressionStatement","src":"16989:21:25"},{"nodeType":"YulVariableDeclaration","src":"17019:17:25","value":{"name":"tail_1","nodeType":"YulIdentifier","src":"17030:6:25"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"17023:3:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"17045:27:25","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17065:6:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17059:5:25"},"nodeType":"YulFunctionCall","src":"17059:13:25"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"17049:6:25","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"17088:6:25"},{"name":"length","nodeType":"YulIdentifier","src":"17096:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17081:6:25"},"nodeType":"YulFunctionCall","src":"17081:22:25"},"nodeType":"YulExpressionStatement","src":"17081:22:25"},{"nodeType":"YulVariableDeclaration","src":"17112:12:25","value":{"kind":"number","nodeType":"YulLiteral","src":"17122:2:25","type":"","value":"64"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"17116:2:25","type":""}]},{"nodeType":"YulAssignment","src":"17133:25:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17144:9:25"},{"name":"_2","nodeType":"YulIdentifier","src":"17155:2:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17140:3:25"},"nodeType":"YulFunctionCall","src":"17140:18:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17133:3:25"}]},{"nodeType":"YulVariableDeclaration","src":"17167:53:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17189:9:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17204:1:25","type":"","value":"5"},{"name":"length","nodeType":"YulIdentifier","src":"17207:6:25"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"17200:3:25"},"nodeType":"YulFunctionCall","src":"17200:14:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17185:3:25"},"nodeType":"YulFunctionCall","src":"17185:30:25"},{"name":"_2","nodeType":"YulIdentifier","src":"17217:2:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17181:3:25"},"nodeType":"YulFunctionCall","src":"17181:39:25"},"variables":[{"name":"tail_2","nodeType":"YulTypedName","src":"17171:6:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"17229:29:25","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17247:6:25"},{"name":"_1","nodeType":"YulIdentifier","src":"17255:2:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17243:3:25"},"nodeType":"YulFunctionCall","src":"17243:15:25"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"17233:6:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"17267:10:25","value":{"kind":"number","nodeType":"YulLiteral","src":"17276:1:25","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"17271:1:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"17335:620:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17356:3:25"},{"arguments":[{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"17369:6:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"17377:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17365:3:25"},"nodeType":"YulFunctionCall","src":"17365:22:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17393:2:25","type":"","value":"63"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"17389:3:25"},"nodeType":"YulFunctionCall","src":"17389:7:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17361:3:25"},"nodeType":"YulFunctionCall","src":"17361:36:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17349:6:25"},"nodeType":"YulFunctionCall","src":"17349:49:25"},"nodeType":"YulExpressionStatement","src":"17349:49:25"},{"nodeType":"YulVariableDeclaration","src":"17411:23:25","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"17427:6:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17421:5:25"},"nodeType":"YulFunctionCall","src":"17421:13:25"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"17415:2:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"17447:14:25","value":{"kind":"number","nodeType":"YulLiteral","src":"17457:4:25","type":"","value":"0x80"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"17451:2:25","type":""}]},{"expression":{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"17481:6:25"},{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"17499:2:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17493:5:25"},"nodeType":"YulFunctionCall","src":"17493:9:25"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17512:3:25","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"17517:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"17508:3:25"},"nodeType":"YulFunctionCall","src":"17508:11:25"},{"kind":"number","nodeType":"YulLiteral","src":"17521:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17504:3:25"},"nodeType":"YulFunctionCall","src":"17504:19:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17489:3:25"},"nodeType":"YulFunctionCall","src":"17489:35:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17474:6:25"},"nodeType":"YulFunctionCall","src":"17474:51:25"},"nodeType":"YulExpressionStatement","src":"17474:51:25"},{"expression":{"arguments":[{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"17549:6:25"},{"name":"_1","nodeType":"YulIdentifier","src":"17557:2:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17545:3:25"},"nodeType":"YulFunctionCall","src":"17545:15:25"},{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"17572:2:25"},{"name":"_1","nodeType":"YulIdentifier","src":"17576:2:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17568:3:25"},"nodeType":"YulFunctionCall","src":"17568:11:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17562:5:25"},"nodeType":"YulFunctionCall","src":"17562:18:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17538:6:25"},"nodeType":"YulFunctionCall","src":"17538:43:25"},"nodeType":"YulExpressionStatement","src":"17538:43:25"},{"nodeType":"YulVariableDeclaration","src":"17594:38:25","value":{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"17624:2:25"},{"name":"_2","nodeType":"YulIdentifier","src":"17628:2:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17620:3:25"},"nodeType":"YulFunctionCall","src":"17620:11:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17614:5:25"},"nodeType":"YulFunctionCall","src":"17614:18:25"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"17598:12:25","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"17656:6:25"},{"name":"_2","nodeType":"YulIdentifier","src":"17664:2:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17652:3:25"},"nodeType":"YulFunctionCall","src":"17652:15:25"},{"name":"_4","nodeType":"YulIdentifier","src":"17669:2:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17645:6:25"},"nodeType":"YulFunctionCall","src":"17645:27:25"},"nodeType":"YulExpressionStatement","src":"17645:27:25"},{"nodeType":"YulVariableDeclaration","src":"17685:62:25","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"17717:12:25"},{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"17735:6:25"},{"name":"_4","nodeType":"YulIdentifier","src":"17743:2:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17731:3:25"},"nodeType":"YulFunctionCall","src":"17731:15:25"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"17699:17:25"},"nodeType":"YulFunctionCall","src":"17699:48:25"},"variables":[{"name":"tail_3","nodeType":"YulTypedName","src":"17689:6:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"17760:14:25","value":{"kind":"number","nodeType":"YulLiteral","src":"17770:4:25","type":"","value":"0x60"},"variables":[{"name":"_5","nodeType":"YulTypedName","src":"17764:2:25","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"17798:6:25"},{"name":"_5","nodeType":"YulIdentifier","src":"17806:2:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17794:3:25"},"nodeType":"YulFunctionCall","src":"17794:15:25"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"17835:2:25"},{"name":"_5","nodeType":"YulIdentifier","src":"17839:2:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17831:3:25"},"nodeType":"YulFunctionCall","src":"17831:11:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17825:5:25"},"nodeType":"YulFunctionCall","src":"17825:18:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17818:6:25"},"nodeType":"YulFunctionCall","src":"17818:26:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17811:6:25"},"nodeType":"YulFunctionCall","src":"17811:34:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17787:6:25"},"nodeType":"YulFunctionCall","src":"17787:59:25"},"nodeType":"YulExpressionStatement","src":"17787:59:25"},{"nodeType":"YulAssignment","src":"17859:16:25","value":{"name":"tail_3","nodeType":"YulIdentifier","src":"17869:6:25"},"variableNames":[{"name":"tail_2","nodeType":"YulIdentifier","src":"17859:6:25"}]},{"nodeType":"YulAssignment","src":"17888:25:25","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"17902:6:25"},{"name":"_1","nodeType":"YulIdentifier","src":"17910:2:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17898:3:25"},"nodeType":"YulFunctionCall","src":"17898:15:25"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"17888:6:25"}]},{"nodeType":"YulAssignment","src":"17926:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17937:3:25"},{"name":"_1","nodeType":"YulIdentifier","src":"17942:2:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17933:3:25"},"nodeType":"YulFunctionCall","src":"17933:12:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17926:3:25"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"17297:1:25"},{"name":"length","nodeType":"YulIdentifier","src":"17300:6:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"17294:2:25"},"nodeType":"YulFunctionCall","src":"17294:13:25"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"17308:18:25","statements":[{"nodeType":"YulAssignment","src":"17310:14:25","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"17319:1:25"},{"kind":"number","nodeType":"YulLiteral","src":"17322:1:25","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17315:3:25"},"nodeType":"YulFunctionCall","src":"17315:9:25"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"17310:1:25"}]}]},"pre":{"nodeType":"YulBlock","src":"17290:3:25","statements":[]},"src":"17286:669:25"},{"nodeType":"YulAssignment","src":"17964:14:25","value":{"name":"tail_2","nodeType":"YulIdentifier","src":"17972:6:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17964:4:25"}]}]},"name":"abi_encode_tuple_t_array$_t_struct$_AccessRecord_$7249_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_AccessRecord_$7249_memory_ptr_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16886:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16897:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16908:4:25","type":""}],"src":"16706:1278:25"},{"body":{"nodeType":"YulBlock","src":"18140:481:25","statements":[{"nodeType":"YulVariableDeclaration","src":"18150:12:25","value":{"kind":"number","nodeType":"YulLiteral","src":"18160:2:25","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"18154:2:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"18171:32:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18189:9:25"},{"name":"_1","nodeType":"YulIdentifier","src":"18200:2:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18185:3:25"},"nodeType":"YulFunctionCall","src":"18185:18:25"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"18175:6:25","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18219:9:25"},{"name":"_1","nodeType":"YulIdentifier","src":"18230:2:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18212:6:25"},"nodeType":"YulFunctionCall","src":"18212:21:25"},"nodeType":"YulExpressionStatement","src":"18212:21:25"},{"nodeType":"YulVariableDeclaration","src":"18242:17:25","value":{"name":"tail_1","nodeType":"YulIdentifier","src":"18253:6:25"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"18246:3:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"18268:27:25","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18288:6:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18282:5:25"},"nodeType":"YulFunctionCall","src":"18282:13:25"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"18272:6:25","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"18311:6:25"},{"name":"length","nodeType":"YulIdentifier","src":"18319:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18304:6:25"},"nodeType":"YulFunctionCall","src":"18304:22:25"},"nodeType":"YulExpressionStatement","src":"18304:22:25"},{"nodeType":"YulAssignment","src":"18335:25:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18346:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"18357:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18342:3:25"},"nodeType":"YulFunctionCall","src":"18342:18:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18335:3:25"}]},{"nodeType":"YulVariableDeclaration","src":"18369:29:25","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18387:6:25"},{"name":"_1","nodeType":"YulIdentifier","src":"18395:2:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18383:3:25"},"nodeType":"YulFunctionCall","src":"18383:15:25"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"18373:6:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"18407:10:25","value":{"kind":"number","nodeType":"YulLiteral","src":"18416:1:25","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"18411:1:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"18475:120:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18496:3:25"},{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"18507:6:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18501:5:25"},"nodeType":"YulFunctionCall","src":"18501:13:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18489:6:25"},"nodeType":"YulFunctionCall","src":"18489:26:25"},"nodeType":"YulExpressionStatement","src":"18489:26:25"},{"nodeType":"YulAssignment","src":"18528:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18539:3:25"},{"name":"_1","nodeType":"YulIdentifier","src":"18544:2:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18535:3:25"},"nodeType":"YulFunctionCall","src":"18535:12:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18528:3:25"}]},{"nodeType":"YulAssignment","src":"18560:25:25","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"18574:6:25"},{"name":"_1","nodeType":"YulIdentifier","src":"18582:2:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18570:3:25"},"nodeType":"YulFunctionCall","src":"18570:15:25"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"18560:6:25"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"18437:1:25"},{"name":"length","nodeType":"YulIdentifier","src":"18440:6:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"18434:2:25"},"nodeType":"YulFunctionCall","src":"18434:13:25"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"18448:18:25","statements":[{"nodeType":"YulAssignment","src":"18450:14:25","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"18459:1:25"},{"kind":"number","nodeType":"YulLiteral","src":"18462:1:25","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18455:3:25"},"nodeType":"YulFunctionCall","src":"18455:9:25"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"18450:1:25"}]}]},"pre":{"nodeType":"YulBlock","src":"18430:3:25","statements":[]},"src":"18426:169:25"},{"nodeType":"YulAssignment","src":"18604:11:25","value":{"name":"pos","nodeType":"YulIdentifier","src":"18612:3:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18604:4:25"}]}]},"name":"abi_encode_tuple_t_array$_t_bytes32_$dyn_memory_ptr__to_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18109:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"18120:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18131:4:25","type":""}],"src":"17989:632:25"},{"body":{"nodeType":"YulBlock","src":"18945:498:25","statements":[{"nodeType":"YulAssignment","src":"18955:27:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18967:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"18978:3:25","type":"","value":"288"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18963:3:25"},"nodeType":"YulFunctionCall","src":"18963:19:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18955:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18998:9:25"},{"name":"value0","nodeType":"YulIdentifier","src":"19009:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18991:6:25"},"nodeType":"YulFunctionCall","src":"18991:25:25"},"nodeType":"YulExpressionStatement","src":"18991:25:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19036:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"19047:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19032:3:25"},"nodeType":"YulFunctionCall","src":"19032:18:25"},{"name":"value1","nodeType":"YulIdentifier","src":"19052:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19025:6:25"},"nodeType":"YulFunctionCall","src":"19025:34:25"},"nodeType":"YulExpressionStatement","src":"19025:34:25"},{"nodeType":"YulVariableDeclaration","src":"19068:29:25","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19086:3:25","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"19091:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"19082:3:25"},"nodeType":"YulFunctionCall","src":"19082:11:25"},{"kind":"number","nodeType":"YulLiteral","src":"19095:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19078:3:25"},"nodeType":"YulFunctionCall","src":"19078:19:25"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"19072:2:25","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19117:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"19128:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19113:3:25"},"nodeType":"YulFunctionCall","src":"19113:18:25"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"19137:6:25"},{"name":"_1","nodeType":"YulIdentifier","src":"19145:2:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19133:3:25"},"nodeType":"YulFunctionCall","src":"19133:15:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19106:6:25"},"nodeType":"YulFunctionCall","src":"19106:43:25"},"nodeType":"YulExpressionStatement","src":"19106:43:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19169:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"19180:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19165:3:25"},"nodeType":"YulFunctionCall","src":"19165:18:25"},{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"19189:6:25"},{"name":"_1","nodeType":"YulIdentifier","src":"19197:2:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19185:3:25"},"nodeType":"YulFunctionCall","src":"19185:15:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19158:6:25"},"nodeType":"YulFunctionCall","src":"19158:43:25"},"nodeType":"YulExpressionStatement","src":"19158:43:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19221:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"19232:3:25","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19217:3:25"},"nodeType":"YulFunctionCall","src":"19217:19:25"},{"name":"value4","nodeType":"YulIdentifier","src":"19238:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19210:6:25"},"nodeType":"YulFunctionCall","src":"19210:35:25"},"nodeType":"YulExpressionStatement","src":"19210:35:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19265:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"19276:3:25","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19261:3:25"},"nodeType":"YulFunctionCall","src":"19261:19:25"},{"name":"value5","nodeType":"YulIdentifier","src":"19282:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19254:6:25"},"nodeType":"YulFunctionCall","src":"19254:35:25"},"nodeType":"YulExpressionStatement","src":"19254:35:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19309:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"19320:3:25","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19305:3:25"},"nodeType":"YulFunctionCall","src":"19305:19:25"},{"name":"value6","nodeType":"YulIdentifier","src":"19326:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19298:6:25"},"nodeType":"YulFunctionCall","src":"19298:35:25"},"nodeType":"YulExpressionStatement","src":"19298:35:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19353:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"19364:3:25","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19349:3:25"},"nodeType":"YulFunctionCall","src":"19349:19:25"},{"arguments":[{"arguments":[{"name":"value7","nodeType":"YulIdentifier","src":"19384:6:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"19377:6:25"},"nodeType":"YulFunctionCall","src":"19377:14:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"19370:6:25"},"nodeType":"YulFunctionCall","src":"19370:22:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19342:6:25"},"nodeType":"YulFunctionCall","src":"19342:51:25"},"nodeType":"YulExpressionStatement","src":"19342:51:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19413:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"19424:3:25","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19409:3:25"},"nodeType":"YulFunctionCall","src":"19409:19:25"},{"name":"value8","nodeType":"YulIdentifier","src":"19430:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19402:6:25"},"nodeType":"YulFunctionCall","src":"19402:35:25"},"nodeType":"YulExpressionStatement","src":"19402:35:25"}]},"name":"abi_encode_tuple_t_bytes32_t_uint256_t_address_t_address_t_uint256_t_uint256_t_uint256_t_bool_t_uint256__to_t_bytes32_t_uint256_t_address_t_address_t_uint256_t_uint256_t_uint256_t_bool_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18850:9:25","type":""},{"name":"value8","nodeType":"YulTypedName","src":"18861:6:25","type":""},{"name":"value7","nodeType":"YulTypedName","src":"18869:6:25","type":""},{"name":"value6","nodeType":"YulTypedName","src":"18877:6:25","type":""},{"name":"value5","nodeType":"YulTypedName","src":"18885:6:25","type":""},{"name":"value4","nodeType":"YulTypedName","src":"18893:6:25","type":""},{"name":"value3","nodeType":"YulTypedName","src":"18901:6:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"18909:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"18917:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"18925:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18936:4:25","type":""}],"src":"18626:817:25"},{"body":{"nodeType":"YulBlock","src":"19503:325:25","statements":[{"nodeType":"YulAssignment","src":"19513:22:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19527:1:25","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"19530:4:25"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"19523:3:25"},"nodeType":"YulFunctionCall","src":"19523:12:25"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"19513:6:25"}]},{"nodeType":"YulVariableDeclaration","src":"19544:38:25","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"19574:4:25"},{"kind":"number","nodeType":"YulLiteral","src":"19580:1:25","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19570:3:25"},"nodeType":"YulFunctionCall","src":"19570:12:25"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"19548:18:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"19621:31:25","statements":[{"nodeType":"YulAssignment","src":"19623:27:25","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"19637:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"19645:4:25","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19633:3:25"},"nodeType":"YulFunctionCall","src":"19633:17:25"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"19623:6:25"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"19601:18:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"19594:6:25"},"nodeType":"YulFunctionCall","src":"19594:26:25"},"nodeType":"YulIf","src":"19591:61:25"},{"body":{"nodeType":"YulBlock","src":"19711:111:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19732:1:25","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19739:3:25","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"19744:10:25","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"19735:3:25"},"nodeType":"YulFunctionCall","src":"19735:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19725:6:25"},"nodeType":"YulFunctionCall","src":"19725:31:25"},"nodeType":"YulExpressionStatement","src":"19725:31:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19776:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"19779:4:25","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19769:6:25"},"nodeType":"YulFunctionCall","src":"19769:15:25"},"nodeType":"YulExpressionStatement","src":"19769:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19804:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19807:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"19797:6:25"},"nodeType":"YulFunctionCall","src":"19797:15:25"},"nodeType":"YulExpressionStatement","src":"19797:15:25"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"19667:18:25"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"19690:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"19698:2:25","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"19687:2:25"},"nodeType":"YulFunctionCall","src":"19687:14:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"19664:2:25"},"nodeType":"YulFunctionCall","src":"19664:38:25"},"nodeType":"YulIf","src":"19661:161:25"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"19483:4:25","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"19492:6:25","type":""}],"src":"19448:380:25"},{"body":{"nodeType":"YulBlock","src":"19990:218:25","statements":[{"nodeType":"YulAssignment","src":"20000:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20012:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"20023:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20008:3:25"},"nodeType":"YulFunctionCall","src":"20008:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20000:4:25"}]},{"nodeType":"YulVariableDeclaration","src":"20035:29:25","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20053:3:25","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"20058:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"20049:3:25"},"nodeType":"YulFunctionCall","src":"20049:11:25"},{"kind":"number","nodeType":"YulLiteral","src":"20062:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20045:3:25"},"nodeType":"YulFunctionCall","src":"20045:19:25"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"20039:2:25","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20080:9:25"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"20095:6:25"},{"name":"_1","nodeType":"YulIdentifier","src":"20103:2:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"20091:3:25"},"nodeType":"YulFunctionCall","src":"20091:15:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20073:6:25"},"nodeType":"YulFunctionCall","src":"20073:34:25"},"nodeType":"YulExpressionStatement","src":"20073:34:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20127:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"20138:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20123:3:25"},"nodeType":"YulFunctionCall","src":"20123:18:25"},{"name":"value1","nodeType":"YulIdentifier","src":"20143:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20116:6:25"},"nodeType":"YulFunctionCall","src":"20116:34:25"},"nodeType":"YulExpressionStatement","src":"20116:34:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20170:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"20181:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20166:3:25"},"nodeType":"YulFunctionCall","src":"20166:18:25"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"20190:6:25"},{"name":"_1","nodeType":"YulIdentifier","src":"20198:2:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"20186:3:25"},"nodeType":"YulFunctionCall","src":"20186:15:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20159:6:25"},"nodeType":"YulFunctionCall","src":"20159:43:25"},"nodeType":"YulExpressionStatement","src":"20159:43:25"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19943:9:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"19954:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"19962:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"19970:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19981:4:25","type":""}],"src":"19833:375:25"},{"body":{"nodeType":"YulBlock","src":"20245:95:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20262:1:25","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20269:3:25","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"20274:10:25","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"20265:3:25"},"nodeType":"YulFunctionCall","src":"20265:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20255:6:25"},"nodeType":"YulFunctionCall","src":"20255:31:25"},"nodeType":"YulExpressionStatement","src":"20255:31:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20302:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"20305:4:25","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20295:6:25"},"nodeType":"YulFunctionCall","src":"20295:15:25"},"nodeType":"YulExpressionStatement","src":"20295:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20326:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20329:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20319:6:25"},"nodeType":"YulFunctionCall","src":"20319:15:25"},"nodeType":"YulExpressionStatement","src":"20319:15:25"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"20213:127:25"},{"body":{"nodeType":"YulBlock","src":"20519:174:25","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20536:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"20547:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20529:6:25"},"nodeType":"YulFunctionCall","src":"20529:21:25"},"nodeType":"YulExpressionStatement","src":"20529:21:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20570:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"20581:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20566:3:25"},"nodeType":"YulFunctionCall","src":"20566:18:25"},{"kind":"number","nodeType":"YulLiteral","src":"20586:2:25","type":"","value":"24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20559:6:25"},"nodeType":"YulFunctionCall","src":"20559:30:25"},"nodeType":"YulExpressionStatement","src":"20559:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20609:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"20620:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20605:3:25"},"nodeType":"YulFunctionCall","src":"20605:18:25"},{"hexValue":"4e6f7420617574686f72697a6564206576616c7561746f72","kind":"string","nodeType":"YulLiteral","src":"20625:26:25","type":"","value":"Not authorized evaluator"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20598:6:25"},"nodeType":"YulFunctionCall","src":"20598:54:25"},"nodeType":"YulExpressionStatement","src":"20598:54:25"},{"nodeType":"YulAssignment","src":"20661:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20673:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"20684:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20669:3:25"},"nodeType":"YulFunctionCall","src":"20669:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20661:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_4bb721fc4b02cf8658bfd3d22381f6c262d3cb2daac601973c0b81f302ac41b2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20496:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20510:4:25","type":""}],"src":"20345:348:25"},{"body":{"nodeType":"YulBlock","src":"20872:168:25","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20889:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"20900:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20882:6:25"},"nodeType":"YulFunctionCall","src":"20882:21:25"},"nodeType":"YulExpressionStatement","src":"20882:21:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20923:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"20934:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20919:3:25"},"nodeType":"YulFunctionCall","src":"20919:18:25"},{"kind":"number","nodeType":"YulLiteral","src":"20939:2:25","type":"","value":"18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20912:6:25"},"nodeType":"YulFunctionCall","src":"20912:30:25"},"nodeType":"YulExpressionStatement","src":"20912:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20962:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"20973:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20958:3:25"},"nodeType":"YulFunctionCall","src":"20958:18:25"},{"hexValue":"496e76616c6964206576616c756174696f6e","kind":"string","nodeType":"YulLiteral","src":"20978:20:25","type":"","value":"Invalid evaluation"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20951:6:25"},"nodeType":"YulFunctionCall","src":"20951:48:25"},"nodeType":"YulExpressionStatement","src":"20951:48:25"},{"nodeType":"YulAssignment","src":"21008:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21020:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"21031:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21016:3:25"},"nodeType":"YulFunctionCall","src":"21016:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21008:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_11dcf9f8e62255365880033e6504fcf152d79d40c6f737eb6eba5912f9a92da3__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20849:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20863:4:25","type":""}],"src":"20698:342:25"},{"body":{"nodeType":"YulBlock","src":"21077:95:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21094:1:25","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21101:3:25","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"21106:10:25","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"21097:3:25"},"nodeType":"YulFunctionCall","src":"21097:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21087:6:25"},"nodeType":"YulFunctionCall","src":"21087:31:25"},"nodeType":"YulExpressionStatement","src":"21087:31:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21134:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"21137:4:25","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21127:6:25"},"nodeType":"YulFunctionCall","src":"21127:15:25"},"nodeType":"YulExpressionStatement","src":"21127:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21158:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21161:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21151:6:25"},"nodeType":"YulFunctionCall","src":"21151:15:25"},"nodeType":"YulExpressionStatement","src":"21151:15:25"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"21045:127:25"},{"body":{"nodeType":"YulBlock","src":"21224:88:25","statements":[{"body":{"nodeType":"YulBlock","src":"21255:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"21257:16:25"},"nodeType":"YulFunctionCall","src":"21257:18:25"},"nodeType":"YulExpressionStatement","src":"21257:18:25"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21240:5:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21251:1:25","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"21247:3:25"},"nodeType":"YulFunctionCall","src":"21247:6:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"21237:2:25"},"nodeType":"YulFunctionCall","src":"21237:17:25"},"nodeType":"YulIf","src":"21234:43:25"},{"nodeType":"YulAssignment","src":"21286:20:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21297:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"21304:1:25","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21293:3:25"},"nodeType":"YulFunctionCall","src":"21293:13:25"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"21286:3:25"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21206:5:25","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"21216:3:25","type":""}],"src":"21177:135:25"},{"body":{"nodeType":"YulBlock","src":"21373:65:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21390:1:25","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"21393:3:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21383:6:25"},"nodeType":"YulFunctionCall","src":"21383:14:25"},"nodeType":"YulExpressionStatement","src":"21383:14:25"},{"nodeType":"YulAssignment","src":"21406:26:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21424:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21427:4:25","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"21414:9:25"},"nodeType":"YulFunctionCall","src":"21414:18:25"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"21406:4:25"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"21356:3:25","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"21364:4:25","type":""}],"src":"21317:121:25"},{"body":{"nodeType":"YulBlock","src":"21524:464:25","statements":[{"body":{"nodeType":"YulBlock","src":"21557:425:25","statements":[{"nodeType":"YulVariableDeclaration","src":"21571:11:25","value":{"kind":"number","nodeType":"YulLiteral","src":"21581:1:25","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"21575:2:25","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"21602:2:25"},{"name":"array","nodeType":"YulIdentifier","src":"21606:5:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21595:6:25"},"nodeType":"YulFunctionCall","src":"21595:17:25"},"nodeType":"YulExpressionStatement","src":"21595:17:25"},{"nodeType":"YulVariableDeclaration","src":"21625:31:25","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"21647:2:25"},{"kind":"number","nodeType":"YulLiteral","src":"21651:4:25","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"21637:9:25"},"nodeType":"YulFunctionCall","src":"21637:19:25"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"21629:4:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"21669:57:25","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"21692:4:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21702:1:25","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"21709:10:25"},{"kind":"number","nodeType":"YulLiteral","src":"21721:2:25","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21705:3:25"},"nodeType":"YulFunctionCall","src":"21705:19:25"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"21698:3:25"},"nodeType":"YulFunctionCall","src":"21698:27:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21688:3:25"},"nodeType":"YulFunctionCall","src":"21688:38:25"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"21673:11:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"21763:23:25","statements":[{"nodeType":"YulAssignment","src":"21765:19:25","value":{"name":"data","nodeType":"YulIdentifier","src":"21780:4:25"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"21765:11:25"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"21745:10:25"},{"kind":"number","nodeType":"YulLiteral","src":"21757:4:25","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"21742:2:25"},"nodeType":"YulFunctionCall","src":"21742:20:25"},"nodeType":"YulIf","src":"21739:47:25"},{"nodeType":"YulVariableDeclaration","src":"21799:41:25","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"21813:4:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21823:1:25","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"21830:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"21835:2:25","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21826:3:25"},"nodeType":"YulFunctionCall","src":"21826:12:25"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"21819:3:25"},"nodeType":"YulFunctionCall","src":"21819:20:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21809:3:25"},"nodeType":"YulFunctionCall","src":"21809:31:25"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"21803:2:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"21853:24:25","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"21866:11:25"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"21857:5:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"21951:21:25","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"21960:5:25"},{"name":"_1","nodeType":"YulIdentifier","src":"21967:2:25"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"21953:6:25"},"nodeType":"YulFunctionCall","src":"21953:17:25"},"nodeType":"YulExpressionStatement","src":"21953:17:25"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"21901:5:25"},{"name":"_2","nodeType":"YulIdentifier","src":"21908:2:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"21898:2:25"},"nodeType":"YulFunctionCall","src":"21898:13:25"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"21912:26:25","statements":[{"nodeType":"YulAssignment","src":"21914:22:25","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"21927:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"21934:1:25","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21923:3:25"},"nodeType":"YulFunctionCall","src":"21923:13:25"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"21914:5:25"}]}]},"pre":{"nodeType":"YulBlock","src":"21894:3:25","statements":[]},"src":"21890:82:25"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"21540:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"21545:2:25","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"21537:2:25"},"nodeType":"YulFunctionCall","src":"21537:11:25"},"nodeType":"YulIf","src":"21534:448:25"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"21496:5:25","type":""},{"name":"len","nodeType":"YulTypedName","src":"21503:3:25","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"21508:10:25","type":""}],"src":"21443:545:25"},{"body":{"nodeType":"YulBlock","src":"22078:81:25","statements":[{"nodeType":"YulAssignment","src":"22088:65:25","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"22103:4:25"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22121:1:25","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"22124:3:25"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"22117:3:25"},"nodeType":"YulFunctionCall","src":"22117:11:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22134:1:25","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"22130:3:25"},"nodeType":"YulFunctionCall","src":"22130:6:25"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"22113:3:25"},"nodeType":"YulFunctionCall","src":"22113:24:25"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"22109:3:25"},"nodeType":"YulFunctionCall","src":"22109:29:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"22099:3:25"},"nodeType":"YulFunctionCall","src":"22099:40:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22145:1:25","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"22148:3:25"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"22141:3:25"},"nodeType":"YulFunctionCall","src":"22141:11:25"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"22096:2:25"},"nodeType":"YulFunctionCall","src":"22096:57:25"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"22088:4:25"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"22055:4:25","type":""},{"name":"len","nodeType":"YulTypedName","src":"22061:3:25","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"22069:4:25","type":""}],"src":"21993:166:25"},{"body":{"nodeType":"YulBlock","src":"22260:1256:25","statements":[{"nodeType":"YulVariableDeclaration","src":"22270:24:25","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"22290:3:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22284:5:25"},"nodeType":"YulFunctionCall","src":"22284:10:25"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"22274:6:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"22337:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"22339:16:25"},"nodeType":"YulFunctionCall","src":"22339:18:25"},"nodeType":"YulExpressionStatement","src":"22339:18:25"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"22309:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"22317:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"22306:2:25"},"nodeType":"YulFunctionCall","src":"22306:30:25"},"nodeType":"YulIf","src":"22303:56:25"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"22412:4:25"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"22450:4:25"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"22444:5:25"},"nodeType":"YulFunctionCall","src":"22444:11:25"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"22418:25:25"},"nodeType":"YulFunctionCall","src":"22418:38:25"},{"name":"newLen","nodeType":"YulIdentifier","src":"22458:6:25"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"22368:43:25"},"nodeType":"YulFunctionCall","src":"22368:97:25"},"nodeType":"YulExpressionStatement","src":"22368:97:25"},{"nodeType":"YulVariableDeclaration","src":"22474:18:25","value":{"kind":"number","nodeType":"YulLiteral","src":"22491:1:25","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"22478:9:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"22501:23:25","value":{"kind":"number","nodeType":"YulLiteral","src":"22520:4:25","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"22505:11:25","type":""}]},{"nodeType":"YulAssignment","src":"22533:24:25","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"22546:11:25"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"22533:9:25"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"22603:656:25","statements":[{"nodeType":"YulVariableDeclaration","src":"22617:35:25","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"22636:6:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22648:2:25","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"22644:3:25"},"nodeType":"YulFunctionCall","src":"22644:7:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"22632:3:25"},"nodeType":"YulFunctionCall","src":"22632:20:25"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"22621:7:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"22665:49:25","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"22709:4:25"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"22679:29:25"},"nodeType":"YulFunctionCall","src":"22679:35:25"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"22669:6:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"22727:10:25","value":{"kind":"number","nodeType":"YulLiteral","src":"22736:1:25","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"22731:1:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"22814:172:25","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"22839:6:25"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"22857:3:25"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"22862:9:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22853:3:25"},"nodeType":"YulFunctionCall","src":"22853:19:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22847:5:25"},"nodeType":"YulFunctionCall","src":"22847:26:25"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"22832:6:25"},"nodeType":"YulFunctionCall","src":"22832:42:25"},"nodeType":"YulExpressionStatement","src":"22832:42:25"},{"nodeType":"YulAssignment","src":"22891:24:25","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"22905:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"22913:1:25","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22901:3:25"},"nodeType":"YulFunctionCall","src":"22901:14:25"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"22891:6:25"}]},{"nodeType":"YulAssignment","src":"22932:40:25","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"22949:9:25"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"22960:11:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22945:3:25"},"nodeType":"YulFunctionCall","src":"22945:27:25"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"22932:9:25"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"22761:1:25"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"22764:7:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"22758:2:25"},"nodeType":"YulFunctionCall","src":"22758:14:25"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"22773:28:25","statements":[{"nodeType":"YulAssignment","src":"22775:24:25","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"22784:1:25"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"22787:11:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22780:3:25"},"nodeType":"YulFunctionCall","src":"22780:19:25"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"22775:1:25"}]}]},"pre":{"nodeType":"YulBlock","src":"22754:3:25","statements":[]},"src":"22750:236:25"},{"body":{"nodeType":"YulBlock","src":"23034:166:25","statements":[{"nodeType":"YulVariableDeclaration","src":"23052:43:25","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"23079:3:25"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"23084:9:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23075:3:25"},"nodeType":"YulFunctionCall","src":"23075:19:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"23069:5:25"},"nodeType":"YulFunctionCall","src":"23069:26:25"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"23056:9:25","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"23119:6:25"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"23131:9:25"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23158:1:25","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"23161:6:25"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"23154:3:25"},"nodeType":"YulFunctionCall","src":"23154:14:25"},{"kind":"number","nodeType":"YulLiteral","src":"23170:3:25","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"23150:3:25"},"nodeType":"YulFunctionCall","src":"23150:24:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23180:1:25","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"23176:3:25"},"nodeType":"YulFunctionCall","src":"23176:6:25"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"23146:3:25"},"nodeType":"YulFunctionCall","src":"23146:37:25"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"23142:3:25"},"nodeType":"YulFunctionCall","src":"23142:42:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"23127:3:25"},"nodeType":"YulFunctionCall","src":"23127:58:25"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"23112:6:25"},"nodeType":"YulFunctionCall","src":"23112:74:25"},"nodeType":"YulExpressionStatement","src":"23112:74:25"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"23005:7:25"},{"name":"newLen","nodeType":"YulIdentifier","src":"23014:6:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"23002:2:25"},"nodeType":"YulFunctionCall","src":"23002:19:25"},"nodeType":"YulIf","src":"22999:201:25"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"23220:4:25"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23234:1:25","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"23237:6:25"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"23230:3:25"},"nodeType":"YulFunctionCall","src":"23230:14:25"},{"kind":"number","nodeType":"YulLiteral","src":"23246:1:25","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23226:3:25"},"nodeType":"YulFunctionCall","src":"23226:22:25"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"23213:6:25"},"nodeType":"YulFunctionCall","src":"23213:36:25"},"nodeType":"YulExpressionStatement","src":"23213:36:25"}]},"nodeType":"YulCase","src":"22596:663:25","value":{"kind":"number","nodeType":"YulLiteral","src":"22601:1:25","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"23276:234:25","statements":[{"nodeType":"YulVariableDeclaration","src":"23290:14:25","value":{"kind":"number","nodeType":"YulLiteral","src":"23303:1:25","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"23294:5:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"23339:67:25","statements":[{"nodeType":"YulAssignment","src":"23357:35:25","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"23376:3:25"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"23381:9:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23372:3:25"},"nodeType":"YulFunctionCall","src":"23372:19:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"23366:5:25"},"nodeType":"YulFunctionCall","src":"23366:26:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"23357:5:25"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"23320:6:25"},"nodeType":"YulIf","src":"23317:89:25"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"23426:4:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23485:5:25"},{"name":"newLen","nodeType":"YulIdentifier","src":"23492:6:25"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"23432:52:25"},"nodeType":"YulFunctionCall","src":"23432:67:25"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"23419:6:25"},"nodeType":"YulFunctionCall","src":"23419:81:25"},"nodeType":"YulExpressionStatement","src":"23419:81:25"}]},"nodeType":"YulCase","src":"23268:242:25","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"22576:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"22584:2:25","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"22573:2:25"},"nodeType":"YulFunctionCall","src":"22573:14:25"},"nodeType":"YulSwitch","src":"22566:944:25"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"22245:4:25","type":""},{"name":"src","nodeType":"YulTypedName","src":"22251:3:25","type":""}],"src":"22164:1352:25"},{"body":{"nodeType":"YulBlock","src":"23666:142:25","statements":[{"nodeType":"YulAssignment","src":"23676:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23688:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"23699:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23684:3:25"},"nodeType":"YulFunctionCall","src":"23684:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23676:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"23741:6:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"23749:9:25"}],"functionName":{"name":"abi_encode_enum_SeverityLevel","nodeType":"YulIdentifier","src":"23711:29:25"},"nodeType":"YulFunctionCall","src":"23711:48:25"},"nodeType":"YulExpressionStatement","src":"23711:48:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23779:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"23790:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23775:3:25"},"nodeType":"YulFunctionCall","src":"23775:18:25"},{"name":"value1","nodeType":"YulIdentifier","src":"23795:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23768:6:25"},"nodeType":"YulFunctionCall","src":"23768:34:25"},"nodeType":"YulExpressionStatement","src":"23768:34:25"}]},"name":"abi_encode_tuple_t_enum$_SeverityLevel_$7186_t_uint256__to_t_uint8_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23627:9:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"23638:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"23646:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23657:4:25","type":""}],"src":"23521:287:25"},{"body":{"nodeType":"YulBlock","src":"23987:170:25","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24004:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"24015:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23997:6:25"},"nodeType":"YulFunctionCall","src":"23997:21:25"},"nodeType":"YulExpressionStatement","src":"23997:21:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24038:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"24049:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24034:3:25"},"nodeType":"YulFunctionCall","src":"24034:18:25"},{"kind":"number","nodeType":"YulLiteral","src":"24054:2:25","type":"","value":"20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24027:6:25"},"nodeType":"YulFunctionCall","src":"24027:30:25"},"nodeType":"YulExpressionStatement","src":"24027:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24077:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"24088:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24073:3:25"},"nodeType":"YulFunctionCall","src":"24073:18:25"},{"hexValue":"546f6b656e20646f6573206e6f74206578697374","kind":"string","nodeType":"YulLiteral","src":"24093:22:25","type":"","value":"Token does not exist"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24066:6:25"},"nodeType":"YulFunctionCall","src":"24066:50:25"},"nodeType":"YulExpressionStatement","src":"24066:50:25"},{"nodeType":"YulAssignment","src":"24125:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24137:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"24148:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24133:3:25"},"nodeType":"YulFunctionCall","src":"24133:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24125:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23964:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23978:4:25","type":""}],"src":"23813:344:25"},{"body":{"nodeType":"YulBlock","src":"24336:164:25","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24353:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"24364:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24346:6:25"},"nodeType":"YulFunctionCall","src":"24346:21:25"},"nodeType":"YulExpressionStatement","src":"24346:21:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24387:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"24398:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24383:3:25"},"nodeType":"YulFunctionCall","src":"24383:18:25"},{"kind":"number","nodeType":"YulLiteral","src":"24403:2:25","type":"","value":"14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24376:6:25"},"nodeType":"YulFunctionCall","src":"24376:30:25"},"nodeType":"YulExpressionStatement","src":"24376:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24426:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"24437:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24422:3:25"},"nodeType":"YulFunctionCall","src":"24422:18:25"},{"hexValue":"4e6f7420617574686f72697a6564","kind":"string","nodeType":"YulLiteral","src":"24442:16:25","type":"","value":"Not authorized"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24415:6:25"},"nodeType":"YulFunctionCall","src":"24415:44:25"},"nodeType":"YulExpressionStatement","src":"24415:44:25"},{"nodeType":"YulAssignment","src":"24468:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24480:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"24491:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24476:3:25"},"nodeType":"YulFunctionCall","src":"24476:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24468:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24313:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24327:4:25","type":""}],"src":"24162:338:25"},{"body":{"nodeType":"YulBlock","src":"24648:158:25","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24665:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"24676:2:25","type":"","value":"64"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24658:6:25"},"nodeType":"YulFunctionCall","src":"24658:21:25"},"nodeType":"YulExpressionStatement","src":"24658:21:25"},{"nodeType":"YulAssignment","src":"24688:53:25","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"24714:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24726:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"24737:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24722:3:25"},"nodeType":"YulFunctionCall","src":"24722:18:25"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"24696:17:25"},"nodeType":"YulFunctionCall","src":"24696:45:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24688:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24761:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"24772:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24757:3:25"},"nodeType":"YulFunctionCall","src":"24757:18:25"},{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"24791:6:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"24784:6:25"},"nodeType":"YulFunctionCall","src":"24784:14:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"24777:6:25"},"nodeType":"YulFunctionCall","src":"24777:22:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24750:6:25"},"nodeType":"YulFunctionCall","src":"24750:50:25"},"nodeType":"YulExpressionStatement","src":"24750:50:25"}]},"name":"abi_encode_tuple_t_string_memory_ptr_t_bool__to_t_string_memory_ptr_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24609:9:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"24620:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"24628:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24639:4:25","type":""}],"src":"24505:301:25"},{"body":{"nodeType":"YulBlock","src":"24985:167:25","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25002:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"25013:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24995:6:25"},"nodeType":"YulFunctionCall","src":"24995:21:25"},"nodeType":"YulExpressionStatement","src":"24995:21:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25036:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"25047:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25032:3:25"},"nodeType":"YulFunctionCall","src":"25032:18:25"},{"kind":"number","nodeType":"YulLiteral","src":"25052:2:25","type":"","value":"17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25025:6:25"},"nodeType":"YulFunctionCall","src":"25025:30:25"},"nodeType":"YulExpressionStatement","src":"25025:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25075:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"25086:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25071:3:25"},"nodeType":"YulFunctionCall","src":"25071:18:25"},{"hexValue":"42696c6c20616c72656164792070616964","kind":"string","nodeType":"YulLiteral","src":"25091:19:25","type":"","value":"Bill already paid"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25064:6:25"},"nodeType":"YulFunctionCall","src":"25064:47:25"},"nodeType":"YulExpressionStatement","src":"25064:47:25"},{"nodeType":"YulAssignment","src":"25120:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25132:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"25143:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25128:3:25"},"nodeType":"YulFunctionCall","src":"25128:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25120:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_9127feae84f50ba061700d6b70693255825cf5ddee8cf59a413005d2a7921be9__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24962:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24976:4:25","type":""}],"src":"24811:341:25"},{"body":{"nodeType":"YulBlock","src":"25331:164:25","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25348:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"25359:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25341:6:25"},"nodeType":"YulFunctionCall","src":"25341:21:25"},"nodeType":"YulExpressionStatement","src":"25341:21:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25382:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"25393:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25378:3:25"},"nodeType":"YulFunctionCall","src":"25378:18:25"},{"kind":"number","nodeType":"YulLiteral","src":"25398:2:25","type":"","value":"14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25371:6:25"},"nodeType":"YulFunctionCall","src":"25371:30:25"},"nodeType":"YulExpressionStatement","src":"25371:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25421:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"25432:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25417:3:25"},"nodeType":"YulFunctionCall","src":"25417:18:25"},{"hexValue":"4e6f742062696c6c206f776e6572","kind":"string","nodeType":"YulLiteral","src":"25437:16:25","type":"","value":"Not bill owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25410:6:25"},"nodeType":"YulFunctionCall","src":"25410:44:25"},"nodeType":"YulExpressionStatement","src":"25410:44:25"},{"nodeType":"YulAssignment","src":"25463:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25475:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"25486:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25471:3:25"},"nodeType":"YulFunctionCall","src":"25471:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25463:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_a371d34425552149dc4398b18c7181ef004ff4c04ea4c0e426ebd6fe25cdc6e4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25308:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25322:4:25","type":""}],"src":"25157:338:25"},{"body":{"nodeType":"YulBlock","src":"25674:178:25","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25691:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"25702:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25684:6:25"},"nodeType":"YulFunctionCall","src":"25684:21:25"},"nodeType":"YulExpressionStatement","src":"25684:21:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25725:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"25736:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25721:3:25"},"nodeType":"YulFunctionCall","src":"25721:18:25"},{"kind":"number","nodeType":"YulLiteral","src":"25741:2:25","type":"","value":"28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25714:6:25"},"nodeType":"YulFunctionCall","src":"25714:30:25"},"nodeType":"YulExpressionStatement","src":"25714:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25764:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"25775:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25760:3:25"},"nodeType":"YulFunctionCall","src":"25760:18:25"},{"hexValue":"5061796d656e74207472616e73616374696f6e207265717569726564","kind":"string","nodeType":"YulLiteral","src":"25780:30:25","type":"","value":"Payment transaction required"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25753:6:25"},"nodeType":"YulFunctionCall","src":"25753:58:25"},"nodeType":"YulExpressionStatement","src":"25753:58:25"},{"nodeType":"YulAssignment","src":"25820:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25832:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"25843:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25828:3:25"},"nodeType":"YulFunctionCall","src":"25828:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25820:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_4f9c535a088ec5ff4e3375c9b3be360868c365461262557c1dbba5c0c3f2c097__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25651:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25665:4:25","type":""}],"src":"25500:352:25"},{"body":{"nodeType":"YulBlock","src":"26031:167:25","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26048:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"26059:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26041:6:25"},"nodeType":"YulFunctionCall","src":"26041:21:25"},"nodeType":"YulExpressionStatement","src":"26041:21:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26082:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"26093:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26078:3:25"},"nodeType":"YulFunctionCall","src":"26078:18:25"},{"kind":"number","nodeType":"YulLiteral","src":"26098:2:25","type":"","value":"17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26071:6:25"},"nodeType":"YulFunctionCall","src":"26071:30:25"},"nodeType":"YulExpressionStatement","src":"26071:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26121:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"26132:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26117:3:25"},"nodeType":"YulFunctionCall","src":"26117:18:25"},{"hexValue":"496e76616c696420696e737572616e6365","kind":"string","nodeType":"YulLiteral","src":"26137:19:25","type":"","value":"Invalid insurance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26110:6:25"},"nodeType":"YulFunctionCall","src":"26110:47:25"},"nodeType":"YulExpressionStatement","src":"26110:47:25"},{"nodeType":"YulAssignment","src":"26166:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26178:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"26189:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26174:3:25"},"nodeType":"YulFunctionCall","src":"26174:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26166:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_40c3d0dcf30225b44b0b86c09c1674ef2c21a8a0007175bc28129d638c6ea066__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26008:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26022:4:25","type":""}],"src":"25857:341:25"},{"body":{"nodeType":"YulBlock","src":"26342:150:25","statements":[{"nodeType":"YulVariableDeclaration","src":"26352:27:25","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"26372:6:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"26366:5:25"},"nodeType":"YulFunctionCall","src":"26366:13:25"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"26356:6:25","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"26427:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"26435:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26423:3:25"},"nodeType":"YulFunctionCall","src":"26423:17:25"},{"name":"pos","nodeType":"YulIdentifier","src":"26442:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"26447:6:25"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"26388:34:25"},"nodeType":"YulFunctionCall","src":"26388:66:25"},"nodeType":"YulExpressionStatement","src":"26388:66:25"},{"nodeType":"YulAssignment","src":"26463:23:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26474:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"26479:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26470:3:25"},"nodeType":"YulFunctionCall","src":"26470:16:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"26463:3:25"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"26318:3:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"26323:6:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"26334:3:25","type":""}],"src":"26203:289:25"},{"body":{"nodeType":"YulBlock","src":"26671:172:25","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26688:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"26699:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26681:6:25"},"nodeType":"YulFunctionCall","src":"26681:21:25"},"nodeType":"YulExpressionStatement","src":"26681:21:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26722:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"26733:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26718:3:25"},"nodeType":"YulFunctionCall","src":"26718:18:25"},{"kind":"number","nodeType":"YulLiteral","src":"26738:2:25","type":"","value":"22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26711:6:25"},"nodeType":"YulFunctionCall","src":"26711:30:25"},"nodeType":"YulExpressionStatement","src":"26711:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26761:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"26772:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26757:3:25"},"nodeType":"YulFunctionCall","src":"26757:18:25"},{"hexValue":"496e737572616e6365206e6f74207665726966696564","kind":"string","nodeType":"YulLiteral","src":"26777:24:25","type":"","value":"Insurance not verified"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26750:6:25"},"nodeType":"YulFunctionCall","src":"26750:52:25"},"nodeType":"YulExpressionStatement","src":"26750:52:25"},{"nodeType":"YulAssignment","src":"26811:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26823:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"26834:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26819:3:25"},"nodeType":"YulFunctionCall","src":"26819:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26811:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_355c5bda332c1a91556e38a6eb968e2ef9aec2e973fc0f1fbfee677399f5d735__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26648:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26662:4:25","type":""}],"src":"26497:346:25"},{"body":{"nodeType":"YulBlock","src":"27022:181:25","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27039:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"27050:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27032:6:25"},"nodeType":"YulFunctionCall","src":"27032:21:25"},"nodeType":"YulExpressionStatement","src":"27032:21:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27073:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"27084:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27069:3:25"},"nodeType":"YulFunctionCall","src":"27069:18:25"},{"kind":"number","nodeType":"YulLiteral","src":"27089:2:25","type":"","value":"31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27062:6:25"},"nodeType":"YulFunctionCall","src":"27062:30:25"},"nodeType":"YulExpressionStatement","src":"27062:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27112:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"27123:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27108:3:25"},"nodeType":"YulFunctionCall","src":"27108:18:25"},{"hexValue":"496e737572616e6365207061796d656e742068617368207265717569726564","kind":"string","nodeType":"YulLiteral","src":"27128:33:25","type":"","value":"Insurance payment hash required"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27101:6:25"},"nodeType":"YulFunctionCall","src":"27101:61:25"},"nodeType":"YulExpressionStatement","src":"27101:61:25"},{"nodeType":"YulAssignment","src":"27171:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27183:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"27194:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27179:3:25"},"nodeType":"YulFunctionCall","src":"27179:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27171:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_03b56162b0dc1322842d4bb57186452146d3ac0abfc81c1e6d8e70a5bbdeb7d1__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26999:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27013:4:25","type":""}],"src":"26848:355:25"},{"body":{"nodeType":"YulBlock","src":"27348:159:25","statements":[{"nodeType":"YulAssignment","src":"27358:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27370:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"27381:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27366:3:25"},"nodeType":"YulFunctionCall","src":"27366:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27358:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"27424:6:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"27432:9:25"}],"functionName":{"name":"abi_encode_enum_EvaluationType","nodeType":"YulIdentifier","src":"27393:30:25"},"nodeType":"YulFunctionCall","src":"27393:49:25"},"nodeType":"YulExpressionStatement","src":"27393:49:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27462:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"27473:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27458:3:25"},"nodeType":"YulFunctionCall","src":"27458:18:25"},{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"27492:6:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"27485:6:25"},"nodeType":"YulFunctionCall","src":"27485:14:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"27478:6:25"},"nodeType":"YulFunctionCall","src":"27478:22:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27451:6:25"},"nodeType":"YulFunctionCall","src":"27451:50:25"},"nodeType":"YulExpressionStatement","src":"27451:50:25"}]},"name":"abi_encode_tuple_t_enum$_EvaluationType_$7181_t_bool__to_t_uint8_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27309:9:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"27320:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"27328:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27339:4:25","type":""}],"src":"27208:299:25"},{"body":{"nodeType":"YulBlock","src":"27709:257:25","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27726:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"27737:2:25","type":"","value":"96"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27719:6:25"},"nodeType":"YulFunctionCall","src":"27719:21:25"},"nodeType":"YulExpressionStatement","src":"27719:21:25"},{"nodeType":"YulVariableDeclaration","src":"27749:59:25","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"27781:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27793:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"27804:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27789:3:25"},"nodeType":"YulFunctionCall","src":"27789:18:25"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"27763:17:25"},"nodeType":"YulFunctionCall","src":"27763:45:25"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"27753:6:25","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27828:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"27839:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27824:3:25"},"nodeType":"YulFunctionCall","src":"27824:18:25"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"27848:6:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"27856:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"27844:3:25"},"nodeType":"YulFunctionCall","src":"27844:22:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27817:6:25"},"nodeType":"YulFunctionCall","src":"27817:50:25"},"nodeType":"YulExpressionStatement","src":"27817:50:25"},{"nodeType":"YulAssignment","src":"27876:41:25","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"27902:6:25"},{"name":"tail_1","nodeType":"YulIdentifier","src":"27910:6:25"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"27884:17:25"},"nodeType":"YulFunctionCall","src":"27884:33:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27876:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27937:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"27948:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27933:3:25"},"nodeType":"YulFunctionCall","src":"27933:18:25"},{"name":"value2","nodeType":"YulIdentifier","src":"27953:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27926:6:25"},"nodeType":"YulFunctionCall","src":"27926:34:25"},"nodeType":"YulExpressionStatement","src":"27926:34:25"}]},"name":"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_uint256__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27662:9:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"27673:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"27681:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"27689:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27700:4:25","type":""}],"src":"27512:454:25"},{"body":{"nodeType":"YulBlock","src":"28145:164:25","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28162:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"28173:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28155:6:25"},"nodeType":"YulFunctionCall","src":"28155:21:25"},"nodeType":"YulExpressionStatement","src":"28155:21:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28196:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"28207:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28192:3:25"},"nodeType":"YulFunctionCall","src":"28192:18:25"},{"kind":"number","nodeType":"YulLiteral","src":"28212:2:25","type":"","value":"14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28185:6:25"},"nodeType":"YulFunctionCall","src":"28185:30:25"},"nodeType":"YulExpressionStatement","src":"28185:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28235:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"28246:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28231:3:25"},"nodeType":"YulFunctionCall","src":"28231:18:25"},{"hexValue":"4e6f74206120686f73706974616c","kind":"string","nodeType":"YulLiteral","src":"28251:16:25","type":"","value":"Not a hospital"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28224:6:25"},"nodeType":"YulFunctionCall","src":"28224:44:25"},"nodeType":"YulExpressionStatement","src":"28224:44:25"},{"nodeType":"YulAssignment","src":"28277:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28289:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"28300:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28285:3:25"},"nodeType":"YulFunctionCall","src":"28285:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28277:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_e83b59861188c031e6b87a8f8944f0aa55c1a0f7b324e5d8f61b545253a4c3f7__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28122:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"28136:4:25","type":""}],"src":"27971:338:25"},{"body":{"nodeType":"YulBlock","src":"28366:116:25","statements":[{"nodeType":"YulAssignment","src":"28376:20:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"28391:1:25"},{"name":"y","nodeType":"YulIdentifier","src":"28394:1:25"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"28387:3:25"},"nodeType":"YulFunctionCall","src":"28387:9:25"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"28376:7:25"}]},{"body":{"nodeType":"YulBlock","src":"28454:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"28456:16:25"},"nodeType":"YulFunctionCall","src":"28456:18:25"},"nodeType":"YulExpressionStatement","src":"28456:18:25"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"28425:1:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"28418:6:25"},"nodeType":"YulFunctionCall","src":"28418:9:25"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"28432:1:25"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"28439:7:25"},{"name":"x","nodeType":"YulIdentifier","src":"28448:1:25"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"28435:3:25"},"nodeType":"YulFunctionCall","src":"28435:15:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"28429:2:25"},"nodeType":"YulFunctionCall","src":"28429:22:25"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"28415:2:25"},"nodeType":"YulFunctionCall","src":"28415:37:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"28408:6:25"},"nodeType":"YulFunctionCall","src":"28408:45:25"},"nodeType":"YulIf","src":"28405:71:25"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"28345:1:25","type":""},{"name":"y","nodeType":"YulTypedName","src":"28348:1:25","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"28354:7:25","type":""}],"src":"28314:168:25"},{"body":{"nodeType":"YulBlock","src":"28519:95:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28536:1:25","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28543:3:25","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"28548:10:25","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"28539:3:25"},"nodeType":"YulFunctionCall","src":"28539:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28529:6:25"},"nodeType":"YulFunctionCall","src":"28529:31:25"},"nodeType":"YulExpressionStatement","src":"28529:31:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28576:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"28579:4:25","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28569:6:25"},"nodeType":"YulFunctionCall","src":"28569:15:25"},"nodeType":"YulExpressionStatement","src":"28569:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28600:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"28603:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"28593:6:25"},"nodeType":"YulFunctionCall","src":"28593:15:25"},"nodeType":"YulExpressionStatement","src":"28593:15:25"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"28487:127:25"},{"body":{"nodeType":"YulBlock","src":"28665:171:25","statements":[{"body":{"nodeType":"YulBlock","src":"28696:111:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28717:1:25","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28724:3:25","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"28729:10:25","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"28720:3:25"},"nodeType":"YulFunctionCall","src":"28720:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28710:6:25"},"nodeType":"YulFunctionCall","src":"28710:31:25"},"nodeType":"YulExpressionStatement","src":"28710:31:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28761:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"28764:4:25","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28754:6:25"},"nodeType":"YulFunctionCall","src":"28754:15:25"},"nodeType":"YulExpressionStatement","src":"28754:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28789:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"28792:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"28782:6:25"},"nodeType":"YulFunctionCall","src":"28782:15:25"},"nodeType":"YulExpressionStatement","src":"28782:15:25"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"28685:1:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"28678:6:25"},"nodeType":"YulFunctionCall","src":"28678:9:25"},"nodeType":"YulIf","src":"28675:132:25"},{"nodeType":"YulAssignment","src":"28816:14:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"28825:1:25"},{"name":"y","nodeType":"YulIdentifier","src":"28828:1:25"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"28821:3:25"},"nodeType":"YulFunctionCall","src":"28821:9:25"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"28816:1:25"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"28650:1:25","type":""},{"name":"y","nodeType":"YulTypedName","src":"28653:1:25","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"28659:1:25","type":""}],"src":"28619:217:25"},{"body":{"nodeType":"YulBlock","src":"28890:79:25","statements":[{"nodeType":"YulAssignment","src":"28900:17:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"28912:1:25"},{"name":"y","nodeType":"YulIdentifier","src":"28915:1:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"28908:3:25"},"nodeType":"YulFunctionCall","src":"28908:9:25"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"28900:4:25"}]},{"body":{"nodeType":"YulBlock","src":"28941:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"28943:16:25"},"nodeType":"YulFunctionCall","src":"28943:18:25"},"nodeType":"YulExpressionStatement","src":"28943:18:25"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"28932:4:25"},{"name":"x","nodeType":"YulIdentifier","src":"28938:1:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"28929:2:25"},"nodeType":"YulFunctionCall","src":"28929:11:25"},"nodeType":"YulIf","src":"28926:37:25"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"28872:1:25","type":""},{"name":"y","nodeType":"YulTypedName","src":"28875:1:25","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"28881:4:25","type":""}],"src":"28841:128:25"},{"body":{"nodeType":"YulBlock","src":"29177:222:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29194:3:25"},{"name":"value0","nodeType":"YulIdentifier","src":"29199:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29187:6:25"},"nodeType":"YulFunctionCall","src":"29187:19:25"},"nodeType":"YulExpressionStatement","src":"29187:19:25"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29226:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"29231:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29222:3:25"},"nodeType":"YulFunctionCall","src":"29222:12:25"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"29244:2:25","type":"","value":"96"},{"name":"value1","nodeType":"YulIdentifier","src":"29248:6:25"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"29240:3:25"},"nodeType":"YulFunctionCall","src":"29240:15:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"29261:26:25","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"29257:3:25"},"nodeType":"YulFunctionCall","src":"29257:31:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"29236:3:25"},"nodeType":"YulFunctionCall","src":"29236:53:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29215:6:25"},"nodeType":"YulFunctionCall","src":"29215:75:25"},"nodeType":"YulExpressionStatement","src":"29215:75:25"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29310:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"29315:2:25","type":"","value":"52"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29306:3:25"},"nodeType":"YulFunctionCall","src":"29306:12:25"},{"name":"value2","nodeType":"YulIdentifier","src":"29320:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29299:6:25"},"nodeType":"YulFunctionCall","src":"29299:28:25"},"nodeType":"YulExpressionStatement","src":"29299:28:25"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29347:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"29352:2:25","type":"","value":"84"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29343:3:25"},"nodeType":"YulFunctionCall","src":"29343:12:25"},{"name":"value3","nodeType":"YulIdentifier","src":"29357:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29336:6:25"},"nodeType":"YulFunctionCall","src":"29336:28:25"},"nodeType":"YulExpressionStatement","src":"29336:28:25"},{"nodeType":"YulAssignment","src":"29373:20:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29384:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"29389:3:25","type":"","value":"116"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29380:3:25"},"nodeType":"YulFunctionCall","src":"29380:13:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"29373:3:25"}]}]},"name":"abi_encode_tuple_packed_t_uint256_t_address_t_uint256_t_uint256__to_t_uint256_t_address_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"29129:3:25","type":""},{"name":"value3","nodeType":"YulTypedName","src":"29134:6:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"29142:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"29150:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"29158:6:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"29169:3:25","type":""}],"src":"28974:425:25"},{"body":{"nodeType":"YulBlock","src":"29533:119:25","statements":[{"nodeType":"YulAssignment","src":"29543:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29555:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"29566:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29551:3:25"},"nodeType":"YulFunctionCall","src":"29551:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29543:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29585:9:25"},{"name":"value0","nodeType":"YulIdentifier","src":"29596:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29578:6:25"},"nodeType":"YulFunctionCall","src":"29578:25:25"},"nodeType":"YulExpressionStatement","src":"29578:25:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29623:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"29634:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29619:3:25"},"nodeType":"YulFunctionCall","src":"29619:18:25"},{"name":"value1","nodeType":"YulIdentifier","src":"29639:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29612:6:25"},"nodeType":"YulFunctionCall","src":"29612:34:25"},"nodeType":"YulExpressionStatement","src":"29612:34:25"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29494:9:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"29505:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"29513:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"29524:4:25","type":""}],"src":"29404:248:25"},{"body":{"nodeType":"YulBlock","src":"29860:286:25","statements":[{"nodeType":"YulVariableDeclaration","src":"29870:29:25","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"29888:3:25","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"29893:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"29884:3:25"},"nodeType":"YulFunctionCall","src":"29884:11:25"},{"kind":"number","nodeType":"YulLiteral","src":"29897:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"29880:3:25"},"nodeType":"YulFunctionCall","src":"29880:19:25"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"29874:2:25","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29915:9:25"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"29930:6:25"},{"name":"_1","nodeType":"YulIdentifier","src":"29938:2:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"29926:3:25"},"nodeType":"YulFunctionCall","src":"29926:15:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29908:6:25"},"nodeType":"YulFunctionCall","src":"29908:34:25"},"nodeType":"YulExpressionStatement","src":"29908:34:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29962:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"29973:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29958:3:25"},"nodeType":"YulFunctionCall","src":"29958:18:25"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"29982:6:25"},{"name":"_1","nodeType":"YulIdentifier","src":"29990:2:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"29978:3:25"},"nodeType":"YulFunctionCall","src":"29978:15:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29951:6:25"},"nodeType":"YulFunctionCall","src":"29951:43:25"},"nodeType":"YulExpressionStatement","src":"29951:43:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30014:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"30025:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30010:3:25"},"nodeType":"YulFunctionCall","src":"30010:18:25"},{"name":"value2","nodeType":"YulIdentifier","src":"30030:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30003:6:25"},"nodeType":"YulFunctionCall","src":"30003:34:25"},"nodeType":"YulExpressionStatement","src":"30003:34:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30057:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"30068:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30053:3:25"},"nodeType":"YulFunctionCall","src":"30053:18:25"},{"kind":"number","nodeType":"YulLiteral","src":"30073:3:25","type":"","value":"128"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30046:6:25"},"nodeType":"YulFunctionCall","src":"30046:31:25"},"nodeType":"YulExpressionStatement","src":"30046:31:25"},{"nodeType":"YulAssignment","src":"30086:54:25","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"30112:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30124:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"30135:3:25","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30120:3:25"},"nodeType":"YulFunctionCall","src":"30120:19:25"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"30094:17:25"},"nodeType":"YulFunctionCall","src":"30094:46:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30086:4:25"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29805:9:25","type":""},{"name":"value3","nodeType":"YulTypedName","src":"29816:6:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"29824:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"29832:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"29840:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"29851:4:25","type":""}],"src":"29657:489:25"},{"body":{"nodeType":"YulBlock","src":"30231:169:25","statements":[{"body":{"nodeType":"YulBlock","src":"30277:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"30286:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"30289:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"30279:6:25"},"nodeType":"YulFunctionCall","src":"30279:12:25"},"nodeType":"YulExpressionStatement","src":"30279:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"30252:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"30261:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"30248:3:25"},"nodeType":"YulFunctionCall","src":"30248:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"30273:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"30244:3:25"},"nodeType":"YulFunctionCall","src":"30244:32:25"},"nodeType":"YulIf","src":"30241:52:25"},{"nodeType":"YulVariableDeclaration","src":"30302:29:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30321:9:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"30315:5:25"},"nodeType":"YulFunctionCall","src":"30315:16:25"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"30306:5:25","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"30364:5:25"}],"functionName":{"name":"validator_revert_bytes4","nodeType":"YulIdentifier","src":"30340:23:25"},"nodeType":"YulFunctionCall","src":"30340:30:25"},"nodeType":"YulExpressionStatement","src":"30340:30:25"},{"nodeType":"YulAssignment","src":"30379:15:25","value":{"name":"value","nodeType":"YulIdentifier","src":"30389:5:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"30379:6:25"}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"30197:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"30208:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"30220:6:25","type":""}],"src":"30151:249:25"},{"body":{"nodeType":"YulBlock","src":"30592:309:25","statements":[{"nodeType":"YulVariableDeclaration","src":"30602:27:25","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"30622:6:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"30616:5:25"},"nodeType":"YulFunctionCall","src":"30616:13:25"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"30606:6:25","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"30677:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"30685:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30673:3:25"},"nodeType":"YulFunctionCall","src":"30673:17:25"},{"name":"pos","nodeType":"YulIdentifier","src":"30692:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"30697:6:25"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"30638:34:25"},"nodeType":"YulFunctionCall","src":"30638:66:25"},"nodeType":"YulExpressionStatement","src":"30638:66:25"},{"nodeType":"YulVariableDeclaration","src":"30713:29:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30730:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"30735:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30726:3:25"},"nodeType":"YulFunctionCall","src":"30726:16:25"},"variables":[{"name":"end_1","nodeType":"YulTypedName","src":"30717:5:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"30751:29:25","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"30773:6:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"30767:5:25"},"nodeType":"YulFunctionCall","src":"30767:13:25"},"variables":[{"name":"length_1","nodeType":"YulTypedName","src":"30755:8:25","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"30828:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"30836:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30824:3:25"},"nodeType":"YulFunctionCall","src":"30824:17:25"},{"name":"end_1","nodeType":"YulIdentifier","src":"30843:5:25"},{"name":"length_1","nodeType":"YulIdentifier","src":"30850:8:25"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"30789:34:25"},"nodeType":"YulFunctionCall","src":"30789:70:25"},"nodeType":"YulExpressionStatement","src":"30789:70:25"},{"nodeType":"YulAssignment","src":"30868:27:25","value":{"arguments":[{"name":"end_1","nodeType":"YulIdentifier","src":"30879:5:25"},{"name":"length_1","nodeType":"YulIdentifier","src":"30886:8:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30875:3:25"},"nodeType":"YulFunctionCall","src":"30875:20:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"30868:3:25"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"30560:3:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"30565:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"30573:6:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"30584:3:25","type":""}],"src":"30405:496:25"},{"body":{"nodeType":"YulBlock","src":"31035:145:25","statements":[{"nodeType":"YulAssignment","src":"31045:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31057:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"31068:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31053:3:25"},"nodeType":"YulFunctionCall","src":"31053:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31045:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31087:9:25"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"31102:6:25"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"31118:3:25","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"31123:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"31114:3:25"},"nodeType":"YulFunctionCall","src":"31114:11:25"},{"kind":"number","nodeType":"YulLiteral","src":"31127:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"31110:3:25"},"nodeType":"YulFunctionCall","src":"31110:19:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"31098:3:25"},"nodeType":"YulFunctionCall","src":"31098:32:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31080:6:25"},"nodeType":"YulFunctionCall","src":"31080:51:25"},"nodeType":"YulExpressionStatement","src":"31080:51:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31151:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"31162:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31147:3:25"},"nodeType":"YulFunctionCall","src":"31147:18:25"},{"name":"value1","nodeType":"YulIdentifier","src":"31167:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31140:6:25"},"nodeType":"YulFunctionCall","src":"31140:34:25"},"nodeType":"YulExpressionStatement","src":"31140:34:25"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"30996:9:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"31007:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"31015:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"31026:4:25","type":""}],"src":"30906:274:25"},{"body":{"nodeType":"YulBlock","src":"31314:145:25","statements":[{"nodeType":"YulAssignment","src":"31324:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31336:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"31347:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31332:3:25"},"nodeType":"YulFunctionCall","src":"31332:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31324:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31366:9:25"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"31381:6:25"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"31397:3:25","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"31402:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"31393:3:25"},"nodeType":"YulFunctionCall","src":"31393:11:25"},{"kind":"number","nodeType":"YulLiteral","src":"31406:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"31389:3:25"},"nodeType":"YulFunctionCall","src":"31389:19:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"31377:3:25"},"nodeType":"YulFunctionCall","src":"31377:32:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31359:6:25"},"nodeType":"YulFunctionCall","src":"31359:51:25"},"nodeType":"YulExpressionStatement","src":"31359:51:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31430:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"31441:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31426:3:25"},"nodeType":"YulFunctionCall","src":"31426:18:25"},{"name":"value1","nodeType":"YulIdentifier","src":"31446:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31419:6:25"},"nodeType":"YulFunctionCall","src":"31419:34:25"},"nodeType":"YulExpressionStatement","src":"31419:34:25"}]},"name":"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31275:9:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"31286:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"31294:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"31305:4:25","type":""}],"src":"31185:274:25"}]},"contents":"{\n    { }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_bool(value, pos)\n    {\n        mstore(pos, iszero(iszero(value)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_address(value, pos)\n    {\n        mstore(pos, and(value, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_enum_EvaluationType(value, pos)\n    {\n        if iszero(lt(value, 8)) { panic_error_0x21() }\n        mstore(pos, value)\n    }\n    function abi_encode_struct_InsuranceInfo(value, pos) -> end\n    {\n        let memberValue0 := mload(value)\n        mstore(pos, 0xc0)\n        let tail := abi_encode_string(memberValue0, add(pos, 0xc0))\n        let memberValue0_1 := mload(add(value, 0x20))\n        mstore(add(pos, 0x20), sub(tail, pos))\n        let tail_1 := abi_encode_string(memberValue0_1, tail)\n        let memberValue0_2 := mload(add(value, 0x40))\n        mstore(add(pos, 0x40), sub(tail_1, pos))\n        let tail_2 := abi_encode_string(memberValue0_2, tail_1)\n        let memberValue0_3 := mload(add(value, 0x60))\n        mstore(add(pos, 0x60), sub(tail_2, pos))\n        let tail_3 := abi_encode_string(memberValue0_3, tail_2)\n        mstore(add(pos, 0x80), mload(add(value, 0x80)))\n        mstore(add(pos, 0xa0), iszero(iszero(mload(add(value, 0xa0)))))\n        end := tail_3\n    }\n    function abi_encode_tuple_t_uint256_t_address_t_address_t_bytes32_t_string_memory_ptr_t_bytes32_t_enum$_EvaluationType_$7181_t_uint256_t_uint256_t_bool_t_string_memory_ptr_t_uint256_t_struct$_InsuranceInfo_$7199_memory_ptr__to_t_uint256_t_address_t_address_t_bytes32_t_string_memory_ptr_t_bytes32_t_uint8_t_uint256_t_uint256_t_bool_t_string_memory_ptr_t_uint256_t_struct$_InsuranceInfo_$7199_memory_ptr__fromStack_reversed(headStart, value12, value11, value10, value9, value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := 416\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        abi_encode_address(value2, add(headStart, 64))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), _1)\n        let tail_1 := abi_encode_string(value4, add(headStart, _1))\n        mstore(add(headStart, 160), value5)\n        abi_encode_enum_EvaluationType(value6, add(headStart, 192))\n        mstore(add(headStart, 224), value7)\n        mstore(add(headStart, 256), value8)\n        abi_encode_bool(value9, add(headStart, 288))\n        mstore(add(headStart, 320), sub(tail_1, headStart))\n        let tail_2 := abi_encode_string(value10, tail_1)\n        mstore(add(headStart, 352), value11)\n        mstore(add(headStart, 384), sub(tail_2, headStart))\n        tail := abi_encode_struct_InsuranceInfo(value12, tail_2)\n    }\n    function abi_encode_tuple_t_array$_t_string_memory_ptr_$dyn_memory_ptr__to_t_array$_t_string_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let tail_2 := add(add(headStart, shl(5, length)), 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, add(sub(tail_2, headStart), not(63)))\n            tail_2 := abi_encode_string(mload(srcPtr), tail_2)\n            srcPtr := add(srcPtr, _1)\n            pos := add(pos, _1)\n        }\n        tail := tail_2\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory() -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, 0xc0)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function abi_decode_available_length_string(src, length, end) -> array\n    {\n        let _1 := 0xffffffffffffffff\n        if gt(length, _1) { panic_error_0x41() }\n        let _2 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 31), _2), 63), _2))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        array := memPtr\n        mstore(memPtr, length)\n        if gt(add(src, length), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), src, length)\n        mstore(add(add(memPtr, length), 0x20), 0)\n    }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        array := abi_decode_available_length_string(add(offset, 0x20), calldataload(offset), end)\n    }\n    function abi_decode_tuple_t_addresst_uint256t_enum$_SeverityLevel_$7186t_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let value := calldataload(add(headStart, 64))\n        if iszero(lt(value, 4)) { revert(0, 0) }\n        value2 := value\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value3 := abi_decode_string(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_uint256t_string_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_bytes32_t_bool__to_t_string_memory_ptr_t_bytes32_t_bool__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 96)\n        tail := abi_encode_string(value0, add(headStart, 96))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), iszero(iszero(value2)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_enum_SeverityLevel(value, pos)\n    {\n        if iszero(lt(value, 4)) { panic_error_0x21() }\n        mstore(pos, value)\n    }\n    function abi_encode_tuple_t_enum$_SeverityLevel_$7186_t_uint256_t_uint256_t_string_memory_ptr_t_uint256__to_t_uint8_t_uint256_t_uint256_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        abi_encode_enum_SeverityLevel(value0, headStart)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 160)\n        tail := abi_encode_string(value3, add(headStart, 160))\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_bool(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_bool(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bytes32t_string_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        value3 := abi_decode_available_length_string(add(_1, 32), calldataload(_1), dataEnd)\n    }\n    function abi_decode_enum_EvaluationType(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(lt(value, 8)) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_struct$_InsuranceInfo_$7199_memory_ptrt_bytes32t_string_memory_ptrt_bytes32t_enum$_EvaluationType_$7181t_uint256t_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if slt(sub(dataEnd, _2), 0xc0) { revert(0, 0) }\n        let value := allocate_memory()\n        let offset_1 := calldataload(_2)\n        if gt(offset_1, _1) { revert(0, 0) }\n        mstore(value, abi_decode_string(add(_2, offset_1), dataEnd))\n        let offset_2 := calldataload(add(_2, 32))\n        if gt(offset_2, _1) { revert(0, 0) }\n        mstore(add(value, 32), abi_decode_string(add(_2, offset_2), dataEnd))\n        let offset_3 := calldataload(add(_2, 64))\n        if gt(offset_3, _1) { revert(0, 0) }\n        mstore(add(value, 64), abi_decode_string(add(_2, offset_3), dataEnd))\n        let offset_4 := calldataload(add(_2, 96))\n        if gt(offset_4, _1) { revert(0, 0) }\n        mstore(add(value, 96), abi_decode_string(add(_2, offset_4), dataEnd))\n        mstore(add(value, 128), calldataload(add(_2, 128)))\n        mstore(add(value, 160), abi_decode_bool(add(_2, 160)))\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        let offset_5 := calldataload(add(headStart, 64))\n        if gt(offset_5, _1) { revert(0, 0) }\n        value2 := abi_decode_string(add(headStart, offset_5), dataEnd)\n        value3 := calldataload(add(headStart, 96))\n        value4 := abi_decode_enum_EvaluationType(add(headStart, 128))\n        value5 := calldataload(add(headStart, 160))\n        let offset_6 := calldataload(add(headStart, 0xc0))\n        if gt(offset_6, _1) { revert(0, 0) }\n        value6 := abi_decode_string(add(headStart, offset_6), dataEnd)\n    }\n    function abi_encode_tuple_t_address_t_enum$_EvaluationType_$7181_t_uint256_t_bool_t_string_memory_ptr__to_t_address_t_uint8_t_uint256_t_bool_t_string_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        abi_encode_enum_EvaluationType(value1, add(headStart, 32))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), iszero(iszero(value3)))\n        mstore(add(headStart, 128), 160)\n        tail := abi_encode_string(value4, add(headStart, 160))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value2 := abi_decode_string(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_string_memory_ptr_t_bool__to_t_address_t_uint256_t_string_memory_ptr_t_bool__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), 128)\n        tail := abi_encode_string(value2, add(headStart, 128))\n        mstore(add(headStart, 96), iszero(iszero(value3)))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_array$_t_struct$_AccessRecord_$7249_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_AccessRecord_$7249_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        let _2 := 64\n        pos := add(headStart, _2)\n        let tail_2 := add(add(headStart, shl(5, length)), _2)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, add(sub(tail_2, headStart), not(63)))\n            let _3 := mload(srcPtr)\n            let _4 := 0x80\n            mstore(tail_2, and(mload(_3), sub(shl(160, 1), 1)))\n            mstore(add(tail_2, _1), mload(add(_3, _1)))\n            let memberValue0 := mload(add(_3, _2))\n            mstore(add(tail_2, _2), _4)\n            let tail_3 := abi_encode_string(memberValue0, add(tail_2, _4))\n            let _5 := 0x60\n            mstore(add(tail_2, _5), iszero(iszero(mload(add(_3, _5)))))\n            tail_2 := tail_3\n            srcPtr := add(srcPtr, _1)\n            pos := add(pos, _1)\n        }\n        tail := tail_2\n    }\n    function abi_encode_tuple_t_array$_t_bytes32_$dyn_memory_ptr__to_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_bytes32_t_uint256_t_address_t_address_t_uint256_t_uint256_t_uint256_t_bool_t_uint256__to_t_bytes32_t_uint256_t_address_t_address_t_uint256_t_uint256_t_uint256_t_bool_t_uint256__fromStack_reversed(headStart, value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 288)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), and(value3, _1))\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), value6)\n        mstore(add(headStart, 224), iszero(iszero(value7)))\n        mstore(add(headStart, 256), value8)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, _1))\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_4bb721fc4b02cf8658bfd3d22381f6c262d3cb2daac601973c0b81f302ac41b2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Not authorized evaluator\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_11dcf9f8e62255365880033e6504fcf152d79d40c6f737eb6eba5912f9a92da3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Invalid evaluation\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_enum$_SeverityLevel_$7186_t_uint256__to_t_uint8_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        abi_encode_enum_SeverityLevel(value0, headStart)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Token does not exist\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Not authorized\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_bool__to_t_string_memory_ptr_t_bool__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        tail := abi_encode_string(value0, add(headStart, 64))\n        mstore(add(headStart, 32), iszero(iszero(value1)))\n    }\n    function abi_encode_tuple_t_stringliteral_9127feae84f50ba061700d6b70693255825cf5ddee8cf59a413005d2a7921be9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Bill already paid\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a371d34425552149dc4398b18c7181ef004ff4c04ea4c0e426ebd6fe25cdc6e4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Not bill owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4f9c535a088ec5ff4e3375c9b3be360868c365461262557c1dbba5c0c3f2c097__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Payment transaction required\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_40c3d0dcf30225b44b0b86c09c1674ef2c21a8a0007175bc28129d638c6ea066__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Invalid insurance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_stringliteral_355c5bda332c1a91556e38a6eb968e2ef9aec2e973fc0f1fbfee677399f5d735__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Insurance not verified\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_03b56162b0dc1322842d4bb57186452146d3ac0abfc81c1e6d8e70a5bbdeb7d1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Insurance payment hash required\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_enum$_EvaluationType_$7181_t_bool__to_t_uint8_t_bool__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        abi_encode_enum_EvaluationType(value0, headStart)\n        mstore(add(headStart, 32), iszero(iszero(value1)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_uint256__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 96)\n        let tail_1 := abi_encode_string(value0, add(headStart, 96))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_string(value1, tail_1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_e83b59861188c031e6b87a8f8944f0aa55c1a0f7b324e5d8f61b545253a4c3f7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Not a hospital\")\n        tail := add(headStart, 96)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_packed_t_uint256_t_address_t_uint256_t_uint256__to_t_uint256_t_address_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed(pos, value3, value2, value1, value0) -> end\n    {\n        mstore(pos, value0)\n        mstore(add(pos, 32), and(shl(96, value1), not(0xffffffffffffffffffffffff)))\n        mstore(add(pos, 52), value2)\n        mstore(add(pos, 84), value3)\n        end := add(pos, 116)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_string(value3, add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        let length_1 := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), end_1, length_1)\n        end := add(end_1, length_1)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n}","id":25,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x274 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9E061452 GT PUSH2 0x151 JUMPI DUP1 PUSH4 0xD547741F GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xEDA31369 GT PUSH2 0x87 JUMPI DUP1 PUSH4 0xEDA31369 EQ PUSH2 0x5FA JUMPI DUP1 PUSH4 0xEDAEF905 EQ PUSH2 0x60D JUMPI DUP1 PUSH4 0xF2CEC6EE EQ PUSH2 0x63B JUMPI DUP1 PUSH4 0xF41B30F3 EQ PUSH2 0x65B JUMPI DUP1 PUSH4 0xF6BA6678 EQ PUSH2 0x67B JUMPI DUP1 PUSH4 0xFC82C0EF EQ PUSH2 0x6A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD547741F EQ PUSH2 0x596 JUMPI DUP1 PUSH4 0xDAB6C121 EQ PUSH2 0x5A9 JUMPI DUP1 PUSH4 0xE3C40E1A EQ PUSH2 0x5BC JUMPI DUP1 PUSH4 0xE58DA742 EQ PUSH2 0x5DF JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x5E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x115 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x51D JUMPI DUP1 PUSH4 0xB8CD16B4 EQ PUSH2 0x530 JUMPI DUP1 PUSH4 0xC0E8224A EQ PUSH2 0x539 JUMPI DUP1 PUSH4 0xC23D4C85 EQ PUSH2 0x54C JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x570 JUMPI DUP1 PUSH4 0xCC8D4701 EQ PUSH2 0x583 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9E061452 EQ PUSH2 0x49A JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x4C8 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x4D0 JUMPI DUP1 PUSH4 0xA8C6FAA5 EQ PUSH2 0x4E3 JUMPI DUP1 PUSH4 0xB752A74B EQ PUSH2 0x4F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x33C63B17 GT PUSH2 0x1EA JUMPI DUP1 PUSH4 0x4D6CAC7A GT PUSH2 0x1AE JUMPI DUP1 PUSH4 0x4D6CAC7A EQ PUSH2 0x413 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x435 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x448 JUMPI DUP1 PUSH4 0x8577FEE7 EQ PUSH2 0x45B JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x47F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x492 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x33C63B17 EQ PUSH2 0x399 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x3C5 JUMPI DUP1 PUSH4 0x37A13153 EQ PUSH2 0x3D8 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x3ED JUMPI DUP1 PUSH4 0x4668BF10 EQ PUSH2 0x400 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0x23C JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x30B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x320 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x333 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x356 JUMPI DUP1 PUSH4 0x30B5ABD7 EQ PUSH2 0x369 JUMPI DUP1 PUSH4 0x30D0EA31 EQ PUSH2 0x372 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x279 JUMPI DUP1 PUSH4 0x4345C93 EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0x5F047DF EQ PUSH2 0x2B8 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x2CB JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x2E0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x28C PUSH2 0x287 CALLDATASIZE PUSH1 0x4 PUSH2 0x2DE8 JUMP JUMPDEST PUSH2 0x75D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AA PUSH1 0x11 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x298 JUMP JUMPDEST PUSH2 0x2AA PUSH2 0x2C6 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E21 JUMP JUMPDEST PUSH2 0x76E JUMP JUMPDEST PUSH2 0x2D3 PUSH2 0x79F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x298 SWAP2 SWAP1 PUSH2 0x2E9B JUMP JUMPDEST PUSH2 0x2F3 PUSH2 0x2EE CALLDATASIZE PUSH1 0x4 PUSH2 0x2EAE JUMP JUMPDEST PUSH2 0x831 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x298 JUMP JUMPDEST PUSH2 0x31E PUSH2 0x319 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E21 JUMP JUMPDEST PUSH2 0x85A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x31E PUSH2 0x32E CALLDATASIZE PUSH1 0x4 PUSH2 0x2EC7 JUMP JUMPDEST PUSH2 0x869 JUMP JUMPDEST PUSH2 0x2AA PUSH2 0x341 CALLDATASIZE PUSH1 0x4 PUSH2 0x2EAE JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x31E PUSH2 0x364 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F03 JUMP JUMPDEST PUSH2 0x8F9 JUMP JUMPDEST PUSH2 0x2AA PUSH1 0x12 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2AA PUSH32 0x4848AA3D2C0568BAB3CA9720F91818EE0957E95426FA0627CC4809E2E5ED8BE0 DUP2 JUMP JUMPDEST PUSH2 0x3AC PUSH2 0x3A7 CALLDATASIZE PUSH1 0x4 PUSH2 0x2EAE JUMP JUMPDEST PUSH2 0x90E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x298 SWAP14 SWAP13 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2FDE JUMP JUMPDEST PUSH2 0x31E PUSH2 0x3D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F03 JUMP JUMPDEST PUSH2 0xD04 JUMP JUMPDEST PUSH2 0x3E0 PUSH2 0xD3C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x298 SWAP2 SWAP1 PUSH2 0x308A JUMP JUMPDEST PUSH2 0x31E PUSH2 0x3FB CALLDATASIZE PUSH1 0x4 PUSH2 0x2EC7 JUMP JUMPDEST PUSH2 0xE71 JUMP JUMPDEST PUSH2 0x31E PUSH2 0x40E CALLDATASIZE PUSH1 0x4 PUSH2 0x31C1 JUMP JUMPDEST PUSH2 0xE8C JUMP JUMPDEST PUSH2 0x426 PUSH2 0x421 CALLDATASIZE PUSH1 0x4 PUSH2 0x322F JUMP JUMPDEST PUSH2 0x1031 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x298 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3276 JUMP JUMPDEST PUSH2 0x2F3 PUSH2 0x443 CALLDATASIZE PUSH1 0x4 PUSH2 0x2EAE JUMP JUMPDEST PUSH2 0x1340 JUMP JUMPDEST PUSH2 0x2AA PUSH2 0x456 CALLDATASIZE PUSH1 0x4 PUSH2 0x32A0 JUMP JUMPDEST PUSH2 0x134B JUMP JUMPDEST PUSH2 0x46E PUSH2 0x469 CALLDATASIZE PUSH1 0x4 PUSH2 0x32A0 JUMP JUMPDEST PUSH2 0x1393 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x298 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x32CB JUMP JUMPDEST PUSH2 0x28C PUSH2 0x48D CALLDATASIZE PUSH1 0x4 PUSH2 0x2F03 JUMP JUMPDEST PUSH2 0x1477 JUMP JUMPDEST PUSH2 0x2D3 PUSH2 0x14A2 JUMP JUMPDEST PUSH2 0x28C PUSH2 0x4A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F03 JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x2AA PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x31E PUSH2 0x4DE CALLDATASIZE PUSH1 0x4 PUSH2 0x3319 JUMP JUMPDEST PUSH2 0x14B1 JUMP JUMPDEST PUSH2 0x31E PUSH2 0x4F1 CALLDATASIZE PUSH1 0x4 PUSH2 0x322F JUMP JUMPDEST PUSH2 0x14BC JUMP JUMPDEST PUSH2 0x2AA PUSH32 0xFEC7CD74E5C65B641D49ECC2E89F646C7C0BCAE85DC50F9616BF9C798CEDDA8B DUP2 JUMP JUMPDEST PUSH2 0x31E PUSH2 0x52B CALLDATASIZE PUSH1 0x4 PUSH2 0x3343 JUMP JUMPDEST PUSH2 0x15C3 JUMP JUMPDEST PUSH2 0x2AA PUSH1 0x13 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2AA PUSH2 0x547 CALLDATASIZE PUSH1 0x4 PUSH2 0x33C2 JUMP JUMPDEST PUSH2 0x15DB JUMP JUMPDEST PUSH2 0x55F PUSH2 0x55A CALLDATASIZE PUSH1 0x4 PUSH2 0x2EAE JUMP JUMPDEST PUSH2 0x1906 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x298 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x352D JUMP JUMPDEST PUSH2 0x2D3 PUSH2 0x57E CALLDATASIZE PUSH1 0x4 PUSH2 0x2EAE JUMP JUMPDEST PUSH2 0x1A41 JUMP JUMPDEST PUSH2 0x2AA PUSH2 0x591 CALLDATASIZE PUSH1 0x4 PUSH2 0x356A JUMP JUMPDEST PUSH2 0x1A4C JUMP JUMPDEST PUSH2 0x31E PUSH2 0x5A4 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F03 JUMP JUMPDEST PUSH2 0x1D33 JUMP JUMPDEST PUSH2 0x31E PUSH2 0x5B7 CALLDATASIZE PUSH1 0x4 PUSH2 0x35BA JUMP JUMPDEST PUSH2 0x1D58 JUMP JUMPDEST PUSH2 0x5CF PUSH2 0x5CA CALLDATASIZE PUSH1 0x4 PUSH2 0x35EF JUMP JUMPDEST PUSH2 0x1D99 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x298 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3611 JUMP JUMPDEST PUSH2 0x3E0 PUSH2 0x1E78 JUMP JUMPDEST PUSH2 0x28C PUSH2 0x5F5 CALLDATASIZE PUSH1 0x4 PUSH2 0x364B JUMP JUMPDEST PUSH2 0x2078 JUMP JUMPDEST PUSH2 0x46E PUSH2 0x608 CALLDATASIZE PUSH1 0x4 PUSH2 0x32A0 JUMP JUMPDEST PUSH2 0x20A6 JUMP JUMPDEST PUSH2 0x28C PUSH2 0x61B CALLDATASIZE PUSH1 0x4 PUSH2 0x35BA JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD DUP1 MLOAD PUSH1 0x10 DUP3 MSTORE SWAP3 DUP3 ADD SWAP2 SWAP1 SWAP4 ADD KECCAK256 SWAP2 MSTORE SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x64E PUSH2 0x649 CALLDATASIZE PUSH1 0x4 PUSH2 0x2EAE JUMP JUMPDEST PUSH2 0x2163 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x298 SWAP2 SWAP1 PUSH2 0x3675 JUMP JUMPDEST PUSH2 0x66E PUSH2 0x669 CALLDATASIZE PUSH1 0x4 PUSH2 0x32A0 JUMP JUMPDEST PUSH2 0x2299 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x298 SWAP2 SWAP1 PUSH2 0x370E JUMP JUMPDEST PUSH2 0x2AA PUSH32 0xC8F5B4140CCA307CD927E59CBEEA8291BFFEEE228FC677F0FA059AEF7B4DD8D5 DUP2 JUMP JUMPDEST PUSH2 0x70B PUSH2 0x6B0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2EAE JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x5 DUP7 ADD SLOAD PUSH1 0x6 DUP8 ADD SLOAD PUSH1 0x7 DUP9 ADD SLOAD PUSH1 0x8 SWAP1 SWAP9 ADD SLOAD SWAP7 SWAP8 SWAP6 SWAP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND SWAP7 SWAP5 SWAP1 SWAP6 AND SWAP5 SWAP3 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 PUSH1 0xFF AND SWAP1 DUP10 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP10 DUP11 MSTORE PUSH1 0x20 DUP11 ADD SWAP9 SWAP1 SWAP9 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND SWAP8 DUP10 ADD SWAP8 SWAP1 SWAP8 MSTORE SWAP5 SWAP1 SWAP4 AND PUSH1 0x60 DUP8 ADD MSTORE PUSH1 0x80 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xC0 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x100 DUP3 ADD MSTORE PUSH2 0x120 ADD PUSH2 0x298 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x768 DUP3 PUSH2 0x2305 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x78A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x7AE SWAP1 PUSH2 0x3752 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7DA SWAP1 PUSH2 0x3752 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x827 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7FC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x827 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x80A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x83C DUP3 PUSH2 0x232A JUMP JUMPDEST POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x768 JUMP JUMPDEST PUSH2 0x865 DUP3 DUP3 CALLER PUSH2 0x2362 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x898 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x8A5 DUP4 DUP4 CALLER PUSH2 0x236F JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x8F3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x64283D7B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x88F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x904 DUP2 PUSH2 0x2463 JUMP JUMPDEST PUSH2 0x8F3 DUP4 DUP4 PUSH2 0x2470 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD DUP1 SLOAD SWAP5 SWAP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP6 SWAP4 SWAP1 SWAP5 AND SWAP4 SWAP2 SWAP3 PUSH2 0x951 SWAP1 PUSH2 0x3752 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x97D SWAP1 PUSH2 0x3752 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9CA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x99F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9CA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9AD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x5 DUP5 ADD SLOAD PUSH1 0x6 DUP6 ADD SLOAD PUSH1 0x7 DUP7 ADD SLOAD PUSH1 0x8 DUP8 ADD SLOAD PUSH1 0x9 DUP9 ADD SLOAD PUSH1 0xA DUP10 ADD DUP1 SLOAD SWAP9 SWAP10 SWAP6 SWAP9 PUSH1 0xFF SWAP6 DUP7 AND SWAP9 POP SWAP4 SWAP7 POP SWAP2 SWAP5 SWAP4 AND SWAP3 SWAP2 PUSH2 0xA09 SWAP1 PUSH2 0x3752 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA35 SWAP1 PUSH2 0x3752 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA82 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA57 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA82 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA65 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0xB ADD SLOAD SWAP1 DUP1 PUSH1 0xC ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0xAAD SWAP1 PUSH2 0x3752 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xAD9 SWAP1 PUSH2 0x3752 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB26 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xAFB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB26 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB09 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0xB3F SWAP1 PUSH2 0x3752 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB6B SWAP1 PUSH2 0x3752 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xBB8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB8D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xBB8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB9B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0xBD1 SWAP1 PUSH2 0x3752 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xBFD SWAP1 PUSH2 0x3752 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC4A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC1F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC4A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC2D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD DUP1 SLOAD PUSH2 0xC63 SWAP1 PUSH2 0x3752 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC8F SWAP1 PUSH2 0x3752 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xCDC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xCB1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xCDC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xCBF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x5 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x40 SWAP1 SWAP2 ADD MSTORE SWAP1 POP DUP14 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0xD2D JUMPI PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD37 DUP3 DUP3 PUSH2 0x2504 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x4 DUP1 DUP3 MSTORE PUSH1 0xA0 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xD58 JUMPI SWAP1 POP POP SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0x4E6F6E65 PUSH1 0xE0 SHL DUP2 MSTORE POP DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xD9F JUMPI PUSH2 0xD9F PUSH2 0x378C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x17 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4C6576656C315F526571756972696E67537570706F7274000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xDF3 JUMPI PUSH2 0xDF3 PUSH2 0x378C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3A5B PUSH1 0x22 SWAP2 CODECOPY DUP2 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0xE2A JUMPI PUSH2 0xE2A PUSH2 0x378C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3A7D PUSH1 0x26 SWAP2 CODECOPY DUP2 PUSH1 0x3 DUP2 MLOAD DUP2 LT PUSH2 0xE61 JUMPI PUSH2 0xE61 PUSH2 0x378C JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD37 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x15C3 JUMP JUMPDEST PUSH2 0xEB6 PUSH32 0x4848AA3D2C0568BAB3CA9720F91818EE0957E95426FA0627CC4809E2E5ED8BE0 CALLER PUSH2 0x1477 JUMP JUMPDEST PUSH2 0xF02 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420617574686F72697A6564206576616C7561746F720000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x88F JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF0D DUP5 PUSH2 0x2571 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xF58 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x24B73B30B634B21032BB30B63AB0BA34B7B7 PUSH1 0x71 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x88F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 SWAP2 SUB PUSH2 0xF98 JUMPI TIMESTAMP PUSH1 0x1 DUP3 ADD SSTORE PUSH1 0x13 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0xF92 DUP4 PUSH2 0x37B8 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMPDEST DUP1 SLOAD DUP4 SWAP1 DUP3 SWAP1 PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xFB6 JUMPI PUSH2 0xFB6 PUSH2 0x2F2F JUMP JUMPDEST MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x3 DUP2 ADD PUSH2 0xFCF DUP4 DUP3 PUSH2 0x3817 JUMP JUMPDEST POP PUSH1 0x4 DUP2 ADD DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0xFE2 DUP4 PUSH2 0x37B8 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x398865B44291CCF794AF9023BFEE116248EE709C8C101E69961C2BEA10255FC0 DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1022 SWAP3 SWAP2 SWAP1 PUSH2 0x38D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 PUSH2 0x103E PUSH2 0x258F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1049 DUP7 PUSH2 0x2571 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x1096 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x151BDAD95B88191BD95CC81B9BDD08195E1A5CDD PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x88F JUMP JUMPDEST PUSH2 0x10C0 PUSH32 0xC8F5B4140CCA307CD927E59CBEEA8291BFFEEE228FC677F0FA059AEF7B4DD8D5 CALLER PUSH2 0x1477 JUMP JUMPDEST DUP1 PUSH2 0x10F0 JUMPI POP PUSH2 0x10F0 PUSH32 0xFEC7CD74E5C65B641D49ECC2E89F646C7C0BCAE85DC50F9616BF9C798CEDDA8B CALLER PUSH2 0x1477 JUMP JUMPDEST PUSH2 0x112D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x139BDD08185D5D1A1BDC9A5E9959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x88F JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x9 DUP2 ADD SLOAD SWAP1 SWAP2 SWAP1 PUSH1 0xFF AND DUP1 PUSH2 0x116A JUMPI POP PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP1 POP DUP1 PUSH2 0x1191 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE SWAP1 SWAP4 POP SWAP2 POP PUSH1 0x1 SWAP1 POP PUSH2 0x132F JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE DUP2 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0xFF NOT SWAP1 SWAP2 AND DUP2 OR SWAP1 SWAP2 SSTORE DUP3 MLOAD PUSH1 0x80 DUP2 ADD DUP5 MSTORE SWAP2 DUP3 MSTORE TIMESTAMP DUP3 DUP6 ADD SWAP1 DUP2 MSTORE DUP3 DUP5 ADD DUP13 DUP2 MSTORE PUSH1 0x60 DUP5 ADD DUP4 SWAP1 MSTORE DUP14 DUP8 MSTORE PUSH1 0xC DUP7 MSTORE SWAP4 DUP7 KECCAK256 DUP1 SLOAD DUP1 DUP5 ADD DUP3 SSTORE SWAP1 DUP8 MSTORE SWAP5 SWAP1 SWAP6 KECCAK256 DUP3 MLOAD PUSH1 0x4 SWAP1 SWAP6 MUL ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR DUP5 SSTORE SWAP4 MLOAD SWAP4 DUP4 ADD SWAP4 SWAP1 SWAP4 SSTORE MLOAD DUP3 SWAP2 SWAP1 PUSH1 0x2 DUP3 ADD SWAP1 PUSH2 0x1233 SWAP1 DUP3 PUSH2 0x3817 JUMP JUMPDEST POP PUSH1 0x60 SWAP2 SWAP1 SWAP2 ADD MLOAD PUSH1 0x3 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x40 MLOAD CALLER SWAP1 DUP10 SWAP1 PUSH32 0x16D577C4C96CF9D9D1A1CA8421248118615F2DBC5789728C0B6BC7DFBC619424 SWAP1 PUSH2 0x1286 SWAP1 DUP12 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x38F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP3 PUSH1 0x4 ADD DUP4 PUSH1 0x5 ADD SLOAD PUSH1 0x0 DUP3 DUP1 SLOAD PUSH2 0x12A5 SWAP1 PUSH2 0x3752 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x12D1 SWAP1 PUSH2 0x3752 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x131E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x12F3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x131E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1301 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP3 POP SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP JUMPDEST PUSH2 0x1339 PUSH1 0x1 PUSH1 0x8 SSTORE JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x768 DUP3 PUSH2 0x232A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1377 JUMPI PUSH1 0x40 MLOAD PUSH4 0x22718AD9 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x88F JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x4 DUP5 ADD SLOAD PUSH1 0x3 DUP6 ADD DUP1 SLOAD DUP8 SWAP7 DUP8 SWAP7 PUSH1 0x60 SWAP7 DUP9 SWAP7 SWAP3 SWAP6 PUSH1 0xFF SWAP1 SWAP3 AND SWAP5 SWAP1 SWAP4 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 PUSH2 0x13E3 SWAP1 PUSH2 0x3752 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x140F SWAP1 PUSH2 0x3752 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x145C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1431 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x145C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x143F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP SWAP6 POP SWAP6 POP SWAP6 POP SWAP6 POP SWAP6 POP POP SWAP2 SWAP4 SWAP6 SWAP1 SWAP3 SWAP5 POP JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x7AE SWAP1 PUSH2 0x3752 JUMP JUMPDEST PUSH2 0x865 CALLER DUP4 DUP4 PUSH2 0x25B9 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x7 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1513 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x109A5B1B08185B1C9958591E481C185A59 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x88F JUMP JUMPDEST PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1560 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x2737BA103134B6361037BBB732B9 PUSH1 0x91 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x88F JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT PUSH2 0x15B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5061796D656E74207472616E73616374696F6E20726571756972656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x88F JUMP JUMPDEST PUSH1 0x7 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x15CE DUP5 DUP5 DUP5 PUSH2 0x869 JUMP JUMPDEST PUSH2 0x8F3 CALLER DUP6 DUP6 DUP6 DUP6 PUSH2 0x2658 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15E5 PUSH2 0x258F JUMP JUMPDEST DUP8 MLOAD MLOAD PUSH2 0x1628 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x496E76616C696420696E737572616E6365 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x88F JUMP JUMPDEST DUP8 MLOAD PUSH1 0x40 MLOAD PUSH1 0x10 SWAP2 PUSH2 0x1639 SWAP2 PUSH2 0x3916 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1691 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x125B9CDD5C985B98D9481B9BDD081D995C9A599A5959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x88F JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT PUSH2 0x16E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E737572616E6365207061796D656E74206861736820726571756972656400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x88F JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x16F2 DUP4 PUSH2 0x37B8 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH2 0x1702 CALLER DUP3 PUSH2 0x2783 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH1 0x3 DUP2 ADD DUP9 SWAP1 SSTORE PUSH1 0x4 DUP2 ADD PUSH2 0x173C DUP9 DUP3 PUSH2 0x3817 JUMP JUMPDEST POP PUSH1 0x5 DUP2 ADD DUP7 SWAP1 SSTORE PUSH1 0x6 DUP2 ADD DUP1 SLOAD DUP7 SWAP2 SWAP1 PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x1765 JUMPI PUSH2 0x1765 PUSH2 0x2F2F JUMP JUMPDEST MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0x7 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x8 DUP3 ADD SSTORE PUSH1 0x9 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0xA DUP2 ADD PUSH2 0x1794 DUP5 DUP3 PUSH2 0x3817 JUMP JUMPDEST POP PUSH1 0xB DUP2 ADD DUP5 SWAP1 SSTORE DUP9 MLOAD DUP10 SWAP1 PUSH1 0xC DUP4 ADD SWAP1 DUP2 SWAP1 PUSH2 0x17B1 SWAP1 DUP3 PUSH2 0x3817 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 DUP3 ADD SWAP1 PUSH2 0x17C6 SWAP1 DUP3 PUSH2 0x3817 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x2 DUP3 ADD SWAP1 PUSH2 0x17DB SWAP1 DUP3 PUSH2 0x3817 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x3 DUP3 ADD SWAP1 PUSH2 0x17F0 SWAP1 DUP3 PUSH2 0x3817 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x4 DUP3 ADD SSTORE PUSH1 0xA0 SWAP1 SWAP2 ADD MLOAD PUSH1 0x5 SWAP1 SWAP2 ADD DUP1 SLOAD SWAP2 ISZERO ISZERO PUSH1 0xFF NOT SWAP3 DUP4 AND OR SWAP1 SSTORE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 ADDRESS DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x1841 CALLER DUP4 PUSH2 0x279D JUMP JUMPDEST PUSH1 0x11 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x1851 DUP4 PUSH2 0x37B8 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x12 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x1866 DUP4 PUSH2 0x37B8 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH32 0x931F7AF5FD41DB155C97C737C3100C1540D9FD948A408A7BD0DB82E7A3F90F11 DUP8 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x18A8 SWAP3 SWAP2 SWAP1 PUSH2 0x3932 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP2 PUSH32 0xC2687B4CF2E8FB805E48C095A786345C2953850FB19620E5618CEA5412DC227F DUP11 PUSH1 0x0 ADD MLOAD DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x18E8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x394F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0x18FB PUSH1 0x1 PUSH1 0x8 SSTORE JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH1 0x60 DUP2 PUSH2 0x1917 DUP8 PUSH2 0x2571 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x1964 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x151BDAD95B88191BD95CC81B9BDD08195E1A5CDD PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x88F JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x6 DUP3 ADD SLOAD PUSH1 0x7 DUP4 ADD SLOAD PUSH1 0x9 DUP5 ADD SLOAD PUSH1 0xC DUP6 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND SWAP5 PUSH1 0xFF SWAP5 DUP6 AND SWAP5 SWAP1 SWAP3 AND SWAP2 DUP2 SWAP1 PUSH2 0x19AD SWAP1 PUSH2 0x3752 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x19D9 SWAP1 PUSH2 0x3752 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1A26 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x19FB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1A26 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1A09 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP6 POP SWAP6 POP SWAP6 POP SWAP6 POP SWAP6 POP POP SWAP2 SWAP4 SWAP6 SWAP1 SWAP3 SWAP5 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x768 DUP3 PUSH2 0x27EA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A56 PUSH2 0x258F JUMP JUMPDEST PUSH2 0x1A80 PUSH32 0xC8F5B4140CCA307CD927E59CBEEA8291BFFEEE228FC677F0FA059AEF7B4DD8D5 CALLER PUSH2 0x1477 JUMP JUMPDEST PUSH2 0x1ABD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x139BDD0818481A1BDCDC1A5D185B PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x88F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AC8 DUP6 PUSH2 0x2571 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x1B13 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x24B73B30B634B21032BB30B63AB0BA34B7B7 PUSH1 0x71 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x88F JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x10 DUP2 ADD SLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x64 SWAP1 PUSH2 0x1B36 SWAP1 DUP8 PUSH2 0x3985 JUMP JUMPDEST PUSH2 0x1B40 SWAP2 SWAP1 PUSH2 0x399C JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 PUSH2 0x1B4F DUP3 DUP9 PUSH2 0x39BE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP12 SWAP1 MSTORE PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT CALLER PUSH1 0x60 SHL AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x54 DUP2 ADD DUP10 SWAP1 MSTORE TIMESTAMP PUSH1 0x74 DUP3 ADD MSTORE SWAP1 SWAP2 POP PUSH1 0x94 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP5 POP PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP6 DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP DUP9 DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP CALLER DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP5 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP8 DUP2 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP DUP3 DUP2 PUSH1 0x5 ADD DUP2 SWAP1 SSTORE POP DUP2 DUP2 PUSH1 0x6 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP DUP2 PUSH1 0x8 ADD DUP2 SWAP1 SSTORE POP PUSH1 0xF PUSH1 0x0 DUP7 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP7 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP5 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP10 DUP8 PUSH32 0x32A639B5E81D2A5D0D4621D6D8F19E4DEC31F1A08746258AACD388C40CAEB66C DUP12 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1D15 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP PUSH2 0x1D2C PUSH1 0x1 PUSH1 0x8 SSTORE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x1D4E DUP2 PUSH2 0x2463 JUMP JUMPDEST PUSH2 0x8F3 DUP4 DUP4 PUSH2 0x2504 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D63 DUP2 PUSH2 0x2463 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x10 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1D75 SWAP2 SWAP1 PUSH2 0x3916 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 DUP1 SLOAD SWAP2 ISZERO ISZERO PUSH1 0xFF NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1DB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP6 POP SWAP1 SWAP4 POP SWAP1 PUSH2 0x1DEC SWAP1 PUSH2 0x3752 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1E18 SWAP1 PUSH2 0x3752 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1E65 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1E3A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1E65 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1E48 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 POP POP PUSH1 0xFF AND DUP5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x8 DUP1 DUP3 MSTORE PUSH2 0x120 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1E95 JUMPI SWAP1 POP POP SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0x41444F53 PUSH1 0xE0 SHL DUP2 MSTORE POP DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1EDC JUMPI PUSH2 0x1EDC PUSH2 0x378C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0x20A224A9 PUSH1 0xE1 SHL DUP2 MSTORE POP DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1F17 JUMPI PUSH2 0x1F17 PUSH2 0x378C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0x43415253 PUSH1 0xE0 SHL DUP2 MSTORE POP DUP2 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x1F52 JUMPI PUSH2 0x1F52 PUSH2 0x378C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x1350D21055 PUSH1 0xDA SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 DUP2 MLOAD DUP2 LT PUSH2 0x1F8E JUMPI PUSH2 0x1F8E PUSH2 0x378C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0x47415253 PUSH1 0xE0 SHL DUP2 MSTORE POP DUP2 PUSH1 0x4 DUP2 MLOAD DUP2 LT PUSH2 0x1FC9 JUMPI PUSH2 0x1FC9 PUSH2 0x378C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x535253 PUSH1 0xE8 SHL DUP2 MSTORE POP DUP2 PUSH1 0x5 DUP2 MLOAD DUP2 LT PUSH2 0x2003 JUMPI PUSH2 0x2003 PUSH2 0x378C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x414243 PUSH1 0xE8 SHL DUP2 MSTORE POP DUP2 PUSH1 0x6 DUP2 MLOAD DUP2 LT PUSH2 0x203D JUMPI PUSH2 0x203D PUSH2 0x378C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0x41535253 PUSH1 0xE0 SHL DUP2 MSTORE POP DUP2 PUSH1 0x7 DUP2 MLOAD DUP2 LT PUSH2 0xE61 JUMPI PUSH2 0xE61 PUSH2 0x378C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD DUP1 SLOAD PUSH1 0xFF SWAP1 SWAP5 AND SWAP5 SWAP3 SWAP4 SWAP2 SWAP3 SWAP2 PUSH2 0x20DA SWAP1 PUSH2 0x3752 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2106 SWAP1 PUSH2 0x3752 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2153 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2128 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2153 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2136 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 POP DUP6 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xC PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x228E JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x4 DUP7 MUL SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x1 DUP2 ADD SLOAD SWAP4 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 DUP4 ADD DUP1 SLOAD SWAP3 SWAP4 SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH2 0x21EB SWAP1 PUSH2 0x3752 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2217 SWAP1 PUSH2 0x3752 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2264 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2239 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2264 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2247 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x3 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x20 SWAP2 DUP3 ADD MSTORE SWAP1 DUP3 MSTORE PUSH1 0x1 SWAP3 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x2198 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP4 MLOAD DUP2 DUP5 MUL DUP2 ADD DUP5 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE PUSH1 0x60 SWAP4 SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x22F9 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x22E5 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x768 JUMPI POP PUSH2 0x768 DUP3 PUSH2 0x28FB JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2336 DUP4 PUSH2 0x2571 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x768 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x88F JUMP JUMPDEST PUSH2 0xD37 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x2920 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x237B DUP5 PUSH2 0x2571 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x2397 JUMPI PUSH2 0x2397 DUP2 DUP5 DUP7 PUSH2 0x2A26 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x23D5 JUMPI PUSH2 0x23B4 PUSH1 0x0 DUP6 PUSH1 0x0 DUP1 PUSH2 0x2920 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO PUSH2 0x2404 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP8 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x246D DUP2 CALLER PUSH2 0x2A8A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x247C DUP4 DUP4 PUSH2 0x1477 JUMP JUMPDEST PUSH2 0x24FC JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x24B4 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x768 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x768 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2510 DUP4 DUP4 PUSH2 0x1477 JUMP JUMPDEST ISZERO PUSH2 0x24FC JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP7 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x768 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x8 SLOAD SUB PUSH2 0x25B2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x8 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x25EB JUMPI PUSH1 0x40 MLOAD PUSH4 0xB611743 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x88F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0x277C JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x269A SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x39D1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x26D5 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x26D2 SWAP2 DUP2 ADD SWAP1 PUSH2 0x3A0E JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x273E JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x2703 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2708 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x2736 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x88F JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ PUSH2 0x277A JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x88F JUMP JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x865 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x2AC3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 SWAP2 SUB PUSH2 0x27C8 JUMPI TIMESTAMP PUSH1 0x1 DUP3 ADD SSTORE JUMPDEST TIMESTAMP PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x4 DUP2 ADD DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x27E0 DUP4 PUSH2 0x37B8 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x27F5 DUP3 PUSH2 0x232A JUMP JUMPDEST POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH2 0x280F SWAP1 PUSH2 0x3752 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x283B SWAP1 PUSH2 0x3752 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2888 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x285D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2888 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x286B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x28A6 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x28B8 JUMPI POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x28EA JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x28D2 SWAP3 SWAP2 SWAP1 PUSH2 0x3A2B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x28F3 DUP5 PUSH2 0x2ADB JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x24832483 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x768 JUMPI POP PUSH2 0x768 DUP3 PUSH2 0x2B4F JUMP JUMPDEST DUP1 DUP1 PUSH2 0x2934 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x29F6 JUMPI PUSH1 0x0 PUSH2 0x2944 DUP5 PUSH2 0x232A JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x2970 JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x2983 JUMPI POP PUSH2 0x2981 DUP2 DUP5 PUSH2 0x2078 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x29AC JUMPI PUSH1 0x40 MLOAD PUSH4 0xA9FBF51F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x88F JUMP JUMPDEST DUP2 ISZERO PUSH2 0x29F4 JUMPI DUP4 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x2A31 DUP4 DUP4 DUP4 PUSH2 0x2B9F JUMP JUMPDEST PUSH2 0xD37 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x2A5F JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x88F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x177E802F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x88F JUMP JUMPDEST PUSH2 0x2A94 DUP3 DUP3 PUSH2 0x1477 JUMP JUMPDEST PUSH2 0x865 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x88F JUMP JUMPDEST PUSH2 0x2ACD DUP4 DUP4 PUSH2 0x2C02 JUMP JUMPDEST PUSH2 0xD37 CALLER PUSH1 0x0 DUP6 DUP6 DUP6 PUSH2 0x2658 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2AE6 DUP3 PUSH2 0x232A JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x2AFE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x2B1E JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1D2C JUMP JUMPDEST DUP1 PUSH2 0x2B28 DUP5 PUSH2 0x2C67 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2B39 SWAP3 SWAP2 SWAP1 PUSH2 0x3A2B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x2B80 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x768 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x768 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x28F3 JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x2BD9 JUMPI POP PUSH2 0x2BD9 DUP5 DUP5 PUSH2 0x2078 JUMP JUMPDEST DUP1 PUSH2 0x28F3 JUMPI POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2C2C JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x88F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C3A DUP4 DUP4 PUSH1 0x0 PUSH2 0x236F JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0xD37 JUMPI PUSH1 0x40 MLOAD PUSH4 0x39E35637 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x88F JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x2C74 DUP4 PUSH2 0x2CFA JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2C94 JUMPI PUSH2 0x2C94 PUSH2 0x30EC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2CBE JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH1 0x0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0x2CC8 JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0x2D39 JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x2D65 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x2D83 JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x2D9B JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x2DAF JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x2DC1 JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x768 JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x246D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2DFA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1D2C DUP2 PUSH2 0x2DD2 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2E1C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2E34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2E3D DUP4 PUSH2 0x2E05 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2E66 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2E4E JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x2E87 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x2E4B JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1D2C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2E6F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2EC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2EDC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2EE5 DUP5 PUSH2 0x2E05 JUMP JUMPDEST SWAP3 POP PUSH2 0x2EF3 PUSH1 0x20 DUP6 ADD PUSH2 0x2E05 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2F16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x2F26 PUSH1 0x20 DUP5 ADD PUSH2 0x2E05 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x8 DUP2 LT PUSH2 0x2F55 JUMPI PUSH2 0x2F55 PUSH2 0x2F2F JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH1 0xC0 DUP5 MSTORE PUSH2 0x2F6E PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x2E6F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x2F87 DUP3 DUP3 PUSH2 0x2E6F JUMP JUMPDEST SWAP2 POP POP PUSH1 0x40 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH2 0x2FA1 DUP3 DUP3 PUSH2 0x2E6F JUMP JUMPDEST SWAP2 POP POP PUSH1 0x60 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x2FBB DUP3 DUP3 PUSH2 0x2E6F JUMP JUMPDEST SWAP2 POP POP PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP4 ADD MLOAD ISZERO ISZERO PUSH1 0xA0 DUP6 ADD MSTORE DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP14 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP13 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1A0 DUP13 PUSH1 0x60 DUP5 ADD MSTORE DUP1 PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x3015 DUP2 DUP5 ADD DUP14 PUSH2 0x2E6F JUMP JUMPDEST SWAP1 POP DUP11 PUSH1 0xA0 DUP5 ADD MSTORE PUSH2 0x302A PUSH1 0xC0 DUP5 ADD DUP12 PUSH2 0x2F45 JUMP JUMPDEST DUP9 PUSH1 0xE0 DUP5 ADD MSTORE DUP8 PUSH2 0x100 DUP5 ADD MSTORE PUSH2 0x3046 PUSH2 0x120 DUP5 ADD DUP9 ISZERO ISZERO SWAP1 MSTORE JUMP JUMPDEST DUP3 DUP2 SUB PUSH2 0x140 DUP5 ADD MSTORE PUSH2 0x3059 DUP2 DUP8 PUSH2 0x2E6F JUMP JUMPDEST SWAP1 POP DUP5 PUSH2 0x160 DUP5 ADD MSTORE DUP3 DUP2 SUB PUSH2 0x180 DUP5 ADD MSTORE PUSH2 0x3075 DUP2 DUP6 PUSH2 0x2F59 JUMP JUMPDEST SWAP2 POP POP SWAP15 SWAP14 POP POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 DUP7 ADD SWAP2 POP PUSH1 0x40 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD SWAP3 POP DUP4 DUP8 ADD PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x30DF JUMPI PUSH1 0x3F NOT DUP9 DUP7 SUB ADD DUP5 MSTORE PUSH2 0x30CD DUP6 DUP4 MLOAD PUSH2 0x2E6F JUMP JUMPDEST SWAP5 POP SWAP3 DUP6 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x30B1 JUMP JUMPDEST POP SWAP3 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xC0 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x3125 JUMPI PUSH2 0x3125 PUSH2 0x30EC JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0x3146 JUMPI PUSH2 0x3146 PUSH2 0x30EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x316E JUMPI PUSH2 0x316E PUSH2 0x30EC JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0x3187 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x31B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D2C DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x312B JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x31D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x31E0 DUP6 PUSH2 0x2E05 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH1 0x4 DUP2 LT PUSH2 0x31FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3217 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3223 DUP8 DUP3 DUP9 ADD PUSH2 0x31A1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3242 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3260 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x326C DUP6 DUP3 DUP7 ADD PUSH2 0x31A1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH2 0x3289 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x2E6F JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE POP SWAP1 ISZERO ISZERO PUSH1 0x40 SWAP1 SWAP2 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x32B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D2C DUP3 PUSH2 0x2E05 JUMP JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0x2F55 JUMPI PUSH2 0x2F55 PUSH2 0x2F2F JUMP JUMPDEST PUSH2 0x32D5 DUP2 DUP8 PUSH2 0x32BB JUMP JUMPDEST DUP5 PUSH1 0x20 DUP3 ADD MSTORE DUP4 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x32F7 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x2E6F JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x80 DUP4 ADD MSTORE SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2E1C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x332C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3335 DUP4 PUSH2 0x2E05 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F26 PUSH1 0x20 DUP5 ADD PUSH2 0x3309 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3359 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3362 DUP6 PUSH2 0x2E05 JUMP JUMPDEST SWAP4 POP PUSH2 0x3370 PUSH1 0x20 DUP7 ADD PUSH2 0x2E05 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3393 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x33A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3223 DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x312B JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x8 DUP2 LT PUSH2 0x2E1C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x33DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x33F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP10 ADD SWAP1 PUSH1 0xC0 DUP3 DUP13 SUB SLT ISZERO PUSH2 0x3409 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3411 PUSH2 0x3102 JUMP JUMPDEST DUP3 CALLDATALOAD DUP3 DUP2 GT ISZERO PUSH2 0x3420 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x342C DUP14 DUP3 DUP7 ADD PUSH2 0x31A1 JUMP JUMPDEST DUP3 MSTORE POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP3 DUP2 GT ISZERO PUSH2 0x3441 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x344D DUP14 DUP3 DUP7 ADD PUSH2 0x31A1 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 DUP4 ADD CALLDATALOAD DUP3 DUP2 GT ISZERO PUSH2 0x3465 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3471 DUP14 DUP3 DUP7 ADD PUSH2 0x31A1 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 DUP4 ADD CALLDATALOAD DUP3 DUP2 GT ISZERO PUSH2 0x3489 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3495 DUP14 DUP3 DUP7 ADD PUSH2 0x31A1 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 DUP4 ADD CALLDATALOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH2 0x34B1 PUSH1 0xA0 DUP5 ADD PUSH2 0x3309 JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD MSTORE SWAP9 POP PUSH1 0x20 DUP11 ADD CALLDATALOAD SWAP8 POP PUSH1 0x40 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x34D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x34DF DUP12 DUP4 DUP13 ADD PUSH2 0x31A1 JUMP JUMPDEST SWAP7 POP PUSH1 0x60 DUP11 ADD CALLDATALOAD SWAP6 POP PUSH2 0x34F4 PUSH1 0x80 DUP12 ADD PUSH2 0x33B3 JUMP JUMPDEST SWAP5 POP PUSH1 0xA0 DUP11 ADD CALLDATALOAD SWAP4 POP PUSH1 0xC0 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x3511 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x351E DUP11 DUP3 DUP12 ADD PUSH2 0x31A1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 MSTORE PUSH2 0x3546 PUSH1 0x20 DUP3 ADD DUP7 PUSH2 0x2F45 JUMP JUMPDEST DUP4 PUSH1 0x40 DUP3 ADD MSTORE DUP3 ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x18FB PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x2E6F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x357F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x35A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x35B0 DUP7 DUP3 DUP8 ADD PUSH2 0x31A1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x35CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x35E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x28F3 DUP5 DUP3 DUP6 ADD PUSH2 0x31A1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3602 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x3638 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x2E6F JUMP JUMPDEST SWAP1 POP DUP3 ISZERO ISZERO PUSH1 0x60 DUP4 ADD MSTORE SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x365E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3667 DUP4 PUSH2 0x2E05 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F26 PUSH1 0x20 DUP5 ADD PUSH2 0x2E05 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 SWAP3 POP DUP3 DUP7 ADD SWAP2 POP DUP3 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD DUP5 DUP9 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3700 JUMPI DUP9 DUP4 SUB PUSH1 0x3F NOT ADD DUP6 MSTORE DUP2 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE DUP8 DUP2 ADD MLOAD DUP9 DUP6 ADD MSTORE DUP7 DUP2 ADD MLOAD PUSH1 0x80 DUP9 DUP7 ADD DUP2 SWAP1 MSTORE SWAP1 PUSH2 0x36DD DUP3 DUP8 ADD DUP3 PUSH2 0x2E6F JUMP JUMPDEST PUSH1 0x60 SWAP4 DUP5 ADD MLOAD ISZERO ISZERO SWAP7 SWAP1 SWAP4 ADD SWAP6 SWAP1 SWAP6 MSTORE POP SWAP5 DUP8 ADD SWAP5 SWAP3 POP SWAP1 DUP7 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x369C JUMP JUMPDEST POP SWAP1 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3746 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x372A JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x3766 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x3786 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x37CA JUMPI PUSH2 0x37CA PUSH2 0x37A2 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xD37 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x37F8 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x277A JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x3804 JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3831 JUMPI PUSH2 0x3831 PUSH2 0x30EC JUMP JUMPDEST PUSH2 0x3845 DUP2 PUSH2 0x383F DUP5 SLOAD PUSH2 0x3752 JUMP JUMPDEST DUP5 PUSH2 0x37D1 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x387A JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x3862 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x277A JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x38A9 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x388A JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x38C7 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x40 DUP2 ADD PUSH2 0x38E5 DUP3 DUP6 PUSH2 0x32BB JUMP JUMPDEST DUP3 PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x3905 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2E6F JUMP JUMPDEST SWAP1 POP DUP3 ISZERO ISZERO PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x3928 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x2E4B JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 ADD PUSH2 0x3940 DUP3 DUP6 PUSH2 0x2F45 JUMP JUMPDEST DUP3 ISZERO ISZERO PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH2 0x3962 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x2E6F JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x3974 DUP2 DUP7 PUSH2 0x2E6F JUMP JUMPDEST SWAP2 POP POP DUP3 PUSH1 0x40 DUP4 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x768 JUMPI PUSH2 0x768 PUSH2 0x37A2 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x39B9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x768 JUMPI PUSH2 0x768 PUSH2 0x37A2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x3A04 SWAP1 DUP4 ADD DUP5 PUSH2 0x2E6F JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3A20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1D2C DUP2 PUSH2 0x2DD2 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x3A3D DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x2E4B JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x3A51 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x2E4B JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP INVALID 0x4C PUSH6 0x76656C325F52 PUSH6 0x71756972696E PUSH8 0x5375627374616E74 PUSH10 0x616C537570706F72744C PUSH6 0x76656C335F52 PUSH6 0x71756972696E PUSH8 0x5665727953756273 PUSH21 0x616E7469616C537570706F7274A264697066735822 SLT KECCAK256 PUSH15 0xBC2539A16F9D8D03D5EF838A55A02A 0xB1 EXTCODECOPY JUMPDEST MSTORE8 0xDC LOG0 BASEFEE 0xD6 ADDMOD MSTORE 0x49 0x22 0x2E PUSH14 0x9FA264736F6C6343000814003300 ","sourceMap":"500:14961:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15275:184;;;;;;:::i;:::-;;:::i;:::-;;;661:14:25;;654:22;636:41;;624:2;609:18;15275:184:22;;;;;;;;4004:31;;;;;;;;;834:25:25;;;822:2;807:18;4004:31:22;688:177:25;3867:49:22;;;;;;:::i;:::-;;:::i;2263:89:7:-;;;:::i;:::-;;;;;;;:::i;3299:154::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;2703:32:25;;;2685:51;;2673:2;2658:18;3299:154:7;2539:203:25;3152:113:7;;;;;;:::i;:::-;;:::i;:::-;;3852:578;;;;;;:::i;:::-;;:::i;3786:120:0:-;;;;;;:::i;:::-;3851:7;3877:12;;;:6;:12;;;;;:22;;;;3786:120;14163:137:22;;;;;;:::i;:::-;;:::i;4041:37::-;;;;;;747:68;;788:27;747:68;;3559:55;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;5304:245:0:-;;;;;;:::i;:::-;;:::i;14740:344:22:-;;;:::i;:::-;;;;;;;:::i;4464:132:7:-;;;;;;:::i;:::-;;:::i;10487:891:22:-;;;;;;:::i;:::-;;:::i;7544:1263::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;2103:118:7:-;;;;;;:::i;:::-;;:::i;1861:208::-;;;;;;:::i;:::-;;:::i;11441:548:22:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;2830:136:0:-;;;;;;:::i;:::-;;:::i;2394:93:7:-;;;:::i;3746:65:22:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;2196:49:0;;2241:4;2196:49;;3487:144:7;;;;;;:::i;:::-;;:::i;13089:354:22:-;;;;;;:::i;:::-;;:::i;601:68::-;;642:27;601:68;;4630:233:7;;;;;;:::i;:::-;;:::i;4084:37:22:-;;;;;;5463:1992;;;;;;:::i;:::-;;:::i;12046:583::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;15116:153::-;;;;;;:::i;:::-;;:::i;8893:1516::-;;;;;;:::i;:::-;;:::i;4618:138:0:-;;;;;;:::i;:::-;;:::i;14005:152:22:-;;;;;;:::i;:::-;;:::i;3685:55::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;14344:363::-;;;:::i;3665:153:7:-;;;;;;:::i;:::-;;:::i;3620:59:22:-;;;;;;:::i;:::-;;:::i;3922:57::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12700:135;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;12897:128::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;675:66::-;;715:26;675:66;;3817:44;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3817:44:22;;;;;;;;;;;;;;;;;;;;;;;;18991:25:25;;;19047:2;19032:18;;19025:34;;;;-1:-1:-1;;;;;19133:15:25;;;19113:18;;;19106:43;;;;19185:15;;;;19180:2;19165:18;;19158:43;19232:3;19217:19;;19210:35;;;;19086:3;19261:19;;19254:35;19320:3;19305:19;;19298:35;19377:14;19370:22;19364:3;19349:19;;19342:51;19424:3;19409:19;;19402:35;18978:3;18963:19;3817:44:22;18626:817:25;15275:184:22;15393:4;15416:36;15440:11;15416:23;:36::i;:::-;15409:43;15275:184;-1:-1:-1;;15275:184:22:o;3867:49::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2263:89:7:-;2308:13;2340:5;2333:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2263:89;:::o;3299:154::-;3366:7;3385:22;3399:7;3385:13;:22::i;:::-;-1:-1:-1;5679:7:7;5705:24;;;:15;:24;;;;;;-1:-1:-1;;;;;5705:24:7;3425:21;5609:127;3152:113;3223:35;3232:2;3236:7;735:10:13;3223:8:7;:35::i;:::-;3152:113;;:::o;3852:578::-;-1:-1:-1;;;;;3946:16:7;;3942:87;;3985:33;;-1:-1:-1;;;3985:33:7;;4015:1;3985:33;;;2685:51:25;2658:18;;3985:33:7;;;;;;;;3942:87;4247:21;4271:34;4279:2;4283:7;735:10:13;4271:7:7;:34::i;:::-;4247:58;;4336:4;-1:-1:-1;;;;;4319:21:7;:13;-1:-1:-1;;;;;4319:21:7;;4315:109;;4363:50;;-1:-1:-1;;;4363:50:7;;-1:-1:-1;;;;;20091:15:25;;;4363:50:7;;;20073:34:25;20123:18;;;20116:34;;;20186:15;;20166:18;;;20159:43;20008:18;;4363:50:7;19833:375:25;4315:109:7;3932:498;3852:578;;;:::o;14163:137:22:-;2241:4:0;2473:16;2241:4;2473:10;:16::i;:::-;14268:25:22::1;14279:4;14285:7;14268:10;:25::i;3559:55::-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3559:55:22;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3559:55:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3559:55:22;;-1:-1:-1;3559:55:22;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3559:55:22;;;-1:-1:-1;;3559:55:22;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3559:55:22;:::o;5304:245:0:-;-1:-1:-1;;;;;5397:34:0;;735:10:13;5397:34:0;5393:102;;5454:30;;-1:-1:-1;;;5454:30:0;;;;;;;;;;;5393:102;5505:37;5517:4;5523:18;5505:11;:37::i;:::-;;5304:245;;:::o;14740:344:22:-;14844:15;;;14857:1;14844:15;;;;;;;;;14792;;14819:22;;14844:15;;;;;;;;;;;;;;;;;;;;;14819:40;;14869:18;;;;;;;;;;;;;-1:-1:-1;;;14869:18:22;;;:6;14876:1;14869:9;;;;;;;;:::i;:::-;;;;;;:18;;;;14897:37;;;;;;;;;;;;;;;;;:6;14904:1;14897:9;;;;;;;;:::i;:::-;;;;;;:37;;;;14944:48;;;;;;;;;;;;;;;;;:6;14951:1;14944:9;;;;;;;;:::i;:::-;;;;;;:48;;;;15002:52;;;;;;;;;;;;;;;;;:6;15009:1;15002:9;;;;;;;;:::i;:::-;;;;;;;;;;:52;15071:6;14740:344;-1:-1:-1;14740:344:22:o;4464:132:7:-;4550:39;4567:4;4573:2;4577:7;4550:39;;;;;;;;;;;;:16;:39::i;10487:891:22:-;10677:35;788:27;10701:10;10677:7;:35::i;:::-;10669:72;;;;-1:-1:-1;;;10669:72:22;;20547:2:25;10669:72:22;;;20529:21:25;20586:2;20566:18;;;20559:30;20625:26;20605:18;;;20598:54;20669:18;;10669:72:22;20345:348:25;10669:72:22;10798:1;10759:27;10768:17;10759:8;:27::i;:::-;-1:-1:-1;;;;;10759:41:22;;10751:72;;;;-1:-1:-1;;;10751:72:22;;20900:2:25;10751:72:22;;;20882:21:25;20939:2;20919:18;;;20912:30;-1:-1:-1;;;20958:18:25;;;20951:48;21016:18;;10751:72:22;20698:342:25;10751:72:22;-1:-1:-1;;;;;10870:25:22;;10834:33;10870:25;;;:16;:25;;;;;10937:28;;;;10870:25;;10937:33;10933:148;;11017:15;10986:28;;;:46;11046:22;:24;;;:22;:24;;;:::i;:::-;;;;;;10933:148;11123:33;;11148:8;;11123:9;;-1:-1:-1;;11123:33:22;;11148:8;11123:33;;;;;;;;:::i;:::-;;;;;-1:-1:-1;11193:15:22;11166:24;;;:42;11218:26;;;:45;11247:16;11218:26;:45;:::i;:::-;-1:-1:-1;11273:26:22;;;:28;;;:26;:28;;;:::i;:::-;;;;;;11334:7;-1:-1:-1;;;;;11317:54:22;;11343:8;11353:17;11317:54;;;;;;;:::i;:::-;;;;;;;;10659:719;10487:891;;;;:::o;7544:1263::-;7676:26;7712:20;7742;2500:21:15;:19;:21::i;:::-;7816:1:22::1;7787:17;7796:7:::0;7787:8:::1;:17::i;:::-;-1:-1:-1::0;;;;;7787:31:22::1;::::0;7779:64:::1;;;::::0;-1:-1:-1;;;7779:64:22;;24015:2:25;7779:64:22::1;::::0;::::1;23997:21:25::0;24054:2;24034:18;;;24027:30;-1:-1:-1;;;24073:18:25;;;24066:50;24133:18;;7779:64:22::1;23813:344:25::0;7779:64:22::1;7874:34;715:26;7897:10;7874:7;:34::i;:::-;:85;;;;7924:35;642:27;7948:10;7924:7;:35::i;:::-;7853:146;;;::::0;-1:-1:-1;;;7853:146:22;;24364:2:25;7853:146:22::1;::::0;::::1;24346:21:25::0;24403:2;24383:18;;;24376:30;-1:-1:-1;;;24422:18:25;;;24415:44;24476:18;;7853:146:22::1;24162:338:25::0;7853:146:22::1;8010:29;8042:20:::0;;;:11:::1;:20;::::0;;;;8159:22:::1;::::0;::::1;::::0;8042:20;;8010:29;8159:22:::1;;::::0;:60:::1;;-1:-1:-1::0;8185:22:22::1;::::0;;;:13:::1;:22;::::0;;;;;;;8208:10:::1;8185:34:::0;;;;;;;;::::1;;8159:60;8140:79;;8235:11;8230:99;;-1:-1:-1::0;;8298:20:22::1;::::0;;::::1;::::0;::::1;::::0;;;8310:1:::1;8298:20:::0;;;;;-1:-1:-1;8310:1:22;-1:-1:-1;8280:4:22::1;::::0;-1:-1:-1;8298:20:22::1;;8230:99;8363:22;::::0;;;:13:::1;:22;::::0;;;;;;;8386:10:::1;8363:34:::0;;;;;;;;;:41;;8400:4:::1;-1:-1:-1::0;;8363:41:22;;::::1;::::0;::::1;::::0;;;8466:155;;::::1;::::0;::::1;::::0;;;;;8539:15:::1;8466:155:::0;;::::1;::::0;;;;;;;;;;;;;;;8632:22;;;:13:::1;:22:::0;;;;;:35;;;;::::1;::::0;;;;;;;;;;;::::1;::::0;;::::1;;::::0;;-1:-1:-1;;;;;;8632:35:22::1;-1:-1:-1::0;;;;;8632:35:22;;::::1;::::0;;;::::1;::::0;;;;;;::::1;::::0;;;;;8466:155;;8632:35;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;:::i;:::-;-1:-1:-1::0;8632:35:22::1;::::0;;;::::1;::::0;::::1;::::0;;::::1;::::0;;-1:-1:-1;;8632:35:22::1;::::0;::::1;;::::0;;;::::1;::::0;;8683:54:::1;::::0;8710:10:::1;::::0;8701:7;;8683:54:::1;::::0;::::1;::::0;8722:7;;-1:-1:-1;;8683:54:22::1;:::i;:::-;;;;;;;;8756:4;:17;;8775:4;:17;;;8794:5;8748:52;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2531:1:15;2542:20:::0;1857:1;3068:7;:21;2888:208;2542:20;7544:1263:22;;;;;:::o;2103:118:7:-;2166:7;2192:22;2206:7;2192:13;:22::i;1861:208::-;1924:7;-1:-1:-1;;;;;1947:19:7;;1943:87;;1989:30;;-1:-1:-1;;;1989:30:7;;2016:1;1989:30;;;2685:51:25;2658:18;;1989:30:7;2539:203:25;1943:87:7;-1:-1:-1;;;;;;2046:16:7;;;;;:9;:16;;;;;;;1861:208::o;11441:548:22:-;-1:-1:-1;;;;;11734:25:22;;11519:26;11734:25;;;:16;:25;;;;;11790:22;;;11826:28;;;11868:24;;;;11946:26;;;;11906;;;11769:213;;11519:26;;;;11623:30;;11519:26;;11734:25;;11790:22;;;;;11826:28;;11906:26;;11946;11906;;11769:213;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11441:548;;;;;;;:::o;2830:136:0:-;2907:4;2930:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;2930:29:0;;;;;;;;;;;;;;;2830:136::o;2394:93:7:-;2441:13;2473:7;2466:14;;;;;:::i;3487:144::-;3572:52;735:10:13;3605:8:7;3615;3572:18;:52::i;13089:354:22:-;13170:17;13190:20;;;:12;:20;;;;;13229:11;;;;;;13228:12;13220:42;;;;-1:-1:-1;;;13220:42:22;;25013:2:25;13220:42:22;;;24995:21:25;25052:2;25032:18;;;25025:30;-1:-1:-1;;;25071:18:25;;;25064:47;25128:18;;13220:42:22;24811:341:25;13220:42:22;13280:12;;;;-1:-1:-1;;;;;13280:12:22;13296:10;13280:26;13272:53;;;;-1:-1:-1;;;13272:53:22;;25359:2:25;13272:53:22;;;25341:21:25;25398:2;25378:18;;;25371:30;-1:-1:-1;;;25417:18:25;;;25410:44;25471:18;;13272:53:22;25157:338:25;13272:53:22;13373:1;13349:13;13343:27;:31;13335:72;;;;-1:-1:-1;;;13335:72:22;;25702:2:25;13335:72:22;;;25684:21:25;25741:2;25721:18;;;25714:30;25780;25760:18;;;25753:58;25828:18;;13335:72:22;25500:352:25;13335:72:22;13418:11;;:18;;-1:-1:-1;;13418:18:22;13432:4;13418:18;;;-1:-1:-1;;13089:354:22:o;4630:233:7:-;4743:31;4756:4;4762:2;4766:7;4743:12;:31::i;:::-;4784:72;735:10:13;4832:4:7;4838:2;4842:7;4851:4;4784:33;:72::i;5463:1992:22:-;5791:15;2500:21:15;:19;:21::i;:::-;5872:27:22;;5866:41;5858:75:::1;;;::::0;-1:-1:-1;;;5858:75:22;;26059:2:25;5858:75:22::1;::::0;::::1;26041:21:25::0;26098:2;26078:18;;;26071:30;-1:-1:-1;;;26117:18:25;;;26110:47;26174:18;;5858:75:22::1;25857:341:25::0;5858:75:22::1;5978:27:::0;;5951:55:::1;::::0;:26:::1;::::0;:55:::1;::::0;::::1;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;;::::1;;5943:90;;;::::0;-1:-1:-1;;;5943:90:22;;26699:2:25;5943:90:22::1;::::0;::::1;26681:21:25::0;26738:2;26718:18;;;26711:30;-1:-1:-1;;;26757:18:25;;;26750:52;26819:18;;5943:90:22::1;26497:346:25::0;5943:90:22::1;6177:1;6144:22;6138:36;:40;6130:84;;;::::0;-1:-1:-1;;;6130:84:22;;27050:2:25;6130:84:22::1;::::0;::::1;27032:21:25::0;27089:2;27069:18;;;27062:30;27128:33;27108:18;;;27101:61;27179:18;;6130:84:22::1;26848:355:25::0;6130:84:22::1;6255:15;:17:::0;;;:15:::1;:17;::::0;::::1;:::i;:::-;;;;;6245:27;;6282:30;6292:10;6304:7;6282:9;:30::i;:::-;6356:29;6388:20:::0;;;:11:::1;:20;::::0;;;;6418:22;;;6450:12:::1;::::0;::::1;:25:::0;;-1:-1:-1;;;;;;6450:25:22::1;6465:10;6450:25;::::0;;6485:13:::1;::::0;::::1;:24:::0;;;6519:17:::1;::::0;::::1;:32;6539:12:::0;6519:17;:32:::1;:::i;:::-;-1:-1:-1::0;6561:17:22::1;::::0;::::1;:32:::0;;;6603:19:::1;::::0;::::1;:36:::0;;6625:14;;6603:19;-1:-1:-1;;6603:36:22::1;::::0;6625:14;6603:36:::1;::::0;::::1;;;;;;:::i;:::-;;;::::0;;-1:-1:-1;6671:15:22::1;6649:19;::::0;::::1;:37:::0;;;6696:15:::1;::::0;::::1;:33:::0;6739:22:::1;::::0;::::1;:29:::0;;-1:-1:-1;;6739:29:22::1;6764:4;6739:29;::::0;;6778:23:::1;::::0;::::1;:48;6804:22:::0;6778:23;:48:::1;:::i;:::-;-1:-1:-1::0;6836:22:22::1;::::0;::::1;:42:::0;;;6888:26;;6905:9;;6888:14:::1;::::0;::::1;::::0;;;:26:::1;::::0;:14;:26:::1;:::i;:::-;-1:-1:-1::0;6888:26:22::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;:::i;:::-;-1:-1:-1::0;6888:26:22::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;:::i;:::-;-1:-1:-1::0;6888:26:22::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;:::i;:::-;-1:-1:-1::0;6888:26:22::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;;;::::1;;-1:-1:-1::0;;6888:26:22;;::::1;;::::0;;::::1;6962:22:::0;;;:13:::1;:22;::::0;;;;;;;6993:4:::1;6962:37:::0;;;;;;;:44;;;;::::1;6888:26:::0;6962:44:::1;::::0;;7060::::1;7084:10;6976:7:::0;7060:23:::1;:44::i;:::-;7115:16;:18:::0;;;:16:::1;:18;::::0;::::1;:::i;:::-;::::0;;;-1:-1:-1;;7143:22:22::1;:24:::0;;;:22:::1;:24;::::0;::::1;:::i;:::-;;;;;;7211:10;-1:-1:-1::0;;;;;7183:61:22::1;7202:7;7183:61;7223:14;7239:4;7183:61;;;;;;;:::i;:::-;;;;;;;;7298:7;7259:164;7319:9;:27;;;7360:22;7396:17;7259:164;;;;;;;;:::i;:::-;;;;;;;;7434:14;2542:20:15::0;1857:1;3068:7;:21;2888:208;2542:20;5463:1992:22;;;;;;;;;:::o;12046:583::-;12118:15;;;;12246:31;12118:15;12302:17;12311:7;12302:8;:17::i;:::-;-1:-1:-1;;;;;12302:31:22;;12294:64;;;;-1:-1:-1;;;12294:64:22;;24015:2:25;12294:64:22;;;23997:21:25;24054:2;24034:18;;;24027:30;-1:-1:-1;;;24073:18:25;;;24066:50;24133:18;;12294:64:22;23813:344:25;12294:64:22;12368:29;12400:20;;;:11;:20;;;;;12452:12;;;;12478:19;;;;12511;;;;12544:22;;;;12580:14;;;12431:191;;-1:-1:-1;;;;;12452:12:22;;;;12478:19;;;;;12544:22;;;;12580:14;;12431:191;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12046:583;;;;;;;:::o;15116:153::-;15207:13;15239:23;15254:7;15239:14;:23::i;8893:1516::-;9078:14;2500:21:15;:19;:21::i;:::-;9112:34:22::1;715:26;9135:10;9112:7;:34::i;:::-;9104:61;;;::::0;-1:-1:-1;;;9104:61:22;;28173:2:25;9104:61:22::1;::::0;::::1;28155:21:25::0;28212:2;28192:18;;;28185:30;-1:-1:-1;;;28231:18:25;;;28224:44;28285:18;;9104:61:22::1;27971:338:25::0;9104:61:22::1;9222:1;9183:27;9192:17:::0;9183:8:::1;:27::i;:::-;-1:-1:-1::0;;;;;9183:41:22::1;::::0;9175:72:::1;;;::::0;-1:-1:-1;;;9175:72:22;;20900:2:25;9175:72:22::1;::::0;::::1;20882:21:25::0;20939:2;20919:18;;;20912:30;-1:-1:-1;;;20958:18:25;;;20951:48;21016:18;;9175:72:22::1;20698:342:25::0;9175:72:22::1;9258:29;9290:30:::0;;;:11:::1;:30;::::0;;;;9429:33;;;;9290:30;;9258:29;9466:3:::1;::::0;9410:52:::1;::::0;:16;:52:::1;:::i;:::-;9409:60;;;;:::i;:::-;9384:85:::0;-1:-1:-1;9384:85:22;9479:21:::1;9549:33;9384:85:::0;9549:16;:33:::1;:::i;:::-;9635:140;::::0;;::::1;::::0;::::1;29187:19:25::0;;;-1:-1:-1;;9696:10:22::1;29244:2:25::0;29240:15;29236:53;29222:12;;;29215:75;;;;29306:12;;;29299:28;;;9750:15:22::1;29343:12:25::0;;;29336:28;9527:55:22;;-1:-1:-1;29380:13:25;;9635:140:22::1;;;;;;;;;;;;9625:151;;;;;;9616:160;;9787:17;9807:12;:20;9820:6;9807:20;;;;;;;;;;;9787:40;;9851:6;9837:4;:11;;:20;;;;9892:17;9867:4;:22;;:42;;;;9935:10;9919:4;:13;;;:26;;;;;-1:-1:-1::0;;;;;9919:26:22::1;;;;;-1:-1:-1::0;;;;;9919:26:22::1;;;;;;9970:4;:12;;;;;;;;;;-1:-1:-1::0;;;;;9970:12:22::1;9955:4;:12;;;:27;;;;;-1:-1:-1::0;;;;;9955:27:22::1;;;;;-1:-1:-1::0;;;;;9955:27:22::1;;;;;;10009:16;9992:4;:14;;:33;;;;10059:13;10035:4;:21;;:37;;;;10104:11;10082:4;:19;;:33;;;;10142:15;10125:4;:14;;:32;;;;10168:12;:26;10181:4;:12;;;;;;;;;;-1:-1:-1::0;;;;;10181:12:22::1;-1:-1:-1::0;;;;;10168:26:22::1;-1:-1:-1::0;;;;;10168:26:22::1;;;;;;;;;;;;10200:6;10168:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10299:4;:12;;;;;;;;;;-1:-1:-1::0;;;;;10299:12:22::1;-1:-1:-1::0;;;;;10223:155:22::1;10268:17;10248:6;10223:155;10325:16;10355:13;10223:155;;;;;;29578:25:25::0;;;29634:2;29619:18;;29612:34;29566:2;29551:18;;29404:248;10223:155:22::1;;;;;;;;10389:13;;;;;2542:20:15::0;1857:1;3068:7;:21;2888:208;2542:20;8893:1516:22;;;;;:::o;4618:138:0:-;3851:7;3877:12;;;:6;:12;;;;;:22;;;2473:16;2484:4;2473:10;:16::i;:::-;4723:26:::1;4735:4;4741:7;4723:11;:26::i;14005:152:22:-:0;2241:4:0;2473:16;2241:4;2473:10;:16::i;:::-;14146:4:22::1;14107:26;14134:8;14107:36;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;:43;;;::::1;;-1:-1:-1::0;;14107:43:22;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;14005:152:22:o;3685:55::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3685:55:22;;;;-1:-1:-1;3685:55:22;;-1:-1:-1;3685:55:22;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3685:55:22;;;;;;;-1:-1:-1;;3685:55:22;;;:::o;14344:363::-;14448:15;;;14461:1;14448:15;;;;;;;;;14397;;14424:21;;14448:15;;;;;;;;;;;;;;;;;;;;;14424:39;;14473:17;;;;;;;;;;;;;-1:-1:-1;;;14473:17:22;;;:5;14479:1;14473:8;;;;;;;;:::i;:::-;;;;;;:17;;;;14500;;;;;;;;;;;;;-1:-1:-1;;;14500:17:22;;;:5;14506:1;14500:8;;;;;;;;:::i;:::-;;;;;;:17;;;;14527;;;;;;;;;;;;;-1:-1:-1;;;14527:17:22;;;:5;14533:1;14527:8;;;;;;;;:::i;:::-;;;;;;:17;;;;14554:18;;;;;;;;;;;;;-1:-1:-1;;;14554:18:22;;;:5;14560:1;14554:8;;;;;;;;:::i;:::-;;;;;;:18;;;;14582:17;;;;;;;;;;;;;-1:-1:-1;;;14582:17:22;;;:5;14588:1;14582:8;;;;;;;;:::i;:::-;;;;;;:17;;;;14609:16;;;;;;;;;;;;;-1:-1:-1;;;14609:16:22;;;:5;14615:1;14609:8;;;;;;;;:::i;:::-;;;;;;:16;;;;14635;;;;;;;;;;;;;-1:-1:-1;;;14635:16:22;;;:5;14641:1;14635:8;;;;;;;;:::i;:::-;;;;;;:16;;;;14661:17;;;;;;;;;;;;;-1:-1:-1;;;14661:17:22;;;:5;14667:1;14661:8;;;;;;;;:::i;3665:153:7:-;-1:-1:-1;;;;;3776:25:7;;;3753:4;3776:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;3665:153::o;3620:59:22:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;12700:135::-;12766:21;12806:13;:22;12820:7;12806:22;;;;;;;;;;;12799:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;12799:29:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;12799:29:22;;;-1:-1:-1;;12799:29:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12700:135;;;:::o;12897:128::-;-1:-1:-1;;;;;12997:21:22;;;;;;:12;:21;;;;;;;;;12990:28;;;;;;;;;;;;;;;;;12962:16;;12990:28;;;12997:21;12990:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12897:128;;;:::o;2541:202:0:-;2626:4;-1:-1:-1;;;;;;2649:47:0;;-1:-1:-1;;;2649:47:0;;:87;;;2700:36;2724:11;2700:23;:36::i;15858:241:7:-;15921:7;15940:13;15956:17;15965:7;15956:8;:17::i;:::-;15940:33;-1:-1:-1;;;;;;15987:19:7;;15983:88;;16029:31;;-1:-1:-1;;;16029:31:7;;;;;834:25:25;;;807:18;;16029:31:7;688:177:25;14138:120:7;14218:33;14227:2;14231:7;14240:4;14246;14218:8;:33::i;8507:795::-;8593:7;8612:12;8627:17;8636:7;8627:8;:17::i;:::-;8612:32;-1:-1:-1;;;;;;8704:18:7;;;8700:86;;8738:37;8755:4;8761;8767:7;8738:16;:37::i;:::-;-1:-1:-1;;;;;8830:18:7;;;8826:256;;8946:48;8963:1;8967:7;8984:1;8988:5;8946:8;:48::i;:::-;-1:-1:-1;;;;;9037:15:7;;;;;;:9;:15;;;;;:20;;-1:-1:-1;;9037:20:7;;;8826:256;-1:-1:-1;;;;;9096:16:7;;;9092:107;;-1:-1:-1;;;;;9156:13:7;;;;;;:9;:13;;;;;:18;;9173:1;9156:18;;;9092:107;9209:16;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9209:21:7;-1:-1:-1;;;;;9209:21:7;;;;;;;;;9246:27;;9209:16;;9246:27;;;;;;;9291:4;8507:795;-1:-1:-1;;;;8507:795:7:o;3175:103:0:-;3241:30;3252:4;735:10:13;3241::0;:30::i;:::-;3175:103;:::o;6155:316::-;6232:4;6253:22;6261:4;6267:7;6253;:22::i;:::-;6248:217;;6291:12;;;;:6;:12;;;;;;;;-1:-1:-1;;;;;6291:29:0;;;;;;;;;:36;;-1:-1:-1;;6291:36:0;6323:4;6291:36;;;6373:12;735:10:13;;656:96;6373:12:0;-1:-1:-1;;;;;6346:40:0;6364:7;-1:-1:-1;;;;;6346:40:0;6358:4;6346:40;;;;;;;;;;-1:-1:-1;6407:4:0;6400:11;;6248:217;-1:-1:-1;6449:5:0;6442:12;;6708:317;6786:4;6806:22;6814:4;6820:7;6806;:22::i;:::-;6802:217;;;6876:5;6844:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;6844:29:0;;;;;;;;;;:37;;-1:-1:-1;;6844:37:0;;;6900:40;735:10:13;;6844:12:0;;6900:40;;6876:5;6900:40;-1:-1:-1;6961:4:0;6954:11;;13847:128:22;13914:7;13940:20;;;:11;:20;;;;;:28;;;-1:-1:-1;;;;;13940:28:22;;13847:128::o;2575:307:15:-;1899:1;2702:7;;:18;2698:86;;2743:30;;-1:-1:-1;;;2743:30:15;;;;;;;;;;;2698:86;1899:1;2858:7;:17;2575:307::o;15311:312:7:-;-1:-1:-1;;;;;15418:22:7;;15414:91;;15463:31;;-1:-1:-1;;;15463:31:7;;-1:-1:-1;;;;;2703:32:25;;15463:31:7;;;2685:51:25;2658:18;;15463:31:7;2539:203:25;15414:91:7;-1:-1:-1;;;;;15514:25:7;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;15514:46:7;;;;;;;;;;15575:41;;636::25;;;15575::7;;609:18:25;15575:41:7;;;;;;;15311:312;;;:::o;993:926:12:-;-1:-1:-1;;;;;1173:14:12;;;:18;1169:744;;1211:67;;-1:-1:-1;;;1211:67:12;;-1:-1:-1;;;;;1211:36:12;;;;;:67;;1248:8;;1258:4;;1264:7;;1273:4;;1211:67;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1211:67:12;;;;;;;;-1:-1:-1;;1211:67:12;;;;;;;;;;;;:::i;:::-;;;1207:696;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1568:6;:13;1585:1;1568:18;1564:325;;1672:39;;-1:-1:-1;;;1672:39:12;;-1:-1:-1;;;;;2703:32:25;;1672:39:12;;;2685:51:25;2658:18;;1672:39:12;2539:203:25;1564:325:12;1841:6;1835:13;1828:4;1820:6;1816:17;1809:40;1207:696;-1:-1:-1;;;;;;1325:51:12;;-1:-1:-1;;;1325:51:12;1321:182;;1445:39;;-1:-1:-1;;;1445:39:12;;-1:-1:-1;;;;;2703:32:25;;1445:39:12;;;2685:51:25;2658:18;;1445:39:12;2539:203:25;1321:182:12;1279:238;1207:696;993:926;;;;;:::o;10302:100:7:-;10369:26;10379:2;10383:7;10369:26;;;;;;;;;;;;:9;:26::i;13476:365:22:-;-1:-1:-1;;;;;13598:25:22;;13562:33;13598:25;;;:16;:25;;;;;13638:28;;;;13598:25;;13638:33;13634:110;;13718:15;13687:28;;;:46;13634:110;13781:15;13754:24;;;:42;13806:26;;;:28;;;:26;:28;;;:::i;:::-;;;;;;13552:289;13476:365;;:::o;1210:593:10:-;1283:13;1308:22;1322:7;1308:13;:22::i;:::-;-1:-1:-1;1341:23:10;1367:19;;;:10;:19;;;;;1341:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1396:18;1417:10;3102:9:7;;;;;;;;;-1:-1:-1;3102:9:7;;;3026:92;1417:10:10;1396:31;;1506:4;1500:18;1522:1;1500:23;1496:70;;-1:-1:-1;1546:9:10;1210:593;-1:-1:-1;;1210:593:10:o;1496:70::-;1665:23;;:27;1661:95;;1729:4;1735:9;1715:30;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1708:37;;;;1210:593;;;:::o;1661:95::-;1773:23;1788:7;1773:14;:23::i;:::-;1766:30;1210:593;-1:-1:-1;;;;1210:593:10:o;961:207::-;1063:4;-1:-1:-1;;;;;;1086:35:10;;-1:-1:-1;;;1086:35:10;;:75;;;1125:36;1149:11;1125:23;:36::i;14440:662:7:-;14600:9;:31;;;-1:-1:-1;;;;;;14613:18:7;;;;14600:31;14596:460;;;14647:13;14663:22;14677:7;14663:13;:22::i;:::-;14647:38;-1:-1:-1;;;;;;14813:18:7;;;;;;:35;;;14844:4;-1:-1:-1;;;;;14835:13:7;:5;-1:-1:-1;;;;;14835:13:7;;;14813:35;:69;;;;;14853:29;14870:5;14877:4;14853:16;:29::i;:::-;14852:30;14813:69;14809:142;;;14909:27;;-1:-1:-1;;;14909:27:7;;-1:-1:-1;;;;;2703:32:25;;14909:27:7;;;2685:51:25;2658:18;;14909:27:7;2539:203:25;14809:142:7;14969:9;14965:81;;;15023:7;15019:2;-1:-1:-1;;;;;15003:28:7;15012:5;-1:-1:-1;;;;;15003:28:7;;;;;;;;;;;14965:81;14633:423;14596:460;-1:-1:-1;;15066:24:7;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;15066:29:7;-1:-1:-1;;;;;15066:29:7;;;;;;;;;;14440:662::o;6751:368::-;6863:38;6877:5;6884:7;6893;6863:13;:38::i;:::-;6858:255;;-1:-1:-1;;;;;6921:19:7;;6917:186;;6967:31;;-1:-1:-1;;;6967:31:7;;;;;834:25:25;;;807:18;;6967:31:7;688:177:25;6917:186:7;7044:44;;-1:-1:-1;;;7044:44:7;;-1:-1:-1;;;;;31098:32:25;;7044:44:7;;;31080:51:25;31147:18;;;31140:34;;;31053:18;;7044:44:7;30906:274:25;3408:197:0;3496:22;3504:4;3510:7;3496;:22::i;:::-;3491:108;;3541:47;;-1:-1:-1;;;3541:47:0;;-1:-1:-1;;;;;31098:32:25;;3541:47:0;;;31080:51:25;31147:18;;;31140:34;;;31053:18;;3541:47:0;30906:274:25;10623:207:7;10717:18;10723:2;10727:7;10717:5;:18::i;:::-;10745:78;735:10:13;10801:1:7;10805:2;10809:7;10818:4;10745:33;:78::i;2529:255::-;2593:13;2618:22;2632:7;2618:13;:22::i;:::-;;2651:21;2675:10;3102:9;;;;;;;;;-1:-1:-1;3102:9:7;;;3026:92;2675:10;2651:34;;2726:1;2708:7;2702:21;:25;:75;;;;;;;;;;;;;;;;;2744:7;2753:18;:7;:16;:18::i;:::-;2730:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2695:82;2529:255;-1:-1:-1;;;2529:255:7:o;1527:300::-;1629:4;-1:-1:-1;;;;;;1664:40:7;;-1:-1:-1;;;1664:40:7;;:104;;-1:-1:-1;;;;;;;1720:48:7;;-1:-1:-1;;;1720:48:7;1664:104;:156;;;-1:-1:-1;;;;;;;;;;829:40:17;;;1784:36:7;730:146:17;6047:272:7;6150:4;-1:-1:-1;;;;;6185:21:7;;;;;;:127;;;6232:7;-1:-1:-1;;;;;6223:16:7;:5;-1:-1:-1;;;;;6223:16:7;;:52;;;;6243:32;6260:5;6267:7;6243:16;:32::i;:::-;6223:88;;;-1:-1:-1;;5679:7:7;5705:24;;;:15;:24;;;;;;-1:-1:-1;;;;;5705:24:7;;;6279:32;;;;6166:146;-1:-1:-1;6047:272:7:o;9624:327::-;-1:-1:-1;;;;;9691:16:7;;9687:87;;9730:33;;-1:-1:-1;;;9730:33:7;;9760:1;9730:33;;;2685:51:25;2658:18;;9730:33:7;2539:203:25;9687:87:7;9783:21;9807:32;9815:2;9819:7;9836:1;9807:7;:32::i;:::-;9783:56;-1:-1:-1;;;;;;9853:27:7;;;9849:96;;9903:31;;-1:-1:-1;;;9903:31:7;;9931:1;9903:31;;;2685:51:25;2658:18;;9903:31:7;2539:203:25;1308:634:16;1364:13;1413:14;1430:17;1441:5;1430:10;:17::i;:::-;1450:1;1430:21;1413:38;;1465:20;1499:6;1488:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1488:18:16;-1:-1:-1;1465:41:16;-1:-1:-1;1595:30:16;;;1611:4;1595:30;1652:247;-1:-1:-1;;1683:5:16;-1:-1:-1;;;1782:2:16;1771:14;;1766:32;1683:5;1753:46;1843:2;1834:11;;;-1:-1:-1;1863:21:16;1652:247;1863:21;-1:-1:-1;1919:6:16;1308:634;-1:-1:-1;;;1308:634:16:o;29154:916:19:-;29207:7;;-1:-1:-1;;;29282:17:19;;29278:103;;-1:-1:-1;;;29319:17:19;;;-1:-1:-1;29364:2:19;29354:12;29278:103;29407:8;29398:5;:17;29394:103;;29444:8;29435:17;;;-1:-1:-1;29480:2:19;29470:12;29394:103;29523:8;29514:5;:17;29510:103;;29560:8;29551:17;;;-1:-1:-1;29596:2:19;29586:12;29510:103;29639:7;29630:5;:16;29626:100;;29675:7;29666:16;;;-1:-1:-1;29710:1:19;29700:11;29626:100;29752:7;29743:5;:16;29739:100;;29788:7;29779:16;;;-1:-1:-1;29823:1:19;29813:11;29739:100;29865:7;29856:5;:16;29852:100;;29901:7;29892:16;;;-1:-1:-1;29936:1:19;29926:11;29852:100;29978:7;29969:5;:16;29965:66;;30015:1;30005:11;30057:6;29154:916;-1:-1:-1;;29154:916:19:o;14:131:25:-;-1:-1:-1;;;;;;88:32:25;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;870:173::-;938:20;;-1:-1:-1;;;;;987:31:25;;977:42;;967:70;;1033:1;1030;1023:12;967:70;870:173;;;:::o;1048:254::-;1116:6;1124;1177:2;1165:9;1156:7;1152:23;1148:32;1145:52;;;1193:1;1190;1183:12;1145:52;1216:29;1235:9;1216:29;:::i;:::-;1206:39;1292:2;1277:18;;;;1264:32;;-1:-1:-1;;;1048:254:25:o;1489:250::-;1574:1;1584:113;1598:6;1595:1;1592:13;1584:113;;;1674:11;;;1668:18;1655:11;;;1648:39;1620:2;1613:10;1584:113;;;-1:-1:-1;;1731:1:25;1713:16;;1706:27;1489:250::o;1744:271::-;1786:3;1824:5;1818:12;1851:6;1846:3;1839:19;1867:76;1936:6;1929:4;1924:3;1920:14;1913:4;1906:5;1902:16;1867:76;:::i;:::-;1997:2;1976:15;-1:-1:-1;;1972:29:25;1963:39;;;;2004:4;1959:50;;1744:271;-1:-1:-1;;1744:271:25:o;2020:220::-;2169:2;2158:9;2151:21;2132:4;2189:45;2230:2;2219:9;2215:18;2207:6;2189:45;:::i;2245:180::-;2304:6;2357:2;2345:9;2336:7;2332:23;2328:32;2325:52;;;2373:1;2370;2363:12;2325:52;-1:-1:-1;2396:23:25;;2245:180;-1:-1:-1;2245:180:25:o;2747:328::-;2824:6;2832;2840;2893:2;2881:9;2872:7;2868:23;2864:32;2861:52;;;2909:1;2906;2899:12;2861:52;2932:29;2951:9;2932:29;:::i;:::-;2922:39;;2980:38;3014:2;3003:9;2999:18;2980:38;:::i;:::-;2970:48;;3065:2;3054:9;3050:18;3037:32;3027:42;;2747:328;;;;;:::o;3265:254::-;3333:6;3341;3394:2;3382:9;3373:7;3369:23;3365:32;3362:52;;;3410:1;3407;3400:12;3362:52;3446:9;3433:23;3423:33;;3475:38;3509:2;3498:9;3494:18;3475:38;:::i;:::-;3465:48;;3265:254;;;;;:::o;3524:127::-;3585:10;3580:3;3576:20;3573:1;3566:31;3616:4;3613:1;3606:15;3640:4;3637:1;3630:15;3656:145;3742:1;3735:5;3732:12;3722:46;;3748:18;;:::i;:::-;3777;;3656:145::o;3806:853::-;3862:3;3906:5;3900:12;3933:4;3928:3;3921:17;3959:47;4000:4;3995:3;3991:14;3977:12;3959:47;:::i;:::-;3947:59;;4054:4;4047:5;4043:16;4037:23;4102:3;4096:4;4092:14;4085:4;4080:3;4076:14;4069:38;4130:39;4164:4;4148:14;4130:39;:::i;:::-;4116:53;;;4217:4;4210:5;4206:16;4200:23;4267:3;4259:6;4255:16;4248:4;4243:3;4239:14;4232:40;4295:41;4329:6;4313:14;4295:41;:::i;:::-;4281:55;;;4384:4;4377:5;4373:16;4367:23;4434:3;4426:6;4422:16;4415:4;4410:3;4406:14;4399:40;4462:41;4496:6;4480:14;4462:41;:::i;:::-;4448:55;;;4552:4;4545:5;4541:16;4535:23;4528:4;4523:3;4519:14;4512:47;4622:4;4615:5;4611:16;4605:23;4598:31;4591:39;4584:4;4579:3;4575:14;4568:63;4647:6;4640:13;;;3806:853;;;;:::o;4664:1431::-;5249:25;;;-1:-1:-1;;;;;5310:32:25;;;5305:2;5290:18;;5283:60;2496:31;;5394:2;5379:18;;2484:44;-1:-1:-1;5237:3:25;5434:6;5429:2;5418:9;5414:18;5407:34;5478:2;5472:3;5461:9;5457:19;5450:31;5504:45;5545:2;5534:9;5530:18;5522:6;5504:45;:::i;:::-;5490:59;;5586:6;5580:3;5569:9;5565:19;5558:35;5602:59;5656:3;5645:9;5641:19;5633:6;5602:59;:::i;:::-;5698:6;5692:3;5681:9;5677:19;5670:35;5742:6;5736:3;5725:9;5721:19;5714:35;5758:44;5797:3;5786:9;5782:19;5774:6;470:13;463:21;451:34;;400:91;5758:44;5851:9;5843:6;5839:22;5833:3;5822:9;5818:19;5811:51;5885:34;5912:6;5903:7;5885:34;:::i;:::-;5871:48;;5956:7;5950:3;5939:9;5935:19;5928:36;6013:9;6005:6;6001:22;5995:3;5984:9;5980:19;5973:51;6041:48;6082:6;6073:7;6041:48;:::i;:::-;6033:56;;;4664:1431;;;;;;;;;;;;;;;;:::o;6100:803::-;6262:4;6291:2;6331;6320:9;6316:18;6361:2;6350:9;6343:21;6384:6;6419;6413:13;6450:6;6442;6435:22;6488:2;6477:9;6473:18;6466:25;;6550:2;6540:6;6537:1;6533:14;6522:9;6518:30;6514:39;6500:53;;6588:2;6580:6;6576:15;6609:1;6619:255;6633:6;6630:1;6627:13;6619:255;;;6726:2;6722:7;6710:9;6702:6;6698:22;6694:36;6689:3;6682:49;6754:40;6787:6;6778;6772:13;6754:40;:::i;:::-;6744:50;-1:-1:-1;6852:12:25;;;;6817:15;;;;6655:1;6648:9;6619:255;;;-1:-1:-1;6891:6:25;;6100:803;-1:-1:-1;;;;;;;6100:803:25:o;6908:127::-;6969:10;6964:3;6960:20;6957:1;6950:31;7000:4;6997:1;6990:15;7024:4;7021:1;7014:15;7040:248;7107:2;7101:9;7149:4;7137:17;;7184:18;7169:34;;7205:22;;;7166:62;7163:88;;;7231:18;;:::i;:::-;7267:2;7260:22;7040:248;:::o;7293:632::-;7358:5;7388:18;7429:2;7421:6;7418:14;7415:40;;;7435:18;;:::i;:::-;7510:2;7504:9;7478:2;7564:15;;-1:-1:-1;;7560:24:25;;;7586:2;7556:33;7552:42;7540:55;;;7610:18;;;7630:22;;;7607:46;7604:72;;;7656:18;;:::i;:::-;7696:10;7692:2;7685:22;7725:6;7716:15;;7755:6;7747;7740:22;7795:3;7786:6;7781:3;7777:16;7774:25;7771:45;;;7812:1;7809;7802:12;7771:45;7862:6;7857:3;7850:4;7842:6;7838:17;7825:44;7917:1;7910:4;7901:6;7893;7889:19;7885:30;7878:41;;;;7293:632;;;;;:::o;7930:222::-;7973:5;8026:3;8019:4;8011:6;8007:17;8003:27;7993:55;;8044:1;8041;8034:12;7993:55;8066:80;8142:3;8133:6;8120:20;8113:4;8105:6;8101:17;8066:80;:::i;8157:627::-;8271:6;8279;8287;8295;8348:3;8336:9;8327:7;8323:23;8319:33;8316:53;;;8365:1;8362;8355:12;8316:53;8388:29;8407:9;8388:29;:::i;:::-;8378:39;;8464:2;8453:9;8449:18;8436:32;8426:42;;8518:2;8507:9;8503:18;8490:32;8551:1;8544:5;8541:12;8531:40;;8567:1;8564;8557:12;8531:40;8590:5;-1:-1:-1;8646:2:25;8631:18;;8618:32;8673:18;8662:30;;8659:50;;;8705:1;8702;8695:12;8659:50;8728;8770:7;8761:6;8750:9;8746:22;8728:50;:::i;:::-;8718:60;;;8157:627;;;;;;;:::o;8789:390::-;8867:6;8875;8928:2;8916:9;8907:7;8903:23;8899:32;8896:52;;;8944:1;8941;8934:12;8896:52;8980:9;8967:23;8957:33;;9041:2;9030:9;9026:18;9013:32;9068:18;9060:6;9057:30;9054:50;;;9100:1;9097;9090:12;9054:50;9123;9165:7;9156:6;9145:9;9141:22;9123:50;:::i;:::-;9113:60;;;8789:390;;;;;:::o;9184:372::-;9383:2;9372:9;9365:21;9346:4;9403:45;9444:2;9433:9;9429:18;9421:6;9403:45;:::i;:::-;9479:2;9464:18;;9457:34;;;;-1:-1:-1;9534:14:25;;9527:22;9522:2;9507:18;;;9500:50;9395:53;9184:372;-1:-1:-1;9184:372:25:o;9561:186::-;9620:6;9673:2;9661:9;9652:7;9648:23;9644:32;9641:52;;;9689:1;9686;9679:12;9641:52;9712:29;9731:9;9712:29;:::i;9752:144::-;9837:1;9830:5;9827:12;9817:46;;9843:18;;:::i;9901:546::-;10160:48;10198:9;10190:6;10160:48;:::i;:::-;10244:6;10239:2;10228:9;10224:18;10217:34;10287:6;10282:2;10271:9;10267:18;10260:34;10330:3;10325:2;10314:9;10310:18;10303:31;10141:4;10351:46;10392:3;10381:9;10377:19;10369:6;10351:46;:::i;:::-;10343:54;;10434:6;10428:3;10417:9;10413:19;10406:35;9901:546;;;;;;;;:::o;10711:160::-;10776:20;;10832:13;;10825:21;10815:32;;10805:60;;10861:1;10858;10851:12;10876:254;10941:6;10949;11002:2;10990:9;10981:7;10977:23;10973:32;10970:52;;;11018:1;11015;11008:12;10970:52;11041:29;11060:9;11041:29;:::i;:::-;11031:39;;11089:35;11120:2;11109:9;11105:18;11089:35;:::i;11530:667::-;11625:6;11633;11641;11649;11702:3;11690:9;11681:7;11677:23;11673:33;11670:53;;;11719:1;11716;11709:12;11670:53;11742:29;11761:9;11742:29;:::i;:::-;11732:39;;11790:38;11824:2;11813:9;11809:18;11790:38;:::i;:::-;11780:48;;11875:2;11864:9;11860:18;11847:32;11837:42;;11930:2;11919:9;11915:18;11902:32;11957:18;11949:6;11946:30;11943:50;;;11989:1;11986;11979:12;11943:50;12012:22;;12065:4;12057:13;;12053:27;-1:-1:-1;12043:55:25;;12094:1;12091;12084:12;12043:55;12117:74;12183:7;12178:2;12165:16;12160:2;12156;12152:11;12117:74;:::i;12202:155::-;12282:20;;12331:1;12321:12;;12311:40;;12347:1;12344;12337:12;12362:1966;12545:6;12553;12561;12569;12577;12585;12593;12646:3;12634:9;12625:7;12621:23;12617:33;12614:53;;;12663:1;12660;12653:12;12614:53;12703:9;12690:23;12732:18;12773:2;12765:6;12762:14;12759:34;;;12789:1;12786;12779:12;12759:34;12812:22;;;;12868:4;12850:16;;;12846:27;12843:47;;;12886:1;12883;12876:12;12843:47;12912:17;;:::i;:::-;12967:2;12954:16;12995:2;12985:8;12982:16;12979:36;;;13011:1;13008;13001:12;12979:36;13038:45;13075:7;13064:8;13060:2;13056:17;13038:45;:::i;:::-;13031:5;13024:60;;13130:2;13126;13122:11;13109:25;13159:2;13149:8;13146:16;13143:36;;;13175:1;13172;13165:12;13143:36;13211:45;13248:7;13237:8;13233:2;13229:17;13211:45;:::i;:::-;13206:2;13199:5;13195:14;13188:69;;13303:2;13299;13295:11;13282:25;13332:2;13322:8;13319:16;13316:36;;;13348:1;13345;13338:12;13316:36;13384:45;13421:7;13410:8;13406:2;13402:17;13384:45;:::i;:::-;13379:2;13372:5;13368:14;13361:69;;13476:2;13472;13468:11;13455:25;13505:2;13495:8;13492:16;13489:36;;;13521:1;13518;13511:12;13489:36;13557:45;13594:7;13583:8;13579:2;13575:17;13557:45;:::i;:::-;13552:2;13545:5;13541:14;13534:69;;13657:3;13653:2;13649:12;13636:26;13630:3;13623:5;13619:15;13612:51;13696:29;13720:3;13716:2;13712:12;13696:29;:::i;:::-;13690:3;13679:15;;13672:54;13683:5;-1:-1:-1;13797:2:25;13782:18;;13769:32;;-1:-1:-1;13854:2:25;13839:18;;13826:32;;-1:-1:-1;13870:16:25;;;13867:36;;;13899:1;13896;13889:12;13867:36;13922:52;13966:7;13955:8;13944:9;13940:24;13922:52;:::i;:::-;13912:62;;14021:2;14010:9;14006:18;13993:32;13983:42;;14044:51;14090:3;14079:9;14075:19;14044:51;:::i;:::-;14034:61;;14142:3;14131:9;14127:19;14114:33;14104:43;;14200:4;14189:9;14185:20;14172:34;14156:50;;14231:2;14221:8;14218:16;14215:36;;;14247:1;14244;14237:12;14215:36;;14270:52;14314:7;14303:8;14292:9;14288:24;14270:52;:::i;:::-;14260:62;;;12362:1966;;;;;;;;;;:::o;14333:584::-;-1:-1:-1;;;;;14605:32:25;;14587:51;;14647:58;14701:2;14686:18;;14678:6;14647:58;:::i;:::-;14741:6;14736:2;14725:9;14721:18;14714:34;14798:6;14791:14;14784:22;14779:2;14768:9;14764:18;14757:50;14844:3;14838;14827:9;14823:19;14816:32;14568:4;14865:46;14906:3;14895:9;14891:19;14883:6;14865:46;:::i;14922:458::-;15009:6;15017;15025;15078:2;15066:9;15057:7;15053:23;15049:32;15046:52;;;15094:1;15091;15084:12;15046:52;15130:9;15117:23;15107:33;;15187:2;15176:9;15172:18;15159:32;15149:42;;15242:2;15231:9;15227:18;15214:32;15269:18;15261:6;15258:30;15255:50;;;15301:1;15298;15291:12;15255:50;15324;15366:7;15357:6;15346:9;15342:22;15324:50;:::i;:::-;15314:60;;;14922:458;;;;;:::o;15385:322::-;15454:6;15507:2;15495:9;15486:7;15482:23;15478:32;15475:52;;;15523:1;15520;15513:12;15475:52;15563:9;15550:23;15596:18;15588:6;15585:30;15582:50;;;15628:1;15625;15618:12;15582:50;15651;15693:7;15684:6;15673:9;15669:22;15651:50;:::i;15712:248::-;15780:6;15788;15841:2;15829:9;15820:7;15816:23;15812:32;15809:52;;;15857:1;15854;15847:12;15809:52;-1:-1:-1;;15880:23:25;;;15950:2;15935:18;;;15922:32;;-1:-1:-1;15712:248:25:o;15965:471::-;16221:1;16217;16212:3;16208:11;16204:19;16196:6;16192:32;16181:9;16174:51;16261:6;16256:2;16245:9;16241:18;16234:34;16304:3;16299:2;16288:9;16284:18;16277:31;16155:4;16325:46;16366:3;16355:9;16351:19;16343:6;16325:46;:::i;:::-;16317:54;;16421:6;16414:14;16407:22;16402:2;16391:9;16387:18;16380:50;15965:471;;;;;;;:::o;16441:260::-;16509:6;16517;16570:2;16558:9;16549:7;16545:23;16541:32;16538:52;;;16586:1;16583;16576:12;16538:52;16609:29;16628:9;16609:29;:::i;:::-;16599:39;;16657:38;16691:2;16680:9;16676:18;16657:38;:::i;16706:1278::-;16908:4;16937:2;16977;16966:9;16962:18;17007:2;16996:9;16989:21;17030:6;17065;17059:13;17096:6;17088;17081:22;17122:2;17112:12;;17155:2;17144:9;17140:18;17133:25;;17217:2;17207:6;17204:1;17200:14;17189:9;17185:30;17181:39;17255:2;17247:6;17243:15;17276:1;17286:669;17300:6;17297:1;17294:13;17286:669;;;17365:22;;;-1:-1:-1;;17361:36:25;17349:49;;17421:13;;17493:9;;-1:-1:-1;;;;;17489:35:25;17474:51;;17568:11;;;17562:18;17545:15;;;17538:43;17620:11;;;17614:18;17457:4;17652:15;;;17645:27;;;17457:4;17699:48;17731:15;;;17614:18;17699:48;:::i;:::-;17770:4;17831:11;;;17825:18;17818:26;17811:34;17794:15;;;;17787:59;;;;-1:-1:-1;17933:12:25;;;;17685:62;-1:-1:-1;17898:15:25;;;;17322:1;17315:9;17286:669;;;-1:-1:-1;17972:6:25;;16706:1278;-1:-1:-1;;;;;;;;16706:1278:25:o;17989:632::-;18160:2;18212:21;;;18282:13;;18185:18;;;18304:22;;;18131:4;;18160:2;18383:15;;;;18357:2;18342:18;;;18131:4;18426:169;18440:6;18437:1;18434:13;18426:169;;;18501:13;;18489:26;;18570:15;;;;18535:12;;;;18462:1;18455:9;18426:169;;;-1:-1:-1;18612:3:25;;17989:632;-1:-1:-1;;;;;;17989:632:25:o;19448:380::-;19527:1;19523:12;;;;19570;;;19591:61;;19645:4;19637:6;19633:17;19623:27;;19591:61;19698:2;19690:6;19687:14;19667:18;19664:38;19661:161;;19744:10;19739:3;19735:20;19732:1;19725:31;19779:4;19776:1;19769:15;19807:4;19804:1;19797:15;19661:161;;19448:380;;;:::o;20213:127::-;20274:10;20269:3;20265:20;20262:1;20255:31;20305:4;20302:1;20295:15;20329:4;20326:1;20319:15;21045:127;21106:10;21101:3;21097:20;21094:1;21087:31;21137:4;21134:1;21127:15;21161:4;21158:1;21151:15;21177:135;21216:3;21237:17;;;21234:43;;21257:18;;:::i;:::-;-1:-1:-1;21304:1:25;21293:13;;21177:135::o;21443:545::-;21545:2;21540:3;21537:11;21534:448;;;21581:1;21606:5;21602:2;21595:17;21651:4;21647:2;21637:19;21721:2;21709:10;21705:19;21702:1;21698:27;21692:4;21688:38;21757:4;21745:10;21742:20;21739:47;;;-1:-1:-1;21780:4:25;21739:47;21835:2;21830:3;21826:12;21823:1;21819:20;21813:4;21809:31;21799:41;;21890:82;21908:2;21901:5;21898:13;21890:82;;;21953:17;;;21934:1;21923:13;21890:82;;22164:1352;22290:3;22284:10;22317:18;22309:6;22306:30;22303:56;;;22339:18;;:::i;:::-;22368:97;22458:6;22418:38;22450:4;22444:11;22418:38;:::i;:::-;22412:4;22368:97;:::i;:::-;22520:4;;22584:2;22573:14;;22601:1;22596:663;;;;23303:1;23320:6;23317:89;;;-1:-1:-1;23372:19:25;;;23366:26;23317:89;-1:-1:-1;;22121:1:25;22117:11;;;22113:24;22109:29;22099:40;22145:1;22141:11;;;22096:57;23419:81;;22566:944;;22596:663;21390:1;21383:14;;;21427:4;21414:18;;-1:-1:-1;;22632:20:25;;;22750:236;22764:7;22761:1;22758:14;22750:236;;;22853:19;;;22847:26;22832:42;;22945:27;;;;22913:1;22901:14;;;;22780:19;;22750:236;;;22754:3;23014:6;23005:7;23002:19;22999:201;;;23075:19;;;23069:26;-1:-1:-1;;23158:1:25;23154:14;;;23170:3;23150:24;23146:37;23142:42;23127:58;23112:74;;22999:201;-1:-1:-1;;;;;23246:1:25;23230:14;;;23226:22;23213:36;;-1:-1:-1;22164:1352:25:o;23521:287::-;23699:2;23684:18;;23711:48;23688:9;23741:6;23711:48;:::i;:::-;23795:6;23790:2;23779:9;23775:18;23768:34;23521:287;;;;;:::o;24505:301::-;24676:2;24665:9;24658:21;24639:4;24696:45;24737:2;24726:9;24722:18;24714:6;24696:45;:::i;:::-;24688:53;;24791:6;24784:14;24777:22;24772:2;24761:9;24757:18;24750:50;24505:301;;;;;:::o;26203:289::-;26334:3;26372:6;26366:13;26388:66;26447:6;26442:3;26435:4;26427:6;26423:17;26388:66;:::i;:::-;26470:16;;;;;26203:289;-1:-1:-1;;26203:289:25:o;27208:299::-;27381:2;27366:18;;27393:49;27370:9;27424:6;27393:49;:::i;:::-;27492:6;27485:14;27478:22;27473:2;27462:9;27458:18;27451:50;27208:299;;;;;:::o;27512:454::-;27737:2;27726:9;27719:21;27700:4;27763:45;27804:2;27793:9;27789:18;27781:6;27763:45;:::i;:::-;27856:9;27848:6;27844:22;27839:2;27828:9;27824:18;27817:50;27884:33;27910:6;27902;27884:33;:::i;:::-;27876:41;;;27953:6;27948:2;27937:9;27933:18;27926:34;27512:454;;;;;;:::o;28314:168::-;28387:9;;;28418;;28435:15;;;28429:22;;28415:37;28405:71;;28456:18;;:::i;28619:217::-;28659:1;28685;28675:132;;28729:10;28724:3;28720:20;28717:1;28710:31;28764:4;28761:1;28754:15;28792:4;28789:1;28782:15;28675:132;-1:-1:-1;28821:9:25;;28619:217::o;28841:128::-;28908:9;;;28929:11;;;28926:37;;;28943:18;;:::i;29657:489::-;-1:-1:-1;;;;;29926:15:25;;;29908:34;;29978:15;;29973:2;29958:18;;29951:43;30025:2;30010:18;;30003:34;;;30073:3;30068:2;30053:18;;30046:31;;;29851:4;;30094:46;;30120:19;;30112:6;30094:46;:::i;:::-;30086:54;29657:489;-1:-1:-1;;;;;;29657:489:25:o;30151:249::-;30220:6;30273:2;30261:9;30252:7;30248:23;30244:32;30241:52;;;30289:1;30286;30279:12;30241:52;30321:9;30315:16;30340:30;30364:5;30340:30;:::i;30405:496::-;30584:3;30622:6;30616:13;30638:66;30697:6;30692:3;30685:4;30677:6;30673:17;30638:66;:::i;:::-;30767:13;;30726:16;;;;30789:70;30767:13;30726:16;30836:4;30824:17;;30789:70;:::i;:::-;30875:20;;30405:496;-1:-1:-1;;;;30405:496:25:o"},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","EVALUATOR_ROLE()":"30d0ea31","HOSPITAL_ROLE()":"f6ba6678","INSURANCE_ROLE()":"b752a74b","accessEvaluationFile(uint256,string)":"4d6cac7a","accessHistory(uint256,uint256)":"e3c40e1a","addVerifiedInsurance(string)":"dab6c121","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","billPatientThroughInsurance(uint256,uint256,string)":"cc8d4701","evaluations(uint256)":"33c63b17","getAccessHistory(uint256)":"f2cec6ee","getApproved(uint256)":"081812fc","getEvaluation(uint256)":"c23d4c85","getEvaluationTypes()":"e58da742","getPatientBills(address)":"f41b30f3","getPatientDiagnosis(address)":"8577fee7","getRoleAdmin(bytes32)":"248a9ca3","getSeverityLevels()":"37a13153","grantRole(bytes32,address)":"2f2ff15d","hasPaidAccess(uint256,address)":"9e061452","hasRole(bytes32,address)":"91d14854","isApprovedForAll(address,address)":"e985e9c5","medicalBills(bytes32)":"fc82c0ef","name()":"06fdde03","ownerOf(uint256)":"6352211e","patientBills(address,uint256)":"05f047df","patientDiagnosis(address)":"eda31369","payBill(bytes32,string)":"a8c6faa5","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","totalDiagnosedPatients()":"b8cd16b4","totalEvaluations()":"04345c93","totalInsurancePayments()":"30b5abd7","transferFrom(address,address,uint256)":"23b872dd","updateDiagnosis(address,uint256,uint8,string)":"4668bf10","uploadEvaluationWithInsurance((string,string,string,string,uint256,bool),bytes32,string,bytes32,uint8,uint256,string)":"c0e8224a","verifiedInsuranceProviders(string)":"edaef905"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"billId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"patient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"insurancePortion\",\"type\":\"uint256\"}],\"name\":\"BillCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"patient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum AutismMedicalSystemSimple.SeverityLevel\",\"name\":\"newLevel\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"evaluationTokenId\",\"type\":\"uint256\"}],\"name\":\"DiagnosisUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"patient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum AutismMedicalSystemSimple.EvaluationType\",\"name\":\"evaluationType\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"paidByInsurance\",\"type\":\"bool\"}],\"name\":\"EvaluationUploaded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"accessor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"purpose\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"requiresPayment\",\"type\":\"bool\"}],\"name\":\"FileAccessGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"insuranceProvider\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"xrplTxHash\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountUSD\",\"type\":\"uint256\"}],\"name\":\"InsurancePaymentProcessed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EVALUATOR_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"HOSPITAL_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"INSURANCE_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"purpose\",\"type\":\"string\"}],\"name\":\"accessEvaluationFile\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"fileLocation\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"encryptedKey\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"requiresPayment\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"accessHistory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"accessor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"accessTime\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"purpose\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isPaid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"provider\",\"type\":\"string\"}],\"name\":\"addVerifiedInsurance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"evaluationTokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"serviceAmountUSD\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"serviceDescription\",\"type\":\"string\"}],\"name\":\"billPatientThroughInsurance\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"billId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"evaluations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"patient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"evaluator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"fileHash\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"fileLocation\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"encryptedKey\",\"type\":\"bytes32\"},{\"internalType\":\"enum AutismMedicalSystemSimple.EvaluationType\",\"name\":\"evaluationType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"evaluationDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"uploadDate\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isPaidByInsurance\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"insurancePaymentTx\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"evaluationCostUSD\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"insuranceProvider\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"policyNumber\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"memberID\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"insuranceXRPL\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"coveragePercentage\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isVerified\",\"type\":\"bool\"}],\"internalType\":\"struct AutismMedicalSystemSimple.InsuranceInfo\",\"name\":\"insurance\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getAccessHistory\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"accessor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"accessTime\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"purpose\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isPaid\",\"type\":\"bool\"}],\"internalType\":\"struct AutismMedicalSystemSimple.AccessRecord[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getEvaluation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"patient\",\"type\":\"address\"},{\"internalType\":\"enum AutismMedicalSystemSimple.EvaluationType\",\"name\":\"evaluationType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"evaluationDate\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isPaidByInsurance\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"insuranceProvider\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEvaluationTypes\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"patient\",\"type\":\"address\"}],\"name\":\"getPatientBills\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"patient\",\"type\":\"address\"}],\"name\":\"getPatientDiagnosis\",\"outputs\":[{\"internalType\":\"enum AutismMedicalSystemSimple.SeverityLevel\",\"name\":\"currentLevel\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"firstDiagnosisDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateDate\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"primaryDiagnosis\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"totalEvals\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSeverityLevels\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"hasPaidAccess\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"medicalBills\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"billId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"evaluationTokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"hospital\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"patient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountUSD\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"insurancePortion\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"patientPortion\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isPaid\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"patientBills\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"patientDiagnosis\",\"outputs\":[{\"internalType\":\"enum AutismMedicalSystemSimple.SeverityLevel\",\"name\":\"currentLevel\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"firstDiagnosisDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateDate\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"primaryDiagnosis\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"totalEvaluations\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"billId\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"xrplPaymentTx\",\"type\":\"string\"}],\"name\":\"payBill\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalDiagnosedPatients\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalEvaluations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalInsurancePayments\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"patient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"evaluationTokenId\",\"type\":\"uint256\"},{\"internalType\":\"enum AutismMedicalSystemSimple.SeverityLevel\",\"name\":\"newLevel\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"primaryDiagnosis\",\"type\":\"string\"}],\"name\":\"updateDiagnosis\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"insuranceProvider\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"policyNumber\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"memberID\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"insuranceXRPL\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"coveragePercentage\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isVerified\",\"type\":\"bool\"}],\"internalType\":\"struct AutismMedicalSystemSimple.InsuranceInfo\",\"name\":\"insurance\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"fileHash\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"fileLocation\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"encryptedKey\",\"type\":\"bytes32\"},{\"internalType\":\"enum AutismMedicalSystemSimple.EvaluationType\",\"name\":\"evaluationType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"evaluationCostUSD\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"insurancePaymentTxHash\",\"type\":\"string\"}],\"name\":\"uploadEvaluationWithInsurance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"verifiedInsuranceProviders\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Simplified autism evaluation management system for testing Core functionality: Upload evaluations, track diagnosis, manage access\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"accessEvaluationFile(uint256,string)\":{\"details\":\"FLOW 2: Hospital/Insurance can check and download file\"},\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"billPatientThroughInsurance(uint256,uint256,string)\":{\"details\":\"FLOW 3: Hospital can bill patient through insurance\"},\"getAccessHistory(uint256)\":{\"details\":\"Get access history for an evaluation\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"getEvaluation(uint256)\":{\"details\":\"Get evaluation details\"},\"getPatientBills(address)\":{\"details\":\"Get patient's medical bills\"},\"getPatientDiagnosis(address)\":{\"details\":\"Get patient diagnosis record\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"payBill(bytes32,string)\":{\"details\":\"Pay medical bill (simplified)\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"},\"updateDiagnosis(address,uint256,uint8,string)\":{\"details\":\"FLOW 4: Track diagnosis history for patient\"},\"uploadEvaluationWithInsurance((string,string,string,string,uint256,bool),bytes32,string,bytes32,uint8,uint256,string)\":{\"details\":\"FLOW 1: Upload evaluation with insurance payment\"}},\"title\":\"AutismMedicalSystemSimple\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AutismMedicalSystemSimple.sol\":\"AutismMedicalSystemSimple\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x1a6b4f6b7798ab80929d491b89d5427a9b3338c0fd1acd0ba325f69c6f1646af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bb7f346c12a14dc622bc105ce3c47202fbc89f4b153a28a63bb68193297330c\",\"dweb:/ipfs/QmagwF8P3bUBXwdo159ueEnY9dLSvEWwK24kk2op58egwG\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x856ca1885aec23d54da3f2760b5d216d1b28ad20f798000336375a30dbbc1558\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc725c462ccbf284432d3123ab8c9bab24903730cae227ae4945878039d2fe54\",\"dweb:/ipfs/QmdiEVMvm8njp96dm2s4mThYBD74tY59mNP6s7CzKkGHAh\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xca34c490d41c332106d30b657f00dc028532cb6b9fef2b1729670ce476b36bce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef5e7685d50ed8aae2104a7eb2c31ae5a3b508f24fadfa7611f92f819201aee9\",\"dweb:/ipfs/QmYbTD32FPrEfP1hkniQmRxVUWp8GTSqFV1Bhwx1HVirse\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x6ead281d4569c26b3dee7313aefff24add906f3600b57d8aef1255a17d6b34e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aec0f9c9f14f829353663e1946bf0ea00a1771ff6ddb4f7cbe14893397b4b55c\",\"dweb:/ipfs/QmVMR3SdijdM2BpL9Yp3u7Riaxqgs1FnZ1Rfg2CMjKGtVS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0xb9dc602a845c73d11f1fe38039c0c2cf70fedd2d4afd877c0ed2d0383ffaa232\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59eb46224e996c2f9ecb9a821e65b920c2ecfe9df734613c3df9831de373491c\",\"dweb:/ipfs/QmTsZzJTqRavv64zyaWovcWkUNwfU3uo8uiUjrMFEm8MMj\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xf46268c37522320bb2119a5a394bc5c739a95c0c574c8d08e8c643f4d06e5c76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://517e4b295f35b9947c72ad7379a6089439ece7bb6f4a2ea0a159da13046c039e\",\"dweb:/ipfs/QmZXzkSfLUbvujig3zVbpDHykpHhqLpvQtdiN3B5j4TA3u\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xc2dfdc8fbc8fdb142575c90568e237b809a1feaccff23e32d00131887a08dc36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbc1d283ee77da43d61661b5ba1adeb427d6a6224335494a9a857dce41d9f1d6\",\"dweb:/ipfs/QmTnA35z7XzkxFSRUqB6CGVH1nhmvajwnDNfA5PiKmYuCi\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/AutismMedicalSystemSimple.sol\":{\"keccak256\":\"0xb63b1532b779f0b69f7761978aac033b6f70e249a6a7ddc6cceef75249f69182\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://de6aea3e1fe0f3eb811956bfdb4851b928c666bd9f6dfab4c9b78a2741b0a8e7\",\"dweb:/ipfs/QmXpgnGVrXLVFTcJVhYhfbjRWPosiC9FPKndzG1gZEvvjt\"]}},\"version\":1}"}},"contracts/MedicalRecordToken.sol":{"MedicalRecordToken":{"abi":[{"inputs":[{"internalType":"address","name":"initialOwner","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":true,"internalType":"address","name":"hospital","type":"address"},{"indexed":false,"internalType":"uint256","name":"expiresAt","type":"uint256"},{"indexed":false,"internalType":"bytes32","name":"xrplTransactionHash","type":"bytes32"}],"name":"AccessGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":true,"internalType":"address","name":"hospital","type":"address"}],"name":"AccessRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_toTokenId","type":"uint256"}],"name":"BatchMetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":true,"internalType":"address","name":"patient","type":"address"},{"indexed":false,"internalType":"bytes32","name":"fileHash","type":"bytes32"},{"indexed":false,"internalType":"string","name":"evaluationType","type":"string"}],"name":"MedicalRecordMinted","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"MetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"ACCESS_COST","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"deactivateRecord","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"fileHashToTokenId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"hospital","type":"address"}],"name":"getAccessPermission","outputs":[{"internalType":"bool","name":"hasAccess","type":"bool"},{"internalType":"uint256","name":"grantedAt","type":"uint256"},{"internalType":"uint256","name":"expiresAt","type":"uint256"},{"internalType":"uint256","name":"paymentAmount","type":"uint256"},{"internalType":"bytes32","name":"xrplTransactionHash","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getMedicalRecord","outputs":[{"internalType":"bytes32","name":"fileHash","type":"bytes32"},{"internalType":"address","name":"patientAddress","type":"address"},{"internalType":"uint256","name":"createdAt","type":"uint256"},{"internalType":"string","name":"evaluationType","type":"string"},{"internalType":"bool","name":"isActive","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"patient","type":"address"}],"name":"getPatientTokens","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"hospital","type":"address"},{"internalType":"bytes32","name":"xrplTransactionHash","type":"bytes32"},{"internalType":"uint256","name":"accessDuration","type":"uint256"}],"name":"grantAccess","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"hospital","type":"address"}],"name":"hasValidAccess","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"medicalRecords","outputs":[{"internalType":"bytes32","name":"fileHash","type":"bytes32"},{"internalType":"address","name":"patientAddress","type":"address"},{"internalType":"uint256","name":"createdAt","type":"uint256"},{"internalType":"string","name":"evaluationType","type":"string"},{"internalType":"bool","name":"isActive","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"patient","type":"address"},{"internalType":"bytes32","name":"fileHash","type":"bytes32"},{"internalType":"string","name":"uri","type":"string"},{"internalType":"string","name":"evaluationType","type":"string"}],"name":"mintMedicalRecord","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"patientTokens","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"hospital","type":"address"}],"name":"revokeAccess","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_430":{"entryPoint":null,"id":430,"parameterSlots":1,"returnSlots":0},"@_766":{"entryPoint":null,"id":766,"parameterSlots":2,"returnSlots":0},"@_8446":{"entryPoint":null,"id":8446,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_526":{"entryPoint":236,"id":526,"parameterSlots":1,"returnSlots":0},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":318,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":450,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":533,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":390,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x41":{"entryPoint":368,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:3235:25","statements":[{"nodeType":"YulBlock","src":"6:3:25","statements":[]},{"body":{"nodeType":"YulBlock","src":"95:209:25","statements":[{"body":{"nodeType":"YulBlock","src":"141:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"150:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"153:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"143:6:25"},"nodeType":"YulFunctionCall","src":"143:12:25"},"nodeType":"YulExpressionStatement","src":"143:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"116:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"125:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"112:3:25"},"nodeType":"YulFunctionCall","src":"112:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"137:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"108:3:25"},"nodeType":"YulFunctionCall","src":"108:32:25"},"nodeType":"YulIf","src":"105:52:25"},{"nodeType":"YulVariableDeclaration","src":"166:29:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"185:9:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"179:5:25"},"nodeType":"YulFunctionCall","src":"179:16:25"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"170:5:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"258:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"267:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"270:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"260:6:25"},"nodeType":"YulFunctionCall","src":"260:12:25"},"nodeType":"YulExpressionStatement","src":"260:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"217:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"228:5:25"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"243:3:25","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"248:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"239:3:25"},"nodeType":"YulFunctionCall","src":"239:11:25"},{"kind":"number","nodeType":"YulLiteral","src":"252:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"235:3:25"},"nodeType":"YulFunctionCall","src":"235:19:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"224:3:25"},"nodeType":"YulFunctionCall","src":"224:31:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"214:2:25"},"nodeType":"YulFunctionCall","src":"214:42:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"207:6:25"},"nodeType":"YulFunctionCall","src":"207:50:25"},"nodeType":"YulIf","src":"204:70:25"},{"nodeType":"YulAssignment","src":"283:15:25","value":{"name":"value","nodeType":"YulIdentifier","src":"293:5:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"283:6:25"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"61:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"72:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"84:6:25","type":""}],"src":"14:290:25"},{"body":{"nodeType":"YulBlock","src":"341:95:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"358:1:25","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"365:3:25","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"370:10:25","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"361:3:25"},"nodeType":"YulFunctionCall","src":"361:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"351:6:25"},"nodeType":"YulFunctionCall","src":"351:31:25"},"nodeType":"YulExpressionStatement","src":"351:31:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"398:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"401:4:25","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"391:6:25"},"nodeType":"YulFunctionCall","src":"391:15:25"},"nodeType":"YulExpressionStatement","src":"391:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"422:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"425:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"415:6:25"},"nodeType":"YulFunctionCall","src":"415:15:25"},"nodeType":"YulExpressionStatement","src":"415:15:25"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"309:127:25"},{"body":{"nodeType":"YulBlock","src":"496:325:25","statements":[{"nodeType":"YulAssignment","src":"506:22:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"520:1:25","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"523:4:25"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"516:3:25"},"nodeType":"YulFunctionCall","src":"516:12:25"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"506:6:25"}]},{"nodeType":"YulVariableDeclaration","src":"537:38:25","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"567:4:25"},{"kind":"number","nodeType":"YulLiteral","src":"573:1:25","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"563:3:25"},"nodeType":"YulFunctionCall","src":"563:12:25"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"541:18:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"614:31:25","statements":[{"nodeType":"YulAssignment","src":"616:27:25","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"630:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"638:4:25","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"626:3:25"},"nodeType":"YulFunctionCall","src":"626:17:25"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"616:6:25"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"594:18:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"587:6:25"},"nodeType":"YulFunctionCall","src":"587:26:25"},"nodeType":"YulIf","src":"584:61:25"},{"body":{"nodeType":"YulBlock","src":"704:111:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"725:1:25","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"732:3:25","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"737:10:25","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"728:3:25"},"nodeType":"YulFunctionCall","src":"728:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"718:6:25"},"nodeType":"YulFunctionCall","src":"718:31:25"},"nodeType":"YulExpressionStatement","src":"718:31:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"769:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"772:4:25","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"762:6:25"},"nodeType":"YulFunctionCall","src":"762:15:25"},"nodeType":"YulExpressionStatement","src":"762:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"797:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"800:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"790:6:25"},"nodeType":"YulFunctionCall","src":"790:15:25"},"nodeType":"YulExpressionStatement","src":"790:15:25"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"660:18:25"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"683:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"691:2:25","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"680:2:25"},"nodeType":"YulFunctionCall","src":"680:14:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"657:2:25"},"nodeType":"YulFunctionCall","src":"657:38:25"},"nodeType":"YulIf","src":"654:161:25"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"476:4:25","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"485:6:25","type":""}],"src":"441:380:25"},{"body":{"nodeType":"YulBlock","src":"882:65:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"899:1:25","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"902:3:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"892:6:25"},"nodeType":"YulFunctionCall","src":"892:14:25"},"nodeType":"YulExpressionStatement","src":"892:14:25"},{"nodeType":"YulAssignment","src":"915:26:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"933:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"936:4:25","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"923:9:25"},"nodeType":"YulFunctionCall","src":"923:18:25"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"915:4:25"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"865:3:25","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"873:4:25","type":""}],"src":"826:121:25"},{"body":{"nodeType":"YulBlock","src":"1033:464:25","statements":[{"body":{"nodeType":"YulBlock","src":"1066:425:25","statements":[{"nodeType":"YulVariableDeclaration","src":"1080:11:25","value":{"kind":"number","nodeType":"YulLiteral","src":"1090:1:25","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1084:2:25","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"1111:2:25"},{"name":"array","nodeType":"YulIdentifier","src":"1115:5:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1104:6:25"},"nodeType":"YulFunctionCall","src":"1104:17:25"},"nodeType":"YulExpressionStatement","src":"1104:17:25"},{"nodeType":"YulVariableDeclaration","src":"1134:31:25","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"1156:2:25"},{"kind":"number","nodeType":"YulLiteral","src":"1160:4:25","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"1146:9:25"},"nodeType":"YulFunctionCall","src":"1146:19:25"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"1138:4:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1178:57:25","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1201:4:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1211:1:25","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"1218:10:25"},{"kind":"number","nodeType":"YulLiteral","src":"1230:2:25","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1214:3:25"},"nodeType":"YulFunctionCall","src":"1214:19:25"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1207:3:25"},"nodeType":"YulFunctionCall","src":"1207:27:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1197:3:25"},"nodeType":"YulFunctionCall","src":"1197:38:25"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"1182:11:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"1272:23:25","statements":[{"nodeType":"YulAssignment","src":"1274:19:25","value":{"name":"data","nodeType":"YulIdentifier","src":"1289:4:25"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"1274:11:25"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"1254:10:25"},{"kind":"number","nodeType":"YulLiteral","src":"1266:4:25","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1251:2:25"},"nodeType":"YulFunctionCall","src":"1251:20:25"},"nodeType":"YulIf","src":"1248:47:25"},{"nodeType":"YulVariableDeclaration","src":"1308:41:25","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1322:4:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1332:1:25","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"1339:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"1344:2:25","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1335:3:25"},"nodeType":"YulFunctionCall","src":"1335:12:25"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1328:3:25"},"nodeType":"YulFunctionCall","src":"1328:20:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1318:3:25"},"nodeType":"YulFunctionCall","src":"1318:31:25"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"1312:2:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1362:24:25","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"1375:11:25"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"1366:5:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"1460:21:25","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1469:5:25"},{"name":"_1","nodeType":"YulIdentifier","src":"1476:2:25"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"1462:6:25"},"nodeType":"YulFunctionCall","src":"1462:17:25"},"nodeType":"YulExpressionStatement","src":"1462:17:25"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1410:5:25"},{"name":"_2","nodeType":"YulIdentifier","src":"1417:2:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1407:2:25"},"nodeType":"YulFunctionCall","src":"1407:13:25"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1421:26:25","statements":[{"nodeType":"YulAssignment","src":"1423:22:25","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1436:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"1443:1:25","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1432:3:25"},"nodeType":"YulFunctionCall","src":"1432:13:25"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"1423:5:25"}]}]},"pre":{"nodeType":"YulBlock","src":"1403:3:25","statements":[]},"src":"1399:82:25"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"1049:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"1054:2:25","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1046:2:25"},"nodeType":"YulFunctionCall","src":"1046:11:25"},"nodeType":"YulIf","src":"1043:448:25"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"1005:5:25","type":""},{"name":"len","nodeType":"YulTypedName","src":"1012:3:25","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"1017:10:25","type":""}],"src":"952:545:25"},{"body":{"nodeType":"YulBlock","src":"1587:81:25","statements":[{"nodeType":"YulAssignment","src":"1597:65:25","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1612:4:25"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1630:1:25","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"1633:3:25"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1626:3:25"},"nodeType":"YulFunctionCall","src":"1626:11:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1643:1:25","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1639:3:25"},"nodeType":"YulFunctionCall","src":"1639:6:25"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1622:3:25"},"nodeType":"YulFunctionCall","src":"1622:24:25"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1618:3:25"},"nodeType":"YulFunctionCall","src":"1618:29:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1608:3:25"},"nodeType":"YulFunctionCall","src":"1608:40:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1654:1:25","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"1657:3:25"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1650:3:25"},"nodeType":"YulFunctionCall","src":"1650:11:25"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1605:2:25"},"nodeType":"YulFunctionCall","src":"1605:57:25"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"1597:4:25"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1564:4:25","type":""},{"name":"len","nodeType":"YulTypedName","src":"1570:3:25","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"1578:4:25","type":""}],"src":"1502:166:25"},{"body":{"nodeType":"YulBlock","src":"1769:1256:25","statements":[{"nodeType":"YulVariableDeclaration","src":"1779:24:25","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1799:3:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1793:5:25"},"nodeType":"YulFunctionCall","src":"1793:10:25"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"1783:6:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"1846:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1848:16:25"},"nodeType":"YulFunctionCall","src":"1848:18:25"},"nodeType":"YulExpressionStatement","src":"1848:18:25"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"1818:6:25"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1834:2:25","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"1838:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1830:3:25"},"nodeType":"YulFunctionCall","src":"1830:10:25"},{"kind":"number","nodeType":"YulLiteral","src":"1842:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1826:3:25"},"nodeType":"YulFunctionCall","src":"1826:18:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1815:2:25"},"nodeType":"YulFunctionCall","src":"1815:30:25"},"nodeType":"YulIf","src":"1812:56:25"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"1921:4:25"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"1959:4:25"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"1953:5:25"},"nodeType":"YulFunctionCall","src":"1953:11:25"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"1927:25:25"},"nodeType":"YulFunctionCall","src":"1927:38:25"},{"name":"newLen","nodeType":"YulIdentifier","src":"1967:6:25"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"1877:43:25"},"nodeType":"YulFunctionCall","src":"1877:97:25"},"nodeType":"YulExpressionStatement","src":"1877:97:25"},{"nodeType":"YulVariableDeclaration","src":"1983:18:25","value":{"kind":"number","nodeType":"YulLiteral","src":"2000:1:25","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"1987:9:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2010:23:25","value":{"kind":"number","nodeType":"YulLiteral","src":"2029:4:25","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"2014:11:25","type":""}]},{"nodeType":"YulAssignment","src":"2042:24:25","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"2055:11:25"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"2042:9:25"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"2112:656:25","statements":[{"nodeType":"YulVariableDeclaration","src":"2126:35:25","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"2145:6:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2157:2:25","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2153:3:25"},"nodeType":"YulFunctionCall","src":"2153:7:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2141:3:25"},"nodeType":"YulFunctionCall","src":"2141:20:25"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"2130:7:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2174:49:25","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2218:4:25"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"2188:29:25"},"nodeType":"YulFunctionCall","src":"2188:35:25"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"2178:6:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2236:10:25","value":{"kind":"number","nodeType":"YulLiteral","src":"2245:1:25","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"2240:1:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"2323:172:25","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2348:6:25"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2366:3:25"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"2371:9:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2362:3:25"},"nodeType":"YulFunctionCall","src":"2362:19:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2356:5:25"},"nodeType":"YulFunctionCall","src":"2356:26:25"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2341:6:25"},"nodeType":"YulFunctionCall","src":"2341:42:25"},"nodeType":"YulExpressionStatement","src":"2341:42:25"},{"nodeType":"YulAssignment","src":"2400:24:25","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2414:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"2422:1:25","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2410:3:25"},"nodeType":"YulFunctionCall","src":"2410:14:25"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2400:6:25"}]},{"nodeType":"YulAssignment","src":"2441:40:25","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"2458:9:25"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"2469:11:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2454:3:25"},"nodeType":"YulFunctionCall","src":"2454:27:25"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"2441:9:25"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2270:1:25"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"2273:7:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2267:2:25"},"nodeType":"YulFunctionCall","src":"2267:14:25"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2282:28:25","statements":[{"nodeType":"YulAssignment","src":"2284:24:25","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2293:1:25"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"2296:11:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2289:3:25"},"nodeType":"YulFunctionCall","src":"2289:19:25"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"2284:1:25"}]}]},"pre":{"nodeType":"YulBlock","src":"2263:3:25","statements":[]},"src":"2259:236:25"},{"body":{"nodeType":"YulBlock","src":"2543:166:25","statements":[{"nodeType":"YulVariableDeclaration","src":"2561:43:25","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2588:3:25"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"2593:9:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2584:3:25"},"nodeType":"YulFunctionCall","src":"2584:19:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2578:5:25"},"nodeType":"YulFunctionCall","src":"2578:26:25"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"2565:9:25","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2628:6:25"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"2640:9:25"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2667:1:25","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"2670:6:25"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2663:3:25"},"nodeType":"YulFunctionCall","src":"2663:14:25"},{"kind":"number","nodeType":"YulLiteral","src":"2679:3:25","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2659:3:25"},"nodeType":"YulFunctionCall","src":"2659:24:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2689:1:25","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2685:3:25"},"nodeType":"YulFunctionCall","src":"2685:6:25"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2655:3:25"},"nodeType":"YulFunctionCall","src":"2655:37:25"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2651:3:25"},"nodeType":"YulFunctionCall","src":"2651:42:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2636:3:25"},"nodeType":"YulFunctionCall","src":"2636:58:25"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2621:6:25"},"nodeType":"YulFunctionCall","src":"2621:74:25"},"nodeType":"YulExpressionStatement","src":"2621:74:25"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"2514:7:25"},{"name":"newLen","nodeType":"YulIdentifier","src":"2523:6:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2511:2:25"},"nodeType":"YulFunctionCall","src":"2511:19:25"},"nodeType":"YulIf","src":"2508:201:25"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2729:4:25"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2743:1:25","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"2746:6:25"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2739:3:25"},"nodeType":"YulFunctionCall","src":"2739:14:25"},{"kind":"number","nodeType":"YulLiteral","src":"2755:1:25","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2735:3:25"},"nodeType":"YulFunctionCall","src":"2735:22:25"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2722:6:25"},"nodeType":"YulFunctionCall","src":"2722:36:25"},"nodeType":"YulExpressionStatement","src":"2722:36:25"}]},"nodeType":"YulCase","src":"2105:663:25","value":{"kind":"number","nodeType":"YulLiteral","src":"2110:1:25","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"2785:234:25","statements":[{"nodeType":"YulVariableDeclaration","src":"2799:14:25","value":{"kind":"number","nodeType":"YulLiteral","src":"2812:1:25","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"2803:5:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"2848:67:25","statements":[{"nodeType":"YulAssignment","src":"2866:35:25","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2885:3:25"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"2890:9:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2881:3:25"},"nodeType":"YulFunctionCall","src":"2881:19:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2875:5:25"},"nodeType":"YulFunctionCall","src":"2875:26:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2866:5:25"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"2829:6:25"},"nodeType":"YulIf","src":"2826:89:25"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2935:4:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2994:5:25"},{"name":"newLen","nodeType":"YulIdentifier","src":"3001:6:25"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"2941:52:25"},"nodeType":"YulFunctionCall","src":"2941:67:25"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2928:6:25"},"nodeType":"YulFunctionCall","src":"2928:81:25"},"nodeType":"YulExpressionStatement","src":"2928:81:25"}]},"nodeType":"YulCase","src":"2777:242:25","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"2085:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"2093:2:25","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2082:2:25"},"nodeType":"YulFunctionCall","src":"2082:14:25"},"nodeType":"YulSwitch","src":"2075:944:25"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"1754:4:25","type":""},{"name":"src","nodeType":"YulTypedName","src":"1760:3:25","type":""}],"src":"1673:1352:25"},{"body":{"nodeType":"YulBlock","src":"3131:102:25","statements":[{"nodeType":"YulAssignment","src":"3141:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3153:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"3164:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3149:3:25"},"nodeType":"YulFunctionCall","src":"3149:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3141:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3183:9:25"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3198:6:25"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3214:3:25","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"3219:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3210:3:25"},"nodeType":"YulFunctionCall","src":"3210:11:25"},{"kind":"number","nodeType":"YulLiteral","src":"3223:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3206:3:25"},"nodeType":"YulFunctionCall","src":"3206:19:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3194:3:25"},"nodeType":"YulFunctionCall","src":"3194:32:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3176:6:25"},"nodeType":"YulFunctionCall","src":"3176:51:25"},"nodeType":"YulExpressionStatement","src":"3176:51:25"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3100:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3111:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3122:4:25","type":""}],"src":"3030:203:25"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}","id":25,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b50604051620022e8380380620022e883398101604081905262000034916200013e565b806040518060400160405280601481526020017f4d65646963616c205265636f726420546f6b656e0000000000000000000000008152506040518060400160405280600381526020016213549560ea1b815250816000908162000098919062000215565b506001620000a7828262000215565b5050506001600160a01b038116620000d957604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b620000e481620000ec565b5050620002e1565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000602082840312156200015157600080fd5b81516001600160a01b03811681146200016957600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200019b57607f821691505b602082108103620001bc57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200021057600081815260208120601f850160051c81016020861015620001eb5750805b601f850160051c820191505b818110156200020c57828155600101620001f7565b5050505b505050565b81516001600160401b0381111562000231576200023162000170565b620002498162000242845462000186565b84620001c2565b602080601f831160018114620002815760008415620002685750858301515b600019600386901b1c1916600185901b1785556200020c565b600085815260208120601f198616915b82811015620002b25788860151825594840194600190910190840162000291565b5085821015620002d15787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b611ff780620002f16000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c80637b4a1ae7116100f9578063c87b56dd11610097578063dcef1e1e11610071578063dcef1e1e146103fc578063e985e9c51461040f578063f2fde38b14610422578063f8e89a6d1461043557600080fd5b8063c87b56dd146103c3578063d504d37a146103d6578063d9a5ec1b146103e957600080fd5b80638da5cb5b116100d35780638da5cb5b1461038457806395d89b4114610395578063a22cb4651461039d578063b88d4fde146103b057600080fd5b80637b4a1ae714610342578063801c406b146103555780638681f4471461036457600080fd5b806323b872dd116101665780636352211e116101405780636352211e1461030157806370a0823114610314578063715018a6146103275780637564a13c1461032f57600080fd5b806323b872dd1461029e57806342842e0e146102b15780634db65851146102c457600080fd5b8063095ea7b3116101a2578063095ea7b3146102315780630c3887221461024657806312d533d71461026a57806319c1833f1461028b57600080fd5b806301ffc9a7146101c957806306fdde03146101f1578063081812fc14610206575b600080fd5b6101dc6101d736600461194d565b610455565b60405190151581526020015b60405180910390f35b6101f9610466565b6040516101e891906119ba565b6102196102143660046119cd565b6104f8565b6040516001600160a01b0390911681526020016101e8565b61024461023f366004611a02565b610521565b005b6102596102543660046119cd565b610530565b6040516101e8959493929190611a2c565b61027d610278366004611a02565b610646565b6040519081526020016101e8565b6102446102993660046119cd565b610677565b6102446102ac366004611a6d565b610732565b6102446102bf366004611a6d565b6107bd565b6102d76102d2366004611aa9565b6107dd565b6040805195151586526020860194909452928401919091526060830152608082015260a0016101e8565b61021961030f3660046119cd565b610865565b61027d610322366004611ad5565b610870565b6102446108b8565b61025961033d3660046119cd565b6108cc565b610244610350366004611af0565b610992565b61027d67d02ab486cedc000081565b610377610372366004611ad5565b610b32565b6040516101e89190611b2b565b6007546001600160a01b0316610219565b6101f9610b9e565b6102446103ab366004611b6f565b610bad565b6102446103be366004611c37565b610bb8565b6101f96103d13660046119cd565b610bd0565b6101dc6103e4366004611aa9565b610bdb565b6102446103f7366004611aa9565b610c5c565b61027d61040a366004611cd3565b610d61565b6101dc61041d366004611d45565b610f1c565b610244610430366004611ad5565b610f4a565b61027d6104433660046119cd565b600a6020526000908152604090205481565b600061046082610f88565b92915050565b60606000805461047590611d6f565b80601f01602080910402602001604051908101604052809291908181526020018280546104a190611d6f565b80156104ee5780601f106104c3576101008083540402835291602001916104ee565b820191906000526020600020905b8154815290600101906020018083116104d157829003601f168201915b5050505050905090565b600061050382610fad565b506000828152600460205260409020546001600160a01b0316610460565b61052c828233610fe5565b5050565b600080806060818061054187610ff2565b6001600160a01b0316036105705760405162461bcd60e51b815260040161056790611da9565b60405180910390fd5b600086815260096020526040902080546001820154600283015460048401546003850180546001600160a01b0390941693909160ff169082906105b290611d6f565b80601f01602080910402602001604051908101604052809291908181526020018280546105de90611d6f565b801561062b5780601f106106005761010080835404028352916020019161062b565b820191906000526020600020905b81548152906001019060200180831161060e57829003601f168201915b50505050509150955095509550955095505091939590929450565b600b602052816000526040600020818154811061066257600080fd5b90600052602060002001600091509150505481565b600061068282610ff2565b6001600160a01b0316036106a85760405162461bcd60e51b815260040161056790611da9565b6007546001600160a01b03163314806106da57506000818152600960205260409020600101546001600160a01b031633145b6107175760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b6044820152606401610567565b6000908152600960205260409020600401805460ff19169055565b6001600160a01b03821661075c57604051633250574960e11b815260006004820152602401610567565b600061076983833361100d565b9050836001600160a01b0316816001600160a01b0316146107b7576040516364283d7b60e01b81526001600160a01b0380861660048301526024820184905282166044820152606401610567565b50505050565b6107d883838360405180602001604052806000815250610bb8565b505050565b600080808080806107ed88610ff2565b6001600160a01b0316036108135760405162461bcd60e51b815260040161056790611da9565b505050600093845250506009602090815260408084206001600160a01b03939093168452600590920190529020805460018201546002830154600384015460049094015460ff90931694919390929091565b600061046082610fad565b60006001600160a01b03821661089c576040516322718ad960e21b815260006004820152602401610567565b506001600160a01b031660009081526003602052604090205490565b6108c0611101565b6108ca600061112e565b565b600960205260009081526040902080546001820154600283015460038401805493946001600160a01b039093169391929161090690611d6f565b80601f016020809104026020016040519081016040528092919081815260200182805461093290611d6f565b801561097f5780601f106109545761010080835404028352916020019161097f565b820191906000526020600020905b81548152906001019060200180831161096257829003601f168201915b5050506004909301549192505060ff1685565b61099a611101565b60006109a585610ff2565b6001600160a01b0316036109cb5760405162461bcd60e51b815260040161056790611da9565b6001600160a01b038316610a215760405162461bcd60e51b815260206004820152601860248201527f496e76616c696420686f73706974616c206164647265737300000000000000006044820152606401610567565b60008481526009602052604090206004015460ff16610a825760405162461bcd60e51b815260206004820152601a60248201527f4d65646963616c207265636f726420697320696e6163746976650000000000006044820152606401610567565b60008481526009602090815260408083206001600160a01b038716845260058101909252909120805460ff19166001908117825542908201819055610ac8908490611ded565b6002820181905567d02ab486cedc000060038301556004820185905560408051918252602082018690526001600160a01b0387169188917f32ff77c011cfe95aff186e69119a183ae2ccbd94ab6fa78aa919441baa49dc2d910160405180910390a3505050505050565b6001600160a01b0381166000908152600b6020908152604091829020805483518184028101840190945280845260609392830182828015610b9257602002820191906000526020600020905b815481526020019060010190808311610b7e575b50505050509050919050565b60606001805461047590611d6f565b61052c338383611180565b610bc3848484610732565b6107b7338585858561121f565b60606104608261134a565b600080610be784610ff2565b6001600160a01b03161480610c0e575060008381526009602052604090206004015460ff16155b15610c1b57506000610460565b60008381526009602090815260408083206001600160a01b03861684526005019091529020805460ff168015610c545750806002015442105b949350505050565b6000610c6783610ff2565b6001600160a01b031603610c8d5760405162461bcd60e51b815260040161056790611da9565b6007546001600160a01b0316331480610cbf57506000828152600960205260409020600101546001600160a01b031633145b610cfc5760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b6044820152606401610567565b60008281526009602090815260408083206001600160a01b0385168085526005909101909252808320805460ff191681554260029091015551909184917f125883b94692baebecad9f111ed97ffa626523bbbadc6b0ef85ee1b56b9e52d59190a35050565b6000610d6b611101565b6000848152600a602052604090205415610dc75760405162461bcd60e51b815260206004820152601d60248201527f4d65646963616c207265636f726420616c7265616479206578697374730000006044820152606401610567565b6001600160a01b038516610e1d5760405162461bcd60e51b815260206004820152601760248201527f496e76616c69642070617469656e7420616464726573730000000000000000006044820152606401610567565b600880549081906000610e2f83611e00565b9190505550610e3e8682611453565b610e48818561146d565b60008181526009602052604090208581556001810180546001600160a01b0319166001600160a01b03891617905542600282015560038101610e8a8582611e5f565b5060048101805460ff191660019081179091556000878152600a602090815260408083208690556001600160a01b038b16808452600b8352818420805495860181558452919092209092018490555183907fe515738f44373f4a32d59dd2ca9b175e1f973006ec48ff1c4f0e9c22eec4755d90610f0a908a908990611f1f565b60405180910390a35095945050505050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b610f52611101565b6001600160a01b038116610f7c57604051631e4fbdf760e01b815260006004820152602401610567565b610f858161112e565b50565b60006001600160e01b03198216632483248360e11b14806104605750610460826114bd565b600080610fb983610ff2565b90506001600160a01b03811661046057604051637e27328960e01b815260048101849052602401610567565b6107d8838383600161150d565b6000908152600260205260409020546001600160a01b031690565b60008061101984610ff2565b90506001600160a01b0383161561103557611035818486611613565b6001600160a01b038116156110735761105260008560008061150d565b6001600160a01b038116600090815260036020526040902080546000190190555b6001600160a01b038516156110a2576001600160a01b0385166000908152600360205260409020805460010190555b60008481526002602052604080822080546001600160a01b0319166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b6007546001600160a01b031633146108ca5760405163118cdaa760e01b8152336004820152602401610567565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0382166111b257604051630b61174360e31b81526001600160a01b0383166004820152602401610567565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0383163b1561134357604051630a85bd0160e11b81526001600160a01b0384169063150b7a0290611261908890889087908790600401611f38565b6020604051808303816000875af192505050801561129c575060408051601f3d908101601f1916820190925261129991810190611f75565b60015b611305573d8080156112ca576040519150601f19603f3d011682016040523d82523d6000602084013e6112cf565b606091505b5080516000036112fd57604051633250574960e11b81526001600160a01b0385166004820152602401610567565b805160208201fd5b6001600160e01b03198116630a85bd0160e11b1461134157604051633250574960e11b81526001600160a01b0385166004820152602401610567565b505b5050505050565b606061135582610fad565b506000828152600660205260408120805461136f90611d6f565b80601f016020809104026020016040519081016040528092919081815260200182805461139b90611d6f565b80156113e85780601f106113bd576101008083540402835291602001916113e8565b820191906000526020600020905b8154815290600101906020018083116113cb57829003601f168201915b50505050509050600061140660408051602081019091526000815290565b90508051600003611418575092915050565b81511561144a578082604051602001611432929190611f92565b60405160208183030381529060405292505050919050565b610c5484611677565b61052c8282604051806020016040528060008152506116ec565b60008281526006602052604090206114858282611e5f565b506040518281527ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce79060200160405180910390a15050565b60006001600160e01b031982166380ac58cd60e01b14806114ee57506001600160e01b03198216635b5e139f60e01b145b8061046057506301ffc9a760e01b6001600160e01b0319831614610460565b808061152157506001600160a01b03821615155b156115e357600061153184610fad565b90506001600160a01b0383161580159061155d5750826001600160a01b0316816001600160a01b031614155b8015611570575061156e8184610f1c565b155b156115995760405163a9fbf51f60e01b81526001600160a01b0384166004820152602401610567565b81156115e15783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b5050600090815260046020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b61161e838383611704565b6107d8576001600160a01b03831661164c57604051637e27328960e01b815260048101829052602401610567565b60405163177e802f60e01b81526001600160a01b038316600482015260248101829052604401610567565b606061168282610fad565b50600061169a60408051602081019091526000815290565b905060008151116116ba57604051806020016040528060008152506116e5565b806116c484611767565b6040516020016116d5929190611f92565b6040516020818303038152906040525b9392505050565b6116f683836117fa565b6107d833600085858561121f565b60006001600160a01b03831615801590610c545750826001600160a01b0316846001600160a01b0316148061173e575061173e8484610f1c565b80610c545750506000908152600460205260409020546001600160a01b03908116911614919050565b606060006117748361185f565b600101905060008167ffffffffffffffff81111561179457611794611bab565b6040519080825280601f01601f1916602001820160405280156117be576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a85049450846117c857509392505050565b6001600160a01b03821661182457604051633250574960e11b815260006004820152602401610567565b60006118328383600061100d565b90506001600160a01b038116156107d8576040516339e3563760e11b815260006004820152602401610567565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b831061189e5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef810000000083106118ca576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc1000083106118e857662386f26fc10000830492506010015b6305f5e1008310611900576305f5e100830492506008015b612710831061191457612710830492506004015b60648310611926576064830492506002015b600a83106104605760010192915050565b6001600160e01b031981168114610f8557600080fd5b60006020828403121561195f57600080fd5b81356116e581611937565b60005b8381101561198557818101518382015260200161196d565b50506000910152565b600081518084526119a681602086016020860161196a565b601f01601f19169290920160200192915050565b6020815260006116e5602083018461198e565b6000602082840312156119df57600080fd5b5035919050565b80356001600160a01b03811681146119fd57600080fd5b919050565b60008060408385031215611a1557600080fd5b611a1e836119e6565b946020939093013593505050565b85815260018060a01b038516602082015283604082015260a060608201526000611a5960a083018561198e565b905082151560808301529695505050505050565b600080600060608486031215611a8257600080fd5b611a8b846119e6565b9250611a99602085016119e6565b9150604084013590509250925092565b60008060408385031215611abc57600080fd5b82359150611acc602084016119e6565b90509250929050565b600060208284031215611ae757600080fd5b6116e5826119e6565b60008060008060808587031215611b0657600080fd5b84359350611b16602086016119e6565b93969395505050506040820135916060013590565b6020808252825182820181905260009190848201906040850190845b81811015611b6357835183529284019291840191600101611b47565b50909695505050505050565b60008060408385031215611b8257600080fd5b611b8b836119e6565b915060208301358015158114611ba057600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115611bdc57611bdc611bab565b604051601f8501601f19908116603f01168101908282118183101715611c0457611c04611bab565b81604052809350858152868686011115611c1d57600080fd5b858560208301376000602087830101525050509392505050565b60008060008060808587031215611c4d57600080fd5b611c56856119e6565b9350611c64602086016119e6565b925060408501359150606085013567ffffffffffffffff811115611c8757600080fd5b8501601f81018713611c9857600080fd5b611ca787823560208401611bc1565b91505092959194509250565b600082601f830112611cc457600080fd5b6116e583833560208501611bc1565b60008060008060808587031215611ce957600080fd5b611cf2856119e6565b935060208501359250604085013567ffffffffffffffff80821115611d1657600080fd5b611d2288838901611cb3565b93506060870135915080821115611d3857600080fd5b50611ca787828801611cb3565b60008060408385031215611d5857600080fd5b611d61836119e6565b9150611acc602084016119e6565b600181811c90821680611d8357607f821691505b602082108103611da357634e487b7160e01b600052602260045260246000fd5b50919050565b602080825260149082015273151bdad95b88191bd95cc81b9bdd08195e1a5cdd60621b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b8082018082111561046057610460611dd7565b600060018201611e1257611e12611dd7565b5060010190565b601f8211156107d857600081815260208120601f850160051c81016020861015611e405750805b601f850160051c820191505b8181101561134157828155600101611e4c565b815167ffffffffffffffff811115611e7957611e79611bab565b611e8d81611e878454611d6f565b84611e19565b602080601f831160018114611ec25760008415611eaa5750858301515b600019600386901b1c1916600185901b178555611341565b600085815260208120601f198616915b82811015611ef157888601518255948401946001909101908401611ed2565b5085821015611f0f5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b828152604060208201526000610c54604083018461198e565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611f6b9083018461198e565b9695505050505050565b600060208284031215611f8757600080fd5b81516116e581611937565b60008351611fa481846020880161196a565b835190830190611fb881836020880161196a565b0194935050505056fea2646970667358221220adbb00b28e6c0ae759d5cff9c6e51aa3376cd8547653aaab8201e86e2491ed4f64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x22E8 CODESIZE SUB DUP1 PUSH3 0x22E8 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x13E JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D65646963616C205265636F726420546F6B656E000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x135495 PUSH1 0xEA SHL DUP2 MSTORE POP DUP2 PUSH1 0x0 SWAP1 DUP2 PUSH3 0x98 SWAP2 SWAP1 PUSH3 0x215 JUMP JUMPDEST POP PUSH1 0x1 PUSH3 0xA7 DUP3 DUP3 PUSH3 0x215 JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0xD9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xE4 DUP2 PUSH3 0xEC JUMP JUMPDEST POP POP PUSH3 0x2E1 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x151 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x169 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x19B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x1BC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x210 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x1EB JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x20C JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x1F7 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x231 JUMPI PUSH3 0x231 PUSH3 0x170 JUMP JUMPDEST PUSH3 0x249 DUP2 PUSH3 0x242 DUP5 SLOAD PUSH3 0x186 JUMP JUMPDEST DUP5 PUSH3 0x1C2 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x281 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x268 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x20C JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x2B2 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x291 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x2D1 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1FF7 DUP1 PUSH3 0x2F1 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1C4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7B4A1AE7 GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xC87B56DD GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xDCEF1E1E GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xDCEF1E1E EQ PUSH2 0x3FC JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x40F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x422 JUMPI DUP1 PUSH4 0xF8E89A6D EQ PUSH2 0x435 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x3C3 JUMPI DUP1 PUSH4 0xD504D37A EQ PUSH2 0x3D6 JUMPI DUP1 PUSH4 0xD9A5EC1B EQ PUSH2 0x3E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x384 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x395 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x39D JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x3B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7B4A1AE7 EQ PUSH2 0x342 JUMPI DUP1 PUSH4 0x801C406B EQ PUSH2 0x355 JUMPI DUP1 PUSH4 0x8681F447 EQ PUSH2 0x364 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x166 JUMPI DUP1 PUSH4 0x6352211E GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x327 JUMPI DUP1 PUSH4 0x7564A13C EQ PUSH2 0x32F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD EQ PUSH2 0x29E JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x2B1 JUMPI DUP1 PUSH4 0x4DB65851 EQ PUSH2 0x2C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0x1A2 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0xC388722 EQ PUSH2 0x246 JUMPI DUP1 PUSH4 0x12D533D7 EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0x19C1833F EQ PUSH2 0x28B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1F1 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x206 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DC PUSH2 0x1D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x194D JUMP JUMPDEST PUSH2 0x455 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F9 PUSH2 0x466 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E8 SWAP2 SWAP1 PUSH2 0x19BA JUMP JUMPDEST PUSH2 0x219 PUSH2 0x214 CALLDATASIZE PUSH1 0x4 PUSH2 0x19CD JUMP JUMPDEST PUSH2 0x4F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E8 JUMP JUMPDEST PUSH2 0x244 PUSH2 0x23F CALLDATASIZE PUSH1 0x4 PUSH2 0x1A02 JUMP JUMPDEST PUSH2 0x521 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x259 PUSH2 0x254 CALLDATASIZE PUSH1 0x4 PUSH2 0x19CD JUMP JUMPDEST PUSH2 0x530 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E8 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1A2C JUMP JUMPDEST PUSH2 0x27D PUSH2 0x278 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A02 JUMP JUMPDEST PUSH2 0x646 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E8 JUMP JUMPDEST PUSH2 0x244 PUSH2 0x299 CALLDATASIZE PUSH1 0x4 PUSH2 0x19CD JUMP JUMPDEST PUSH2 0x677 JUMP JUMPDEST PUSH2 0x244 PUSH2 0x2AC CALLDATASIZE PUSH1 0x4 PUSH2 0x1A6D JUMP JUMPDEST PUSH2 0x732 JUMP JUMPDEST PUSH2 0x244 PUSH2 0x2BF CALLDATASIZE PUSH1 0x4 PUSH2 0x1A6D JUMP JUMPDEST PUSH2 0x7BD JUMP JUMPDEST PUSH2 0x2D7 PUSH2 0x2D2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AA9 JUMP JUMPDEST PUSH2 0x7DD JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP6 ISZERO ISZERO DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP3 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0x1E8 JUMP JUMPDEST PUSH2 0x219 PUSH2 0x30F CALLDATASIZE PUSH1 0x4 PUSH2 0x19CD JUMP JUMPDEST PUSH2 0x865 JUMP JUMPDEST PUSH2 0x27D PUSH2 0x322 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AD5 JUMP JUMPDEST PUSH2 0x870 JUMP JUMPDEST PUSH2 0x244 PUSH2 0x8B8 JUMP JUMPDEST PUSH2 0x259 PUSH2 0x33D CALLDATASIZE PUSH1 0x4 PUSH2 0x19CD JUMP JUMPDEST PUSH2 0x8CC JUMP JUMPDEST PUSH2 0x244 PUSH2 0x350 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AF0 JUMP JUMPDEST PUSH2 0x992 JUMP JUMPDEST PUSH2 0x27D PUSH8 0xD02AB486CEDC0000 DUP2 JUMP JUMPDEST PUSH2 0x377 PUSH2 0x372 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AD5 JUMP JUMPDEST PUSH2 0xB32 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E8 SWAP2 SWAP1 PUSH2 0x1B2B JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x219 JUMP JUMPDEST PUSH2 0x1F9 PUSH2 0xB9E JUMP JUMPDEST PUSH2 0x244 PUSH2 0x3AB CALLDATASIZE PUSH1 0x4 PUSH2 0x1B6F JUMP JUMPDEST PUSH2 0xBAD JUMP JUMPDEST PUSH2 0x244 PUSH2 0x3BE CALLDATASIZE PUSH1 0x4 PUSH2 0x1C37 JUMP JUMPDEST PUSH2 0xBB8 JUMP JUMPDEST PUSH2 0x1F9 PUSH2 0x3D1 CALLDATASIZE PUSH1 0x4 PUSH2 0x19CD JUMP JUMPDEST PUSH2 0xBD0 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x3E4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AA9 JUMP JUMPDEST PUSH2 0xBDB JUMP JUMPDEST PUSH2 0x244 PUSH2 0x3F7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AA9 JUMP JUMPDEST PUSH2 0xC5C JUMP JUMPDEST PUSH2 0x27D PUSH2 0x40A CALLDATASIZE PUSH1 0x4 PUSH2 0x1CD3 JUMP JUMPDEST PUSH2 0xD61 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x41D CALLDATASIZE PUSH1 0x4 PUSH2 0x1D45 JUMP JUMPDEST PUSH2 0xF1C JUMP JUMPDEST PUSH2 0x244 PUSH2 0x430 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AD5 JUMP JUMPDEST PUSH2 0xF4A JUMP JUMPDEST PUSH2 0x27D PUSH2 0x443 CALLDATASIZE PUSH1 0x4 PUSH2 0x19CD JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x460 DUP3 PUSH2 0xF88 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x475 SWAP1 PUSH2 0x1D6F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4A1 SWAP1 PUSH2 0x1D6F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4EE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4C3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4EE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4D1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x503 DUP3 PUSH2 0xFAD JUMP JUMPDEST POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x460 JUMP JUMPDEST PUSH2 0x52C DUP3 DUP3 CALLER PUSH2 0xFE5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH1 0x60 DUP2 DUP1 PUSH2 0x541 DUP8 PUSH2 0xFF2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x570 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x567 SWAP1 PUSH2 0x1DA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x4 DUP5 ADD SLOAD PUSH1 0x3 DUP6 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP2 PUSH1 0xFF AND SWAP1 DUP3 SWAP1 PUSH2 0x5B2 SWAP1 PUSH2 0x1D6F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5DE SWAP1 PUSH2 0x1D6F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x62B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x600 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x62B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x60E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP SWAP6 POP SWAP6 POP SWAP6 POP SWAP6 POP SWAP6 POP POP SWAP2 SWAP4 SWAP6 SWAP1 SWAP3 SWAP5 POP JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x662 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x682 DUP3 PUSH2 0xFF2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x6A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x567 SWAP1 PUSH2 0x1DA9 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x6DA JUMPI POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x717 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x139BDD08185D5D1A1BDC9A5E9959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x567 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x75C JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x567 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x769 DUP4 DUP4 CALLER PUSH2 0x100D JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x7B7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x64283D7B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x567 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x7D8 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xBB8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 DUP1 DUP1 PUSH2 0x7ED DUP9 PUSH2 0xFF2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x813 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x567 SWAP1 PUSH2 0x1DA9 JUMP JUMPDEST POP POP POP PUSH1 0x0 SWAP4 DUP5 MSTORE POP POP PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE PUSH1 0x5 SWAP1 SWAP3 ADD SWAP1 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 SWAP1 SWAP5 ADD SLOAD PUSH1 0xFF SWAP1 SWAP4 AND SWAP5 SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x460 DUP3 PUSH2 0xFAD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x89C JUMPI PUSH1 0x40 MLOAD PUSH4 0x22718AD9 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x567 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x8C0 PUSH2 0x1101 JUMP JUMPDEST PUSH2 0x8CA PUSH1 0x0 PUSH2 0x112E JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD DUP1 SLOAD SWAP4 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP4 SWAP2 SWAP3 SWAP2 PUSH2 0x906 SWAP1 PUSH2 0x1D6F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x932 SWAP1 PUSH2 0x1D6F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x97F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x954 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x97F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x962 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x4 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 POP POP PUSH1 0xFF AND DUP6 JUMP JUMPDEST PUSH2 0x99A PUSH2 0x1101 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9A5 DUP6 PUSH2 0xFF2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x9CB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x567 SWAP1 PUSH2 0x1DA9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xA21 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420686F73706974616C20616464726573730000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x567 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0xFF AND PUSH2 0xA82 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D65646963616C207265636F726420697320696E616374697665000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x567 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE PUSH1 0x5 DUP2 ADD SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR DUP3 SSTORE TIMESTAMP SWAP1 DUP3 ADD DUP2 SWAP1 SSTORE PUSH2 0xAC8 SWAP1 DUP5 SWAP1 PUSH2 0x1DED JUMP JUMPDEST PUSH1 0x2 DUP3 ADD DUP2 SWAP1 SSTORE PUSH8 0xD02AB486CEDC0000 PUSH1 0x3 DUP4 ADD SSTORE PUSH1 0x4 DUP3 ADD DUP6 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP2 DUP9 SWAP2 PUSH32 0x32FF77C011CFE95AFF186E69119A183AE2CCBD94AB6FA78AA919441BAA49DC2D SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP4 MLOAD DUP2 DUP5 MUL DUP2 ADD DUP5 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE PUSH1 0x60 SWAP4 SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xB92 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0xB7E JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x475 SWAP1 PUSH2 0x1D6F JUMP JUMPDEST PUSH2 0x52C CALLER DUP4 DUP4 PUSH2 0x1180 JUMP JUMPDEST PUSH2 0xBC3 DUP5 DUP5 DUP5 PUSH2 0x732 JUMP JUMPDEST PUSH2 0x7B7 CALLER DUP6 DUP6 DUP6 DUP6 PUSH2 0x121F JUMP JUMPDEST PUSH1 0x60 PUSH2 0x460 DUP3 PUSH2 0x134A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xBE7 DUP5 PUSH2 0xFF2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0xC0E JUMPI POP PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0xC1B JUMPI POP PUSH1 0x0 PUSH2 0x460 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE PUSH1 0x5 ADD SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0xC54 JUMPI POP DUP1 PUSH1 0x2 ADD SLOAD TIMESTAMP LT JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC67 DUP4 PUSH2 0xFF2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xC8D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x567 SWAP1 PUSH2 0x1DA9 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0xCBF JUMPI POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0xCFC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x139BDD08185D5D1A1BDC9A5E9959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x567 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP1 DUP6 MSTORE PUSH1 0x5 SWAP1 SWAP2 ADD SWAP1 SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP2 SSTORE TIMESTAMP PUSH1 0x2 SWAP1 SWAP2 ADD SSTORE MLOAD SWAP1 SWAP2 DUP5 SWAP2 PUSH32 0x125883B94692BAEBECAD9F111ED97FFA626523BBBADC6B0EF85EE1B56B9E52D5 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD6B PUSH2 0x1101 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0xDC7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D65646963616C207265636F726420616C726561647920657869737473000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x567 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0xE1D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C69642070617469656E742061646472657373000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x567 JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD SWAP1 DUP2 SWAP1 PUSH1 0x0 PUSH2 0xE2F DUP4 PUSH2 0x1E00 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0xE3E DUP7 DUP3 PUSH2 0x1453 JUMP JUMPDEST PUSH2 0xE48 DUP2 DUP6 PUSH2 0x146D JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP6 DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND OR SWAP1 SSTORE TIMESTAMP PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x3 DUP2 ADD PUSH2 0xE8A DUP6 DUP3 PUSH2 0x1E5F JUMP JUMPDEST POP PUSH1 0x4 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND DUP1 DUP5 MSTORE PUSH1 0xB DUP4 MSTORE DUP2 DUP5 KECCAK256 DUP1 SLOAD SWAP6 DUP7 ADD DUP2 SSTORE DUP5 MSTORE SWAP2 SWAP1 SWAP3 KECCAK256 SWAP1 SWAP3 ADD DUP5 SWAP1 SSTORE MLOAD DUP4 SWAP1 PUSH32 0xE515738F44373F4A32D59DD2CA9B175E1F973006EC48FF1C4F0E9C22EEC4755D SWAP1 PUSH2 0xF0A SWAP1 DUP11 SWAP1 DUP10 SWAP1 PUSH2 0x1F1F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0xF52 PUSH2 0x1101 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xF7C JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x567 JUMP JUMPDEST PUSH2 0xF85 DUP2 PUSH2 0x112E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x24832483 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x460 JUMPI POP PUSH2 0x460 DUP3 PUSH2 0x14BD JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xFB9 DUP4 PUSH2 0xFF2 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x460 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x567 JUMP JUMPDEST PUSH2 0x7D8 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x150D JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1019 DUP5 PUSH2 0xFF2 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x1035 JUMPI PUSH2 0x1035 DUP2 DUP5 DUP7 PUSH2 0x1613 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x1073 JUMPI PUSH2 0x1052 PUSH1 0x0 DUP6 PUSH1 0x0 DUP1 PUSH2 0x150D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO PUSH2 0x10A2 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP8 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x8CA JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x567 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x11B2 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB611743 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x567 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0x1343 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x1261 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x1F38 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x129C JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1299 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1F75 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1305 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x12CA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x12CF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x12FD JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x567 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ PUSH2 0x1341 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x567 JUMP JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1355 DUP3 PUSH2 0xFAD JUMP JUMPDEST POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH2 0x136F SWAP1 PUSH2 0x1D6F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x139B SWAP1 PUSH2 0x1D6F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x13E8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x13BD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x13E8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x13CB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x1406 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x1418 JUMPI POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x144A JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1432 SWAP3 SWAP2 SWAP1 PUSH2 0x1F92 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC54 DUP5 PUSH2 0x1677 JUMP JUMPDEST PUSH2 0x52C DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x16EC JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x1485 DUP3 DUP3 PUSH2 0x1E5F JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x14EE JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x460 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x460 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1521 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x15E3 JUMPI PUSH1 0x0 PUSH2 0x1531 DUP5 PUSH2 0xFAD JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x155D JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1570 JUMPI POP PUSH2 0x156E DUP2 DUP5 PUSH2 0xF1C JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1599 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA9FBF51F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x567 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x15E1 JUMPI DUP4 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x161E DUP4 DUP4 DUP4 PUSH2 0x1704 JUMP JUMPDEST PUSH2 0x7D8 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x164C JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x567 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x177E802F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x567 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1682 DUP3 PUSH2 0xFAD JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x169A PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x16BA JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x16E5 JUMP JUMPDEST DUP1 PUSH2 0x16C4 DUP5 PUSH2 0x1767 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x16D5 SWAP3 SWAP2 SWAP1 PUSH2 0x1F92 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x16F6 DUP4 DUP4 PUSH2 0x17FA JUMP JUMPDEST PUSH2 0x7D8 CALLER PUSH1 0x0 DUP6 DUP6 DUP6 PUSH2 0x121F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xC54 JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x173E JUMPI POP PUSH2 0x173E DUP5 DUP5 PUSH2 0xF1C JUMP JUMPDEST DUP1 PUSH2 0xC54 JUMPI POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1774 DUP4 PUSH2 0x185F JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1794 JUMPI PUSH2 0x1794 PUSH2 0x1BAB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x17BE JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH1 0x0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0x17C8 JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1824 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x567 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1832 DUP4 DUP4 PUSH1 0x0 PUSH2 0x100D JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x7D8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x39E35637 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x567 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0x189E JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x18CA JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x18E8 JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1900 JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1914 JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1926 JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x460 JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xF85 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x195F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x16E5 DUP2 PUSH2 0x1937 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1985 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x196D JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x19A6 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x196A JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x16E5 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x198E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x19FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A1E DUP4 PUSH2 0x19E6 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST DUP6 DUP2 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE DUP4 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1A59 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x198E JUMP JUMPDEST SWAP1 POP DUP3 ISZERO ISZERO PUSH1 0x80 DUP4 ADD MSTORE SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1A82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A8B DUP5 PUSH2 0x19E6 JUMP JUMPDEST SWAP3 POP PUSH2 0x1A99 PUSH1 0x20 DUP6 ADD PUSH2 0x19E6 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1ABC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x1ACC PUSH1 0x20 DUP5 ADD PUSH2 0x19E6 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16E5 DUP3 PUSH2 0x19E6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1B06 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH2 0x1B16 PUSH1 0x20 DUP7 ADD PUSH2 0x19E6 JUMP JUMPDEST SWAP4 SWAP7 SWAP4 SWAP6 POP POP POP POP PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x60 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1B63 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1B47 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B8B DUP4 PUSH2 0x19E6 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1BA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0x1BDC JUMPI PUSH2 0x1BDC PUSH2 0x1BAB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1C04 JUMPI PUSH2 0x1C04 PUSH2 0x1BAB JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0x1C1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1C4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C56 DUP6 PUSH2 0x19E6 JUMP JUMPDEST SWAP4 POP PUSH2 0x1C64 PUSH1 0x20 DUP7 ADD PUSH2 0x19E6 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C87 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x1C98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1CA7 DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x1BC1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1CC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16E5 DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x1BC1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1CE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1CF2 DUP6 PUSH2 0x19E6 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1D16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D22 DUP9 DUP4 DUP10 ADD PUSH2 0x1CB3 JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1D38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CA7 DUP8 DUP3 DUP9 ADD PUSH2 0x1CB3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D61 DUP4 PUSH2 0x19E6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1ACC PUSH1 0x20 DUP5 ADD PUSH2 0x19E6 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1D83 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1DA3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x151BDAD95B88191BD95CC81B9BDD08195E1A5CDD PUSH1 0x62 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x460 JUMPI PUSH2 0x460 PUSH2 0x1DD7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1E12 JUMPI PUSH2 0x1E12 PUSH2 0x1DD7 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x7D8 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x1E40 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1341 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1E4C JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1E79 JUMPI PUSH2 0x1E79 PUSH2 0x1BAB JUMP JUMPDEST PUSH2 0x1E8D DUP2 PUSH2 0x1E87 DUP5 SLOAD PUSH2 0x1D6F JUMP JUMPDEST DUP5 PUSH2 0x1E19 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1EC2 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x1EAA JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x1341 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1EF1 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x1ED2 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x1F0F JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0xC54 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x198E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1F6B SWAP1 DUP4 ADD DUP5 PUSH2 0x198E JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F87 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x16E5 DUP2 PUSH2 0x1937 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x1FA4 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x196A JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x1FB8 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x196A JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAD 0xBB STOP 0xB2 DUP15 PUSH13 0xAE759D5CFF9C6E51AA3376CD8 SLOAD PUSH23 0x53AAAB8201E86E2491ED4F64736F6C6343000814003300 ","sourceMap":"447:7977:23:-:0;;;2183:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2263:12;1380:113:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1380:113:7;;;1454:5;1446;:13;;;;;;:::i;:::-;-1:-1:-1;1469:7:7;:17;1479:7;1469;:17;:::i;:::-;-1:-1:-1;;;;;;;;1273:26:2;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:2;;1350:1;1322:31;;;3176:51:25;3149:18;;1322:31:2;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;1225:187;2183:96:23;447:7977;;2912:187:2;3004:6;;;-1:-1:-1;;;;;3020:17:2;;;-1:-1:-1;;;;;;3020:17:2;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;14:290:25:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:25;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:25:o;309:127::-;370:10;365:3;361:20;358:1;351:31;401:4;398:1;391:15;425:4;422:1;415:15;441:380;520:1;516:12;;;;563;;;584:61;;638:4;630:6;626:17;616:27;;584:61;691:2;683:6;680:14;660:18;657:38;654:161;;737:10;732:3;728:20;725:1;718:31;772:4;769:1;762:15;800:4;797:1;790:15;654:161;;441:380;;;:::o;952:545::-;1054:2;1049:3;1046:11;1043:448;;;1090:1;1115:5;1111:2;1104:17;1160:4;1156:2;1146:19;1230:2;1218:10;1214:19;1211:1;1207:27;1201:4;1197:38;1266:4;1254:10;1251:20;1248:47;;;-1:-1:-1;1289:4:25;1248:47;1344:2;1339:3;1335:12;1332:1;1328:20;1322:4;1318:31;1308:41;;1399:82;1417:2;1410:5;1407:13;1399:82;;;1462:17;;;1443:1;1432:13;1399:82;;;1403:3;;;1043:448;952:545;;;:::o;1673:1352::-;1793:10;;-1:-1:-1;;;;;1815:30:25;;1812:56;;;1848:18;;:::i;:::-;1877:97;1967:6;1927:38;1959:4;1953:11;1927:38;:::i;:::-;1921:4;1877:97;:::i;:::-;2029:4;;2093:2;2082:14;;2110:1;2105:663;;;;2812:1;2829:6;2826:89;;;-1:-1:-1;2881:19:25;;;2875:26;2826:89;-1:-1:-1;;1630:1:25;1626:11;;;1622:24;1618:29;1608:40;1654:1;1650:11;;;1605:57;2928:81;;2075:944;;2105:663;899:1;892:14;;;936:4;923:18;;-1:-1:-1;;2141:20:25;;;2259:236;2273:7;2270:1;2267:14;2259:236;;;2362:19;;;2356:26;2341:42;;2454:27;;;;2422:1;2410:14;;;;2289:19;;2259:236;;;2263:3;2523:6;2514:7;2511:19;2508:201;;;2584:19;;;2578:26;-1:-1:-1;;2667:1:25;2663:14;;;2679:3;2659:24;2655:37;2651:42;2636:58;2621:74;;2508:201;-1:-1:-1;;;;;2755:1:25;2739:14;;;2735:22;2722:36;;-1:-1:-1;1673:1352:25:o;3030:203::-;447:7977:23;;;;;;"},"deployedBytecode":{"functionDebugData":{"@ACCESS_COST_8407":{"entryPoint":null,"id":8407,"parameterSlots":0,"returnSlots":0},"@_approve_1520":{"entryPoint":4069,"id":1520,"parameterSlots":3,"returnSlots":0},"@_approve_1586":{"entryPoint":5389,"id":1586,"parameterSlots":4,"returnSlots":0},"@_baseURI_901":{"entryPoint":null,"id":901,"parameterSlots":0,"returnSlots":1},"@_checkAuthorized_1160":{"entryPoint":5651,"id":1160,"parameterSlots":3,"returnSlots":0},"@_checkOwner_464":{"entryPoint":4353,"id":464,"parameterSlots":0,"returnSlots":0},"@_getApproved_1087":{"entryPoint":null,"id":1087,"parameterSlots":1,"returnSlots":1},"@_isAuthorized_1123":{"entryPoint":5892,"id":1123,"parameterSlots":3,"returnSlots":1},"@_mint_1316":{"entryPoint":6138,"id":1316,"parameterSlots":2,"returnSlots":0},"@_msgSender_2033":{"entryPoint":null,"id":2033,"parameterSlots":0,"returnSlots":1},"@_ownerOf_1074":{"entryPoint":4082,"id":1074,"parameterSlots":1,"returnSlots":1},"@_requireOwned_1652":{"entryPoint":4013,"id":1652,"parameterSlots":1,"returnSlots":1},"@_safeMint_1331":{"entryPoint":5203,"id":1331,"parameterSlots":2,"returnSlots":0},"@_safeMint_1361":{"entryPoint":5868,"id":1361,"parameterSlots":3,"returnSlots":0},"@_setApprovalForAll_1623":{"entryPoint":4480,"id":1623,"parameterSlots":3,"returnSlots":0},"@_setTokenURI_1915":{"entryPoint":5229,"id":1915,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_526":{"entryPoint":4398,"id":526,"parameterSlots":1,"returnSlots":0},"@_update_1266":{"entryPoint":4109,"id":1266,"parameterSlots":3,"returnSlots":1},"@approve_917":{"entryPoint":1313,"id":917,"parameterSlots":2,"returnSlots":0},"@balanceOf_825":{"entryPoint":2160,"id":825,"parameterSlots":1,"returnSlots":1},"@checkOnERC721Received_2020":{"entryPoint":4639,"id":2020,"parameterSlots":5,"returnSlots":0},"@deactivateRecord_8931":{"entryPoint":1655,"id":8931,"parameterSlots":1,"returnSlots":0},"@fileHashToTokenId_8399":{"entryPoint":null,"id":8399,"parameterSlots":0,"returnSlots":0},"@getAccessPermission_8810":{"entryPoint":2013,"id":8810,"parameterSlots":2,"returnSlots":5},"@getApproved_934":{"entryPoint":1272,"id":934,"parameterSlots":1,"returnSlots":1},"@getMedicalRecord_8757":{"entryPoint":1328,"id":8757,"parameterSlots":1,"returnSlots":5},"@getPatientTokens_8824":{"entryPoint":2866,"id":8824,"parameterSlots":1,"returnSlots":1},"@grantAccess_8661":{"entryPoint":2450,"id":8661,"parameterSlots":4,"returnSlots":0},"@hasValidAccess_8709":{"entryPoint":3035,"id":8709,"parameterSlots":2,"returnSlots":1},"@isApprovedForAll_967":{"entryPoint":3868,"id":967,"parameterSlots":2,"returnSlots":1},"@log10_5063":{"entryPoint":6239,"id":5063,"parameterSlots":1,"returnSlots":1},"@medicalRecords_8395":{"entryPoint":2252,"id":8395,"parameterSlots":0,"returnSlots":0},"@mintMedicalRecord_8559":{"entryPoint":3425,"id":8559,"parameterSlots":4,"returnSlots":1},"@name_847":{"entryPoint":1126,"id":847,"parameterSlots":0,"returnSlots":1},"@ownerOf_838":{"entryPoint":2149,"id":838,"parameterSlots":1,"returnSlots":1},"@owner_447":{"entryPoint":null,"id":447,"parameterSlots":0,"returnSlots":1},"@patientTokens_8404":{"entryPoint":1606,"id":8404,"parameterSlots":0,"returnSlots":0},"@renounceOwnership_478":{"entryPoint":2232,"id":478,"parameterSlots":0,"returnSlots":0},"@revokeAccess_8888":{"entryPoint":3164,"id":8888,"parameterSlots":2,"returnSlots":0},"@safeTransferFrom_1031":{"entryPoint":1981,"id":1031,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_1061":{"entryPoint":3000,"id":1061,"parameterSlots":4,"returnSlots":0},"@setApprovalForAll_950":{"entryPoint":2989,"id":950,"parameterSlots":2,"returnSlots":0},"@supportsInterface_1839":{"entryPoint":3976,"id":1839,"parameterSlots":1,"returnSlots":1},"@supportsInterface_3597":{"entryPoint":null,"id":3597,"parameterSlots":1,"returnSlots":1},"@supportsInterface_797":{"entryPoint":5309,"id":797,"parameterSlots":1,"returnSlots":1},"@supportsInterface_8963":{"entryPoint":1109,"id":8963,"parameterSlots":1,"returnSlots":1},"@symbol_856":{"entryPoint":2974,"id":856,"parameterSlots":0,"returnSlots":1},"@toString_2286":{"entryPoint":5991,"id":2286,"parameterSlots":1,"returnSlots":1},"@tokenURI_1896":{"entryPoint":4938,"id":1896,"parameterSlots":1,"returnSlots":1},"@tokenURI_892":{"entryPoint":5751,"id":892,"parameterSlots":1,"returnSlots":1},"@tokenURI_8947":{"entryPoint":3024,"id":8947,"parameterSlots":1,"returnSlots":1},"@transferFrom_1013":{"entryPoint":1842,"id":1013,"parameterSlots":3,"returnSlots":0},"@transferOwnership_506":{"entryPoint":3914,"id":506,"parameterSlots":1,"returnSlots":0},"abi_decode_address":{"entryPoint":6630,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_available_length_bytes":{"entryPoint":7105,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_string":{"entryPoint":7347,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":6869,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":7493,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":6765,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":7223,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":7023,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_bytes32t_string_memory_ptrt_string_memory_ptr":{"entryPoint":7379,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":6658,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4":{"entryPoint":6477,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":8053,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":6605,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_address":{"entryPoint":6825,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_addresst_bytes32t_uint256":{"entryPoint":6896,"id":null,"parameterSlots":2,"returnSlots":4},"abi_encode_string":{"entryPoint":6542,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":8082,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":7992,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":6955,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool_t_uint256_t_uint256_t_uint256_t_bytes32__to_t_bool_t_uint256_t_uint256_t_uint256_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address_t_uint256_t_string_memory_ptr_t_bool__to_t_bytes32_t_address_t_uint256_t_string_memory_ptr_t_bool__fromStack_reversed":{"entryPoint":6700,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_string_memory_ptr__to_t_bytes32_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7967,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6586,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_33c473c2e2093856cbe26752e819a40ac1e4e430d9421ac16799c34433450e7a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4b5c3fff8a7470fb7d3cb5a2c825606d65a273a4198bebb9e861ea888af21bb0__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7593,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_dcfb34f5fb0cab85164bfd0483e42a37b0410302e0991467efe4d343903bf0d7__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ea7063d2c5924cbb69a84dddc40b0a8e893a912b3a7babb8c9dcb7606148a6da__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_bytes32__to_t_uint256_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":7661,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":7705,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":7775,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":6506,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":7535,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"increment_t_uint256":{"entryPoint":7680,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":7639,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":7083,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_bytes4":{"entryPoint":6455,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:16047:25","statements":[{"nodeType":"YulBlock","src":"6:3:25","statements":[]},{"body":{"nodeType":"YulBlock","src":"58:87:25","statements":[{"body":{"nodeType":"YulBlock","src":"123:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"132:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"135:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"125:6:25"},"nodeType":"YulFunctionCall","src":"125:12:25"},"nodeType":"YulExpressionStatement","src":"125:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"81:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"92:5:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"103:3:25","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"108:10:25","type":"","value":"0xffffffff"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"99:3:25"},"nodeType":"YulFunctionCall","src":"99:20:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"88:3:25"},"nodeType":"YulFunctionCall","src":"88:32:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"78:2:25"},"nodeType":"YulFunctionCall","src":"78:43:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"71:6:25"},"nodeType":"YulFunctionCall","src":"71:51:25"},"nodeType":"YulIf","src":"68:71:25"}]},"name":"validator_revert_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"47:5:25","type":""}],"src":"14:131:25"},{"body":{"nodeType":"YulBlock","src":"219:176:25","statements":[{"body":{"nodeType":"YulBlock","src":"265:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"274:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"277:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"267:6:25"},"nodeType":"YulFunctionCall","src":"267:12:25"},"nodeType":"YulExpressionStatement","src":"267:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"240:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"249:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"236:3:25"},"nodeType":"YulFunctionCall","src":"236:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"261:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"232:3:25"},"nodeType":"YulFunctionCall","src":"232:32:25"},"nodeType":"YulIf","src":"229:52:25"},{"nodeType":"YulVariableDeclaration","src":"290:36:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"316:9:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"303:12:25"},"nodeType":"YulFunctionCall","src":"303:23:25"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"294:5:25","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"359:5:25"}],"functionName":{"name":"validator_revert_bytes4","nodeType":"YulIdentifier","src":"335:23:25"},"nodeType":"YulFunctionCall","src":"335:30:25"},"nodeType":"YulExpressionStatement","src":"335:30:25"},{"nodeType":"YulAssignment","src":"374:15:25","value":{"name":"value","nodeType":"YulIdentifier","src":"384:5:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"374:6:25"}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"185:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"196:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"208:6:25","type":""}],"src":"150:245:25"},{"body":{"nodeType":"YulBlock","src":"495:92:25","statements":[{"nodeType":"YulAssignment","src":"505:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"517:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"528:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"513:3:25"},"nodeType":"YulFunctionCall","src":"513:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"505:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"547:9:25"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"572:6:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"565:6:25"},"nodeType":"YulFunctionCall","src":"565:14:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"558:6:25"},"nodeType":"YulFunctionCall","src":"558:22:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"540:6:25"},"nodeType":"YulFunctionCall","src":"540:41:25"},"nodeType":"YulExpressionStatement","src":"540:41:25"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"464:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"475:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"486:4:25","type":""}],"src":"400:187:25"},{"body":{"nodeType":"YulBlock","src":"658:184:25","statements":[{"nodeType":"YulVariableDeclaration","src":"668:10:25","value":{"kind":"number","nodeType":"YulLiteral","src":"677:1:25","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"672:1:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"737:63:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"762:3:25"},{"name":"i","nodeType":"YulIdentifier","src":"767:1:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"758:3:25"},"nodeType":"YulFunctionCall","src":"758:11:25"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"781:3:25"},{"name":"i","nodeType":"YulIdentifier","src":"786:1:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"777:3:25"},"nodeType":"YulFunctionCall","src":"777:11:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"771:5:25"},"nodeType":"YulFunctionCall","src":"771:18:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"751:6:25"},"nodeType":"YulFunctionCall","src":"751:39:25"},"nodeType":"YulExpressionStatement","src":"751:39:25"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"698:1:25"},{"name":"length","nodeType":"YulIdentifier","src":"701:6:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"695:2:25"},"nodeType":"YulFunctionCall","src":"695:13:25"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"709:19:25","statements":[{"nodeType":"YulAssignment","src":"711:15:25","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"720:1:25"},{"kind":"number","nodeType":"YulLiteral","src":"723:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"716:3:25"},"nodeType":"YulFunctionCall","src":"716:10:25"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"711:1:25"}]}]},"pre":{"nodeType":"YulBlock","src":"691:3:25","statements":[]},"src":"687:113:25"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"820:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"825:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"816:3:25"},"nodeType":"YulFunctionCall","src":"816:16:25"},{"kind":"number","nodeType":"YulLiteral","src":"834:1:25","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"809:6:25"},"nodeType":"YulFunctionCall","src":"809:27:25"},"nodeType":"YulExpressionStatement","src":"809:27:25"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"636:3:25","type":""},{"name":"dst","nodeType":"YulTypedName","src":"641:3:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"646:6:25","type":""}],"src":"592:250:25"},{"body":{"nodeType":"YulBlock","src":"897:221:25","statements":[{"nodeType":"YulVariableDeclaration","src":"907:26:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"927:5:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"921:5:25"},"nodeType":"YulFunctionCall","src":"921:12:25"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"911:6:25","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"949:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"954:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"942:6:25"},"nodeType":"YulFunctionCall","src":"942:19:25"},"nodeType":"YulExpressionStatement","src":"942:19:25"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1009:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"1016:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1005:3:25"},"nodeType":"YulFunctionCall","src":"1005:16:25"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1027:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"1032:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1023:3:25"},"nodeType":"YulFunctionCall","src":"1023:14:25"},{"name":"length","nodeType":"YulIdentifier","src":"1039:6:25"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"970:34:25"},"nodeType":"YulFunctionCall","src":"970:76:25"},"nodeType":"YulExpressionStatement","src":"970:76:25"},{"nodeType":"YulAssignment","src":"1055:57:25","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1070:3:25"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1083:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"1091:2:25","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1079:3:25"},"nodeType":"YulFunctionCall","src":"1079:15:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1100:2:25","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1096:3:25"},"nodeType":"YulFunctionCall","src":"1096:7:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1075:3:25"},"nodeType":"YulFunctionCall","src":"1075:29:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1066:3:25"},"nodeType":"YulFunctionCall","src":"1066:39:25"},{"kind":"number","nodeType":"YulLiteral","src":"1107:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1062:3:25"},"nodeType":"YulFunctionCall","src":"1062:50:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1055:3:25"}]}]},"name":"abi_encode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"874:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"881:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"889:3:25","type":""}],"src":"847:271:25"},{"body":{"nodeType":"YulBlock","src":"1244:99:25","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1261:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"1272:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1254:6:25"},"nodeType":"YulFunctionCall","src":"1254:21:25"},"nodeType":"YulExpressionStatement","src":"1254:21:25"},{"nodeType":"YulAssignment","src":"1284:53:25","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1310:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1322:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"1333:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1318:3:25"},"nodeType":"YulFunctionCall","src":"1318:18:25"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"1292:17:25"},"nodeType":"YulFunctionCall","src":"1292:45:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1284:4:25"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1213:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1224:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1235:4:25","type":""}],"src":"1123:220:25"},{"body":{"nodeType":"YulBlock","src":"1418:110:25","statements":[{"body":{"nodeType":"YulBlock","src":"1464:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1473:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1476:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1466:6:25"},"nodeType":"YulFunctionCall","src":"1466:12:25"},"nodeType":"YulExpressionStatement","src":"1466:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1439:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"1448:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1435:3:25"},"nodeType":"YulFunctionCall","src":"1435:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"1460:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1431:3:25"},"nodeType":"YulFunctionCall","src":"1431:32:25"},"nodeType":"YulIf","src":"1428:52:25"},{"nodeType":"YulAssignment","src":"1489:33:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1512:9:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1499:12:25"},"nodeType":"YulFunctionCall","src":"1499:23:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1489:6:25"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1384:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1395:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1407:6:25","type":""}],"src":"1348:180:25"},{"body":{"nodeType":"YulBlock","src":"1634:102:25","statements":[{"nodeType":"YulAssignment","src":"1644:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1656:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"1667:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1652:3:25"},"nodeType":"YulFunctionCall","src":"1652:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1644:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1686:9:25"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1701:6:25"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1717:3:25","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1722:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1713:3:25"},"nodeType":"YulFunctionCall","src":"1713:11:25"},{"kind":"number","nodeType":"YulLiteral","src":"1726:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1709:3:25"},"nodeType":"YulFunctionCall","src":"1709:19:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1697:3:25"},"nodeType":"YulFunctionCall","src":"1697:32:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1679:6:25"},"nodeType":"YulFunctionCall","src":"1679:51:25"},"nodeType":"YulExpressionStatement","src":"1679:51:25"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1603:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1614:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1625:4:25","type":""}],"src":"1533:203:25"},{"body":{"nodeType":"YulBlock","src":"1790:124:25","statements":[{"nodeType":"YulAssignment","src":"1800:29:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1822:6:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1809:12:25"},"nodeType":"YulFunctionCall","src":"1809:20:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1800:5:25"}]},{"body":{"nodeType":"YulBlock","src":"1892:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1901:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1904:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1894:6:25"},"nodeType":"YulFunctionCall","src":"1894:12:25"},"nodeType":"YulExpressionStatement","src":"1894:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1851:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1862:5:25"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1877:3:25","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1882:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1873:3:25"},"nodeType":"YulFunctionCall","src":"1873:11:25"},{"kind":"number","nodeType":"YulLiteral","src":"1886:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1869:3:25"},"nodeType":"YulFunctionCall","src":"1869:19:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1858:3:25"},"nodeType":"YulFunctionCall","src":"1858:31:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1848:2:25"},"nodeType":"YulFunctionCall","src":"1848:42:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1841:6:25"},"nodeType":"YulFunctionCall","src":"1841:50:25"},"nodeType":"YulIf","src":"1838:70:25"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1769:6:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1780:5:25","type":""}],"src":"1741:173:25"},{"body":{"nodeType":"YulBlock","src":"2006:167:25","statements":[{"body":{"nodeType":"YulBlock","src":"2052:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2061:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2064:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2054:6:25"},"nodeType":"YulFunctionCall","src":"2054:12:25"},"nodeType":"YulExpressionStatement","src":"2054:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2027:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"2036:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2023:3:25"},"nodeType":"YulFunctionCall","src":"2023:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"2048:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2019:3:25"},"nodeType":"YulFunctionCall","src":"2019:32:25"},"nodeType":"YulIf","src":"2016:52:25"},{"nodeType":"YulAssignment","src":"2077:39:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2106:9:25"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2087:18:25"},"nodeType":"YulFunctionCall","src":"2087:29:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2077:6:25"}]},{"nodeType":"YulAssignment","src":"2125:42:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2152:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"2163:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2148:3:25"},"nodeType":"YulFunctionCall","src":"2148:18:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2135:12:25"},"nodeType":"YulFunctionCall","src":"2135:32:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2125:6:25"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1964:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1975:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1987:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1995:6:25","type":""}],"src":"1919:254:25"},{"body":{"nodeType":"YulBlock","src":"2405:316:25","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2422:9:25"},{"name":"value0","nodeType":"YulIdentifier","src":"2433:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2415:6:25"},"nodeType":"YulFunctionCall","src":"2415:25:25"},"nodeType":"YulExpressionStatement","src":"2415:25:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2460:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"2471:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2456:3:25"},"nodeType":"YulFunctionCall","src":"2456:18:25"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"2480:6:25"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2496:3:25","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2501:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2492:3:25"},"nodeType":"YulFunctionCall","src":"2492:11:25"},{"kind":"number","nodeType":"YulLiteral","src":"2505:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2488:3:25"},"nodeType":"YulFunctionCall","src":"2488:19:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2476:3:25"},"nodeType":"YulFunctionCall","src":"2476:32:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2449:6:25"},"nodeType":"YulFunctionCall","src":"2449:60:25"},"nodeType":"YulExpressionStatement","src":"2449:60:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2529:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"2540:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2525:3:25"},"nodeType":"YulFunctionCall","src":"2525:18:25"},{"name":"value2","nodeType":"YulIdentifier","src":"2545:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2518:6:25"},"nodeType":"YulFunctionCall","src":"2518:34:25"},"nodeType":"YulExpressionStatement","src":"2518:34:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2572:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"2583:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2568:3:25"},"nodeType":"YulFunctionCall","src":"2568:18:25"},{"kind":"number","nodeType":"YulLiteral","src":"2588:3:25","type":"","value":"160"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2561:6:25"},"nodeType":"YulFunctionCall","src":"2561:31:25"},"nodeType":"YulExpressionStatement","src":"2561:31:25"},{"nodeType":"YulAssignment","src":"2601:54:25","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"2627:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2639:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"2650:3:25","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2635:3:25"},"nodeType":"YulFunctionCall","src":"2635:19:25"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"2609:17:25"},"nodeType":"YulFunctionCall","src":"2609:46:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2601:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2675:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"2686:3:25","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2671:3:25"},"nodeType":"YulFunctionCall","src":"2671:19:25"},{"arguments":[{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"2706:6:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2699:6:25"},"nodeType":"YulFunctionCall","src":"2699:14:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2692:6:25"},"nodeType":"YulFunctionCall","src":"2692:22:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2664:6:25"},"nodeType":"YulFunctionCall","src":"2664:51:25"},"nodeType":"YulExpressionStatement","src":"2664:51:25"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_uint256_t_string_memory_ptr_t_bool__to_t_bytes32_t_address_t_uint256_t_string_memory_ptr_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2342:9:25","type":""},{"name":"value4","nodeType":"YulTypedName","src":"2353:6:25","type":""},{"name":"value3","nodeType":"YulTypedName","src":"2361:6:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2369:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2377:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2385:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2396:4:25","type":""}],"src":"2178:543:25"},{"body":{"nodeType":"YulBlock","src":"2827:76:25","statements":[{"nodeType":"YulAssignment","src":"2837:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2849:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"2860:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2845:3:25"},"nodeType":"YulFunctionCall","src":"2845:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2837:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2879:9:25"},{"name":"value0","nodeType":"YulIdentifier","src":"2890:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2872:6:25"},"nodeType":"YulFunctionCall","src":"2872:25:25"},"nodeType":"YulExpressionStatement","src":"2872:25:25"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2796:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2807:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2818:4:25","type":""}],"src":"2726:177:25"},{"body":{"nodeType":"YulBlock","src":"3012:224:25","statements":[{"body":{"nodeType":"YulBlock","src":"3058:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3067:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3070:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3060:6:25"},"nodeType":"YulFunctionCall","src":"3060:12:25"},"nodeType":"YulExpressionStatement","src":"3060:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3033:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"3042:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3029:3:25"},"nodeType":"YulFunctionCall","src":"3029:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"3054:2:25","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3025:3:25"},"nodeType":"YulFunctionCall","src":"3025:32:25"},"nodeType":"YulIf","src":"3022:52:25"},{"nodeType":"YulAssignment","src":"3083:39:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3112:9:25"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"3093:18:25"},"nodeType":"YulFunctionCall","src":"3093:29:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3083:6:25"}]},{"nodeType":"YulAssignment","src":"3131:48:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3164:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"3175:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3160:3:25"},"nodeType":"YulFunctionCall","src":"3160:18:25"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"3141:18:25"},"nodeType":"YulFunctionCall","src":"3141:38:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3131:6:25"}]},{"nodeType":"YulAssignment","src":"3188:42:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3215:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"3226:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3211:3:25"},"nodeType":"YulFunctionCall","src":"3211:18:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3198:12:25"},"nodeType":"YulFunctionCall","src":"3198:32:25"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3188:6:25"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2962:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2973:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2985:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2993:6:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3001:6:25","type":""}],"src":"2908:328:25"},{"body":{"nodeType":"YulBlock","src":"3328:167:25","statements":[{"body":{"nodeType":"YulBlock","src":"3374:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3383:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3386:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3376:6:25"},"nodeType":"YulFunctionCall","src":"3376:12:25"},"nodeType":"YulExpressionStatement","src":"3376:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3349:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"3358:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3345:3:25"},"nodeType":"YulFunctionCall","src":"3345:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"3370:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3341:3:25"},"nodeType":"YulFunctionCall","src":"3341:32:25"},"nodeType":"YulIf","src":"3338:52:25"},{"nodeType":"YulAssignment","src":"3399:33:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3422:9:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3409:12:25"},"nodeType":"YulFunctionCall","src":"3409:23:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3399:6:25"}]},{"nodeType":"YulAssignment","src":"3441:48:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3474:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"3485:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3470:3:25"},"nodeType":"YulFunctionCall","src":"3470:18:25"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"3451:18:25"},"nodeType":"YulFunctionCall","src":"3451:38:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3441:6:25"}]}]},"name":"abi_decode_tuple_t_uint256t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3286:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3297:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3309:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3317:6:25","type":""}],"src":"3241:254:25"},{"body":{"nodeType":"YulBlock","src":"3707:266:25","statements":[{"nodeType":"YulAssignment","src":"3717:27:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3729:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"3740:3:25","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3725:3:25"},"nodeType":"YulFunctionCall","src":"3725:19:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3717:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3760:9:25"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3785:6:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3778:6:25"},"nodeType":"YulFunctionCall","src":"3778:14:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3771:6:25"},"nodeType":"YulFunctionCall","src":"3771:22:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3753:6:25"},"nodeType":"YulFunctionCall","src":"3753:41:25"},"nodeType":"YulExpressionStatement","src":"3753:41:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3814:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"3825:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3810:3:25"},"nodeType":"YulFunctionCall","src":"3810:18:25"},{"name":"value1","nodeType":"YulIdentifier","src":"3830:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3803:6:25"},"nodeType":"YulFunctionCall","src":"3803:34:25"},"nodeType":"YulExpressionStatement","src":"3803:34:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3857:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"3868:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3853:3:25"},"nodeType":"YulFunctionCall","src":"3853:18:25"},{"name":"value2","nodeType":"YulIdentifier","src":"3873:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3846:6:25"},"nodeType":"YulFunctionCall","src":"3846:34:25"},"nodeType":"YulExpressionStatement","src":"3846:34:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3900:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"3911:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3896:3:25"},"nodeType":"YulFunctionCall","src":"3896:18:25"},{"name":"value3","nodeType":"YulIdentifier","src":"3916:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3889:6:25"},"nodeType":"YulFunctionCall","src":"3889:34:25"},"nodeType":"YulExpressionStatement","src":"3889:34:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3943:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"3954:3:25","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3939:3:25"},"nodeType":"YulFunctionCall","src":"3939:19:25"},{"name":"value4","nodeType":"YulIdentifier","src":"3960:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3932:6:25"},"nodeType":"YulFunctionCall","src":"3932:35:25"},"nodeType":"YulExpressionStatement","src":"3932:35:25"}]},"name":"abi_encode_tuple_t_bool_t_uint256_t_uint256_t_uint256_t_bytes32__to_t_bool_t_uint256_t_uint256_t_uint256_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3644:9:25","type":""},{"name":"value4","nodeType":"YulTypedName","src":"3655:6:25","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3663:6:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3671:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3679:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3687:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3698:4:25","type":""}],"src":"3500:473:25"},{"body":{"nodeType":"YulBlock","src":"4048:116:25","statements":[{"body":{"nodeType":"YulBlock","src":"4094:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4103:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4106:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4096:6:25"},"nodeType":"YulFunctionCall","src":"4096:12:25"},"nodeType":"YulExpressionStatement","src":"4096:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4069:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"4078:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4065:3:25"},"nodeType":"YulFunctionCall","src":"4065:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"4090:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4061:3:25"},"nodeType":"YulFunctionCall","src":"4061:32:25"},"nodeType":"YulIf","src":"4058:52:25"},{"nodeType":"YulAssignment","src":"4119:39:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4148:9:25"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"4129:18:25"},"nodeType":"YulFunctionCall","src":"4129:29:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4119:6:25"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4014:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4025:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4037:6:25","type":""}],"src":"3978:186:25"},{"body":{"nodeType":"YulBlock","src":"4290:270:25","statements":[{"body":{"nodeType":"YulBlock","src":"4337:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4346:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4349:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4339:6:25"},"nodeType":"YulFunctionCall","src":"4339:12:25"},"nodeType":"YulExpressionStatement","src":"4339:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4311:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"4320:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4307:3:25"},"nodeType":"YulFunctionCall","src":"4307:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"4332:3:25","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4303:3:25"},"nodeType":"YulFunctionCall","src":"4303:33:25"},"nodeType":"YulIf","src":"4300:53:25"},{"nodeType":"YulAssignment","src":"4362:33:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4385:9:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4372:12:25"},"nodeType":"YulFunctionCall","src":"4372:23:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4362:6:25"}]},{"nodeType":"YulAssignment","src":"4404:48:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4437:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"4448:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4433:3:25"},"nodeType":"YulFunctionCall","src":"4433:18:25"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"4414:18:25"},"nodeType":"YulFunctionCall","src":"4414:38:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4404:6:25"}]},{"nodeType":"YulAssignment","src":"4461:42:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4488:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"4499:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4484:3:25"},"nodeType":"YulFunctionCall","src":"4484:18:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4471:12:25"},"nodeType":"YulFunctionCall","src":"4471:32:25"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4461:6:25"}]},{"nodeType":"YulAssignment","src":"4512:42:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4539:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"4550:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4535:3:25"},"nodeType":"YulFunctionCall","src":"4535:18:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4522:12:25"},"nodeType":"YulFunctionCall","src":"4522:32:25"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"4512:6:25"}]}]},"name":"abi_decode_tuple_t_uint256t_addresst_bytes32t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4232:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4243:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4255:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4263:6:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4271:6:25","type":""},{"name":"value3","nodeType":"YulTypedName","src":"4279:6:25","type":""}],"src":"4169:391:25"},{"body":{"nodeType":"YulBlock","src":"4716:481:25","statements":[{"nodeType":"YulVariableDeclaration","src":"4726:12:25","value":{"kind":"number","nodeType":"YulLiteral","src":"4736:2:25","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"4730:2:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4747:32:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4765:9:25"},{"name":"_1","nodeType":"YulIdentifier","src":"4776:2:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4761:3:25"},"nodeType":"YulFunctionCall","src":"4761:18:25"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"4751:6:25","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4795:9:25"},{"name":"_1","nodeType":"YulIdentifier","src":"4806:2:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4788:6:25"},"nodeType":"YulFunctionCall","src":"4788:21:25"},"nodeType":"YulExpressionStatement","src":"4788:21:25"},{"nodeType":"YulVariableDeclaration","src":"4818:17:25","value":{"name":"tail_1","nodeType":"YulIdentifier","src":"4829:6:25"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"4822:3:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4844:27:25","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4864:6:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4858:5:25"},"nodeType":"YulFunctionCall","src":"4858:13:25"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4848:6:25","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"4887:6:25"},{"name":"length","nodeType":"YulIdentifier","src":"4895:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4880:6:25"},"nodeType":"YulFunctionCall","src":"4880:22:25"},"nodeType":"YulExpressionStatement","src":"4880:22:25"},{"nodeType":"YulAssignment","src":"4911:25:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4922:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"4933:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4918:3:25"},"nodeType":"YulFunctionCall","src":"4918:18:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4911:3:25"}]},{"nodeType":"YulVariableDeclaration","src":"4945:29:25","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4963:6:25"},{"name":"_1","nodeType":"YulIdentifier","src":"4971:2:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4959:3:25"},"nodeType":"YulFunctionCall","src":"4959:15:25"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"4949:6:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4983:10:25","value":{"kind":"number","nodeType":"YulLiteral","src":"4992:1:25","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"4987:1:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"5051:120:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5072:3:25"},{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"5083:6:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5077:5:25"},"nodeType":"YulFunctionCall","src":"5077:13:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5065:6:25"},"nodeType":"YulFunctionCall","src":"5065:26:25"},"nodeType":"YulExpressionStatement","src":"5065:26:25"},{"nodeType":"YulAssignment","src":"5104:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5115:3:25"},{"name":"_1","nodeType":"YulIdentifier","src":"5120:2:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5111:3:25"},"nodeType":"YulFunctionCall","src":"5111:12:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5104:3:25"}]},{"nodeType":"YulAssignment","src":"5136:25:25","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"5150:6:25"},{"name":"_1","nodeType":"YulIdentifier","src":"5158:2:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5146:3:25"},"nodeType":"YulFunctionCall","src":"5146:15:25"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"5136:6:25"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5013:1:25"},{"name":"length","nodeType":"YulIdentifier","src":"5016:6:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5010:2:25"},"nodeType":"YulFunctionCall","src":"5010:13:25"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5024:18:25","statements":[{"nodeType":"YulAssignment","src":"5026:14:25","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5035:1:25"},{"kind":"number","nodeType":"YulLiteral","src":"5038:1:25","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5031:3:25"},"nodeType":"YulFunctionCall","src":"5031:9:25"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"5026:1:25"}]}]},"pre":{"nodeType":"YulBlock","src":"5006:3:25","statements":[]},"src":"5002:169:25"},{"nodeType":"YulAssignment","src":"5180:11:25","value":{"name":"pos","nodeType":"YulIdentifier","src":"5188:3:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5180:4:25"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4685:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4696:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4707:4:25","type":""}],"src":"4565:632:25"},{"body":{"nodeType":"YulBlock","src":"5286:263:25","statements":[{"body":{"nodeType":"YulBlock","src":"5332:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5341:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5344:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5334:6:25"},"nodeType":"YulFunctionCall","src":"5334:12:25"},"nodeType":"YulExpressionStatement","src":"5334:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5307:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"5316:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5303:3:25"},"nodeType":"YulFunctionCall","src":"5303:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"5328:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5299:3:25"},"nodeType":"YulFunctionCall","src":"5299:32:25"},"nodeType":"YulIf","src":"5296:52:25"},{"nodeType":"YulAssignment","src":"5357:39:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5386:9:25"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"5367:18:25"},"nodeType":"YulFunctionCall","src":"5367:29:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5357:6:25"}]},{"nodeType":"YulVariableDeclaration","src":"5405:45:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5435:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"5446:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5431:3:25"},"nodeType":"YulFunctionCall","src":"5431:18:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5418:12:25"},"nodeType":"YulFunctionCall","src":"5418:32:25"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"5409:5:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"5503:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5512:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5515:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5505:6:25"},"nodeType":"YulFunctionCall","src":"5505:12:25"},"nodeType":"YulExpressionStatement","src":"5505:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5472:5:25"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5493:5:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5486:6:25"},"nodeType":"YulFunctionCall","src":"5486:13:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5479:6:25"},"nodeType":"YulFunctionCall","src":"5479:21:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5469:2:25"},"nodeType":"YulFunctionCall","src":"5469:32:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5462:6:25"},"nodeType":"YulFunctionCall","src":"5462:40:25"},"nodeType":"YulIf","src":"5459:60:25"},{"nodeType":"YulAssignment","src":"5528:15:25","value":{"name":"value","nodeType":"YulIdentifier","src":"5538:5:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5528:6:25"}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5244:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5255:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5267:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5275:6:25","type":""}],"src":"5202:347:25"},{"body":{"nodeType":"YulBlock","src":"5586:95:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5603:1:25","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5610:3:25","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"5615:10:25","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5606:3:25"},"nodeType":"YulFunctionCall","src":"5606:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5596:6:25"},"nodeType":"YulFunctionCall","src":"5596:31:25"},"nodeType":"YulExpressionStatement","src":"5596:31:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5643:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5646:4:25","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5636:6:25"},"nodeType":"YulFunctionCall","src":"5636:15:25"},"nodeType":"YulExpressionStatement","src":"5636:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5667:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5670:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5660:6:25"},"nodeType":"YulFunctionCall","src":"5660:15:25"},"nodeType":"YulExpressionStatement","src":"5660:15:25"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"5554:127:25"},{"body":{"nodeType":"YulBlock","src":"5760:557:25","statements":[{"nodeType":"YulVariableDeclaration","src":"5770:28:25","value":{"kind":"number","nodeType":"YulLiteral","src":"5780:18:25","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"5774:2:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"5825:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"5827:16:25"},"nodeType":"YulFunctionCall","src":"5827:18:25"},"nodeType":"YulExpressionStatement","src":"5827:18:25"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5813:6:25"},{"name":"_1","nodeType":"YulIdentifier","src":"5821:2:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5810:2:25"},"nodeType":"YulFunctionCall","src":"5810:14:25"},"nodeType":"YulIf","src":"5807:40:25"},{"nodeType":"YulVariableDeclaration","src":"5856:17:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5870:2:25","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5866:3:25"},"nodeType":"YulFunctionCall","src":"5866:7:25"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"5860:2:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5882:23:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5902:2:25","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5896:5:25"},"nodeType":"YulFunctionCall","src":"5896:9:25"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"5886:6:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5914:73:25","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5936:6:25"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5960:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"5968:2:25","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5956:3:25"},"nodeType":"YulFunctionCall","src":"5956:15:25"},{"name":"_2","nodeType":"YulIdentifier","src":"5973:2:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5952:3:25"},"nodeType":"YulFunctionCall","src":"5952:24:25"},{"kind":"number","nodeType":"YulLiteral","src":"5978:2:25","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5948:3:25"},"nodeType":"YulFunctionCall","src":"5948:33:25"},{"name":"_2","nodeType":"YulIdentifier","src":"5983:2:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5944:3:25"},"nodeType":"YulFunctionCall","src":"5944:42:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5932:3:25"},"nodeType":"YulFunctionCall","src":"5932:55:25"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"5918:10:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"6046:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"6048:16:25"},"nodeType":"YulFunctionCall","src":"6048:18:25"},"nodeType":"YulExpressionStatement","src":"6048:18:25"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"6005:10:25"},{"name":"_1","nodeType":"YulIdentifier","src":"6017:2:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6002:2:25"},"nodeType":"YulFunctionCall","src":"6002:18:25"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"6025:10:25"},{"name":"memPtr","nodeType":"YulIdentifier","src":"6037:6:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6022:2:25"},"nodeType":"YulFunctionCall","src":"6022:22:25"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"5999:2:25"},"nodeType":"YulFunctionCall","src":"5999:46:25"},"nodeType":"YulIf","src":"5996:72:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6084:2:25","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"6088:10:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6077:6:25"},"nodeType":"YulFunctionCall","src":"6077:22:25"},"nodeType":"YulExpressionStatement","src":"6077:22:25"},{"nodeType":"YulAssignment","src":"6108:15:25","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"6117:6:25"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"6108:5:25"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6139:6:25"},{"name":"length","nodeType":"YulIdentifier","src":"6147:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6132:6:25"},"nodeType":"YulFunctionCall","src":"6132:22:25"},"nodeType":"YulExpressionStatement","src":"6132:22:25"},{"body":{"nodeType":"YulBlock","src":"6192:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6201:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6204:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6194:6:25"},"nodeType":"YulFunctionCall","src":"6194:12:25"},"nodeType":"YulExpressionStatement","src":"6194:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6173:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"6178:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6169:3:25"},"nodeType":"YulFunctionCall","src":"6169:16:25"},{"name":"end","nodeType":"YulIdentifier","src":"6187:3:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6166:2:25"},"nodeType":"YulFunctionCall","src":"6166:25:25"},"nodeType":"YulIf","src":"6163:45:25"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6234:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"6242:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6230:3:25"},"nodeType":"YulFunctionCall","src":"6230:17:25"},{"name":"src","nodeType":"YulIdentifier","src":"6249:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"6254:6:25"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"6217:12:25"},"nodeType":"YulFunctionCall","src":"6217:44:25"},"nodeType":"YulExpressionStatement","src":"6217:44:25"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6285:6:25"},{"name":"length","nodeType":"YulIdentifier","src":"6293:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6281:3:25"},"nodeType":"YulFunctionCall","src":"6281:19:25"},{"kind":"number","nodeType":"YulLiteral","src":"6302:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6277:3:25"},"nodeType":"YulFunctionCall","src":"6277:30:25"},{"kind":"number","nodeType":"YulLiteral","src":"6309:1:25","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6270:6:25"},"nodeType":"YulFunctionCall","src":"6270:41:25"},"nodeType":"YulExpressionStatement","src":"6270:41:25"}]},"name":"abi_decode_available_length_bytes","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"5729:3:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"5734:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"5742:3:25","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"5750:5:25","type":""}],"src":"5686:631:25"},{"body":{"nodeType":"YulBlock","src":"6452:536:25","statements":[{"body":{"nodeType":"YulBlock","src":"6499:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6508:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6511:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6501:6:25"},"nodeType":"YulFunctionCall","src":"6501:12:25"},"nodeType":"YulExpressionStatement","src":"6501:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6473:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"6482:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6469:3:25"},"nodeType":"YulFunctionCall","src":"6469:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"6494:3:25","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6465:3:25"},"nodeType":"YulFunctionCall","src":"6465:33:25"},"nodeType":"YulIf","src":"6462:53:25"},{"nodeType":"YulAssignment","src":"6524:39:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6553:9:25"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"6534:18:25"},"nodeType":"YulFunctionCall","src":"6534:29:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6524:6:25"}]},{"nodeType":"YulAssignment","src":"6572:48:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6605:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"6616:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6601:3:25"},"nodeType":"YulFunctionCall","src":"6601:18:25"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"6582:18:25"},"nodeType":"YulFunctionCall","src":"6582:38:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6572:6:25"}]},{"nodeType":"YulAssignment","src":"6629:42:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6656:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"6667:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6652:3:25"},"nodeType":"YulFunctionCall","src":"6652:18:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6639:12:25"},"nodeType":"YulFunctionCall","src":"6639:32:25"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"6629:6:25"}]},{"nodeType":"YulVariableDeclaration","src":"6680:46:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6711:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"6722:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6707:3:25"},"nodeType":"YulFunctionCall","src":"6707:18:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6694:12:25"},"nodeType":"YulFunctionCall","src":"6694:32:25"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6684:6:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"6769:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6778:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6781:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6771:6:25"},"nodeType":"YulFunctionCall","src":"6771:12:25"},"nodeType":"YulExpressionStatement","src":"6771:12:25"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6741:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"6749:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6738:2:25"},"nodeType":"YulFunctionCall","src":"6738:30:25"},"nodeType":"YulIf","src":"6735:50:25"},{"nodeType":"YulVariableDeclaration","src":"6794:32:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6808:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"6819:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6804:3:25"},"nodeType":"YulFunctionCall","src":"6804:22:25"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"6798:2:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"6874:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6883:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6886:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6876:6:25"},"nodeType":"YulFunctionCall","src":"6876:12:25"},"nodeType":"YulExpressionStatement","src":"6876:12:25"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"6853:2:25"},{"kind":"number","nodeType":"YulLiteral","src":"6857:4:25","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6849:3:25"},"nodeType":"YulFunctionCall","src":"6849:13:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6864:7:25"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6845:3:25"},"nodeType":"YulFunctionCall","src":"6845:27:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6838:6:25"},"nodeType":"YulFunctionCall","src":"6838:35:25"},"nodeType":"YulIf","src":"6835:55:25"},{"nodeType":"YulAssignment","src":"6899:83:25","value":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"6947:2:25"},{"kind":"number","nodeType":"YulLiteral","src":"6951:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6943:3:25"},"nodeType":"YulFunctionCall","src":"6943:11:25"},{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"6969:2:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6956:12:25"},"nodeType":"YulFunctionCall","src":"6956:16:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6974:7:25"}],"functionName":{"name":"abi_decode_available_length_bytes","nodeType":"YulIdentifier","src":"6909:33:25"},"nodeType":"YulFunctionCall","src":"6909:73:25"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"6899:6:25"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6394:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6405:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6417:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6425:6:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6433:6:25","type":""},{"name":"value3","nodeType":"YulTypedName","src":"6441:6:25","type":""}],"src":"6322:666:25"},{"body":{"nodeType":"YulBlock","src":"7046:168:25","statements":[{"body":{"nodeType":"YulBlock","src":"7095:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7104:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7107:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7097:6:25"},"nodeType":"YulFunctionCall","src":"7097:12:25"},"nodeType":"YulExpressionStatement","src":"7097:12:25"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7074:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"7082:4:25","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7070:3:25"},"nodeType":"YulFunctionCall","src":"7070:17:25"},{"name":"end","nodeType":"YulIdentifier","src":"7089:3:25"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7066:3:25"},"nodeType":"YulFunctionCall","src":"7066:27:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7059:6:25"},"nodeType":"YulFunctionCall","src":"7059:35:25"},"nodeType":"YulIf","src":"7056:55:25"},{"nodeType":"YulAssignment","src":"7120:88:25","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7167:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"7175:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7163:3:25"},"nodeType":"YulFunctionCall","src":"7163:17:25"},{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7195:6:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7182:12:25"},"nodeType":"YulFunctionCall","src":"7182:20:25"},{"name":"end","nodeType":"YulIdentifier","src":"7204:3:25"}],"functionName":{"name":"abi_decode_available_length_bytes","nodeType":"YulIdentifier","src":"7129:33:25"},"nodeType":"YulFunctionCall","src":"7129:79:25"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"7120:5:25"}]}]},"name":"abi_decode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"7020:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"7028:3:25","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"7036:5:25","type":""}],"src":"6993:221:25"},{"body":{"nodeType":"YulBlock","src":"7360:545:25","statements":[{"body":{"nodeType":"YulBlock","src":"7407:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7416:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7419:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7409:6:25"},"nodeType":"YulFunctionCall","src":"7409:12:25"},"nodeType":"YulExpressionStatement","src":"7409:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7381:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"7390:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7377:3:25"},"nodeType":"YulFunctionCall","src":"7377:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"7402:3:25","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7373:3:25"},"nodeType":"YulFunctionCall","src":"7373:33:25"},"nodeType":"YulIf","src":"7370:53:25"},{"nodeType":"YulAssignment","src":"7432:39:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7461:9:25"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"7442:18:25"},"nodeType":"YulFunctionCall","src":"7442:29:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7432:6:25"}]},{"nodeType":"YulAssignment","src":"7480:42:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7507:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"7518:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7503:3:25"},"nodeType":"YulFunctionCall","src":"7503:18:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7490:12:25"},"nodeType":"YulFunctionCall","src":"7490:32:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7480:6:25"}]},{"nodeType":"YulVariableDeclaration","src":"7531:46:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7562:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"7573:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7558:3:25"},"nodeType":"YulFunctionCall","src":"7558:18:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7545:12:25"},"nodeType":"YulFunctionCall","src":"7545:32:25"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7535:6:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7586:28:25","value":{"kind":"number","nodeType":"YulLiteral","src":"7596:18:25","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"7590:2:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"7641:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7650:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7653:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7643:6:25"},"nodeType":"YulFunctionCall","src":"7643:12:25"},"nodeType":"YulExpressionStatement","src":"7643:12:25"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7629:6:25"},{"name":"_1","nodeType":"YulIdentifier","src":"7637:2:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7626:2:25"},"nodeType":"YulFunctionCall","src":"7626:14:25"},"nodeType":"YulIf","src":"7623:34:25"},{"nodeType":"YulAssignment","src":"7666:60:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7698:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"7709:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7694:3:25"},"nodeType":"YulFunctionCall","src":"7694:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7718:7:25"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"7676:17:25"},"nodeType":"YulFunctionCall","src":"7676:50:25"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"7666:6:25"}]},{"nodeType":"YulVariableDeclaration","src":"7735:48:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7768:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"7779:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7764:3:25"},"nodeType":"YulFunctionCall","src":"7764:18:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7751:12:25"},"nodeType":"YulFunctionCall","src":"7751:32:25"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"7739:8:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"7812:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7821:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7824:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7814:6:25"},"nodeType":"YulFunctionCall","src":"7814:12:25"},"nodeType":"YulExpressionStatement","src":"7814:12:25"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"7798:8:25"},{"name":"_1","nodeType":"YulIdentifier","src":"7808:2:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7795:2:25"},"nodeType":"YulFunctionCall","src":"7795:16:25"},"nodeType":"YulIf","src":"7792:36:25"},{"nodeType":"YulAssignment","src":"7837:62:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7869:9:25"},{"name":"offset_1","nodeType":"YulIdentifier","src":"7880:8:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7865:3:25"},"nodeType":"YulFunctionCall","src":"7865:24:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7891:7:25"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"7847:17:25"},"nodeType":"YulFunctionCall","src":"7847:52:25"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"7837:6:25"}]}]},"name":"abi_decode_tuple_t_addresst_bytes32t_string_memory_ptrt_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7302:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7313:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7325:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7333:6:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7341:6:25","type":""},{"name":"value3","nodeType":"YulTypedName","src":"7349:6:25","type":""}],"src":"7219:686:25"},{"body":{"nodeType":"YulBlock","src":"7997:173:25","statements":[{"body":{"nodeType":"YulBlock","src":"8043:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8052:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8055:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8045:6:25"},"nodeType":"YulFunctionCall","src":"8045:12:25"},"nodeType":"YulExpressionStatement","src":"8045:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8018:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"8027:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8014:3:25"},"nodeType":"YulFunctionCall","src":"8014:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"8039:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8010:3:25"},"nodeType":"YulFunctionCall","src":"8010:32:25"},"nodeType":"YulIf","src":"8007:52:25"},{"nodeType":"YulAssignment","src":"8068:39:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8097:9:25"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"8078:18:25"},"nodeType":"YulFunctionCall","src":"8078:29:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8068:6:25"}]},{"nodeType":"YulAssignment","src":"8116:48:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8149:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"8160:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8145:3:25"},"nodeType":"YulFunctionCall","src":"8145:18:25"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"8126:18:25"},"nodeType":"YulFunctionCall","src":"8126:38:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"8116:6:25"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7955:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7966:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7978:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7986:6:25","type":""}],"src":"7910:260:25"},{"body":{"nodeType":"YulBlock","src":"8245:110:25","statements":[{"body":{"nodeType":"YulBlock","src":"8291:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8300:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8303:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8293:6:25"},"nodeType":"YulFunctionCall","src":"8293:12:25"},"nodeType":"YulExpressionStatement","src":"8293:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8266:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"8275:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8262:3:25"},"nodeType":"YulFunctionCall","src":"8262:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"8287:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8258:3:25"},"nodeType":"YulFunctionCall","src":"8258:32:25"},"nodeType":"YulIf","src":"8255:52:25"},{"nodeType":"YulAssignment","src":"8316:33:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8339:9:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8326:12:25"},"nodeType":"YulFunctionCall","src":"8326:23:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8316:6:25"}]}]},"name":"abi_decode_tuple_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8211:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8222:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8234:6:25","type":""}],"src":"8175:180:25"},{"body":{"nodeType":"YulBlock","src":"8415:325:25","statements":[{"nodeType":"YulAssignment","src":"8425:22:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8439:1:25","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"8442:4:25"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"8435:3:25"},"nodeType":"YulFunctionCall","src":"8435:12:25"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8425:6:25"}]},{"nodeType":"YulVariableDeclaration","src":"8456:38:25","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"8486:4:25"},{"kind":"number","nodeType":"YulLiteral","src":"8492:1:25","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8482:3:25"},"nodeType":"YulFunctionCall","src":"8482:12:25"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"8460:18:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"8533:31:25","statements":[{"nodeType":"YulAssignment","src":"8535:27:25","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8549:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"8557:4:25","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8545:3:25"},"nodeType":"YulFunctionCall","src":"8545:17:25"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8535:6:25"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"8513:18:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8506:6:25"},"nodeType":"YulFunctionCall","src":"8506:26:25"},"nodeType":"YulIf","src":"8503:61:25"},{"body":{"nodeType":"YulBlock","src":"8623:111:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8644:1:25","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8651:3:25","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"8656:10:25","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8647:3:25"},"nodeType":"YulFunctionCall","src":"8647:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8637:6:25"},"nodeType":"YulFunctionCall","src":"8637:31:25"},"nodeType":"YulExpressionStatement","src":"8637:31:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8688:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8691:4:25","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8681:6:25"},"nodeType":"YulFunctionCall","src":"8681:15:25"},"nodeType":"YulExpressionStatement","src":"8681:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8716:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8719:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8709:6:25"},"nodeType":"YulFunctionCall","src":"8709:15:25"},"nodeType":"YulExpressionStatement","src":"8709:15:25"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"8579:18:25"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8602:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"8610:2:25","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8599:2:25"},"nodeType":"YulFunctionCall","src":"8599:14:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8576:2:25"},"nodeType":"YulFunctionCall","src":"8576:38:25"},"nodeType":"YulIf","src":"8573:161:25"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"8395:4:25","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"8404:6:25","type":""}],"src":"8360:380:25"},{"body":{"nodeType":"YulBlock","src":"8919:170:25","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8936:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"8947:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8929:6:25"},"nodeType":"YulFunctionCall","src":"8929:21:25"},"nodeType":"YulExpressionStatement","src":"8929:21:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8970:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"8981:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8966:3:25"},"nodeType":"YulFunctionCall","src":"8966:18:25"},{"kind":"number","nodeType":"YulLiteral","src":"8986:2:25","type":"","value":"20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8959:6:25"},"nodeType":"YulFunctionCall","src":"8959:30:25"},"nodeType":"YulExpressionStatement","src":"8959:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9009:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"9020:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9005:3:25"},"nodeType":"YulFunctionCall","src":"9005:18:25"},{"hexValue":"546f6b656e20646f6573206e6f74206578697374","kind":"string","nodeType":"YulLiteral","src":"9025:22:25","type":"","value":"Token does not exist"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8998:6:25"},"nodeType":"YulFunctionCall","src":"8998:50:25"},"nodeType":"YulExpressionStatement","src":"8998:50:25"},{"nodeType":"YulAssignment","src":"9057:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9069:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"9080:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9065:3:25"},"nodeType":"YulFunctionCall","src":"9065:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9057:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8896:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8910:4:25","type":""}],"src":"8745:344:25"},{"body":{"nodeType":"YulBlock","src":"9268:164:25","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9285:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"9296:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9278:6:25"},"nodeType":"YulFunctionCall","src":"9278:21:25"},"nodeType":"YulExpressionStatement","src":"9278:21:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9319:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"9330:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9315:3:25"},"nodeType":"YulFunctionCall","src":"9315:18:25"},{"kind":"number","nodeType":"YulLiteral","src":"9335:2:25","type":"","value":"14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9308:6:25"},"nodeType":"YulFunctionCall","src":"9308:30:25"},"nodeType":"YulExpressionStatement","src":"9308:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9358:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"9369:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9354:3:25"},"nodeType":"YulFunctionCall","src":"9354:18:25"},{"hexValue":"4e6f7420617574686f72697a6564","kind":"string","nodeType":"YulLiteral","src":"9374:16:25","type":"","value":"Not authorized"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9347:6:25"},"nodeType":"YulFunctionCall","src":"9347:44:25"},"nodeType":"YulExpressionStatement","src":"9347:44:25"},{"nodeType":"YulAssignment","src":"9400:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9412:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"9423:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9408:3:25"},"nodeType":"YulFunctionCall","src":"9408:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9400:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9245:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9259:4:25","type":""}],"src":"9094:338:25"},{"body":{"nodeType":"YulBlock","src":"9594:218:25","statements":[{"nodeType":"YulAssignment","src":"9604:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9616:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"9627:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9612:3:25"},"nodeType":"YulFunctionCall","src":"9612:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9604:4:25"}]},{"nodeType":"YulVariableDeclaration","src":"9639:29:25","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9657:3:25","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"9662:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9653:3:25"},"nodeType":"YulFunctionCall","src":"9653:11:25"},{"kind":"number","nodeType":"YulLiteral","src":"9666:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9649:3:25"},"nodeType":"YulFunctionCall","src":"9649:19:25"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"9643:2:25","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9684:9:25"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9699:6:25"},{"name":"_1","nodeType":"YulIdentifier","src":"9707:2:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9695:3:25"},"nodeType":"YulFunctionCall","src":"9695:15:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9677:6:25"},"nodeType":"YulFunctionCall","src":"9677:34:25"},"nodeType":"YulExpressionStatement","src":"9677:34:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9731:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"9742:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9727:3:25"},"nodeType":"YulFunctionCall","src":"9727:18:25"},{"name":"value1","nodeType":"YulIdentifier","src":"9747:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9720:6:25"},"nodeType":"YulFunctionCall","src":"9720:34:25"},"nodeType":"YulExpressionStatement","src":"9720:34:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9774:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"9785:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9770:3:25"},"nodeType":"YulFunctionCall","src":"9770:18:25"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"9794:6:25"},{"name":"_1","nodeType":"YulIdentifier","src":"9802:2:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9790:3:25"},"nodeType":"YulFunctionCall","src":"9790:15:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9763:6:25"},"nodeType":"YulFunctionCall","src":"9763:43:25"},"nodeType":"YulExpressionStatement","src":"9763:43:25"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9547:9:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9558:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9566:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9574:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9585:4:25","type":""}],"src":"9437:375:25"},{"body":{"nodeType":"YulBlock","src":"9991:174:25","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10008:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"10019:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10001:6:25"},"nodeType":"YulFunctionCall","src":"10001:21:25"},"nodeType":"YulExpressionStatement","src":"10001:21:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10042:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"10053:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10038:3:25"},"nodeType":"YulFunctionCall","src":"10038:18:25"},{"kind":"number","nodeType":"YulLiteral","src":"10058:2:25","type":"","value":"24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10031:6:25"},"nodeType":"YulFunctionCall","src":"10031:30:25"},"nodeType":"YulExpressionStatement","src":"10031:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10081:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"10092:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10077:3:25"},"nodeType":"YulFunctionCall","src":"10077:18:25"},{"hexValue":"496e76616c696420686f73706974616c2061646472657373","kind":"string","nodeType":"YulLiteral","src":"10097:26:25","type":"","value":"Invalid hospital address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10070:6:25"},"nodeType":"YulFunctionCall","src":"10070:54:25"},"nodeType":"YulExpressionStatement","src":"10070:54:25"},{"nodeType":"YulAssignment","src":"10133:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10145:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"10156:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10141:3:25"},"nodeType":"YulFunctionCall","src":"10141:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10133:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_4b5c3fff8a7470fb7d3cb5a2c825606d65a273a4198bebb9e861ea888af21bb0__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9968:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9982:4:25","type":""}],"src":"9817:348:25"},{"body":{"nodeType":"YulBlock","src":"10344:176:25","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10361:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"10372:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10354:6:25"},"nodeType":"YulFunctionCall","src":"10354:21:25"},"nodeType":"YulExpressionStatement","src":"10354:21:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10395:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"10406:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10391:3:25"},"nodeType":"YulFunctionCall","src":"10391:18:25"},{"kind":"number","nodeType":"YulLiteral","src":"10411:2:25","type":"","value":"26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10384:6:25"},"nodeType":"YulFunctionCall","src":"10384:30:25"},"nodeType":"YulExpressionStatement","src":"10384:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10434:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"10445:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10430:3:25"},"nodeType":"YulFunctionCall","src":"10430:18:25"},{"hexValue":"4d65646963616c207265636f726420697320696e616374697665","kind":"string","nodeType":"YulLiteral","src":"10450:28:25","type":"","value":"Medical record is inactive"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10423:6:25"},"nodeType":"YulFunctionCall","src":"10423:56:25"},"nodeType":"YulExpressionStatement","src":"10423:56:25"},{"nodeType":"YulAssignment","src":"10488:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10500:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"10511:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10496:3:25"},"nodeType":"YulFunctionCall","src":"10496:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10488:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_dcfb34f5fb0cab85164bfd0483e42a37b0410302e0991467efe4d343903bf0d7__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10321:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10335:4:25","type":""}],"src":"10170:350:25"},{"body":{"nodeType":"YulBlock","src":"10557:95:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10574:1:25","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10581:3:25","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"10586:10:25","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"10577:3:25"},"nodeType":"YulFunctionCall","src":"10577:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10567:6:25"},"nodeType":"YulFunctionCall","src":"10567:31:25"},"nodeType":"YulExpressionStatement","src":"10567:31:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10614:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"10617:4:25","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10607:6:25"},"nodeType":"YulFunctionCall","src":"10607:15:25"},"nodeType":"YulExpressionStatement","src":"10607:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10638:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10641:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10631:6:25"},"nodeType":"YulFunctionCall","src":"10631:15:25"},"nodeType":"YulExpressionStatement","src":"10631:15:25"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"10525:127:25"},{"body":{"nodeType":"YulBlock","src":"10705:77:25","statements":[{"nodeType":"YulAssignment","src":"10715:16:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"10726:1:25"},{"name":"y","nodeType":"YulIdentifier","src":"10729:1:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10722:3:25"},"nodeType":"YulFunctionCall","src":"10722:9:25"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"10715:3:25"}]},{"body":{"nodeType":"YulBlock","src":"10754:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"10756:16:25"},"nodeType":"YulFunctionCall","src":"10756:18:25"},"nodeType":"YulExpressionStatement","src":"10756:18:25"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"10746:1:25"},{"name":"sum","nodeType":"YulIdentifier","src":"10749:3:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10743:2:25"},"nodeType":"YulFunctionCall","src":"10743:10:25"},"nodeType":"YulIf","src":"10740:36:25"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"10688:1:25","type":""},{"name":"y","nodeType":"YulTypedName","src":"10691:1:25","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"10697:3:25","type":""}],"src":"10657:125:25"},{"body":{"nodeType":"YulBlock","src":"10916:119:25","statements":[{"nodeType":"YulAssignment","src":"10926:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10938:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"10949:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10934:3:25"},"nodeType":"YulFunctionCall","src":"10934:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10926:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10968:9:25"},{"name":"value0","nodeType":"YulIdentifier","src":"10979:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10961:6:25"},"nodeType":"YulFunctionCall","src":"10961:25:25"},"nodeType":"YulExpressionStatement","src":"10961:25:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11006:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"11017:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11002:3:25"},"nodeType":"YulFunctionCall","src":"11002:18:25"},{"name":"value1","nodeType":"YulIdentifier","src":"11022:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10995:6:25"},"nodeType":"YulFunctionCall","src":"10995:34:25"},"nodeType":"YulExpressionStatement","src":"10995:34:25"}]},"name":"abi_encode_tuple_t_uint256_t_bytes32__to_t_uint256_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10877:9:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10888:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10896:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10907:4:25","type":""}],"src":"10787:248:25"},{"body":{"nodeType":"YulBlock","src":"11214:179:25","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11231:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"11242:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11224:6:25"},"nodeType":"YulFunctionCall","src":"11224:21:25"},"nodeType":"YulExpressionStatement","src":"11224:21:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11265:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"11276:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11261:3:25"},"nodeType":"YulFunctionCall","src":"11261:18:25"},{"kind":"number","nodeType":"YulLiteral","src":"11281:2:25","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11254:6:25"},"nodeType":"YulFunctionCall","src":"11254:30:25"},"nodeType":"YulExpressionStatement","src":"11254:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11304:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"11315:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11300:3:25"},"nodeType":"YulFunctionCall","src":"11300:18:25"},{"hexValue":"4d65646963616c207265636f726420616c726561647920657869737473","kind":"string","nodeType":"YulLiteral","src":"11320:31:25","type":"","value":"Medical record already exists"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11293:6:25"},"nodeType":"YulFunctionCall","src":"11293:59:25"},"nodeType":"YulExpressionStatement","src":"11293:59:25"},{"nodeType":"YulAssignment","src":"11361:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11373:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"11384:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11369:3:25"},"nodeType":"YulFunctionCall","src":"11369:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11361:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_ea7063d2c5924cbb69a84dddc40b0a8e893a912b3a7babb8c9dcb7606148a6da__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11191:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11205:4:25","type":""}],"src":"11040:353:25"},{"body":{"nodeType":"YulBlock","src":"11572:173:25","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11589:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"11600:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11582:6:25"},"nodeType":"YulFunctionCall","src":"11582:21:25"},"nodeType":"YulExpressionStatement","src":"11582:21:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11623:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"11634:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11619:3:25"},"nodeType":"YulFunctionCall","src":"11619:18:25"},{"kind":"number","nodeType":"YulLiteral","src":"11639:2:25","type":"","value":"23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11612:6:25"},"nodeType":"YulFunctionCall","src":"11612:30:25"},"nodeType":"YulExpressionStatement","src":"11612:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11662:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"11673:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11658:3:25"},"nodeType":"YulFunctionCall","src":"11658:18:25"},{"hexValue":"496e76616c69642070617469656e742061646472657373","kind":"string","nodeType":"YulLiteral","src":"11678:25:25","type":"","value":"Invalid patient address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11651:6:25"},"nodeType":"YulFunctionCall","src":"11651:53:25"},"nodeType":"YulExpressionStatement","src":"11651:53:25"},{"nodeType":"YulAssignment","src":"11713:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11725:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"11736:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11721:3:25"},"nodeType":"YulFunctionCall","src":"11721:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11713:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_33c473c2e2093856cbe26752e819a40ac1e4e430d9421ac16799c34433450e7a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11549:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11563:4:25","type":""}],"src":"11398:347:25"},{"body":{"nodeType":"YulBlock","src":"11797:88:25","statements":[{"body":{"nodeType":"YulBlock","src":"11828:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"11830:16:25"},"nodeType":"YulFunctionCall","src":"11830:18:25"},"nodeType":"YulExpressionStatement","src":"11830:18:25"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11813:5:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11824:1:25","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"11820:3:25"},"nodeType":"YulFunctionCall","src":"11820:6:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"11810:2:25"},"nodeType":"YulFunctionCall","src":"11810:17:25"},"nodeType":"YulIf","src":"11807:43:25"},{"nodeType":"YulAssignment","src":"11859:20:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11870:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"11877:1:25","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11866:3:25"},"nodeType":"YulFunctionCall","src":"11866:13:25"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"11859:3:25"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11779:5:25","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"11789:3:25","type":""}],"src":"11750:135:25"},{"body":{"nodeType":"YulBlock","src":"11946:65:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11963:1:25","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"11966:3:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11956:6:25"},"nodeType":"YulFunctionCall","src":"11956:14:25"},"nodeType":"YulExpressionStatement","src":"11956:14:25"},{"nodeType":"YulAssignment","src":"11979:26:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11997:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12000:4:25","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"11987:9:25"},"nodeType":"YulFunctionCall","src":"11987:18:25"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"11979:4:25"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"11929:3:25","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"11937:4:25","type":""}],"src":"11890:121:25"},{"body":{"nodeType":"YulBlock","src":"12097:464:25","statements":[{"body":{"nodeType":"YulBlock","src":"12130:425:25","statements":[{"nodeType":"YulVariableDeclaration","src":"12144:11:25","value":{"kind":"number","nodeType":"YulLiteral","src":"12154:1:25","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"12148:2:25","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"12175:2:25"},{"name":"array","nodeType":"YulIdentifier","src":"12179:5:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12168:6:25"},"nodeType":"YulFunctionCall","src":"12168:17:25"},"nodeType":"YulExpressionStatement","src":"12168:17:25"},{"nodeType":"YulVariableDeclaration","src":"12198:31:25","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"12220:2:25"},{"kind":"number","nodeType":"YulLiteral","src":"12224:4:25","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"12210:9:25"},"nodeType":"YulFunctionCall","src":"12210:19:25"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"12202:4:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"12242:57:25","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"12265:4:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12275:1:25","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"12282:10:25"},{"kind":"number","nodeType":"YulLiteral","src":"12294:2:25","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12278:3:25"},"nodeType":"YulFunctionCall","src":"12278:19:25"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"12271:3:25"},"nodeType":"YulFunctionCall","src":"12271:27:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12261:3:25"},"nodeType":"YulFunctionCall","src":"12261:38:25"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"12246:11:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"12336:23:25","statements":[{"nodeType":"YulAssignment","src":"12338:19:25","value":{"name":"data","nodeType":"YulIdentifier","src":"12353:4:25"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"12338:11:25"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"12318:10:25"},{"kind":"number","nodeType":"YulLiteral","src":"12330:4:25","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"12315:2:25"},"nodeType":"YulFunctionCall","src":"12315:20:25"},"nodeType":"YulIf","src":"12312:47:25"},{"nodeType":"YulVariableDeclaration","src":"12372:41:25","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"12386:4:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12396:1:25","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"12403:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"12408:2:25","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12399:3:25"},"nodeType":"YulFunctionCall","src":"12399:12:25"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"12392:3:25"},"nodeType":"YulFunctionCall","src":"12392:20:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12382:3:25"},"nodeType":"YulFunctionCall","src":"12382:31:25"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"12376:2:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"12426:24:25","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"12439:11:25"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"12430:5:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"12524:21:25","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"12533:5:25"},{"name":"_1","nodeType":"YulIdentifier","src":"12540:2:25"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"12526:6:25"},"nodeType":"YulFunctionCall","src":"12526:17:25"},"nodeType":"YulExpressionStatement","src":"12526:17:25"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"12474:5:25"},{"name":"_2","nodeType":"YulIdentifier","src":"12481:2:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"12471:2:25"},"nodeType":"YulFunctionCall","src":"12471:13:25"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"12485:26:25","statements":[{"nodeType":"YulAssignment","src":"12487:22:25","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"12500:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"12507:1:25","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12496:3:25"},"nodeType":"YulFunctionCall","src":"12496:13:25"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"12487:5:25"}]}]},"pre":{"nodeType":"YulBlock","src":"12467:3:25","statements":[]},"src":"12463:82:25"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"12113:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"12118:2:25","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12110:2:25"},"nodeType":"YulFunctionCall","src":"12110:11:25"},"nodeType":"YulIf","src":"12107:448:25"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"12069:5:25","type":""},{"name":"len","nodeType":"YulTypedName","src":"12076:3:25","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"12081:10:25","type":""}],"src":"12016:545:25"},{"body":{"nodeType":"YulBlock","src":"12651:81:25","statements":[{"nodeType":"YulAssignment","src":"12661:65:25","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"12676:4:25"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12694:1:25","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"12697:3:25"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"12690:3:25"},"nodeType":"YulFunctionCall","src":"12690:11:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12707:1:25","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"12703:3:25"},"nodeType":"YulFunctionCall","src":"12703:6:25"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"12686:3:25"},"nodeType":"YulFunctionCall","src":"12686:24:25"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"12682:3:25"},"nodeType":"YulFunctionCall","src":"12682:29:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12672:3:25"},"nodeType":"YulFunctionCall","src":"12672:40:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12718:1:25","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"12721:3:25"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"12714:3:25"},"nodeType":"YulFunctionCall","src":"12714:11:25"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"12669:2:25"},"nodeType":"YulFunctionCall","src":"12669:57:25"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"12661:4:25"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"12628:4:25","type":""},{"name":"len","nodeType":"YulTypedName","src":"12634:3:25","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"12642:4:25","type":""}],"src":"12566:166:25"},{"body":{"nodeType":"YulBlock","src":"12833:1256:25","statements":[{"nodeType":"YulVariableDeclaration","src":"12843:24:25","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"12863:3:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12857:5:25"},"nodeType":"YulFunctionCall","src":"12857:10:25"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"12847:6:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"12910:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"12912:16:25"},"nodeType":"YulFunctionCall","src":"12912:18:25"},"nodeType":"YulExpressionStatement","src":"12912:18:25"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"12882:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"12890:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12879:2:25"},"nodeType":"YulFunctionCall","src":"12879:30:25"},"nodeType":"YulIf","src":"12876:56:25"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"12985:4:25"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"13023:4:25"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"13017:5:25"},"nodeType":"YulFunctionCall","src":"13017:11:25"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"12991:25:25"},"nodeType":"YulFunctionCall","src":"12991:38:25"},{"name":"newLen","nodeType":"YulIdentifier","src":"13031:6:25"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"12941:43:25"},"nodeType":"YulFunctionCall","src":"12941:97:25"},"nodeType":"YulExpressionStatement","src":"12941:97:25"},{"nodeType":"YulVariableDeclaration","src":"13047:18:25","value":{"kind":"number","nodeType":"YulLiteral","src":"13064:1:25","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"13051:9:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"13074:23:25","value":{"kind":"number","nodeType":"YulLiteral","src":"13093:4:25","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"13078:11:25","type":""}]},{"nodeType":"YulAssignment","src":"13106:24:25","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"13119:11:25"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"13106:9:25"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"13176:656:25","statements":[{"nodeType":"YulVariableDeclaration","src":"13190:35:25","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"13209:6:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13221:2:25","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"13217:3:25"},"nodeType":"YulFunctionCall","src":"13217:7:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13205:3:25"},"nodeType":"YulFunctionCall","src":"13205:20:25"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"13194:7:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"13238:49:25","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"13282:4:25"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"13252:29:25"},"nodeType":"YulFunctionCall","src":"13252:35:25"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"13242:6:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"13300:10:25","value":{"kind":"number","nodeType":"YulLiteral","src":"13309:1:25","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"13304:1:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"13387:172:25","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"13412:6:25"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"13430:3:25"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"13435:9:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13426:3:25"},"nodeType":"YulFunctionCall","src":"13426:19:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13420:5:25"},"nodeType":"YulFunctionCall","src":"13420:26:25"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"13405:6:25"},"nodeType":"YulFunctionCall","src":"13405:42:25"},"nodeType":"YulExpressionStatement","src":"13405:42:25"},{"nodeType":"YulAssignment","src":"13464:24:25","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"13478:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"13486:1:25","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13474:3:25"},"nodeType":"YulFunctionCall","src":"13474:14:25"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"13464:6:25"}]},{"nodeType":"YulAssignment","src":"13505:40:25","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"13522:9:25"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"13533:11:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13518:3:25"},"nodeType":"YulFunctionCall","src":"13518:27:25"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"13505:9:25"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"13334:1:25"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"13337:7:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"13331:2:25"},"nodeType":"YulFunctionCall","src":"13331:14:25"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"13346:28:25","statements":[{"nodeType":"YulAssignment","src":"13348:24:25","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"13357:1:25"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"13360:11:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13353:3:25"},"nodeType":"YulFunctionCall","src":"13353:19:25"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"13348:1:25"}]}]},"pre":{"nodeType":"YulBlock","src":"13327:3:25","statements":[]},"src":"13323:236:25"},{"body":{"nodeType":"YulBlock","src":"13607:166:25","statements":[{"nodeType":"YulVariableDeclaration","src":"13625:43:25","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"13652:3:25"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"13657:9:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13648:3:25"},"nodeType":"YulFunctionCall","src":"13648:19:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13642:5:25"},"nodeType":"YulFunctionCall","src":"13642:26:25"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"13629:9:25","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"13692:6:25"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"13704:9:25"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13731:1:25","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"13734:6:25"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"13727:3:25"},"nodeType":"YulFunctionCall","src":"13727:14:25"},{"kind":"number","nodeType":"YulLiteral","src":"13743:3:25","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13723:3:25"},"nodeType":"YulFunctionCall","src":"13723:24:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13753:1:25","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"13749:3:25"},"nodeType":"YulFunctionCall","src":"13749:6:25"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"13719:3:25"},"nodeType":"YulFunctionCall","src":"13719:37:25"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"13715:3:25"},"nodeType":"YulFunctionCall","src":"13715:42:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13700:3:25"},"nodeType":"YulFunctionCall","src":"13700:58:25"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"13685:6:25"},"nodeType":"YulFunctionCall","src":"13685:74:25"},"nodeType":"YulExpressionStatement","src":"13685:74:25"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"13578:7:25"},{"name":"newLen","nodeType":"YulIdentifier","src":"13587:6:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"13575:2:25"},"nodeType":"YulFunctionCall","src":"13575:19:25"},"nodeType":"YulIf","src":"13572:201:25"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"13793:4:25"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13807:1:25","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"13810:6:25"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"13803:3:25"},"nodeType":"YulFunctionCall","src":"13803:14:25"},{"kind":"number","nodeType":"YulLiteral","src":"13819:1:25","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13799:3:25"},"nodeType":"YulFunctionCall","src":"13799:22:25"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"13786:6:25"},"nodeType":"YulFunctionCall","src":"13786:36:25"},"nodeType":"YulExpressionStatement","src":"13786:36:25"}]},"nodeType":"YulCase","src":"13169:663:25","value":{"kind":"number","nodeType":"YulLiteral","src":"13174:1:25","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"13849:234:25","statements":[{"nodeType":"YulVariableDeclaration","src":"13863:14:25","value":{"kind":"number","nodeType":"YulLiteral","src":"13876:1:25","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"13867:5:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"13912:67:25","statements":[{"nodeType":"YulAssignment","src":"13930:35:25","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"13949:3:25"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"13954:9:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13945:3:25"},"nodeType":"YulFunctionCall","src":"13945:19:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13939:5:25"},"nodeType":"YulFunctionCall","src":"13939:26:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"13930:5:25"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"13893:6:25"},"nodeType":"YulIf","src":"13890:89:25"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"13999:4:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14058:5:25"},{"name":"newLen","nodeType":"YulIdentifier","src":"14065:6:25"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"14005:52:25"},"nodeType":"YulFunctionCall","src":"14005:67:25"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"13992:6:25"},"nodeType":"YulFunctionCall","src":"13992:81:25"},"nodeType":"YulExpressionStatement","src":"13992:81:25"}]},"nodeType":"YulCase","src":"13841:242:25","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"13149:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"13157:2:25","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13146:2:25"},"nodeType":"YulFunctionCall","src":"13146:14:25"},"nodeType":"YulSwitch","src":"13139:944:25"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"12818:4:25","type":""},{"name":"src","nodeType":"YulTypedName","src":"12824:3:25","type":""}],"src":"12737:1352:25"},{"body":{"nodeType":"YulBlock","src":"14243:142:25","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14260:9:25"},{"name":"value0","nodeType":"YulIdentifier","src":"14271:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14253:6:25"},"nodeType":"YulFunctionCall","src":"14253:25:25"},"nodeType":"YulExpressionStatement","src":"14253:25:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14298:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"14309:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14294:3:25"},"nodeType":"YulFunctionCall","src":"14294:18:25"},{"kind":"number","nodeType":"YulLiteral","src":"14314:2:25","type":"","value":"64"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14287:6:25"},"nodeType":"YulFunctionCall","src":"14287:30:25"},"nodeType":"YulExpressionStatement","src":"14287:30:25"},{"nodeType":"YulAssignment","src":"14326:53:25","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"14352:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14364:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"14375:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14360:3:25"},"nodeType":"YulFunctionCall","src":"14360:18:25"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"14334:17:25"},"nodeType":"YulFunctionCall","src":"14334:45:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14326:4:25"}]}]},"name":"abi_encode_tuple_t_bytes32_t_string_memory_ptr__to_t_bytes32_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14204:9:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14215:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14223:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14234:4:25","type":""}],"src":"14094:291:25"},{"body":{"nodeType":"YulBlock","src":"14593:286:25","statements":[{"nodeType":"YulVariableDeclaration","src":"14603:29:25","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14621:3:25","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"14626:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"14617:3:25"},"nodeType":"YulFunctionCall","src":"14617:11:25"},{"kind":"number","nodeType":"YulLiteral","src":"14630:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14613:3:25"},"nodeType":"YulFunctionCall","src":"14613:19:25"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"14607:2:25","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14648:9:25"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14663:6:25"},{"name":"_1","nodeType":"YulIdentifier","src":"14671:2:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14659:3:25"},"nodeType":"YulFunctionCall","src":"14659:15:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14641:6:25"},"nodeType":"YulFunctionCall","src":"14641:34:25"},"nodeType":"YulExpressionStatement","src":"14641:34:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14695:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"14706:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14691:3:25"},"nodeType":"YulFunctionCall","src":"14691:18:25"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"14715:6:25"},{"name":"_1","nodeType":"YulIdentifier","src":"14723:2:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14711:3:25"},"nodeType":"YulFunctionCall","src":"14711:15:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14684:6:25"},"nodeType":"YulFunctionCall","src":"14684:43:25"},"nodeType":"YulExpressionStatement","src":"14684:43:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14747:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"14758:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14743:3:25"},"nodeType":"YulFunctionCall","src":"14743:18:25"},{"name":"value2","nodeType":"YulIdentifier","src":"14763:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14736:6:25"},"nodeType":"YulFunctionCall","src":"14736:34:25"},"nodeType":"YulExpressionStatement","src":"14736:34:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14790:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"14801:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14786:3:25"},"nodeType":"YulFunctionCall","src":"14786:18:25"},{"kind":"number","nodeType":"YulLiteral","src":"14806:3:25","type":"","value":"128"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14779:6:25"},"nodeType":"YulFunctionCall","src":"14779:31:25"},"nodeType":"YulExpressionStatement","src":"14779:31:25"},{"nodeType":"YulAssignment","src":"14819:54:25","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"14845:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14857:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"14868:3:25","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14853:3:25"},"nodeType":"YulFunctionCall","src":"14853:19:25"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"14827:17:25"},"nodeType":"YulFunctionCall","src":"14827:46:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14819:4:25"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14538:9:25","type":""},{"name":"value3","nodeType":"YulTypedName","src":"14549:6:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"14557:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14565:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14573:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14584:4:25","type":""}],"src":"14390:489:25"},{"body":{"nodeType":"YulBlock","src":"14964:169:25","statements":[{"body":{"nodeType":"YulBlock","src":"15010:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15019:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15022:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15012:6:25"},"nodeType":"YulFunctionCall","src":"15012:12:25"},"nodeType":"YulExpressionStatement","src":"15012:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"14985:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"14994:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14981:3:25"},"nodeType":"YulFunctionCall","src":"14981:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"15006:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"14977:3:25"},"nodeType":"YulFunctionCall","src":"14977:32:25"},"nodeType":"YulIf","src":"14974:52:25"},{"nodeType":"YulVariableDeclaration","src":"15035:29:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15054:9:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15048:5:25"},"nodeType":"YulFunctionCall","src":"15048:16:25"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"15039:5:25","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15097:5:25"}],"functionName":{"name":"validator_revert_bytes4","nodeType":"YulIdentifier","src":"15073:23:25"},"nodeType":"YulFunctionCall","src":"15073:30:25"},"nodeType":"YulExpressionStatement","src":"15073:30:25"},{"nodeType":"YulAssignment","src":"15112:15:25","value":{"name":"value","nodeType":"YulIdentifier","src":"15122:5:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"15112:6:25"}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14930:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"14941:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"14953:6:25","type":""}],"src":"14884:249:25"},{"body":{"nodeType":"YulBlock","src":"15325:309:25","statements":[{"nodeType":"YulVariableDeclaration","src":"15335:27:25","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15355:6:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15349:5:25"},"nodeType":"YulFunctionCall","src":"15349:13:25"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"15339:6:25","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15410:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"15418:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15406:3:25"},"nodeType":"YulFunctionCall","src":"15406:17:25"},{"name":"pos","nodeType":"YulIdentifier","src":"15425:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"15430:6:25"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"15371:34:25"},"nodeType":"YulFunctionCall","src":"15371:66:25"},"nodeType":"YulExpressionStatement","src":"15371:66:25"},{"nodeType":"YulVariableDeclaration","src":"15446:29:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15463:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"15468:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15459:3:25"},"nodeType":"YulFunctionCall","src":"15459:16:25"},"variables":[{"name":"end_1","nodeType":"YulTypedName","src":"15450:5:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"15484:29:25","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"15506:6:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15500:5:25"},"nodeType":"YulFunctionCall","src":"15500:13:25"},"variables":[{"name":"length_1","nodeType":"YulTypedName","src":"15488:8:25","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"15561:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"15569:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15557:3:25"},"nodeType":"YulFunctionCall","src":"15557:17:25"},{"name":"end_1","nodeType":"YulIdentifier","src":"15576:5:25"},{"name":"length_1","nodeType":"YulIdentifier","src":"15583:8:25"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"15522:34:25"},"nodeType":"YulFunctionCall","src":"15522:70:25"},"nodeType":"YulExpressionStatement","src":"15522:70:25"},{"nodeType":"YulAssignment","src":"15601:27:25","value":{"arguments":[{"name":"end_1","nodeType":"YulIdentifier","src":"15612:5:25"},{"name":"length_1","nodeType":"YulIdentifier","src":"15619:8:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15608:3:25"},"nodeType":"YulFunctionCall","src":"15608:20:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15601:3:25"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15293:3:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15298:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15306:6:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15317:3:25","type":""}],"src":"15138:496:25"},{"body":{"nodeType":"YulBlock","src":"15768:145:25","statements":[{"nodeType":"YulAssignment","src":"15778:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15790:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"15801:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15786:3:25"},"nodeType":"YulFunctionCall","src":"15786:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15778:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15820:9:25"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15835:6:25"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15851:3:25","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"15856:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"15847:3:25"},"nodeType":"YulFunctionCall","src":"15847:11:25"},{"kind":"number","nodeType":"YulLiteral","src":"15860:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15843:3:25"},"nodeType":"YulFunctionCall","src":"15843:19:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15831:3:25"},"nodeType":"YulFunctionCall","src":"15831:32:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15813:6:25"},"nodeType":"YulFunctionCall","src":"15813:51:25"},"nodeType":"YulExpressionStatement","src":"15813:51:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15884:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"15895:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15880:3:25"},"nodeType":"YulFunctionCall","src":"15880:18:25"},{"name":"value1","nodeType":"YulIdentifier","src":"15900:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15873:6:25"},"nodeType":"YulFunctionCall","src":"15873:34:25"},"nodeType":"YulExpressionStatement","src":"15873:34:25"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15729:9:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15740:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15748:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15759:4:25","type":""}],"src":"15639:274:25"},{"body":{"nodeType":"YulBlock","src":"15950:95:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15967:1:25","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15974:3:25","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"15979:10:25","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"15970:3:25"},"nodeType":"YulFunctionCall","src":"15970:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15960:6:25"},"nodeType":"YulFunctionCall","src":"15960:31:25"},"nodeType":"YulExpressionStatement","src":"15960:31:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16007:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"16010:4:25","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16000:6:25"},"nodeType":"YulFunctionCall","src":"16000:15:25"},"nodeType":"YulExpressionStatement","src":"16000:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16031:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16034:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16024:6:25"},"nodeType":"YulFunctionCall","src":"16024:15:25"},"nodeType":"YulExpressionStatement","src":"16024:15:25"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"15918:127:25"}]},"contents":"{\n    { }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bytes32_t_address_t_uint256_t_string_memory_ptr_t_bool__to_t_bytes32_t_address_t_uint256_t_string_memory_ptr_t_bool__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 160)\n        tail := abi_encode_string(value3, add(headStart, 160))\n        mstore(add(headStart, 128), iszero(iszero(value4)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool_t_uint256_t_uint256_t_uint256_t_bytes32__to_t_bool_t_uint256_t_uint256_t_uint256_t_bytes32__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, iszero(iszero(value0)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_addresst_bytes32t_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_available_length_bytes(src, length, end) -> array\n    {\n        let _1 := 0xffffffffffffffff\n        if gt(length, _1) { panic_error_0x41() }\n        let _2 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 31), _2), 63), _2))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        array := memPtr\n        mstore(memPtr, length)\n        if gt(add(src, length), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), src, length)\n        mstore(add(add(memPtr, length), 0x20), 0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        value3 := abi_decode_available_length_bytes(add(_1, 32), calldataload(_1), dataEnd)\n    }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        array := abi_decode_available_length_bytes(add(offset, 0x20), calldataload(offset), end)\n    }\n    function abi_decode_tuple_t_addresst_bytes32t_string_memory_ptrt_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value2 := abi_decode_string(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value3 := abi_decode_string(add(headStart, offset_1), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Token does not exist\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Not authorized\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, _1))\n    }\n    function abi_encode_tuple_t_stringliteral_4b5c3fff8a7470fb7d3cb5a2c825606d65a273a4198bebb9e861ea888af21bb0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Invalid hospital address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_dcfb34f5fb0cab85164bfd0483e42a37b0410302e0991467efe4d343903bf0d7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Medical record is inactive\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_uint256_t_bytes32__to_t_uint256_t_bytes32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_ea7063d2c5924cbb69a84dddc40b0a8e893a912b3a7babb8c9dcb7606148a6da__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Medical record already exists\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_33c473c2e2093856cbe26752e819a40ac1e4e430d9421ac16799c34433450e7a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Invalid patient address\")\n        tail := add(headStart, 96)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_bytes32_t_string_memory_ptr__to_t_bytes32_t_string_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 64)\n        tail := abi_encode_string(value1, add(headStart, 64))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_string(value3, add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        let length_1 := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), end_1, length_1)\n        end := add(end_1, length_1)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n}","id":25,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101c45760003560e01c80637b4a1ae7116100f9578063c87b56dd11610097578063dcef1e1e11610071578063dcef1e1e146103fc578063e985e9c51461040f578063f2fde38b14610422578063f8e89a6d1461043557600080fd5b8063c87b56dd146103c3578063d504d37a146103d6578063d9a5ec1b146103e957600080fd5b80638da5cb5b116100d35780638da5cb5b1461038457806395d89b4114610395578063a22cb4651461039d578063b88d4fde146103b057600080fd5b80637b4a1ae714610342578063801c406b146103555780638681f4471461036457600080fd5b806323b872dd116101665780636352211e116101405780636352211e1461030157806370a0823114610314578063715018a6146103275780637564a13c1461032f57600080fd5b806323b872dd1461029e57806342842e0e146102b15780634db65851146102c457600080fd5b8063095ea7b3116101a2578063095ea7b3146102315780630c3887221461024657806312d533d71461026a57806319c1833f1461028b57600080fd5b806301ffc9a7146101c957806306fdde03146101f1578063081812fc14610206575b600080fd5b6101dc6101d736600461194d565b610455565b60405190151581526020015b60405180910390f35b6101f9610466565b6040516101e891906119ba565b6102196102143660046119cd565b6104f8565b6040516001600160a01b0390911681526020016101e8565b61024461023f366004611a02565b610521565b005b6102596102543660046119cd565b610530565b6040516101e8959493929190611a2c565b61027d610278366004611a02565b610646565b6040519081526020016101e8565b6102446102993660046119cd565b610677565b6102446102ac366004611a6d565b610732565b6102446102bf366004611a6d565b6107bd565b6102d76102d2366004611aa9565b6107dd565b6040805195151586526020860194909452928401919091526060830152608082015260a0016101e8565b61021961030f3660046119cd565b610865565b61027d610322366004611ad5565b610870565b6102446108b8565b61025961033d3660046119cd565b6108cc565b610244610350366004611af0565b610992565b61027d67d02ab486cedc000081565b610377610372366004611ad5565b610b32565b6040516101e89190611b2b565b6007546001600160a01b0316610219565b6101f9610b9e565b6102446103ab366004611b6f565b610bad565b6102446103be366004611c37565b610bb8565b6101f96103d13660046119cd565b610bd0565b6101dc6103e4366004611aa9565b610bdb565b6102446103f7366004611aa9565b610c5c565b61027d61040a366004611cd3565b610d61565b6101dc61041d366004611d45565b610f1c565b610244610430366004611ad5565b610f4a565b61027d6104433660046119cd565b600a6020526000908152604090205481565b600061046082610f88565b92915050565b60606000805461047590611d6f565b80601f01602080910402602001604051908101604052809291908181526020018280546104a190611d6f565b80156104ee5780601f106104c3576101008083540402835291602001916104ee565b820191906000526020600020905b8154815290600101906020018083116104d157829003601f168201915b5050505050905090565b600061050382610fad565b506000828152600460205260409020546001600160a01b0316610460565b61052c828233610fe5565b5050565b600080806060818061054187610ff2565b6001600160a01b0316036105705760405162461bcd60e51b815260040161056790611da9565b60405180910390fd5b600086815260096020526040902080546001820154600283015460048401546003850180546001600160a01b0390941693909160ff169082906105b290611d6f565b80601f01602080910402602001604051908101604052809291908181526020018280546105de90611d6f565b801561062b5780601f106106005761010080835404028352916020019161062b565b820191906000526020600020905b81548152906001019060200180831161060e57829003601f168201915b50505050509150955095509550955095505091939590929450565b600b602052816000526040600020818154811061066257600080fd5b90600052602060002001600091509150505481565b600061068282610ff2565b6001600160a01b0316036106a85760405162461bcd60e51b815260040161056790611da9565b6007546001600160a01b03163314806106da57506000818152600960205260409020600101546001600160a01b031633145b6107175760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b6044820152606401610567565b6000908152600960205260409020600401805460ff19169055565b6001600160a01b03821661075c57604051633250574960e11b815260006004820152602401610567565b600061076983833361100d565b9050836001600160a01b0316816001600160a01b0316146107b7576040516364283d7b60e01b81526001600160a01b0380861660048301526024820184905282166044820152606401610567565b50505050565b6107d883838360405180602001604052806000815250610bb8565b505050565b600080808080806107ed88610ff2565b6001600160a01b0316036108135760405162461bcd60e51b815260040161056790611da9565b505050600093845250506009602090815260408084206001600160a01b03939093168452600590920190529020805460018201546002830154600384015460049094015460ff90931694919390929091565b600061046082610fad565b60006001600160a01b03821661089c576040516322718ad960e21b815260006004820152602401610567565b506001600160a01b031660009081526003602052604090205490565b6108c0611101565b6108ca600061112e565b565b600960205260009081526040902080546001820154600283015460038401805493946001600160a01b039093169391929161090690611d6f565b80601f016020809104026020016040519081016040528092919081815260200182805461093290611d6f565b801561097f5780601f106109545761010080835404028352916020019161097f565b820191906000526020600020905b81548152906001019060200180831161096257829003601f168201915b5050506004909301549192505060ff1685565b61099a611101565b60006109a585610ff2565b6001600160a01b0316036109cb5760405162461bcd60e51b815260040161056790611da9565b6001600160a01b038316610a215760405162461bcd60e51b815260206004820152601860248201527f496e76616c696420686f73706974616c206164647265737300000000000000006044820152606401610567565b60008481526009602052604090206004015460ff16610a825760405162461bcd60e51b815260206004820152601a60248201527f4d65646963616c207265636f726420697320696e6163746976650000000000006044820152606401610567565b60008481526009602090815260408083206001600160a01b038716845260058101909252909120805460ff19166001908117825542908201819055610ac8908490611ded565b6002820181905567d02ab486cedc000060038301556004820185905560408051918252602082018690526001600160a01b0387169188917f32ff77c011cfe95aff186e69119a183ae2ccbd94ab6fa78aa919441baa49dc2d910160405180910390a3505050505050565b6001600160a01b0381166000908152600b6020908152604091829020805483518184028101840190945280845260609392830182828015610b9257602002820191906000526020600020905b815481526020019060010190808311610b7e575b50505050509050919050565b60606001805461047590611d6f565b61052c338383611180565b610bc3848484610732565b6107b7338585858561121f565b60606104608261134a565b600080610be784610ff2565b6001600160a01b03161480610c0e575060008381526009602052604090206004015460ff16155b15610c1b57506000610460565b60008381526009602090815260408083206001600160a01b03861684526005019091529020805460ff168015610c545750806002015442105b949350505050565b6000610c6783610ff2565b6001600160a01b031603610c8d5760405162461bcd60e51b815260040161056790611da9565b6007546001600160a01b0316331480610cbf57506000828152600960205260409020600101546001600160a01b031633145b610cfc5760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b6044820152606401610567565b60008281526009602090815260408083206001600160a01b0385168085526005909101909252808320805460ff191681554260029091015551909184917f125883b94692baebecad9f111ed97ffa626523bbbadc6b0ef85ee1b56b9e52d59190a35050565b6000610d6b611101565b6000848152600a602052604090205415610dc75760405162461bcd60e51b815260206004820152601d60248201527f4d65646963616c207265636f726420616c7265616479206578697374730000006044820152606401610567565b6001600160a01b038516610e1d5760405162461bcd60e51b815260206004820152601760248201527f496e76616c69642070617469656e7420616464726573730000000000000000006044820152606401610567565b600880549081906000610e2f83611e00565b9190505550610e3e8682611453565b610e48818561146d565b60008181526009602052604090208581556001810180546001600160a01b0319166001600160a01b03891617905542600282015560038101610e8a8582611e5f565b5060048101805460ff191660019081179091556000878152600a602090815260408083208690556001600160a01b038b16808452600b8352818420805495860181558452919092209092018490555183907fe515738f44373f4a32d59dd2ca9b175e1f973006ec48ff1c4f0e9c22eec4755d90610f0a908a908990611f1f565b60405180910390a35095945050505050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b610f52611101565b6001600160a01b038116610f7c57604051631e4fbdf760e01b815260006004820152602401610567565b610f858161112e565b50565b60006001600160e01b03198216632483248360e11b14806104605750610460826114bd565b600080610fb983610ff2565b90506001600160a01b03811661046057604051637e27328960e01b815260048101849052602401610567565b6107d8838383600161150d565b6000908152600260205260409020546001600160a01b031690565b60008061101984610ff2565b90506001600160a01b0383161561103557611035818486611613565b6001600160a01b038116156110735761105260008560008061150d565b6001600160a01b038116600090815260036020526040902080546000190190555b6001600160a01b038516156110a2576001600160a01b0385166000908152600360205260409020805460010190555b60008481526002602052604080822080546001600160a01b0319166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b6007546001600160a01b031633146108ca5760405163118cdaa760e01b8152336004820152602401610567565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0382166111b257604051630b61174360e31b81526001600160a01b0383166004820152602401610567565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0383163b1561134357604051630a85bd0160e11b81526001600160a01b0384169063150b7a0290611261908890889087908790600401611f38565b6020604051808303816000875af192505050801561129c575060408051601f3d908101601f1916820190925261129991810190611f75565b60015b611305573d8080156112ca576040519150601f19603f3d011682016040523d82523d6000602084013e6112cf565b606091505b5080516000036112fd57604051633250574960e11b81526001600160a01b0385166004820152602401610567565b805160208201fd5b6001600160e01b03198116630a85bd0160e11b1461134157604051633250574960e11b81526001600160a01b0385166004820152602401610567565b505b5050505050565b606061135582610fad565b506000828152600660205260408120805461136f90611d6f565b80601f016020809104026020016040519081016040528092919081815260200182805461139b90611d6f565b80156113e85780601f106113bd576101008083540402835291602001916113e8565b820191906000526020600020905b8154815290600101906020018083116113cb57829003601f168201915b50505050509050600061140660408051602081019091526000815290565b90508051600003611418575092915050565b81511561144a578082604051602001611432929190611f92565b60405160208183030381529060405292505050919050565b610c5484611677565b61052c8282604051806020016040528060008152506116ec565b60008281526006602052604090206114858282611e5f565b506040518281527ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce79060200160405180910390a15050565b60006001600160e01b031982166380ac58cd60e01b14806114ee57506001600160e01b03198216635b5e139f60e01b145b8061046057506301ffc9a760e01b6001600160e01b0319831614610460565b808061152157506001600160a01b03821615155b156115e357600061153184610fad565b90506001600160a01b0383161580159061155d5750826001600160a01b0316816001600160a01b031614155b8015611570575061156e8184610f1c565b155b156115995760405163a9fbf51f60e01b81526001600160a01b0384166004820152602401610567565b81156115e15783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b5050600090815260046020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b61161e838383611704565b6107d8576001600160a01b03831661164c57604051637e27328960e01b815260048101829052602401610567565b60405163177e802f60e01b81526001600160a01b038316600482015260248101829052604401610567565b606061168282610fad565b50600061169a60408051602081019091526000815290565b905060008151116116ba57604051806020016040528060008152506116e5565b806116c484611767565b6040516020016116d5929190611f92565b6040516020818303038152906040525b9392505050565b6116f683836117fa565b6107d833600085858561121f565b60006001600160a01b03831615801590610c545750826001600160a01b0316846001600160a01b0316148061173e575061173e8484610f1c565b80610c545750506000908152600460205260409020546001600160a01b03908116911614919050565b606060006117748361185f565b600101905060008167ffffffffffffffff81111561179457611794611bab565b6040519080825280601f01601f1916602001820160405280156117be576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a85049450846117c857509392505050565b6001600160a01b03821661182457604051633250574960e11b815260006004820152602401610567565b60006118328383600061100d565b90506001600160a01b038116156107d8576040516339e3563760e11b815260006004820152602401610567565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b831061189e5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef810000000083106118ca576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc1000083106118e857662386f26fc10000830492506010015b6305f5e1008310611900576305f5e100830492506008015b612710831061191457612710830492506004015b60648310611926576064830492506002015b600a83106104605760010192915050565b6001600160e01b031981168114610f8557600080fd5b60006020828403121561195f57600080fd5b81356116e581611937565b60005b8381101561198557818101518382015260200161196d565b50506000910152565b600081518084526119a681602086016020860161196a565b601f01601f19169290920160200192915050565b6020815260006116e5602083018461198e565b6000602082840312156119df57600080fd5b5035919050565b80356001600160a01b03811681146119fd57600080fd5b919050565b60008060408385031215611a1557600080fd5b611a1e836119e6565b946020939093013593505050565b85815260018060a01b038516602082015283604082015260a060608201526000611a5960a083018561198e565b905082151560808301529695505050505050565b600080600060608486031215611a8257600080fd5b611a8b846119e6565b9250611a99602085016119e6565b9150604084013590509250925092565b60008060408385031215611abc57600080fd5b82359150611acc602084016119e6565b90509250929050565b600060208284031215611ae757600080fd5b6116e5826119e6565b60008060008060808587031215611b0657600080fd5b84359350611b16602086016119e6565b93969395505050506040820135916060013590565b6020808252825182820181905260009190848201906040850190845b81811015611b6357835183529284019291840191600101611b47565b50909695505050505050565b60008060408385031215611b8257600080fd5b611b8b836119e6565b915060208301358015158114611ba057600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115611bdc57611bdc611bab565b604051601f8501601f19908116603f01168101908282118183101715611c0457611c04611bab565b81604052809350858152868686011115611c1d57600080fd5b858560208301376000602087830101525050509392505050565b60008060008060808587031215611c4d57600080fd5b611c56856119e6565b9350611c64602086016119e6565b925060408501359150606085013567ffffffffffffffff811115611c8757600080fd5b8501601f81018713611c9857600080fd5b611ca787823560208401611bc1565b91505092959194509250565b600082601f830112611cc457600080fd5b6116e583833560208501611bc1565b60008060008060808587031215611ce957600080fd5b611cf2856119e6565b935060208501359250604085013567ffffffffffffffff80821115611d1657600080fd5b611d2288838901611cb3565b93506060870135915080821115611d3857600080fd5b50611ca787828801611cb3565b60008060408385031215611d5857600080fd5b611d61836119e6565b9150611acc602084016119e6565b600181811c90821680611d8357607f821691505b602082108103611da357634e487b7160e01b600052602260045260246000fd5b50919050565b602080825260149082015273151bdad95b88191bd95cc81b9bdd08195e1a5cdd60621b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b8082018082111561046057610460611dd7565b600060018201611e1257611e12611dd7565b5060010190565b601f8211156107d857600081815260208120601f850160051c81016020861015611e405750805b601f850160051c820191505b8181101561134157828155600101611e4c565b815167ffffffffffffffff811115611e7957611e79611bab565b611e8d81611e878454611d6f565b84611e19565b602080601f831160018114611ec25760008415611eaa5750858301515b600019600386901b1c1916600185901b178555611341565b600085815260208120601f198616915b82811015611ef157888601518255948401946001909101908401611ed2565b5085821015611f0f5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b828152604060208201526000610c54604083018461198e565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611f6b9083018461198e565b9695505050505050565b600060208284031215611f8757600080fd5b81516116e581611937565b60008351611fa481846020880161196a565b835190830190611fb881836020880161196a565b0194935050505056fea2646970667358221220adbb00b28e6c0ae759d5cff9c6e51aa3376cd8547653aaab8201e86e2491ed4f64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1C4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7B4A1AE7 GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xC87B56DD GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xDCEF1E1E GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xDCEF1E1E EQ PUSH2 0x3FC JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x40F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x422 JUMPI DUP1 PUSH4 0xF8E89A6D EQ PUSH2 0x435 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x3C3 JUMPI DUP1 PUSH4 0xD504D37A EQ PUSH2 0x3D6 JUMPI DUP1 PUSH4 0xD9A5EC1B EQ PUSH2 0x3E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x384 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x395 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x39D JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x3B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7B4A1AE7 EQ PUSH2 0x342 JUMPI DUP1 PUSH4 0x801C406B EQ PUSH2 0x355 JUMPI DUP1 PUSH4 0x8681F447 EQ PUSH2 0x364 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x166 JUMPI DUP1 PUSH4 0x6352211E GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x327 JUMPI DUP1 PUSH4 0x7564A13C EQ PUSH2 0x32F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD EQ PUSH2 0x29E JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x2B1 JUMPI DUP1 PUSH4 0x4DB65851 EQ PUSH2 0x2C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0x1A2 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0xC388722 EQ PUSH2 0x246 JUMPI DUP1 PUSH4 0x12D533D7 EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0x19C1833F EQ PUSH2 0x28B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1F1 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x206 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DC PUSH2 0x1D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x194D JUMP JUMPDEST PUSH2 0x455 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F9 PUSH2 0x466 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E8 SWAP2 SWAP1 PUSH2 0x19BA JUMP JUMPDEST PUSH2 0x219 PUSH2 0x214 CALLDATASIZE PUSH1 0x4 PUSH2 0x19CD JUMP JUMPDEST PUSH2 0x4F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E8 JUMP JUMPDEST PUSH2 0x244 PUSH2 0x23F CALLDATASIZE PUSH1 0x4 PUSH2 0x1A02 JUMP JUMPDEST PUSH2 0x521 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x259 PUSH2 0x254 CALLDATASIZE PUSH1 0x4 PUSH2 0x19CD JUMP JUMPDEST PUSH2 0x530 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E8 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1A2C JUMP JUMPDEST PUSH2 0x27D PUSH2 0x278 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A02 JUMP JUMPDEST PUSH2 0x646 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E8 JUMP JUMPDEST PUSH2 0x244 PUSH2 0x299 CALLDATASIZE PUSH1 0x4 PUSH2 0x19CD JUMP JUMPDEST PUSH2 0x677 JUMP JUMPDEST PUSH2 0x244 PUSH2 0x2AC CALLDATASIZE PUSH1 0x4 PUSH2 0x1A6D JUMP JUMPDEST PUSH2 0x732 JUMP JUMPDEST PUSH2 0x244 PUSH2 0x2BF CALLDATASIZE PUSH1 0x4 PUSH2 0x1A6D JUMP JUMPDEST PUSH2 0x7BD JUMP JUMPDEST PUSH2 0x2D7 PUSH2 0x2D2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AA9 JUMP JUMPDEST PUSH2 0x7DD JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP6 ISZERO ISZERO DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP3 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0x1E8 JUMP JUMPDEST PUSH2 0x219 PUSH2 0x30F CALLDATASIZE PUSH1 0x4 PUSH2 0x19CD JUMP JUMPDEST PUSH2 0x865 JUMP JUMPDEST PUSH2 0x27D PUSH2 0x322 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AD5 JUMP JUMPDEST PUSH2 0x870 JUMP JUMPDEST PUSH2 0x244 PUSH2 0x8B8 JUMP JUMPDEST PUSH2 0x259 PUSH2 0x33D CALLDATASIZE PUSH1 0x4 PUSH2 0x19CD JUMP JUMPDEST PUSH2 0x8CC JUMP JUMPDEST PUSH2 0x244 PUSH2 0x350 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AF0 JUMP JUMPDEST PUSH2 0x992 JUMP JUMPDEST PUSH2 0x27D PUSH8 0xD02AB486CEDC0000 DUP2 JUMP JUMPDEST PUSH2 0x377 PUSH2 0x372 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AD5 JUMP JUMPDEST PUSH2 0xB32 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E8 SWAP2 SWAP1 PUSH2 0x1B2B JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x219 JUMP JUMPDEST PUSH2 0x1F9 PUSH2 0xB9E JUMP JUMPDEST PUSH2 0x244 PUSH2 0x3AB CALLDATASIZE PUSH1 0x4 PUSH2 0x1B6F JUMP JUMPDEST PUSH2 0xBAD JUMP JUMPDEST PUSH2 0x244 PUSH2 0x3BE CALLDATASIZE PUSH1 0x4 PUSH2 0x1C37 JUMP JUMPDEST PUSH2 0xBB8 JUMP JUMPDEST PUSH2 0x1F9 PUSH2 0x3D1 CALLDATASIZE PUSH1 0x4 PUSH2 0x19CD JUMP JUMPDEST PUSH2 0xBD0 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x3E4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AA9 JUMP JUMPDEST PUSH2 0xBDB JUMP JUMPDEST PUSH2 0x244 PUSH2 0x3F7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AA9 JUMP JUMPDEST PUSH2 0xC5C JUMP JUMPDEST PUSH2 0x27D PUSH2 0x40A CALLDATASIZE PUSH1 0x4 PUSH2 0x1CD3 JUMP JUMPDEST PUSH2 0xD61 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x41D CALLDATASIZE PUSH1 0x4 PUSH2 0x1D45 JUMP JUMPDEST PUSH2 0xF1C JUMP JUMPDEST PUSH2 0x244 PUSH2 0x430 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AD5 JUMP JUMPDEST PUSH2 0xF4A JUMP JUMPDEST PUSH2 0x27D PUSH2 0x443 CALLDATASIZE PUSH1 0x4 PUSH2 0x19CD JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x460 DUP3 PUSH2 0xF88 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x475 SWAP1 PUSH2 0x1D6F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4A1 SWAP1 PUSH2 0x1D6F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4EE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4C3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4EE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4D1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x503 DUP3 PUSH2 0xFAD JUMP JUMPDEST POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x460 JUMP JUMPDEST PUSH2 0x52C DUP3 DUP3 CALLER PUSH2 0xFE5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH1 0x60 DUP2 DUP1 PUSH2 0x541 DUP8 PUSH2 0xFF2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x570 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x567 SWAP1 PUSH2 0x1DA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x4 DUP5 ADD SLOAD PUSH1 0x3 DUP6 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP2 PUSH1 0xFF AND SWAP1 DUP3 SWAP1 PUSH2 0x5B2 SWAP1 PUSH2 0x1D6F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5DE SWAP1 PUSH2 0x1D6F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x62B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x600 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x62B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x60E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP SWAP6 POP SWAP6 POP SWAP6 POP SWAP6 POP SWAP6 POP POP SWAP2 SWAP4 SWAP6 SWAP1 SWAP3 SWAP5 POP JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x662 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x682 DUP3 PUSH2 0xFF2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x6A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x567 SWAP1 PUSH2 0x1DA9 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x6DA JUMPI POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x717 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x139BDD08185D5D1A1BDC9A5E9959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x567 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x75C JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x567 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x769 DUP4 DUP4 CALLER PUSH2 0x100D JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x7B7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x64283D7B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x567 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x7D8 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xBB8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 DUP1 DUP1 PUSH2 0x7ED DUP9 PUSH2 0xFF2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x813 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x567 SWAP1 PUSH2 0x1DA9 JUMP JUMPDEST POP POP POP PUSH1 0x0 SWAP4 DUP5 MSTORE POP POP PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE PUSH1 0x5 SWAP1 SWAP3 ADD SWAP1 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 SWAP1 SWAP5 ADD SLOAD PUSH1 0xFF SWAP1 SWAP4 AND SWAP5 SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x460 DUP3 PUSH2 0xFAD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x89C JUMPI PUSH1 0x40 MLOAD PUSH4 0x22718AD9 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x567 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x8C0 PUSH2 0x1101 JUMP JUMPDEST PUSH2 0x8CA PUSH1 0x0 PUSH2 0x112E JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD DUP1 SLOAD SWAP4 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP4 SWAP2 SWAP3 SWAP2 PUSH2 0x906 SWAP1 PUSH2 0x1D6F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x932 SWAP1 PUSH2 0x1D6F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x97F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x954 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x97F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x962 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x4 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 POP POP PUSH1 0xFF AND DUP6 JUMP JUMPDEST PUSH2 0x99A PUSH2 0x1101 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9A5 DUP6 PUSH2 0xFF2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x9CB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x567 SWAP1 PUSH2 0x1DA9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xA21 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420686F73706974616C20616464726573730000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x567 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0xFF AND PUSH2 0xA82 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D65646963616C207265636F726420697320696E616374697665000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x567 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE PUSH1 0x5 DUP2 ADD SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR DUP3 SSTORE TIMESTAMP SWAP1 DUP3 ADD DUP2 SWAP1 SSTORE PUSH2 0xAC8 SWAP1 DUP5 SWAP1 PUSH2 0x1DED JUMP JUMPDEST PUSH1 0x2 DUP3 ADD DUP2 SWAP1 SSTORE PUSH8 0xD02AB486CEDC0000 PUSH1 0x3 DUP4 ADD SSTORE PUSH1 0x4 DUP3 ADD DUP6 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP2 DUP9 SWAP2 PUSH32 0x32FF77C011CFE95AFF186E69119A183AE2CCBD94AB6FA78AA919441BAA49DC2D SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP4 MLOAD DUP2 DUP5 MUL DUP2 ADD DUP5 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE PUSH1 0x60 SWAP4 SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xB92 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0xB7E JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x475 SWAP1 PUSH2 0x1D6F JUMP JUMPDEST PUSH2 0x52C CALLER DUP4 DUP4 PUSH2 0x1180 JUMP JUMPDEST PUSH2 0xBC3 DUP5 DUP5 DUP5 PUSH2 0x732 JUMP JUMPDEST PUSH2 0x7B7 CALLER DUP6 DUP6 DUP6 DUP6 PUSH2 0x121F JUMP JUMPDEST PUSH1 0x60 PUSH2 0x460 DUP3 PUSH2 0x134A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xBE7 DUP5 PUSH2 0xFF2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0xC0E JUMPI POP PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0xC1B JUMPI POP PUSH1 0x0 PUSH2 0x460 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE PUSH1 0x5 ADD SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0xC54 JUMPI POP DUP1 PUSH1 0x2 ADD SLOAD TIMESTAMP LT JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC67 DUP4 PUSH2 0xFF2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xC8D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x567 SWAP1 PUSH2 0x1DA9 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0xCBF JUMPI POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0xCFC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x139BDD08185D5D1A1BDC9A5E9959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x567 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP1 DUP6 MSTORE PUSH1 0x5 SWAP1 SWAP2 ADD SWAP1 SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP2 SSTORE TIMESTAMP PUSH1 0x2 SWAP1 SWAP2 ADD SSTORE MLOAD SWAP1 SWAP2 DUP5 SWAP2 PUSH32 0x125883B94692BAEBECAD9F111ED97FFA626523BBBADC6B0EF85EE1B56B9E52D5 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD6B PUSH2 0x1101 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0xDC7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D65646963616C207265636F726420616C726561647920657869737473000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x567 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0xE1D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C69642070617469656E742061646472657373000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x567 JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD SWAP1 DUP2 SWAP1 PUSH1 0x0 PUSH2 0xE2F DUP4 PUSH2 0x1E00 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0xE3E DUP7 DUP3 PUSH2 0x1453 JUMP JUMPDEST PUSH2 0xE48 DUP2 DUP6 PUSH2 0x146D JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP6 DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND OR SWAP1 SSTORE TIMESTAMP PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x3 DUP2 ADD PUSH2 0xE8A DUP6 DUP3 PUSH2 0x1E5F JUMP JUMPDEST POP PUSH1 0x4 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND DUP1 DUP5 MSTORE PUSH1 0xB DUP4 MSTORE DUP2 DUP5 KECCAK256 DUP1 SLOAD SWAP6 DUP7 ADD DUP2 SSTORE DUP5 MSTORE SWAP2 SWAP1 SWAP3 KECCAK256 SWAP1 SWAP3 ADD DUP5 SWAP1 SSTORE MLOAD DUP4 SWAP1 PUSH32 0xE515738F44373F4A32D59DD2CA9B175E1F973006EC48FF1C4F0E9C22EEC4755D SWAP1 PUSH2 0xF0A SWAP1 DUP11 SWAP1 DUP10 SWAP1 PUSH2 0x1F1F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0xF52 PUSH2 0x1101 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xF7C JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x567 JUMP JUMPDEST PUSH2 0xF85 DUP2 PUSH2 0x112E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x24832483 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x460 JUMPI POP PUSH2 0x460 DUP3 PUSH2 0x14BD JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xFB9 DUP4 PUSH2 0xFF2 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x460 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x567 JUMP JUMPDEST PUSH2 0x7D8 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x150D JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1019 DUP5 PUSH2 0xFF2 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x1035 JUMPI PUSH2 0x1035 DUP2 DUP5 DUP7 PUSH2 0x1613 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x1073 JUMPI PUSH2 0x1052 PUSH1 0x0 DUP6 PUSH1 0x0 DUP1 PUSH2 0x150D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO PUSH2 0x10A2 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP8 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x8CA JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x567 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x11B2 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB611743 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x567 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0x1343 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x1261 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x1F38 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x129C JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1299 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1F75 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1305 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x12CA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x12CF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x12FD JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x567 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ PUSH2 0x1341 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x567 JUMP JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1355 DUP3 PUSH2 0xFAD JUMP JUMPDEST POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH2 0x136F SWAP1 PUSH2 0x1D6F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x139B SWAP1 PUSH2 0x1D6F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x13E8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x13BD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x13E8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x13CB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x1406 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x1418 JUMPI POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x144A JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1432 SWAP3 SWAP2 SWAP1 PUSH2 0x1F92 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC54 DUP5 PUSH2 0x1677 JUMP JUMPDEST PUSH2 0x52C DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x16EC JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x1485 DUP3 DUP3 PUSH2 0x1E5F JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x14EE JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x460 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x460 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1521 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x15E3 JUMPI PUSH1 0x0 PUSH2 0x1531 DUP5 PUSH2 0xFAD JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x155D JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1570 JUMPI POP PUSH2 0x156E DUP2 DUP5 PUSH2 0xF1C JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1599 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA9FBF51F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x567 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x15E1 JUMPI DUP4 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x161E DUP4 DUP4 DUP4 PUSH2 0x1704 JUMP JUMPDEST PUSH2 0x7D8 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x164C JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x567 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x177E802F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x567 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1682 DUP3 PUSH2 0xFAD JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x169A PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x16BA JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x16E5 JUMP JUMPDEST DUP1 PUSH2 0x16C4 DUP5 PUSH2 0x1767 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x16D5 SWAP3 SWAP2 SWAP1 PUSH2 0x1F92 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x16F6 DUP4 DUP4 PUSH2 0x17FA JUMP JUMPDEST PUSH2 0x7D8 CALLER PUSH1 0x0 DUP6 DUP6 DUP6 PUSH2 0x121F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xC54 JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x173E JUMPI POP PUSH2 0x173E DUP5 DUP5 PUSH2 0xF1C JUMP JUMPDEST DUP1 PUSH2 0xC54 JUMPI POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1774 DUP4 PUSH2 0x185F JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1794 JUMPI PUSH2 0x1794 PUSH2 0x1BAB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x17BE JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH1 0x0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0x17C8 JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1824 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x567 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1832 DUP4 DUP4 PUSH1 0x0 PUSH2 0x100D JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x7D8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x39E35637 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x567 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0x189E JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x18CA JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x18E8 JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1900 JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1914 JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1926 JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x460 JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xF85 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x195F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x16E5 DUP2 PUSH2 0x1937 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1985 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x196D JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x19A6 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x196A JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x16E5 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x198E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x19FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A1E DUP4 PUSH2 0x19E6 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST DUP6 DUP2 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE DUP4 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1A59 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x198E JUMP JUMPDEST SWAP1 POP DUP3 ISZERO ISZERO PUSH1 0x80 DUP4 ADD MSTORE SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1A82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A8B DUP5 PUSH2 0x19E6 JUMP JUMPDEST SWAP3 POP PUSH2 0x1A99 PUSH1 0x20 DUP6 ADD PUSH2 0x19E6 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1ABC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x1ACC PUSH1 0x20 DUP5 ADD PUSH2 0x19E6 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16E5 DUP3 PUSH2 0x19E6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1B06 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH2 0x1B16 PUSH1 0x20 DUP7 ADD PUSH2 0x19E6 JUMP JUMPDEST SWAP4 SWAP7 SWAP4 SWAP6 POP POP POP POP PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x60 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1B63 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1B47 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B8B DUP4 PUSH2 0x19E6 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1BA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0x1BDC JUMPI PUSH2 0x1BDC PUSH2 0x1BAB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1C04 JUMPI PUSH2 0x1C04 PUSH2 0x1BAB JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0x1C1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1C4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C56 DUP6 PUSH2 0x19E6 JUMP JUMPDEST SWAP4 POP PUSH2 0x1C64 PUSH1 0x20 DUP7 ADD PUSH2 0x19E6 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C87 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x1C98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1CA7 DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x1BC1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1CC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16E5 DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x1BC1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1CE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1CF2 DUP6 PUSH2 0x19E6 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1D16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D22 DUP9 DUP4 DUP10 ADD PUSH2 0x1CB3 JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1D38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CA7 DUP8 DUP3 DUP9 ADD PUSH2 0x1CB3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D61 DUP4 PUSH2 0x19E6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1ACC PUSH1 0x20 DUP5 ADD PUSH2 0x19E6 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1D83 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1DA3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x151BDAD95B88191BD95CC81B9BDD08195E1A5CDD PUSH1 0x62 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x460 JUMPI PUSH2 0x460 PUSH2 0x1DD7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1E12 JUMPI PUSH2 0x1E12 PUSH2 0x1DD7 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x7D8 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x1E40 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1341 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1E4C JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1E79 JUMPI PUSH2 0x1E79 PUSH2 0x1BAB JUMP JUMPDEST PUSH2 0x1E8D DUP2 PUSH2 0x1E87 DUP5 SLOAD PUSH2 0x1D6F JUMP JUMPDEST DUP5 PUSH2 0x1E19 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1EC2 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x1EAA JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x1341 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1EF1 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x1ED2 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x1F0F JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0xC54 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x198E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1F6B SWAP1 DUP4 ADD DUP5 PUSH2 0x198E JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F87 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x16E5 DUP2 PUSH2 0x1937 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x1FA4 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x196A JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x1FB8 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x196A JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAD 0xBB STOP 0xB2 DUP15 PUSH13 0xAE759D5CFF9C6E51AA3376CD8 SLOAD PUSH23 0x53AAAB8201E86E2491ED4F64736F6C6343000814003300 ","sourceMap":"447:7977:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8253:169;;;;;;:::i;:::-;;:::i;:::-;;;565:14:25;;558:22;540:41;;528:2;513:18;8253:169:23;;;;;;;;2263:89:7;;;:::i;:::-;;;;;;;:::i;3299:154::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1697:32:25;;;1679:51;;1667:2;1652:18;3299:154:7;1533:203:25;3152:113:7;;;;;;:::i;:::-;;:::i;:::-;;5370:547:23;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;1555:50::-;;;;;;:::i;:::-;;:::i;:::-;;;2872:25:25;;;2860:2;2845:18;1555:50:23;2726:177:25;7721:330:23;;;;;;:::i;:::-;;:::i;3852:578:7:-;;;;;;:::i;:::-;;:::i;4464:132::-;;;;;;:::i;:::-;;:::i;6084:629:23:-;;;;;;:::i;:::-;;:::i;:::-;;;;3778:14:25;;3771:22;3753:41;;3825:2;3810:18;;3803:34;;;;3853:18;;;3846:34;;;;3911:2;3896:18;;3889:34;3954:3;3939:19;;3932:35;3740:3;3725:19;6084:629:23;3500:473:25;2103:118:7;;;;;;:::i;:::-;;:::i;1861:208::-;;;;;;:::i;:::-;;:::i;2293:101:2:-;;;:::i;1407:55:23:-;;;;;;:::i;:::-;;:::i;3798:894::-;;;;;;:::i;:::-;;:::i;1675:46::-;;1713:8;1675:46;;6824:128;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1638:85:2:-;1710:6;;-1:-1:-1;;;;;1710:6:2;1638:85;;2394:93:7;;;:::i;3487:144::-;;;;;;:::i;:::-;;:::i;4630:233::-;;;;;;:::i;:::-;;:::i;8094:153:23:-;;;;;;:::i;:::-;;:::i;4871:392::-;;;;;;:::i;:::-;;:::i;7103:510::-;;;;;;:::i;:::-;;:::i;2548:951::-;;;;;;:::i;:::-;;:::i;3665:153:7:-;;;;;;:::i;:::-;;:::i;2543:215:2:-;;;;;;:::i;:::-;;:::i;1468:52:23:-;;;;;;:::i;:::-;;;;;;;;;;;;;;8253:169;8356:4;8379:36;8403:11;8379:23;:36::i;:::-;8372:43;8253:169;-1:-1:-1;;8253:169:23:o;2263:89:7:-;2308:13;2340:5;2333:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2263:89;:::o;3299:154::-;3366:7;3385:22;3399:7;3385:13;:22::i;:::-;-1:-1:-1;5679:7:7;5705:24;;;:15;:24;;;;;;-1:-1:-1;;;;;5705:24:7;3425:21;5609:127;3152:113;3223:35;3232:2;3236:7;735:10:13;3223:8:7;:35::i;:::-;3152:113;;:::o;5370:547:23:-;5443:16;;;5528:28;5443:16;;5604:17;5613:7;5604:8;:17::i;:::-;-1:-1:-1;;;;;5604:31:23;;5596:64;;;;-1:-1:-1;;;5596:64:23;;;;;;;:::i;:::-;;;;;;;;;5671:28;5702:23;;;:14;:23;;;;;5756:15;;5785:21;;;;5820:16;;;;5885:15;;;;5850:21;;;5735:175;;-1:-1:-1;;;;;5785:21:23;;;;5850;;5885:15;;;5850:21;;5735:175;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5370:547;;;;;;;:::o;1555:50::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7721:330::-;7818:1;7789:17;7798:7;7789:8;:17::i;:::-;-1:-1:-1;;;;;7789:31:23;;7781:64;;;;-1:-1:-1;;;7781:64:23;;;;;;;:::i;:::-;1710:6:2;;-1:-1:-1;;;;;1710:6:2;7876:10:23;:21;;:77;;-1:-1:-1;7915:23:23;;;;:14;:23;;;;;:38;;;-1:-1:-1;;;;;7915:38:23;7901:10;:52;7876:77;7855:138;;;;-1:-1:-1;;;7855:138:23;;9296:2:25;7855:138:23;;;9278:21:25;9335:2;9315:18;;;9308:30;-1:-1:-1;;;9354:18:25;;;9347:44;9408:18;;7855:138:23;9094:338:25;7855:138:23;8039:5;8004:23;;;:14;:23;;;;;:32;;:40;;-1:-1:-1;;8004:40:23;;;7721:330::o;3852:578:7:-;-1:-1:-1;;;;;3946:16:7;;3942:87;;3985:33;;-1:-1:-1;;;3985:33:7;;4015:1;3985:33;;;1679:51:25;1652:18;;3985:33:7;1533:203:25;3942:87:7;4247:21;4271:34;4279:2;4283:7;735:10:13;4271:7:7;:34::i;:::-;4247:58;;4336:4;-1:-1:-1;;;;;4319:21:7;:13;-1:-1:-1;;;;;4319:21:7;;4315:109;;4363:50;;-1:-1:-1;;;4363:50:7;;-1:-1:-1;;;;;9695:15:25;;;4363:50:7;;;9677:34:25;9727:18;;;9720:34;;;9790:15;;9770:18;;;9763:43;9612:18;;4363:50:7;9437:375:25;4315:109:7;3932:498;3852:578;;;:::o;4464:132::-;4550:39;4567:4;4573:2;4577:7;4550:39;;;;;;;;;;;;:16;:39::i;:::-;4464:132;;;:::o;6084:629:23:-;6178:14;;;;;;6339:17;6348:7;6339:8;:17::i;:::-;-1:-1:-1;;;;;6339:31:23;;6331:64;;;;-1:-1:-1;;;6331:64:23;;;;;;;:::i;:::-;-1:-1:-1;;;6406:35:23;6444:23;;;-1:-1:-1;;6444:14:23;:23;;;;;;;;-1:-1:-1;;;;;6444:51:23;;;;;;:41;;;;:51;;;;6526:20;;;6560;;;6594;;;;6628:24;;;;6666:30;;;;;6526:20;;;;;6560;;6594;;6628:24;;6084:629::o;2103:118:7:-;2166:7;2192:22;2206:7;2192:13;:22::i;1861:208::-;1924:7;-1:-1:-1;;;;;1947:19:7;;1943:87;;1989:30;;-1:-1:-1;;;1989:30:7;;2016:1;1989:30;;;1679:51:25;1652:18;;1989:30:7;1533:203:25;1943:87:7;-1:-1:-1;;;;;;2046:16:7;;;;;:9;:16;;;;;;;1861:208::o;2293:101:2:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1407:55:23:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1407:55:23;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1407:55:23;;;;;;;-1:-1:-1;;1407:55:23;;;:::o;3798:894::-;1531:13:2;:11;:13::i;:::-;4009:1:23::1;3980:17;3989:7:::0;3980:8:::1;:17::i;:::-;-1:-1:-1::0;;;;;3980:31:23::1;::::0;3972:64:::1;;;;-1:-1:-1::0;;;3972:64:23::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;4054:22:23;::::1;4046:59;;;::::0;-1:-1:-1;;;4046:59:23;;10019:2:25;4046:59:23::1;::::0;::::1;10001:21:25::0;10058:2;10038:18;;;10031:30;10097:26;10077:18;;;10070:54;10141:18;;4046:59:23::1;9817:348:25::0;4046:59:23::1;4123:23;::::0;;;:14:::1;:23;::::0;;;;:32:::1;;::::0;::::1;;4115:71;;;::::0;-1:-1:-1;;;4115:71:23;;10372:2:25;4115:71:23::1;::::0;::::1;10354:21:25::0;10411:2;10391:18;;;10384:30;10450:28;10430:18;;;10423:56;10496:18;;4115:71:23::1;10170:350:25::0;4115:71:23::1;4197:28;4228:23:::0;;;:14:::1;:23;::::0;;;;;;;-1:-1:-1;;;;;4299:34:23;::::1;::::0;;:24:::1;::::0;::::1;:34:::0;;;;;;4344:27;;-1:-1:-1;;4344:27:23::1;4367:4;4344:27:::0;;::::1;::::0;;4404:15:::1;4381:20:::0;;::::1;:38:::0;;;4452:32:::1;::::0;4470:14;;4452:32:::1;:::i;:::-;4429:20;::::0;::::1;:55:::0;;;1713:8:::1;4494:24;::::0;::::1;:38:::0;4542:30:::1;::::0;::::1;:52:::0;;;4610:75:::1;::::0;;10961:25:25;;;11017:2;11002:18;;10995:34;;;-1:-1:-1;;;;;4610:75:23;::::1;::::0;4624:7;;4610:75:::1;::::0;10934:18:25;4610:75:23::1;;;;;;;3962:730;;3798:894:::0;;;;:::o;6824:128::-;-1:-1:-1;;;;;6923:22:23;;;;;;:13;:22;;;;;;;;;6916:29;;;;;;;;;;;;;;;;;6888:16;;6916:29;;;6923:22;6916:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6824:128;;;:::o;2394:93:7:-;2441:13;2473:7;2466:14;;;;;:::i;3487:144::-;3572:52;735:10:13;3605:8:7;3615;3572:18;:52::i;4630:233::-;4743:31;4756:4;4762:2;4766:7;4743:12;:31::i;:::-;4784:72;735:10:13;4832:4:7;4838:2;4842:7;4851:4;4784:33;:72::i;8094:153:23:-;8185:13;8217:23;8232:7;8217:14;:23::i;4871:392::-;4951:4;;4971:17;4980:7;4971:8;:17::i;:::-;-1:-1:-1;;;;;4971:31:23;;:68;;;-1:-1:-1;5007:23:23;;;;:14;:23;;;;;:32;;;;;5006:33;4971:68;4967:111;;;-1:-1:-1;5062:5:23;5055:12;;4967:111;5088:35;5126:23;;;:14;:23;;;;;;;;-1:-1:-1;;;;;5126:51:23;;;;:41;;:51;;;;;5194:20;;;;:62;;;;;5236:10;:20;;;5218:15;:38;5194:62;5187:69;4871:392;-1:-1:-1;;;;4871:392:23:o;7103:510::-;7214:1;7185:17;7194:7;7185:8;:17::i;:::-;-1:-1:-1;;;;;7185:31:23;;7177:64;;;;-1:-1:-1;;;7177:64:23;;;;;;;:::i;:::-;1710:6:2;;-1:-1:-1;;;;;1710:6:2;7272:10:23;:21;;:77;;-1:-1:-1;7311:23:23;;;;:14;:23;;;;;:38;;;-1:-1:-1;;;;;7311:38:23;7297:10;:52;7272:77;7251:138;;;;-1:-1:-1;;;7251:138:23;;9296:2:25;7251:138:23;;;9278:21:25;9335:2;9315:18;;;9308:30;-1:-1:-1;;;9354:18:25;;;9347:44;9408:18;;7251:138:23;9094:338:25;7251:138:23;7464:5;7400:23;;;:14;:23;;;;;;;;-1:-1:-1;;;;;7400:51:23;;;;;:41;;;;:51;;;;;;:69;;-1:-1:-1;;7400:69:23;;;7543:15;7479:61;;;;:79;7574:32;7400:51;;:23;;7574:32;;7464:5;7574:32;7103:510;;:::o;2548:951::-;2723:7;1531:13:2;:11;:13::i;:::-;2750:27:23::1;::::0;;;:17:::1;:27;::::0;;;;;:32;2742:74:::1;;;::::0;-1:-1:-1;;;2742:74:23;;11242:2:25;2742:74:23::1;::::0;::::1;11224:21:25::0;11281:2;11261:18;;;11254:30;11320:31;11300:18;;;11293:59;11369:18;;2742:74:23::1;11040:353:25::0;2742:74:23::1;-1:-1:-1::0;;;;;2834:21:23;::::1;2826:57;;;::::0;-1:-1:-1;;;2826:57:23;;11600:2:25;2826:57:23::1;::::0;::::1;11582:21:25::0;11639:2;11619:18;;;11612:30;11678:25;11658:18;;;11651:53;11721:18;;2826:57:23::1;11398:347:25::0;2826:57:23::1;2912:15;::::0;;;;;2894::::1;2937:17;2912:15:::0;2937:17:::1;:::i;:::-;;;;;;2965:27;2975:7;2984;2965:9;:27::i;:::-;3002:26;3015:7;3024:3;3002:12;:26::i;:::-;3039:28;3070:23:::0;;;:14:::1;:23;::::0;;;;3103:26;;;3139:21:::1;::::0;::::1;:31:::0;;-1:-1:-1;;;;;;3139:31:23::1;-1:-1:-1::0;;;;;3139:31:23;::::1;;::::0;;3199:15:::1;3180:16;::::0;::::1;:34:::0;3224:21:::1;::::0;::::1;:38;3248:14:::0;3224:21;:38:::1;:::i;:::-;-1:-1:-1::0;3272:15:23::1;::::0;::::1;:22:::0;;-1:-1:-1;;3272:22:23::1;3290:4;3272:22:::0;;::::1;::::0;;;:15:::1;3305:27:::0;;;:17:::1;:27;::::0;;;;;;;:37;;;-1:-1:-1;;;;;3352:22:23;::::1;::::0;;;:13:::1;:22:::0;;;;;:36;;;;::::1;::::0;;;;;;;;;;::::1;::::0;;;3404:63;3335:7;;3404:63:::1;::::0;::::1;::::0;3323:8;;3452:14;;3404:63:::1;:::i;:::-;;;;;;;;-1:-1:-1::0;3485:7:23;2548:951;-1:-1:-1;;;;;2548:951:23:o;3665:153:7:-;-1:-1:-1;;;;;3776:25:7;;;3753:4;3776:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;3665:153::o;2543:215:2:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:2;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:2;;2700:1:::1;2672:31;::::0;::::1;1679:51:25::0;1652:18;;2672:31:2::1;1533:203:25::0;2623:91:2::1;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;961:207:10:-;1063:4;-1:-1:-1;;;;;;1086:35:10;;-1:-1:-1;;;1086:35:10;;:75;;;1125:36;1149:11;1125:23;:36::i;15858:241:7:-;15921:7;15940:13;15956:17;15965:7;15956:8;:17::i;:::-;15940:33;-1:-1:-1;;;;;;15987:19:7;;15983:88;;16029:31;;-1:-1:-1;;;16029:31:7;;;;;2872:25:25;;;2845:18;;16029:31:7;2726:177:25;14138:120:7;14218:33;14227:2;14231:7;14240:4;14246;14218:8;:33::i;5378:115::-;5444:7;5470:16;;;:7;:16;;;;;;-1:-1:-1;;;;;5470:16:7;;5378:115::o;8507:795::-;8593:7;8612:12;8627:17;8636:7;8627:8;:17::i;:::-;8612:32;-1:-1:-1;;;;;;8704:18:7;;;8700:86;;8738:37;8755:4;8761;8767:7;8738:16;:37::i;:::-;-1:-1:-1;;;;;8830:18:7;;;8826:256;;8946:48;8963:1;8967:7;8984:1;8988:5;8946:8;:48::i;:::-;-1:-1:-1;;;;;9037:15:7;;;;;;:9;:15;;;;;:20;;-1:-1:-1;;9037:20:7;;;8826:256;-1:-1:-1;;;;;9096:16:7;;;9092:107;;-1:-1:-1;;;;;9156:13:7;;;;;;:9;:13;;;;;:18;;9173:1;9156:18;;;9092:107;9209:16;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9209:21:7;-1:-1:-1;;;;;9209:21:7;;;;;;;;;9246:27;;9209:16;;9246:27;;;;;;;9291:4;8507:795;-1:-1:-1;;;;8507:795:7:o;1796:162:2:-;1710:6;;-1:-1:-1;;;;;1710:6:2;735:10:13;1855:23:2;1851:101;;1901:40;;-1:-1:-1;;;1901:40:2;;735:10:13;1901:40:2;;;1679:51:25;1652:18;;1901:40:2;1533:203:25;2912:187:2;3004:6;;;-1:-1:-1;;;;;3020:17:2;;;-1:-1:-1;;;;;;3020:17:2;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;15311:312:7:-;-1:-1:-1;;;;;15418:22:7;;15414:91;;15463:31;;-1:-1:-1;;;15463:31:7;;-1:-1:-1;;;;;1697:32:25;;15463:31:7;;;1679:51:25;1652:18;;15463:31:7;1533:203:25;15414:91:7;-1:-1:-1;;;;;15514:25:7;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;15514:46:7;;;;;;;;;;15575:41;;540::25;;;15575::7;;513:18:25;15575:41:7;;;;;;;15311:312;;;:::o;993:926:12:-;-1:-1:-1;;;;;1173:14:12;;;:18;1169:744;;1211:67;;-1:-1:-1;;;1211:67:12;;-1:-1:-1;;;;;1211:36:12;;;;;:67;;1248:8;;1258:4;;1264:7;;1273:4;;1211:67;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1211:67:12;;;;;;;;-1:-1:-1;;1211:67:12;;;;;;;;;;;;:::i;:::-;;;1207:696;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1568:6;:13;1585:1;1568:18;1564:325;;1672:39;;-1:-1:-1;;;1672:39:12;;-1:-1:-1;;;;;1697:32:25;;1672:39:12;;;1679:51:25;1652:18;;1672:39:12;1533:203:25;1564:325:12;1841:6;1835:13;1828:4;1820:6;1816:17;1809:40;1207:696;-1:-1:-1;;;;;;1325:51:12;;-1:-1:-1;;;1325:51:12;1321:182;;1445:39;;-1:-1:-1;;;1445:39:12;;-1:-1:-1;;;;;1697:32:25;;1445:39:12;;;1679:51:25;1652:18;;1445:39:12;1533:203:25;1321:182:12;1279:238;1207:696;993:926;;;;;:::o;1210:593:10:-;1283:13;1308:22;1322:7;1308:13;:22::i;:::-;-1:-1:-1;1341:23:10;1367:19;;;:10;:19;;;;;1341:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1396:18;1417:10;3102:9:7;;;;;;;;;-1:-1:-1;3102:9:7;;;3026:92;1417:10:10;1396:31;;1506:4;1500:18;1522:1;1500:23;1496:70;;-1:-1:-1;1546:9:10;1210:593;-1:-1:-1;;1210:593:10:o;1496:70::-;1665:23;;:27;1661:95;;1729:4;1735:9;1715:30;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1708:37;;;;1210:593;;;:::o;1661:95::-;1773:23;1788:7;1773:14;:23::i;10302:100:7:-;10369:26;10379:2;10383:7;10369:26;;;;;;;;;;;;:9;:26::i;1931:167:10:-;2022:19;;;;:10;:19;;;;;:31;2044:9;2022:19;:31;:::i;:::-;-1:-1:-1;2068:23:10;;2872:25:25;;;2068:23:10;;2860:2:25;2845:18;2068:23:10;;;;;;;1931:167;;:::o;1527:300:7:-;1629:4;-1:-1:-1;;;;;;1664:40:7;;-1:-1:-1;;;1664:40:7;;:104;;-1:-1:-1;;;;;;;1720:48:7;;-1:-1:-1;;;1720:48:7;1664:104;:156;;;-1:-1:-1;;;;;;;;;;829:40:17;;;1784:36:7;730:146:17;14440:662:7;14600:9;:31;;;-1:-1:-1;;;;;;14613:18:7;;;;14600:31;14596:460;;;14647:13;14663:22;14677:7;14663:13;:22::i;:::-;14647:38;-1:-1:-1;;;;;;14813:18:7;;;;;;:35;;;14844:4;-1:-1:-1;;;;;14835:13:7;:5;-1:-1:-1;;;;;14835:13:7;;;14813:35;:69;;;;;14853:29;14870:5;14877:4;14853:16;:29::i;:::-;14852:30;14813:69;14809:142;;;14909:27;;-1:-1:-1;;;14909:27:7;;-1:-1:-1;;;;;1697:32:25;;14909:27:7;;;1679:51:25;1652:18;;14909:27:7;1533:203:25;14809:142:7;14969:9;14965:81;;;15023:7;15019:2;-1:-1:-1;;;;;15003:28:7;15012:5;-1:-1:-1;;;;;15003:28:7;;;;;;;;;;;14965:81;14633:423;14596:460;-1:-1:-1;;15066:24:7;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;15066:29:7;-1:-1:-1;;;;;15066:29:7;;;;;;;;;;14440:662::o;6751:368::-;6863:38;6877:5;6884:7;6893;6863:13;:38::i;:::-;6858:255;;-1:-1:-1;;;;;6921:19:7;;6917:186;;6967:31;;-1:-1:-1;;;6967:31:7;;;;;2872:25:25;;;2845:18;;6967:31:7;2726:177:25;6917:186:7;7044:44;;-1:-1:-1;;;7044:44:7;;-1:-1:-1;;;;;15831:32:25;;7044:44:7;;;15813:51:25;15880:18;;;15873:34;;;15786:18;;7044:44:7;15639:274:25;2529:255:7;2593:13;2618:22;2632:7;2618:13;:22::i;:::-;;2651:21;2675:10;3102:9;;;;;;;;;-1:-1:-1;3102:9:7;;;3026:92;2675:10;2651:34;;2726:1;2708:7;2702:21;:25;:75;;;;;;;;;;;;;;;;;2744:7;2753:18;:7;:16;:18::i;:::-;2730:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2702:75;2695:82;2529:255;-1:-1:-1;;;2529:255:7:o;10623:207::-;10717:18;10723:2;10727:7;10717:5;:18::i;:::-;10745:78;735:10:13;10801:1:7;10805:2;10809:7;10818:4;10745:33;:78::i;6047:272::-;6150:4;-1:-1:-1;;;;;6185:21:7;;;;;;:127;;;6232:7;-1:-1:-1;;;;;6223:16:7;:5;-1:-1:-1;;;;;6223:16:7;;:52;;;;6243:32;6260:5;6267:7;6243:16;:32::i;:::-;6223:88;;;-1:-1:-1;;5679:7:7;5705:24;;;:15;:24;;;;;;-1:-1:-1;;;;;5705:24:7;;;6279:32;;;;6166:146;-1:-1:-1;6047:272:7:o;1308:634:16:-;1364:13;1413:14;1430:17;1441:5;1430:10;:17::i;:::-;1450:1;1430:21;1413:38;;1465:20;1499:6;1488:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1488:18:16;-1:-1:-1;1465:41:16;-1:-1:-1;1595:30:16;;;1611:4;1595:30;1652:247;-1:-1:-1;;1683:5:16;-1:-1:-1;;;1782:2:16;1771:14;;1766:32;1683:5;1753:46;1843:2;1834:11;;;-1:-1:-1;1863:21:16;1652:247;1863:21;-1:-1:-1;1919:6:16;1308:634;-1:-1:-1;;;1308:634:16:o;9624:327:7:-;-1:-1:-1;;;;;9691:16:7;;9687:87;;9730:33;;-1:-1:-1;;;9730:33:7;;9760:1;9730:33;;;1679:51:25;1652:18;;9730:33:7;1533:203:25;9687:87:7;9783:21;9807:32;9815:2;9819:7;9836:1;9807:7;:32::i;:::-;9783:56;-1:-1:-1;;;;;;9853:27:7;;;9849:96;;9903:31;;-1:-1:-1;;;9903:31:7;;9931:1;9903:31;;;1679:51:25;1652:18;;9903:31:7;1533:203:25;29154:916:19;29207:7;;-1:-1:-1;;;29282:17:19;;29278:103;;-1:-1:-1;;;29319:17:19;;;-1:-1:-1;29364:2:19;29354:12;29278:103;29407:8;29398:5;:17;29394:103;;29444:8;29435:17;;;-1:-1:-1;29480:2:19;29470:12;29394:103;29523:8;29514:5;:17;29510:103;;29560:8;29551:17;;;-1:-1:-1;29596:2:19;29586:12;29510:103;29639:7;29630:5;:16;29626:100;;29675:7;29666:16;;;-1:-1:-1;29710:1:19;29700:11;29626:100;29752:7;29743:5;:16;29739:100;;29788:7;29779:16;;;-1:-1:-1;29823:1:19;29813:11;29739:100;29865:7;29856:5;:16;29852:100;;29901:7;29892:16;;;-1:-1:-1;29936:1:19;29926:11;29852:100;29978:7;29969:5;:16;29965:66;;30015:1;30005:11;30057:6;29154:916;-1:-1:-1;;29154:916:19:o;14:131:25:-;-1:-1:-1;;;;;;88:32:25;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:250::-;677:1;687:113;701:6;698:1;695:13;687:113;;;777:11;;;771:18;758:11;;;751:39;723:2;716:10;687:113;;;-1:-1:-1;;834:1:25;816:16;;809:27;592:250::o;847:271::-;889:3;927:5;921:12;954:6;949:3;942:19;970:76;1039:6;1032:4;1027:3;1023:14;1016:4;1009:5;1005:16;970:76;:::i;:::-;1100:2;1079:15;-1:-1:-1;;1075:29:25;1066:39;;;;1107:4;1062:50;;847:271;-1:-1:-1;;847:271:25:o;1123:220::-;1272:2;1261:9;1254:21;1235:4;1292:45;1333:2;1322:9;1318:18;1310:6;1292:45;:::i;1348:180::-;1407:6;1460:2;1448:9;1439:7;1435:23;1431:32;1428:52;;;1476:1;1473;1466:12;1428:52;-1:-1:-1;1499:23:25;;1348:180;-1:-1:-1;1348:180:25:o;1741:173::-;1809:20;;-1:-1:-1;;;;;1858:31:25;;1848:42;;1838:70;;1904:1;1901;1894:12;1838:70;1741:173;;;:::o;1919:254::-;1987:6;1995;2048:2;2036:9;2027:7;2023:23;2019:32;2016:52;;;2064:1;2061;2054:12;2016:52;2087:29;2106:9;2087:29;:::i;:::-;2077:39;2163:2;2148:18;;;;2135:32;;-1:-1:-1;;;1919:254:25:o;2178:543::-;2433:6;2422:9;2415:25;2505:1;2501;2496:3;2492:11;2488:19;2480:6;2476:32;2471:2;2460:9;2456:18;2449:60;2545:6;2540:2;2529:9;2525:18;2518:34;2588:3;2583:2;2572:9;2568:18;2561:31;2396:4;2609:46;2650:3;2639:9;2635:19;2627:6;2609:46;:::i;:::-;2601:54;;2706:6;2699:14;2692:22;2686:3;2675:9;2671:19;2664:51;2178:543;;;;;;;;:::o;2908:328::-;2985:6;2993;3001;3054:2;3042:9;3033:7;3029:23;3025:32;3022:52;;;3070:1;3067;3060:12;3022:52;3093:29;3112:9;3093:29;:::i;:::-;3083:39;;3141:38;3175:2;3164:9;3160:18;3141:38;:::i;:::-;3131:48;;3226:2;3215:9;3211:18;3198:32;3188:42;;2908:328;;;;;:::o;3241:254::-;3309:6;3317;3370:2;3358:9;3349:7;3345:23;3341:32;3338:52;;;3386:1;3383;3376:12;3338:52;3422:9;3409:23;3399:33;;3451:38;3485:2;3474:9;3470:18;3451:38;:::i;:::-;3441:48;;3241:254;;;;;:::o;3978:186::-;4037:6;4090:2;4078:9;4069:7;4065:23;4061:32;4058:52;;;4106:1;4103;4096:12;4058:52;4129:29;4148:9;4129:29;:::i;4169:391::-;4255:6;4263;4271;4279;4332:3;4320:9;4311:7;4307:23;4303:33;4300:53;;;4349:1;4346;4339:12;4300:53;4385:9;4372:23;4362:33;;4414:38;4448:2;4437:9;4433:18;4414:38;:::i;:::-;4169:391;;4404:48;;-1:-1:-1;;;;4499:2:25;4484:18;;4471:32;;4550:2;4535:18;4522:32;;4169:391::o;4565:632::-;4736:2;4788:21;;;4858:13;;4761:18;;;4880:22;;;4707:4;;4736:2;4959:15;;;;4933:2;4918:18;;;4707:4;5002:169;5016:6;5013:1;5010:13;5002:169;;;5077:13;;5065:26;;5146:15;;;;5111:12;;;;5038:1;5031:9;5002:169;;;-1:-1:-1;5188:3:25;;4565:632;-1:-1:-1;;;;;;4565:632:25:o;5202:347::-;5267:6;5275;5328:2;5316:9;5307:7;5303:23;5299:32;5296:52;;;5344:1;5341;5334:12;5296:52;5367:29;5386:9;5367:29;:::i;:::-;5357:39;;5446:2;5435:9;5431:18;5418:32;5493:5;5486:13;5479:21;5472:5;5469:32;5459:60;;5515:1;5512;5505:12;5459:60;5538:5;5528:15;;;5202:347;;;;;:::o;5554:127::-;5615:10;5610:3;5606:20;5603:1;5596:31;5646:4;5643:1;5636:15;5670:4;5667:1;5660:15;5686:631;5750:5;5780:18;5821:2;5813:6;5810:14;5807:40;;;5827:18;;:::i;:::-;5902:2;5896:9;5870:2;5956:15;;-1:-1:-1;;5952:24:25;;;5978:2;5948:33;5944:42;5932:55;;;6002:18;;;6022:22;;;5999:46;5996:72;;;6048:18;;:::i;:::-;6088:10;6084:2;6077:22;6117:6;6108:15;;6147:6;6139;6132:22;6187:3;6178:6;6173:3;6169:16;6166:25;6163:45;;;6204:1;6201;6194:12;6163:45;6254:6;6249:3;6242:4;6234:6;6230:17;6217:44;6309:1;6302:4;6293:6;6285;6281:19;6277:30;6270:41;;;;5686:631;;;;;:::o;6322:666::-;6417:6;6425;6433;6441;6494:3;6482:9;6473:7;6469:23;6465:33;6462:53;;;6511:1;6508;6501:12;6462:53;6534:29;6553:9;6534:29;:::i;:::-;6524:39;;6582:38;6616:2;6605:9;6601:18;6582:38;:::i;:::-;6572:48;;6667:2;6656:9;6652:18;6639:32;6629:42;;6722:2;6711:9;6707:18;6694:32;6749:18;6741:6;6738:30;6735:50;;;6781:1;6778;6771:12;6735:50;6804:22;;6857:4;6849:13;;6845:27;-1:-1:-1;6835:55:25;;6886:1;6883;6876:12;6835:55;6909:73;6974:7;6969:2;6956:16;6951:2;6947;6943:11;6909:73;:::i;:::-;6899:83;;;6322:666;;;;;;;:::o;6993:221::-;7036:5;7089:3;7082:4;7074:6;7070:17;7066:27;7056:55;;7107:1;7104;7097:12;7056:55;7129:79;7204:3;7195:6;7182:20;7175:4;7167:6;7163:17;7129:79;:::i;7219:686::-;7325:6;7333;7341;7349;7402:3;7390:9;7381:7;7377:23;7373:33;7370:53;;;7419:1;7416;7409:12;7370:53;7442:29;7461:9;7442:29;:::i;:::-;7432:39;;7518:2;7507:9;7503:18;7490:32;7480:42;;7573:2;7562:9;7558:18;7545:32;7596:18;7637:2;7629:6;7626:14;7623:34;;;7653:1;7650;7643:12;7623:34;7676:50;7718:7;7709:6;7698:9;7694:22;7676:50;:::i;:::-;7666:60;;7779:2;7768:9;7764:18;7751:32;7735:48;;7808:2;7798:8;7795:16;7792:36;;;7824:1;7821;7814:12;7792:36;;7847:52;7891:7;7880:8;7869:9;7865:24;7847:52;:::i;7910:260::-;7978:6;7986;8039:2;8027:9;8018:7;8014:23;8010:32;8007:52;;;8055:1;8052;8045:12;8007:52;8078:29;8097:9;8078:29;:::i;:::-;8068:39;;8126:38;8160:2;8149:9;8145:18;8126:38;:::i;8360:380::-;8439:1;8435:12;;;;8482;;;8503:61;;8557:4;8549:6;8545:17;8535:27;;8503:61;8610:2;8602:6;8599:14;8579:18;8576:38;8573:161;;8656:10;8651:3;8647:20;8644:1;8637:31;8691:4;8688:1;8681:15;8719:4;8716:1;8709:15;8573:161;;8360:380;;;:::o;8745:344::-;8947:2;8929:21;;;8986:2;8966:18;;;8959:30;-1:-1:-1;;;9020:2:25;9005:18;;8998:50;9080:2;9065:18;;8745:344::o;10525:127::-;10586:10;10581:3;10577:20;10574:1;10567:31;10617:4;10614:1;10607:15;10641:4;10638:1;10631:15;10657:125;10722:9;;;10743:10;;;10740:36;;;10756:18;;:::i;11750:135::-;11789:3;11810:17;;;11807:43;;11830:18;;:::i;:::-;-1:-1:-1;11877:1:25;11866:13;;11750:135::o;12016:545::-;12118:2;12113:3;12110:11;12107:448;;;12154:1;12179:5;12175:2;12168:17;12224:4;12220:2;12210:19;12294:2;12282:10;12278:19;12275:1;12271:27;12265:4;12261:38;12330:4;12318:10;12315:20;12312:47;;;-1:-1:-1;12353:4:25;12312:47;12408:2;12403:3;12399:12;12396:1;12392:20;12386:4;12382:31;12372:41;;12463:82;12481:2;12474:5;12471:13;12463:82;;;12526:17;;;12507:1;12496:13;12463:82;;12737:1352;12863:3;12857:10;12890:18;12882:6;12879:30;12876:56;;;12912:18;;:::i;:::-;12941:97;13031:6;12991:38;13023:4;13017:11;12991:38;:::i;:::-;12985:4;12941:97;:::i;:::-;13093:4;;13157:2;13146:14;;13174:1;13169:663;;;;13876:1;13893:6;13890:89;;;-1:-1:-1;13945:19:25;;;13939:26;13890:89;-1:-1:-1;;12694:1:25;12690:11;;;12686:24;12682:29;12672:40;12718:1;12714:11;;;12669:57;13992:81;;13139:944;;13169:663;11963:1;11956:14;;;12000:4;11987:18;;-1:-1:-1;;13205:20:25;;;13323:236;13337:7;13334:1;13331:14;13323:236;;;13426:19;;;13420:26;13405:42;;13518:27;;;;13486:1;13474:14;;;;13353:19;;13323:236;;;13327:3;13587:6;13578:7;13575:19;13572:201;;;13648:19;;;13642:26;-1:-1:-1;;13731:1:25;13727:14;;;13743:3;13723:24;13719:37;13715:42;13700:58;13685:74;;13572:201;-1:-1:-1;;;;;13819:1:25;13803:14;;;13799:22;13786:36;;-1:-1:-1;12737:1352:25:o;14094:291::-;14271:6;14260:9;14253:25;14314:2;14309;14298:9;14294:18;14287:30;14234:4;14334:45;14375:2;14364:9;14360:18;14352:6;14334:45;:::i;14390:489::-;-1:-1:-1;;;;;14659:15:25;;;14641:34;;14711:15;;14706:2;14691:18;;14684:43;14758:2;14743:18;;14736:34;;;14806:3;14801:2;14786:18;;14779:31;;;14584:4;;14827:46;;14853:19;;14845:6;14827:46;:::i;:::-;14819:54;14390:489;-1:-1:-1;;;;;;14390:489:25:o;14884:249::-;14953:6;15006:2;14994:9;14985:7;14981:23;14977:32;14974:52;;;15022:1;15019;15012:12;14974:52;15054:9;15048:16;15073:30;15097:5;15073:30;:::i;15138:496::-;15317:3;15355:6;15349:13;15371:66;15430:6;15425:3;15418:4;15410:6;15406:17;15371:66;:::i;:::-;15500:13;;15459:16;;;;15522:70;15500:13;15459:16;15569:4;15557:17;;15522:70;:::i;:::-;15608:20;;15138:496;-1:-1:-1;;;;15138:496:25:o"},"methodIdentifiers":{"ACCESS_COST()":"801c406b","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","deactivateRecord(uint256)":"19c1833f","fileHashToTokenId(bytes32)":"f8e89a6d","getAccessPermission(uint256,address)":"4db65851","getApproved(uint256)":"081812fc","getMedicalRecord(uint256)":"0c388722","getPatientTokens(address)":"8681f447","grantAccess(uint256,address,bytes32,uint256)":"7b4a1ae7","hasValidAccess(uint256,address)":"d504d37a","isApprovedForAll(address,address)":"e985e9c5","medicalRecords(uint256)":"7564a13c","mintMedicalRecord(address,bytes32,string,string)":"dcef1e1e","name()":"06fdde03","owner()":"8da5cb5b","ownerOf(uint256)":"6352211e","patientTokens(address,uint256)":"12d533d7","renounceOwnership()":"715018a6","revokeAccess(uint256,address)":"d9a5ec1b","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"hospital\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"expiresAt\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"xrplTransactionHash\",\"type\":\"bytes32\"}],\"name\":\"AccessGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"hospital\",\"type\":\"address\"}],\"name\":\"AccessRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"patient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"fileHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"evaluationType\",\"type\":\"string\"}],\"name\":\"MedicalRecordMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ACCESS_COST\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"deactivateRecord\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"fileHashToTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"hospital\",\"type\":\"address\"}],\"name\":\"getAccessPermission\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"hasAccess\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"grantedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiresAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"paymentAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"xrplTransactionHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getMedicalRecord\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"fileHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"patientAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"evaluationType\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"patient\",\"type\":\"address\"}],\"name\":\"getPatientTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"hospital\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"xrplTransactionHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"accessDuration\",\"type\":\"uint256\"}],\"name\":\"grantAccess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"hospital\",\"type\":\"address\"}],\"name\":\"hasValidAccess\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"medicalRecords\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"fileHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"patientAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"evaluationType\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"patient\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"fileHash\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"evaluationType\",\"type\":\"string\"}],\"name\":\"mintMedicalRecord\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"patientTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"hospital\",\"type\":\"address\"}],\"name\":\"revokeAccess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-721 token for medical record ownership and access control on Flare Costen2 Each token represents a medical evaluation with metadata stored on IPFS\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"deactivateRecord(uint256)\":{\"details\":\"Deactivate a medical record\",\"params\":{\"tokenId\":\"Medical record token ID\"}},\"getAccessPermission(uint256,address)\":{\"details\":\"Get access permission details for a hospital\",\"params\":{\"hospital\":\"Hospital's address\",\"tokenId\":\"Medical record token ID\"}},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"getMedicalRecord(uint256)\":{\"details\":\"Get medical record details\",\"params\":{\"tokenId\":\"Medical record token ID\"}},\"getPatientTokens(address)\":{\"details\":\"Get all token IDs owned by a patient\",\"params\":{\"patient\":\"Patient's address\"}},\"grantAccess(uint256,address,bytes32,uint256)\":{\"details\":\"Grant access to a hospital after payment verification\",\"params\":{\"accessDuration\":\"Duration of access in seconds\",\"hospital\":\"Hospital's address\",\"tokenId\":\"Medical record token ID\",\"xrplTransactionHash\":\"XRPL payment transaction hash\"}},\"hasValidAccess(uint256,address)\":{\"details\":\"Check if a hospital has valid access to a medical record\",\"params\":{\"hospital\":\"Hospital's address\",\"tokenId\":\"Medical record token ID\"}},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"mintMedicalRecord(address,bytes32,string,string)\":{\"details\":\"Mint a new medical record token\",\"params\":{\"evaluationType\":\"Type of medical evaluation\",\"fileHash\":\"SHA-256 hash of the medical file\",\"patient\":\"The patient's address\",\"uri\":\"IPFS URI containing metadata\"}},\"name()\":{\"details\":\"Returns the token collection name.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"revokeAccess(uint256,address)\":{\"details\":\"Revoke access for a hospital\",\"params\":{\"hospital\":\"Hospital's address\",\"tokenId\":\"Medical record token ID\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"MedicalRecordToken\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MedicalRecordToken.sol\":\"MedicalRecordToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x856ca1885aec23d54da3f2760b5d216d1b28ad20f798000336375a30dbbc1558\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc725c462ccbf284432d3123ab8c9bab24903730cae227ae4945878039d2fe54\",\"dweb:/ipfs/QmdiEVMvm8njp96dm2s4mThYBD74tY59mNP6s7CzKkGHAh\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xca34c490d41c332106d30b657f00dc028532cb6b9fef2b1729670ce476b36bce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef5e7685d50ed8aae2104a7eb2c31ae5a3b508f24fadfa7611f92f819201aee9\",\"dweb:/ipfs/QmYbTD32FPrEfP1hkniQmRxVUWp8GTSqFV1Bhwx1HVirse\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x6ead281d4569c26b3dee7313aefff24add906f3600b57d8aef1255a17d6b34e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aec0f9c9f14f829353663e1946bf0ea00a1771ff6ddb4f7cbe14893397b4b55c\",\"dweb:/ipfs/QmVMR3SdijdM2BpL9Yp3u7Riaxqgs1FnZ1Rfg2CMjKGtVS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0xb9dc602a845c73d11f1fe38039c0c2cf70fedd2d4afd877c0ed2d0383ffaa232\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59eb46224e996c2f9ecb9a821e65b920c2ecfe9df734613c3df9831de373491c\",\"dweb:/ipfs/QmTsZzJTqRavv64zyaWovcWkUNwfU3uo8uiUjrMFEm8MMj\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xf46268c37522320bb2119a5a394bc5c739a95c0c574c8d08e8c643f4d06e5c76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://517e4b295f35b9947c72ad7379a6089439ece7bb6f4a2ea0a159da13046c039e\",\"dweb:/ipfs/QmZXzkSfLUbvujig3zVbpDHykpHhqLpvQtdiN3B5j4TA3u\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xc2dfdc8fbc8fdb142575c90568e237b809a1feaccff23e32d00131887a08dc36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbc1d283ee77da43d61661b5ba1adeb427d6a6224335494a9a857dce41d9f1d6\",\"dweb:/ipfs/QmTnA35z7XzkxFSRUqB6CGVH1nhmvajwnDNfA5PiKmYuCi\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/MedicalRecordToken.sol\":{\"keccak256\":\"0x2d520f469c6e2955d4ac910869c8907bbb11a0733003a4f378e9c8a030109ad8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87ce51f2da90b9f4c05eee0db613da63388030fc306b3e4b64f30846dc66041c\",\"dweb:/ipfs/QmUXeuiQp2cP5fo8Jd8fJH3mSqMMcTbzB3XV2oEDEcgX5D\"]}},\"version\":1}"}},"contracts/interfaces/IFlareContracts.sol":{"IFlareContractRegistry":{"abi":[{"inputs":[{"internalType":"bytes32","name":"_nameHash","type":"bytes32"}],"name":"getContractAddressByHash","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_name","type":"string"}],"name":"getContractAddressByName","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getContractAddressByHash(bytes32)":"159354a2","getContractAddressByName(string)":"82760fca"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_nameHash\",\"type\":\"bytes32\"}],\"name\":\"getContractAddressByHash\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"getContractAddressByName\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IFlareContracts.sol\":\"IFlareContractRegistry\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IFlareContracts.sol\":{\"keccak256\":\"0x1e5880482e4e9b071e1906367e8595bfdce9e09a91e78a42805871dd07bbedb1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0d2fdee79ad61104323e08cae6dbea19a80c5def4fef7898e15725155256d565\",\"dweb:/ipfs/QmcQwztjCvJ2TsAQkyY4sq4fCzSWGB9MVDEs41P7iMjkgD\"]}},\"version\":1}"},"IFtsoRegistry":{"abi":[{"inputs":[{"internalType":"string","name":"_symbol","type":"string"}],"name":"getCurrentPrice","outputs":[{"internalType":"uint256","name":"_price","type":"uint256"},{"internalType":"uint256","name":"_timestamp","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_symbol","type":"string"}],"name":"getCurrentPriceWithDecimals","outputs":[{"internalType":"uint256","name":"_price","type":"uint256"},{"internalType":"uint256","name":"_timestamp","type":"uint256"},{"internalType":"uint256","name":"_decimals","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getCurrentPrice(string)":"42a0f243","getCurrentPriceWithDecimals(string)":"a69afdc6"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"name\":\"getCurrentPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"name\":\"getCurrentPriceWithDecimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_decimals\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface definitions for Flare system contracts\",\"kind\":\"dev\",\"methods\":{},\"title\":\"IFlareContracts\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IFlareContracts.sol\":\"IFtsoRegistry\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IFlareContracts.sol\":{\"keccak256\":\"0x1e5880482e4e9b071e1906367e8595bfdce9e09a91e78a42805871dd07bbedb1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0d2fdee79ad61104323e08cae6dbea19a80c5def4fef7898e15725155256d565\",\"dweb:/ipfs/QmcQwztjCvJ2TsAQkyY4sq4fCzSWGB9MVDEs41P7iMjkgD\"]}},\"version\":1}"},"ILayerCake":{"abi":[{"inputs":[{"internalType":"string","name":"xrplAddress","type":"string"}],"name":"getXRPLAccountInfo","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"transaction","type":"bytes"}],"name":"sendXRPLTransaction","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getXRPLAccountInfo(string)":"999cd9a3","sendXRPLTransaction(bytes)":"2f7b52cc"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"xrplAddress\",\"type\":\"string\"}],\"name\":\"getXRPLAccountInfo\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"transaction\",\"type\":\"bytes\"}],\"name\":\"sendXRPLTransaction\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IFlareContracts.sol\":\"ILayerCake\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IFlareContracts.sol\":{\"keccak256\":\"0x1e5880482e4e9b071e1906367e8595bfdce9e09a91e78a42805871dd07bbedb1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0d2fdee79ad61104323e08cae6dbea19a80c5def4fef7898e15725155256d565\",\"dweb:/ipfs/QmcQwztjCvJ2TsAQkyY4sq4fCzSWGB9MVDEs41P7iMjkgD\"]}},\"version\":1}"},"IPriceSubmitter":{"abi":[{"inputs":[{"internalType":"uint256","name":"_epochId","type":"uint256"},{"internalType":"uint256","name":"_price","type":"uint256"},{"internalType":"uint256","name":"_random","type":"uint256"}],"name":"revealPrice","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_epochId","type":"uint256"},{"internalType":"bytes32","name":"_hash","type":"bytes32"}],"name":"submitHash","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"revealPrice(uint256,uint256,uint256)":"53048c75","submitHash(uint256,bytes32)":"8fc6f667"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_epochId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_random\",\"type\":\"uint256\"}],\"name\":\"revealPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_epochId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"}],\"name\":\"submitHash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IFlareContracts.sol\":\"IPriceSubmitter\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IFlareContracts.sol\":{\"keccak256\":\"0x1e5880482e4e9b071e1906367e8595bfdce9e09a91e78a42805871dd07bbedb1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0d2fdee79ad61104323e08cae6dbea19a80c5def4fef7898e15725155256d565\",\"dweb:/ipfs/QmcQwztjCvJ2TsAQkyY4sq4fCzSWGB9MVDEs41P7iMjkgD\"]}},\"version\":1}"},"IStateConnector":{"abi":[{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"}],"name":"getAttestation","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"name":"requestAttestation","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"attestationType","type":"bytes32"},{"internalType":"bytes32","name":"sourceId","type":"bytes32"},{"internalType":"bytes","name":"requestBody","type":"bytes"},{"internalType":"bytes","name":"responseBody","type":"bytes"}],"name":"verifyAttestation","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getAttestation(bytes32)":"a3112a64","requestAttestation(bytes)":"6238f354","verifyAttestation(bytes32,bytes32,bytes,bytes)":"5ad350fa"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"getAttestation\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"requestAttestation\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"attestationType\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"sourceId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"requestBody\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"responseBody\",\"type\":\"bytes\"}],\"name\":\"verifyAttestation\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IFlareContracts.sol\":\"IStateConnector\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IFlareContracts.sol\":{\"keccak256\":\"0x1e5880482e4e9b071e1906367e8595bfdce9e09a91e78a42805871dd07bbedb1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0d2fdee79ad61104323e08cae6dbea19a80c5def4fef7898e15725155256d565\",\"dweb:/ipfs/QmcQwztjCvJ2TsAQkyY4sq4fCzSWGB9MVDEs41P7iMjkgD\"]}},\"version\":1}"}}}}}